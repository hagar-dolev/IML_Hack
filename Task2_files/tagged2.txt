/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const fbjs = require('eslint-config-fbjs');2
2
// enforces copyright header and @format directive to be present in every file2
const pattern = /^\*\n \* Copyright 20\d{2}-present Facebook\.\n \* This source code is licensed under the MIT license found in the\n \* LICENSE file in the root directory of this source tree\.\n \* @format\n./;2
2
module.exports = {2
  extends: 'fbjs',2
  plugins: [...fbjs.plugins, 'header', 'prettier'],2
  rules: {2
    // disable rules from eslint-config-fbjs2
    'react/react-in-jsx-scope': 0, // not needed with our metro implementation2
    'no-new': 0, // new keyword needed e.g. new Notification2
    'no-catch-shadow': 0, // only relevant for IE8 and below2
    'no-bitwise': 0, // bitwise operations needed in some places2
    'consistent-return': 0,2
    'max-len': 0, // let's take prettier take care of this2
    indent: 0, // let's take prettier take care of this2
2
    // additional rules for this project2
    'header/header': [2, 'block', {pattern}],2
    'prettier/prettier': [2, 'fb', '@format'],2
  },2
};2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import android.content.Context;2
import android.net.wifi.WifiInfo;2
import android.net.wifi.WifiManager;2
import android.os.Build;2
import com.facebook.sonar.core.SonarClient;2
2
public final class AndroidSonarClient {2
  private static boolean sIsInitialized = false;2
  private static SonarThread sSonarThread;2
2
  public static synchronized SonarClient getInstance(Context context) {2
    if (!sIsInitialized) {2
      sSonarThread = new SonarThread();2
      sSonarThread.start();2
2
      final Context app = context.getApplicationContext();2
      SonarClientImpl.init(2
          sSonarThread.getEventBase(),2
          getServerHost(app),2
          "Android",2
          getFriendlyDeviceName(),2
          getId(),2
          getRunningAppName(app),2
          getPackageName(app),2
          context.getFilesDir().getAbsolutePath());2
      sIsInitialized = true;2
    }2
    return SonarClientImpl.getInstance();2
  }2
2
  static boolean isRunningOnGenymotion() {2
    return Build.FINGERPRINT.contains("vbox");2
  }2
2
  static boolean isRunningOnStockEmulator() {2
    return Build.FINGERPRINT.contains("generic") && !Build.FINGERPRINT.contains("vbox");2
  }2
2
  static String getId() {2
    return Build.SERIAL;2
  }2
2
  static String getFriendlyDeviceName() {2
    if (isRunningOnGenymotion()) {2
      // Genymotion already has a friendly name by default2
      return Build.MODEL;2
    } else {2
      return Build.MODEL + " - " + Build.VERSION.RELEASE + " - API " + Build.VERSION.SDK_INT;2
    }2
  }2
2
  static String getServerHost(Context context) {2
    if (isRunningOnStockEmulator()) {2
      return "10.0.2.2";2
    } else if (isRunningOnGenymotion()) {2
      // This is hand-wavy but works on but ipv4 and ipv6 genymotion2
      final WifiManager wifi = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);2
      final WifiInfo info = wifi.getConnectionInfo();2
      final int ip = info.getIpAddress();2
      return String.format("%d.%d.%d.2", (ip & 0xff), (ip >> 8 & 0xff), (ip >> 16 & 0xff));2
    } else {2
      // Running on physical device. Sonar desktop will run `adb reverse tcp:8088 tcp:8088`2
      return "localhost";2
    }2
  }2
2
  static String getRunningAppName(Context context) {2
    return context.getApplicationInfo().loadLabel(context.getPackageManager()).toString();2
  }2
2
  static String getPackageName(Context context) {2
    return context.getPackageName();2
  }2
}2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import com.facebook.jni.HybridClassBase;2
import com.facebook.proguard.annotations.DoNotStrip;2
import com.facebook.soloader.SoLoader;2
import com.facebook.sonar.BuildConfig;2
2
@DoNotStrip2
class EventBase extends HybridClassBase {2
  static {2
    if (BuildConfig.IS_INTERNAL_BUILD) {2
      SoLoader.loadLibrary("sonar");2
    }2
  }2
2
  EventBase() {2
    initHybrid();2
  }2
2
  @DoNotStrip2
  native void loopForever();2
2
  @DoNotStrip2
  private native void initHybrid();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import com.facebook.jni.HybridData;2
import com.facebook.proguard.annotations.DoNotStrip;2
import com.facebook.soloader.SoLoader;2
import com.facebook.sonar.BuildConfig;2
import com.facebook.sonar.core.SonarClient;2
import com.facebook.sonar.core.SonarPlugin;2
2
@DoNotStrip2
class SonarClientImpl implements SonarClient {2
  static {2
    if (BuildConfig.IS_INTERNAL_BUILD) {2
      SoLoader.loadLibrary("sonar");2
    }2
  }2
2
  private final HybridData mHybridData;2
2
  private SonarClientImpl(HybridData hd) {2
    mHybridData = hd;2
  }2
2
  public static native void init(2
      EventBase eventBase,2
      String host,2
      String os,2
      String device,2
      String deviceId,2
      String app,2
      String appId,2
      String privateAppDirectory);2
2
  public static native SonarClientImpl getInstance();2
2
  @Override2
  public native void addPlugin(SonarPlugin plugin);2
2
  @Override2
  public native <T extends SonarPlugin> T getPlugin(String id);2
2
  @Override2
  public native void removePlugin(SonarPlugin plugin);2
2
  @Override2
  public native void start();2
2
  @Override2
  public native void stop();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import com.facebook.jni.HybridData;2
import com.facebook.proguard.annotations.DoNotStrip;2
import com.facebook.soloader.SoLoader;2
import com.facebook.sonar.BuildConfig;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarReceiver;2
2
@DoNotStrip2
class SonarConnectionImpl implements SonarConnection {2
  static {2
    if (BuildConfig.IS_INTERNAL_BUILD) {2
      SoLoader.loadLibrary("sonar");2
    }2
  }2
2
  private final HybridData mHybridData;2
2
  private SonarConnectionImpl(HybridData hd) {2
    mHybridData = hd;2
  }2
2
  @Override2
  public void send(String method, SonarObject params) {2
    sendObject(method, params);2
  }2
2
  @Override2
  public void send(String method, SonarArray params) {2
    sendArray(method, params);2
  }2
2
  public native void sendObject(String method, SonarObject params);2
2
  public native void sendArray(String method, SonarArray params);2
2
  @Override2
  public native void reportError(Throwable throwable);2
2
  @Override2
  public native void receive(String method, SonarReceiver receiver);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import com.facebook.jni.HybridData;2
import com.facebook.proguard.annotations.DoNotStrip;2
import com.facebook.soloader.SoLoader;2
import com.facebook.sonar.BuildConfig;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarResponder;2
2
@DoNotStrip2
class SonarResponderImpl implements SonarResponder {2
  static {2
    if (BuildConfig.IS_INTERNAL_BUILD) {2
      SoLoader.loadLibrary("sonar");2
    }2
  }2
2
  private final HybridData mHybridData;2
2
  private SonarResponderImpl(HybridData hd) {2
    mHybridData = hd;2
  }2
2
  @Override2
  public void success(SonarObject params) {2
    successObject(params);2
  }2
2
  @Override2
  public void success(SonarArray params) {2
    successArray(params);2
  }2
2
  @Override2
  public void success() {2
    successObject(new SonarObject.Builder().build());2
  }2
2
  public native void successObject(SonarObject response);2
2
  public native void successArray(SonarArray response);2
2
  @Override2
  public native void error(SonarObject response);2
}2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android;2
2
import android.os.Process;2
import javax.annotation.Nullable;2
2
class SonarThread extends Thread {2
  private @Nullable EventBase mEventBase;2
2
  SonarThread() {2
    super("SonarEventBaseThread");2
  }2
2
  @Override2
  public void run() {2
    Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);2
    synchronized (this) {2
      try {2
        mEventBase = new EventBase();2
      } finally {2
        notifyAll();2
      }2
    }2
2
    mEventBase.loopForever();2
  }2
2
  synchronized EventBase getEventBase() {2
    while (mEventBase == null) {2
      try {2
        wait();2
      } catch (InterruptedException e) {2
        // ignore2
      }2
    }2
    return mEventBase;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.android.utils;2
2
import android.app.ActivityManager;2
import android.content.Context;2
import com.facebook.sonar.BuildConfig;2
import java.util.List;2
2
public final class SonarUtils {2
2
  private SonarUtils() {}2
2
  public static boolean shouldEnableSonar(Context context) {2
    return BuildConfig.IS_INTERNAL_BUILD && !isEndToEndTest() && isMainProcess(context);2
  }2
2
  private static boolean isEndToEndTest() {2
    final String value = System.getenv("BUDDY_SONAR_DISABLED");2
    if (value == null || value.length() == 0) {2
      return false;2
    }2
2
    try {2
      return Boolean.parseBoolean(value);2
    } catch (NumberFormatException e) {2
      return false;2
    }2
  }2
2
  private static boolean isMainProcess(Context context) {2
    final int pid = android.os.Process.myPid();2
    final ActivityManager manager =2
        (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);2
    final List<ActivityManager.RunningAppProcessInfo> infoList = manager.getRunningAppProcesses();2
2
    String processName = null;2
    if (infoList != null) {2
      for (ActivityManager.RunningAppProcessInfo info : infoList) {2
        if (info.pid == pid) {2
          processName = info.processName;2
          break;2
        }2
      }2
    }2
2
    return context.getPackageName().equals(processName);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
public abstract class ErrorReportingRunnable implements Runnable {2
2
  private final SonarConnection mConnection;2
2
  public ErrorReportingRunnable(SonarConnection connection) {2
    mConnection = connection;2
  }2
2
  @Override2
  public final void run() {2
    try {2
      runOrThrow();2
    } catch (Exception e) {2
      if (mConnection != null) {2
        mConnection.reportError(e);2
      }2
    } finally {2
      doFinally();2
    }2
  }2
2
  protected void doFinally() {}2
2
  protected abstract void runOrThrow() throws Exception;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
import java.util.ArrayList;2
import java.util.List;2
import org.json.JSONArray;2
import org.json.JSONException;2
import org.json.JSONObject;2
2
public class SonarArray {2
  final JSONArray mJson;2
2
  SonarArray(JSONArray json) {2
    mJson = (json != null ? json : new JSONArray());2
  }2
2
  SonarArray(String json) {2
    try {2
      mJson = new JSONArray(json);2
    } catch (JSONException e) {2
      throw new RuntimeException(e);2
    }2
  }2
2
  public SonarDynamic getDynamic(int index) {2
    return new SonarDynamic(mJson.opt(index));2
  }2
2
  public String getString(int index) {2
    return mJson.optString(index);2
  }2
2
  public int getInt(int index) {2
    return mJson.optInt(index);2
  }2
2
  public long getLong(int index) {2
    return mJson.optLong(index);2
  }2
2
  public float getFloat(int index) {2
    return (float) mJson.optDouble(index);2
  }2
2
  public double getDouble(int index) {2
    return mJson.optDouble(index);2
  }2
2
  public boolean getBoolean(int index) {2
    return mJson.optBoolean(index);2
  }2
2
  public SonarObject getObject(int index) {2
    final Object o = mJson.opt(index);2
    return new SonarObject((JSONObject) o);2
  }2
2
  public SonarArray getArray(int index) {2
    final Object o = mJson.opt(index);2
    return new SonarArray((JSONArray) o);2
  }2
2
  public int length() {2
    return mJson.length();2
  }2
2
  public List<String> toStringList() {2
    final int length = length();2
    final List<String> list = new ArrayList<>(length);2
    for (int i = 0; i < length; i++) {2
      list.add(getString(i));2
    }2
    return list;2
  }2
2
  public String toJsonString() {2
    return toString();2
  }2
2
  @Override2
  public String toString() {2
    return mJson.toString();2
  }2
2
  @Override2
  public boolean equals(Object o) {2
    return mJson.toString().equals(o.toString());2
  }2
2
  @Override2
  public int hashCode() {2
    return mJson.hashCode();2
  }2
2
  public static class Builder {2
    private final JSONArray mJson;2
2
    public Builder() {2
      mJson = new JSONArray();2
    }2
2
    public Builder put(String s) {2
      mJson.put(s);2
      return this;2
    }2
2
    public Builder put(Integer i) {2
      mJson.put(i);2
      return this;2
    }2
2
    public Builder put(Long l) {2
      mJson.put(l);2
      return this;2
    }2
2
    public Builder put(Float f) {2
      mJson.put(Float.isNaN(f) ? null : f);2
      return this;2
    }2
2
    public Builder put(Double d) {2
      mJson.put(Double.isNaN(d) ? null : d);2
      return this;2
    }2
2
    public Builder put(Boolean b) {2
      mJson.put(b);2
      return this;2
    }2
2
    public Builder put(SonarValue v) {2
      return put(v.toSonarObject());2
    }2
2
    public Builder put(SonarArray a) {2
      mJson.put(a == null ? null : a.mJson);2
      return this;2
    }2
2
    public Builder put(SonarArray.Builder b) {2
      return put(b.build());2
    }2
2
    public Builder put(SonarObject o) {2
      mJson.put(o == null ? null : o.mJson);2
      return this;2
    }2
2
    public Builder put(SonarObject.Builder b) {2
      return put(b.build());2
    }2
2
    public SonarArray build() {2
      return new SonarArray(mJson);2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
public interface SonarClient {2
  void addPlugin(SonarPlugin plugin);2
2
  <T extends SonarPlugin> T getPlugin(String id);2
2
  void removePlugin(SonarPlugin plugin);2
2
  void start();2
2
  void stop();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
/**2
 * A connection between a SonarPlugin and the desktop Sonar application. Register request handlers2
 * to respond to calls made by the desktop application or directly send messages to the desktop2
 * application.2
 */2
public interface SonarConnection {2
2
  /**2
   * Call a remote method on the Sonar desktop application, passing an optional JSON object as a2
   * parameter.2
   */2
  void send(String method, SonarObject params);2
2
  /**2
   * Call a remote method on the Sonar desktop application, passing an optional JSON array as a2
   * parameter.2
   */2
  void send(String method, SonarArray params);2
2
  /** Report client error */2
  void reportError(Throwable throwable);2
2
  /**2
   * Register a receiver for a remote method call issued by the Sonar desktop application. The2
   * SonarReceiver is passed a responder to respond back to the desktop application.2
   */2
  void receive(String method, SonarReceiver receiver);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
import javax.annotation.Nullable;2
import org.json.JSONArray;2
import org.json.JSONObject;2
2
public class SonarDynamic {2
  private final Object mObject;2
2
  public SonarDynamic(Object object) {2
    mObject = object;2
  }2
2
  public @Nullable String asString() {2
    if (mObject == null) {2
      return null;2
    }2
    return mObject.toString();2
  }2
2
  public int asInt() {2
    if (mObject == null) {2
      return 0;2
    }2
    if (mObject instanceof Integer) {2
      return (Integer) mObject;2
    }2
    if (mObject instanceof Long) {2
      return ((Long) mObject).intValue();2
    }2
    if (mObject instanceof Float) {2
      return ((Float) mObject).intValue();2
    }2
    if (mObject instanceof Double) {2
      return ((Double) mObject).intValue();2
    }2
    return 0;2
  }2
2
  public long asLong() {2
    if (mObject == null) {2
      return 0;2
    }2
    if (mObject instanceof Integer) {2
      return (Integer) mObject;2
    }2
    if (mObject instanceof Long) {2
      return (Long) mObject;2
    }2
    if (mObject instanceof Float) {2
      return ((Float) mObject).longValue();2
    }2
    if (mObject instanceof Double) {2
      return ((Double) mObject).longValue();2
    }2
    return 0;2
  }2
2
  public float asFloat() {2
    if (mObject == null) {2
      return 0;2
    }2
    if (mObject instanceof Integer) {2
      return (Integer) mObject;2
    }2
    if (mObject instanceof Long) {2
      return (Long) mObject;2
    }2
    if (mObject instanceof Float) {2
      return (Float) mObject;2
    }2
    if (mObject instanceof Double) {2
      return ((Double) mObject).floatValue();2
    }2
    return 0;2
  }2
2
  public double asDouble() {2
    if (mObject == null) {2
      return 0;2
    }2
    if (mObject instanceof Integer) {2
      return (Integer) mObject;2
    }2
    if (mObject instanceof Long) {2
      return (Long) mObject;2
    }2
    if (mObject instanceof Float) {2
      return (Float) mObject;2
    }2
    if (mObject instanceof Double) {2
      return (Double) mObject;2
    }2
    return 0;2
  }2
2
  public boolean asBoolean() {2
    if (mObject == null) {2
      return false;2
    }2
    return (Boolean) mObject;2
  }2
2
  public SonarObject asObject() {2
    if (mObject instanceof JSONObject) {2
      return new SonarObject((JSONObject) mObject);2
    }2
    return (SonarObject) mObject;2
  }2
2
  public SonarArray asArray() {2
    if (mObject instanceof JSONArray) {2
      return new SonarArray((JSONArray) mObject);2
    }2
    return (SonarArray) mObject;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
import java.util.Arrays;2
import org.json.JSONArray;2
import org.json.JSONException;2
import org.json.JSONObject;2
2
public class SonarObject {2
  final JSONObject mJson;2
2
  public SonarObject(JSONObject json) {2
    mJson = (json != null ? json : new JSONObject());2
  }2
2
  public SonarObject(String json) {2
    try {2
      mJson = new JSONObject(json);2
    } catch (JSONException e) {2
      throw new RuntimeException(e);2
    }2
  }2
2
  public SonarDynamic getDynamic(String name) {2
    return new SonarDynamic(mJson.opt(name));2
  }2
2
  public String getString(String name) {2
    if (mJson.isNull(name)) {2
      return null;2
    }2
    return mJson.optString(name);2
  }2
2
  public int getInt(String name) {2
    return mJson.optInt(name);2
  }2
2
  public long getLong(String name) {2
    return mJson.optLong(name);2
  }2
2
  public float getFloat(String name) {2
    return (float) mJson.optDouble(name);2
  }2
2
  public double getDouble(String name) {2
    return mJson.optDouble(name);2
  }2
2
  public boolean getBoolean(String name) {2
    return mJson.optBoolean(name);2
  }2
2
  public SonarObject getObject(String name) {2
    final Object o = mJson.opt(name);2
    return new SonarObject((JSONObject) o);2
  }2
2
  public SonarArray getArray(String name) {2
    final Object o = mJson.opt(name);2
    return new SonarArray((JSONArray) o);2
  }2
2
  public boolean contains(String name) {2
    return mJson.has(name);2
  }2
2
  public String toJsonString() {2
    return toString();2
  }2
2
  @Override2
  public String toString() {2
    return mJson.toString();2
  }2
2
  @Override2
  public boolean equals(Object o) {2
    return mJson.toString().equals(o.toString());2
  }2
2
  @Override2
  public int hashCode() {2
    return mJson.hashCode();2
  }2
2
  public static class Builder {2
    private final JSONObject mJson;2
2
    public Builder() {2
      mJson = new JSONObject();2
    }2
2
    public Builder put(String name, Object obj) {2
      if (obj == null) {2
        return put(name, (String) null);2
      } else if (obj instanceof Integer) {2
        return put(name, (Integer) obj);2
      } else if (obj instanceof Long) {2
        return put(name, (Long) obj);2
      } else if (obj instanceof Float) {2
        return put(name, (Float) obj);2
      } else if (obj instanceof Double) {2
        return put(name, (Double) obj);2
      } else if (obj instanceof String) {2
        return put(name, (String) obj);2
      } else if (obj instanceof Boolean) {2
        return put(name, (Boolean) obj);2
      } else if (obj instanceof Object[]) {2
        return put(name, Arrays.deepToString((Object[]) obj));2
      } else if (obj instanceof SonarObject) {2
        return put(name, (SonarObject) obj);2
      } else if (obj instanceof SonarObject.Builder) {2
        return put(name, (SonarObject.Builder) obj);2
      } else if (obj instanceof SonarArray) {2
        return put(name, (SonarArray) obj);2
      } else if (obj instanceof SonarArray.Builder) {2
        return put(name, (SonarArray.Builder) obj);2
      } else if (obj instanceof SonarValue) {2
        return put(name, ((SonarValue) obj).toSonarObject());2
      } else {2
        return put(name, obj.toString());2
      }2
    }2
2
    public Builder put(String name, String s) {2
      try {2
        mJson.put(name, s);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, Integer i) {2
      try {2
        mJson.put(name, i);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, Long l) {2
      try {2
        mJson.put(name, l);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, Float f) {2
      try {2
        mJson.put(name, Float.isNaN(f) ? null : f);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, Double d) {2
      try {2
        mJson.put(name, Double.isNaN(d) ? null : d);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, Boolean b) {2
      try {2
        mJson.put(name, b);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, SonarValue v) {2
      return put(name, v.toSonarObject());2
    }2
2
    public Builder put(String name, SonarArray a) {2
      try {2
        mJson.put(name, a == null ? null : a.mJson);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, SonarArray.Builder b) {2
      return put(name, b.build());2
    }2
2
    public Builder put(String name, SonarObject o) {2
      try {2
        mJson.put(name, o == null ? null : o.mJson);2
      } catch (JSONException e) {2
        throw new RuntimeException(e);2
      }2
      return this;2
    }2
2
    public Builder put(String name, SonarObject.Builder b) {2
      return put(name, b.build());2
    }2
2
    public SonarObject build() {2
      return new SonarObject(mJson);2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
/**2
 * A SonarPlugin is an object which exposes an API to the Desktop Sonar application. When a2
 * connection is established the plugin is given a SonarConnection on which it can register request2
 * handlers and send messages. When the SonarConnection is invalid onDisconnect is called. onConnect2
 * may be called again on the same plugin object if Sonar re-connects, this will provide a new2
 * SonarConnection, do not attempt to re-use the previous connection.2
 */2
public interface SonarPlugin {2
2
  /**2
   * @return The id of this plugin. This is the namespace which Sonar desktop plugins will call2
   *     methods on to route them to your plugin. This should match the id specified in your React2
   *     plugin.2
   */2
  String getId();2
2
  /**2
   * Called when a connection has been established. The connection passed to this method is valid2
   * until {@link SonarPlugin#onDisconnect()} is called.2
   */2
  void onConnect(SonarConnection connection) throws Exception;2
2
  /**2
   * Called when the connection passed to {@link SonarPlugin#onConnect(SonarConnection)} is no2
   * longer valid. Do not try to use the connection in or after this method has been called.2
   */2
  void onDisconnect() throws Exception;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
/**2
 * A receiver of a remote method call issued by the Sonar desktop application. If the given2
 * responder is present it means the Sonar desktop application is expecting a response.2
 */2
public interface SonarReceiver {2
2
  /**2
   * Reciver for a request sent from the Sonar desktop client.2
   *2
   * @param params Optional set of parameters sent with the request.2
   * @param responder Optional responder for request. Some requests don't warrant a response2
   *     through. In this case the request should be made from the desktop using send() instead of2
   *     call().2
   */2
  void onReceive(SonarObject params, SonarResponder responder) throws Exception;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
/**2
 * SonarResponder is used to asyncronously response to a messaged recieved from the Sonar desktop2
 * app. The Sonar Responder will automatically wrap the response in an approriate object depending2
 * on if it is an error or not.2
 */2
public interface SonarResponder {2
2
  /** Deliver a successful response to the Sonar desktop app. */2
  void success(SonarObject response);2
2
  /** Deliver a successful response to the Sonar desktop app. */2
  void success(SonarArray response);2
2
  /** Deliver a successful response to the Sonar desktop app. */2
  void success();2
2
  /** Inform the Sonar desktop app of an error in handling the request. */2
  void error(SonarObject response);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.core;2
2
public interface SonarValue {2
  SonarObject toSonarObject();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.common;2
2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarPlugin;2
import javax.annotation.Nullable;2
2
/**2
 * Sonar plugin that keeps events in a buffer until a connection is available.2
 *2
 * <p>In order to send data to the {@link SonarConnection}, use {@link #send(String, SonarObject)}2
 * instead of {@link SonarConnection#send(String, SonarObject)}.2
 */2
public abstract class BufferingSonarPlugin implements SonarPlugin {2
2
  private static final int BUFFER_SIZE = 500;2
2
  private @Nullable RingBuffer<CachedSonarEvent> mEventQueue;2
  private @Nullable SonarConnection mConnection;2
2
  @Override2
  public synchronized void onConnect(SonarConnection connection) {2
    mConnection = connection;2
2
    sendBufferedEvents();2
  }2
2
  @Override2
  public synchronized void onDisconnect() {2
    mConnection = null;2
  }2
2
  public synchronized SonarConnection getConnection() {2
    return mConnection;2
  }2
2
  public synchronized boolean isConnected() {2
    return mConnection != null;2
  }2
2
  public synchronized void send(String method, SonarObject sonarObject) {2
    if (mEventQueue == null) {2
      mEventQueue = new RingBuffer<>(BUFFER_SIZE);2
    }2
    mEventQueue.enqueue(new CachedSonarEvent(method, sonarObject));2
    if (mConnection != null) {2
      mConnection.send(method, sonarObject);2
    }2
  }2
2
  private synchronized void sendBufferedEvents() {2
    if (mEventQueue != null && mConnection != null) {2
      for (CachedSonarEvent cachedSonarEvent : mEventQueue.asList()) {2
        mConnection.send(cachedSonarEvent.method, cachedSonarEvent.sonarObject);2
      }2
    }2
  }2
2
  private static class CachedSonarEvent {2
    final String method;2
    final SonarObject sonarObject;2
2
    private CachedSonarEvent(String method, SonarObject sonarObject) {2
      this.method = method;2
      this.sonarObject = sonarObject;2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.common;2
2
import android.os.Handler;2
import android.os.Looper;2
import com.facebook.sonar.core.ErrorReportingRunnable;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarReceiver;2
import com.facebook.sonar.core.SonarResponder;2
2
public abstract class MainThreadSonarReceiver implements SonarReceiver {2
2
  public MainThreadSonarReceiver(SonarConnection connection) {2
    this.mConnection = connection;2
  }2
2
  private final SonarConnection mConnection;2
  private final Handler mHandler = new Handler(Looper.getMainLooper());2
2
  @Override2
  public final void onReceive(final SonarObject params, final SonarResponder responder) {2
    mHandler.post(2
        new ErrorReportingRunnable(mConnection) {2
          @Override2
          public void runOrThrow() throws Exception {2
            onReceiveOnMainThread(params, responder);2
          }2
        });2
  }2
2
  public abstract void onReceiveOnMainThread(SonarObject params, SonarResponder responder)2
      throws Exception;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.common;2
2
import java.util.LinkedList;2
import java.util.List;2
2
final class RingBuffer<T> {2
  final int mBufferSize;2
  final List<T> mBuffer = new LinkedList<>();2
2
  RingBuffer(int bufferSize) {2
    mBufferSize = bufferSize;2
  }2
2
  void enqueue(T item) {2
    if (mBuffer.size() >= mBufferSize) {2
      mBuffer.remove(0);2
    }2
    mBuffer.add(item);2
  }2
2
  List<T> asList() {2
    return mBuffer;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console;2
2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarPlugin;2
import com.facebook.sonar.plugins.console.iface.ConsoleCommandReceiver;2
2
public class ConsoleSonarPlugin implements SonarPlugin {2
2
  private final JavascriptEnvironment mJavascriptEnvironment;2
  private JavascriptSession mJavascriptSession;2
2
  public ConsoleSonarPlugin(JavascriptEnvironment jsEnvironment) {2
    this.mJavascriptEnvironment = jsEnvironment;2
  }2
2
  @Override2
  public String getId() {2
    return "Console";2
  }2
2
  @Override2
  public void onConnect(SonarConnection connection) throws Exception {2
    ConsoleCommandReceiver.listenForCommands(connection, mJavascriptEnvironment);2
  }2
2
  public void onDisconnect() throws Exception {2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console;2
2
import com.facebook.sonar.plugins.console.iface.ScriptingEnvironment;2
import java.util.HashMap;2
import java.util.Map;2
import org.mozilla.javascript.Context;2
import org.mozilla.javascript.ContextFactory;2
2
public class JavascriptEnvironment implements ScriptingEnvironment {2
2
  private final Map<String, Object> mBoundVariables;2
  private final ContextFactory mContextFactory;2
2
  public JavascriptEnvironment() {2
    mBoundVariables = new HashMap<>();2
    mContextFactory =2
        new ContextFactory() {2
          @Override2
          public boolean hasFeature(Context cx, int featureIndex) {2
            return featureIndex == Context.FEATURE_ENHANCED_JAVA_ACCESS;2
          }2
        };2
  }2
2
  @Override2
  public JavascriptSession startSession() {2
    return new JavascriptSession(mContextFactory, mBoundVariables);2
  }2
2
  /**2
   * Method for other plugins to register objects to a name, so that they can be accessed in all2
   * console sessions.2
   *2
   * @param name The variable name to bind the object to.2
   * @param object The reference to bind.2
   */2
  @Override2
  public void registerGlobalObject(String name, Object object) {2
    if (mBoundVariables.containsKey(name)) {2
      throw new IllegalStateException(2
          String.format(2
              "Variable %s is already reserved for %s", name, mBoundVariables.get(name)));2
    }2
    mBoundVariables.put(name, object);2
  }2
2
  @Override2
  public boolean isEnabled() {2
    return true;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console;2
2
import com.facebook.sonar.plugins.console.iface.ScriptingSession;2
import java.io.Closeable;2
import java.util.Map;2
import java.util.concurrent.atomic.AtomicInteger;2
import org.json.JSONException;2
import org.json.JSONObject;2
import org.json.JSONTokener;2
import org.mozilla.javascript.Context;2
import org.mozilla.javascript.ContextFactory;2
import org.mozilla.javascript.Function;2
import org.mozilla.javascript.NativeJSON;2
import org.mozilla.javascript.NativeJavaMethod;2
import org.mozilla.javascript.NativeJavaObject;2
import org.mozilla.javascript.Scriptable;2
import org.mozilla.javascript.ScriptableObject;2
import org.mozilla.javascript.Undefined;2
2
public class JavascriptSession implements Closeable, ScriptingSession {2
2
  private static final String TYPE = "type";2
  private static final String VALUE = "value";2
  public static final String JSON = "json";2
  private final Context mContext;2
  private final ContextFactory mContextFactory;2
  private final Scriptable mScope;2
  private final AtomicInteger lineNumber = new AtomicInteger(0);2
2
  JavascriptSession(ContextFactory contextFactory, Map<String, Object> globals) {2
    mContextFactory = contextFactory;2
    mContext = contextFactory.enterContext();2
2
    // Interpreted mode, or it will produce Dalvik incompatible bytecode.2
    mContext.setOptimizationLevel(-1);2
    mScope = mContext.initStandardObjects();2
2
    for (Map.Entry<String, Object> entry : globals.entrySet()) {2
      final Object value = entry.getValue();2
2
      if (value instanceof Number || value instanceof String) {2
        ScriptableObject.putConstProperty(mScope, entry.getKey(), entry.getValue());2
      } else {2
        // Calling java methods in the VM produces objects wrapped in NativeJava*.2
        // So passing in wrapped objects keeps them consistent.2
        ScriptableObject.putConstProperty(2
            mScope,2
            entry.getKey(),2
            new NativeJavaObject(mScope, entry.getValue(), entry.getValue().getClass()));2
      }2
    }2
  }2
2
  @Override2
  public JSONObject evaluateCommand(String userScript) throws JSONException {2
    return evaluateCommand(userScript, mScope);2
  }2
2
  @Override2
  public JSONObject evaluateCommand(String userScript, Object context) throws JSONException {2
    Scriptable scope = new NativeJavaObject(mScope, context, context.getClass());2
    return evaluateCommand(userScript, scope);2
  }2
2
  private JSONObject evaluateCommand(String command, Scriptable scope) throws JSONException {2
    try {2
      // This may be called by any thread, and contexts have to be entered in the current thread2
      // before being used, so enter/exit every time.2
      mContextFactory.enterContext();2
      return toJson(2
          mContext.evaluateString(2
              scope, command, "sonar-console", lineNumber.incrementAndGet(), null));2
    } finally {2
      Context.exit();2
    }2
  }2
2
  private JSONObject toJson(Object result) throws JSONException {2
2
    if (result instanceof String) {2
      return new JSONObject().put(TYPE, JSON).put(VALUE, result);2
    }2
2
    if (result instanceof Class) {2
      return new JSONObject().put(TYPE, "class").put(VALUE, ((Class) result).getName());2
    }2
2
    if (result instanceof NativeJavaObject2
        && ((NativeJavaObject) result).unwrap() instanceof String) {2
      return new JSONObject().put(TYPE, JSON).put(VALUE, ((NativeJavaObject) result).unwrap());2
    }2
2
    if (result instanceof NativeJavaObject2
        && ((NativeJavaObject) result).unwrap() instanceof Class) {2
      return new JSONObject()2
          .put(TYPE, "class")2
          .put(VALUE, ((NativeJavaObject) result).unwrap().toString());2
    }2
2
    if (result instanceof NativeJavaObject) {2
      final JSONObject o = new JSONObject();2
      o.put("toString", ((NativeJavaObject) result).unwrap().toString());2
      for (Object id : ((NativeJavaObject) result).getIds()) {2
        if (id instanceof String) {2
          final String name = (String) id;2
          final Object value = ((NativeJavaObject) result).get(name, (NativeJavaObject) result);2
          if (value != null && value instanceof NativeJavaMethod) {2
            continue;2
          }2
          final String valueString = value == null ? null : safeUnwrap(value).toString();2
          o.put(name, valueString);2
        }2
      }2
      return new JSONObject().put(TYPE, "javaObject").put(VALUE, o);2
    }2
2
    if (result instanceof NativeJavaMethod) {2
      final JSONObject o = new JSONObject();2
      o.put(TYPE, "method");2
      o.put("name", ((NativeJavaMethod) result).getFunctionName());2
      return o;2
    }2
2
    if (result == null || result instanceof Undefined) {2
      return new JSONObject().put(TYPE, "null");2
    }2
2
    if (result instanceof Function) {2
      final JSONObject o = new JSONObject();2
      o.put(TYPE, "function");2
      o.put(VALUE, Context.toString(result));2
      return o;2
    }2
2
    if (result instanceof ScriptableObject) {2
      return new JSONObject()2
          .put(TYPE, JSON)2
          .put(2
              VALUE,2
              new JSONTokener(NativeJSON.stringify(mContext, mScope, result, null, null).toString())2
                  .nextValue());2
    }2
2
    if (result instanceof Number) {2
      return new JSONObject().put(TYPE, JSON).put(VALUE, result);2
    }2
2
    return new JSONObject().put(TYPE, "unknown").put(VALUE, result.toString());2
  }2
2
  @Override2
  public void close() {2
    Context.exit();2
  }2
2
  private static Object safeUnwrap(Object o) {2
    if (o instanceof NativeJavaObject) {2
      return ((NativeJavaObject) o).unwrap();2
    }2
    return o;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console.iface;2
2
import android.support.annotation.Nullable;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarReceiver;2
import com.facebook.sonar.core.SonarResponder;2
import com.facebook.sonar.plugins.common.MainThreadSonarReceiver;2
import org.json.JSONObject;2
2
/**2
 * Convenience class for adding console execution to a Sonar Plugin. Calling {@link2
 * ConsoleCommandReceiver#listenForCommands(SonarConnection, ScriptingEnvironment, ContextProvider)}2
 * will add the necessary listeners for responding to command execution calls.2
 */2
public class ConsoleCommandReceiver {2
2
  /**2
   * Incoming command execution calls may reference a context ID that means something to your2
   * plugin. Implement {@link ContextProvider} to provide a mapping from context ID to java object.2
   * This will allow your sonar plugin to control the execution context of the command.2
   */2
  public interface ContextProvider {2
    @Nullable2
    Object getObjectForId(String id);2
  }2
2
  public static void listenForCommands(2
      final SonarConnection connection,2
      final ScriptingEnvironment scriptingEnvironment,2
      final ContextProvider contextProvider) {2
2
    final ScriptingSession session = scriptingEnvironment.startSession();2
    final SonarReceiver executeCommandReceiver =2
        new MainThreadSonarReceiver(connection) {2
          @Override2
          public void onReceiveOnMainThread(SonarObject params, SonarResponder responder)2
              throws Exception {2
            final String command = params.getString("command");2
            final String contextObjectId = params.getString("context");2
            final Object contextObject = contextProvider.getObjectForId(contextObjectId);2
            try {2
              JSONObject o =2
                  contextObject == null2
                      ? session.evaluateCommand(command)2
                      : session.evaluateCommand(command, contextObject);2
              responder.success(new SonarObject(o));2
            } catch (Exception e) {2
              responder.error(new SonarObject.Builder().put("message", e.getMessage()).build());2
            }2
          }2
        };2
    final SonarReceiver isEnabledReceiver =2
        new SonarReceiver() {2
          @Override2
          public void onReceive(SonarObject params, SonarResponder responder) throws Exception {2
            responder.success(2
                new SonarObject.Builder()2
                    .put("isEnabled", scriptingEnvironment.isEnabled())2
                    .build());2
          }2
        };2
2
    connection.receive("executeCommand", executeCommandReceiver);2
    connection.receive("isConsoleEnabled", isEnabledReceiver);2
  }2
2
  public static void listenForCommands(2
      SonarConnection connection, ScriptingEnvironment scriptingEnvironment) {2
    listenForCommands(connection, scriptingEnvironment, nullContextProvider);2
  }2
2
  private static final ContextProvider nullContextProvider =2
      new ContextProvider() {2
        @Override2
        @Nullable2
        public Object getObjectForId(String id) {2
          return null;2
        }2
      };2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console.iface;2
2
import org.json.JSONException;2
import org.json.JSONObject;2
2
public class NullScriptingEnvironment implements ScriptingEnvironment {2
2
  @Override2
  public ScriptingSession startSession() {2
    return new NoOpScriptingSession();2
  }2
2
  @Override2
  public void registerGlobalObject(String name, Object object) {}2
2
  static class NoOpScriptingSession implements ScriptingSession {2
2
    @Override2
    public JSONObject evaluateCommand(String userScript) throws JSONException {2
      throw new UnsupportedOperationException("Console plugin not enabled in this app");2
    }2
2
    @Override2
    public JSONObject evaluateCommand(String userScript, Object context) throws JSONException {2
      return evaluateCommand(userScript);2
    }2
2
    @Override2
    public void close() {}2
  }2
2
  @Override2
  public boolean isEnabled() {2
    return false;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console.iface;2
2
public interface ScriptingEnvironment {2
2
  ScriptingSession startSession();2
2
  void registerGlobalObject(String name, Object object);2
2
  boolean isEnabled();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console.iface;2
2
import org.json.JSONException;2
import org.json.JSONObject;2
2
public interface ScriptingSession {2
2
  JSONObject evaluateCommand(String userScript) throws JSONException;2
2
  JSONObject evaluateCommand(String userScript, Object context) throws JSONException;2
2
  void close();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.app.Activity;2
import android.app.Application;2
import android.os.Bundle;2
import android.os.Handler;2
import android.os.Looper;2
import android.view.View;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.AndroidRootResolver;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.AndroidRootResolver.Root;2
import java.lang.ref.WeakReference;2
import java.util.ArrayList;2
import java.util.Collections;2
import java.util.Iterator;2
import java.util.List;2
2
public class ApplicationWrapper implements Application.ActivityLifecycleCallbacks {2
2
  public interface ActivityStackChangedListener {2
    void onActivityStackChanged(List<Activity> stack);2
  }2
2
  private final Application mApplication;2
  private final AndroidRootResolver mAndroidRootsResolver;2
  private final List<WeakReference<Activity>> mActivities;2
  private final Handler mHandler;2
  private ActivityStackChangedListener mListener;2
2
  public ApplicationWrapper(Application application) {2
    mApplication = application;2
    mAndroidRootsResolver = new AndroidRootResolver();2
    mApplication.registerActivityLifecycleCallbacks(this);2
    mActivities = new ArrayList<>();2
    mHandler = new Handler(Looper.getMainLooper());2
  }2
2
  @Override2
  public void onActivityCreated(Activity activity, Bundle savedInstanceState) {2
    mActivities.add(new WeakReference<>(activity));2
    notifyListener();2
  }2
2
  @Override2
  public void onActivityStarted(Activity activity) {}2
2
  @Override2
  public void onActivityResumed(Activity activity) {}2
2
  @Override2
  public void onActivityPaused(Activity activity) {2
    if (activity.isFinishing()) {2
      final Iterator<WeakReference<Activity>> activityIterator = mActivities.iterator();2
2
      while (activityIterator.hasNext()) {2
        if (activityIterator.next().get() == activity) {2
          activityIterator.remove();2
        }2
      }2
2
      notifyListener();2
    }2
  }2
2
  @Override2
  public void onActivityStopped(Activity activity) {}2
2
  @Override2
  public void onActivitySaveInstanceState(Activity activity, Bundle outState) {}2
2
  @Override2
  public void onActivityDestroyed(Activity activity) {}2
2
  private void notifyListener() {2
    if (mListener != null) {2
      mListener.onActivityStackChanged(getActivityStack());2
    }2
  }2
2
  public void setListener(ActivityStackChangedListener listener) {2
    mListener = listener;2
  }2
2
  public Application getApplication() {2
    return mApplication;2
  }2
2
  public List<Activity> getActivityStack() {2
    final List<Activity> activities = new ArrayList<>(mActivities.size());2
    final Iterator<WeakReference<Activity>> activityIterator = mActivities.iterator();2
2
    while (activityIterator.hasNext()) {2
      final Activity activity = activityIterator.next().get();2
      if (activity == null) {2
        activityIterator.remove();2
      } else {2
        activities.add(activity);2
      }2
    }2
2
    return activities;2
  }2
2
  public List<View> getViewRoots() {2
    final List<Root> roots = mAndroidRootsResolver.listActiveRoots();2
    if (roots == null) {2
      return Collections.EMPTY_LIST;2
    }2
2
    final List<View> viewRoots = new ArrayList<>(roots.size());2
    for (Root root : roots) {2
      viewRoots.add(root.view);2
    }2
2
    return viewRoots;2
  }2
2
  public void postDelayed(Runnable r, long delayMillis) {2
    mHandler.postDelayed(r, delayMillis);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.graphics.Canvas;2
import android.graphics.Color;2
import android.graphics.ColorFilter;2
import android.graphics.Paint;2
import android.graphics.PixelFormat;2
import android.graphics.Rect;2
import android.graphics.Region;2
import android.graphics.drawable.Drawable;2
import android.text.TextPaint;2
import javax.annotation.Nullable;2
2
public class BoundsDrawable extends Drawable {2
  public static final int COLOR_HIGHLIGHT_CONTENT = 0x888875c5;2
  public static final int COLOR_HIGHLIGHT_PADDING = 0x889dd185;2
  public static final int COLOR_HIGHLIGHT_MARGIN = 0x88f7b77b;2
  private static @Nullable BoundsDrawable sInstance;2
2
  private final TextPaint mTextPaint;2
  private final Paint mMarginPaint;2
  private final Paint mPaddingPaint;2
  private final Paint mContentPaint;2
  private final Rect mWorkRect;2
  private final Rect mMarginBounds;2
  private final Rect mPaddingBounds;2
  private final Rect mContentBounds;2
2
  private final int mStrokeWidth;2
  private final float mAscentOffset;2
  private final float mDensity;2
2
  public static BoundsDrawable getInstance(2
      float density, Rect marginBounds, Rect paddingBounds, Rect contentBounds) {2
    final BoundsDrawable drawable = getInstance(density);2
    drawable.setBounds(marginBounds, paddingBounds, contentBounds);2
    return drawable;2
  }2
2
  public static BoundsDrawable getInstance(float density) {2
    if (sInstance == null) {2
      sInstance = new BoundsDrawable(density);2
    }2
    return sInstance;2
  }2
2
  private BoundsDrawable(float density) {2
    mWorkRect = new Rect();2
    mMarginBounds = new Rect();2
    mPaddingBounds = new Rect();2
    mContentBounds = new Rect();2
2
    mDensity = density;2
2
    mTextPaint = new TextPaint();2
    mTextPaint.setAntiAlias(true);2
    mTextPaint.setTextAlign(Paint.Align.CENTER);2
    mTextPaint.setTextSize(dpToPx(8f));2
    mAscentOffset = -mTextPaint.ascent() / 2f;2
    mStrokeWidth = dpToPx(2f);2
2
    mPaddingPaint = new Paint();2
    mPaddingPaint.setStyle(Paint.Style.FILL);2
    mPaddingPaint.setColor(COLOR_HIGHLIGHT_PADDING);2
2
    mContentPaint = new Paint();2
    mContentPaint.setStyle(Paint.Style.FILL);2
    mContentPaint.setColor(COLOR_HIGHLIGHT_CONTENT);2
2
    mMarginPaint = new Paint();2
    mMarginPaint.setStyle(Paint.Style.FILL);2
    mMarginPaint.setColor(COLOR_HIGHLIGHT_MARGIN);2
  }2
2
  public void setBounds(Rect marginBounds, Rect paddingBounds, Rect contentBounds) {2
    mMarginBounds.set(marginBounds);2
    mPaddingBounds.set(paddingBounds);2
    mContentBounds.set(contentBounds);2
    setBounds(marginBounds);2
  }2
2
  @Override2
  public void draw(Canvas canvas) {2
    canvas.drawRect(mContentBounds, mContentPaint);2
2
    int saveCount = canvas.save();2
    canvas.clipRect(mContentBounds, Region.Op.DIFFERENCE);2
    canvas.drawRect(mPaddingBounds, mPaddingPaint);2
    canvas.restoreToCount(saveCount);2
2
    saveCount = canvas.save();2
    canvas.clipRect(mPaddingBounds, Region.Op.DIFFERENCE);2
    canvas.drawRect(mMarginBounds, mMarginPaint);2
    canvas.restoreToCount(saveCount);2
2
    drawBoundsDimensions(canvas, mContentBounds);2
2
    // Disabled for now since Sonar doesn't support options too well at this point in time.2
    // Once options are supported, we should re-enable the calls below2
    // drawCardinalDimensionsBetween(canvas, mContentBounds, mPaddingBounds);2
    // drawCardinalDimensionsBetween(canvas, mPaddingBounds, mMarginBounds);2
  }2
2
  @Override2
  public void setAlpha(int alpha) {2
    // No-op2
  }2
2
  @Override2
  public void setColorFilter(ColorFilter colorFilter) {2
    // No-op2
  }2
2
  @Override2
  public int getOpacity() {2
    return PixelFormat.TRANSLUCENT;2
  }2
2
  private void drawCardinalDimensionsBetween(Canvas canvas, Rect inner, Rect outer) {2
    mWorkRect.set(inner);2
    mWorkRect.left = outer.left;2
    mWorkRect.right = inner.left;2
    drawBoundsDimension(canvas, mWorkRect, mWorkRect.width());2
    mWorkRect.left = inner.right;2
    mWorkRect.right = outer.right;2
    drawBoundsDimension(canvas, mWorkRect, mWorkRect.width());2
    mWorkRect.set(outer);2
    mWorkRect.bottom = inner.top;2
    drawBoundsDimension(canvas, mWorkRect, mWorkRect.height());2
    mWorkRect.bottom = outer.bottom;2
    mWorkRect.top = inner.bottom;2
    drawBoundsDimension(canvas, mWorkRect, mWorkRect.height());2
  }2
2
  private void drawBoundsDimension(Canvas canvas, Rect bounds, int value) {2
    if (value <= 0) {2
      return;2
    }2
    int saveCount = canvas.save();2
    canvas.translate(bounds.centerX(), bounds.centerY());2
    drawOutlinedText(canvas, value + "px");2
    canvas.restoreToCount(saveCount);2
  }2
2
  private void drawBoundsDimensions(Canvas canvas, Rect bounds) {2
    int saveCount = canvas.save();2
    canvas.translate(bounds.centerX(), bounds.centerY());2
    drawOutlinedText(canvas, bounds.width() + "px  \u00D7  " + bounds.height() + "px");2
    canvas.restoreToCount(saveCount);2
  }2
2
  private void drawOutlinedText(Canvas canvas, String text) {2
    mTextPaint.setColor(Color.BLACK);2
    mTextPaint.setStrokeWidth(mStrokeWidth);2
    mTextPaint.setStyle(Paint.Style.STROKE);2
    canvas.drawText(text, 0f, mAscentOffset, mTextPaint);2
2
    mTextPaint.setColor(Color.WHITE);2
    mTextPaint.setStrokeWidth(0f);2
    mTextPaint.setStyle(Paint.Style.FILL);2
    canvas.drawText(text, 0f, mAscentOffset, mTextPaint);2
  }2
2
  private int dpToPx(float dp) {2
    return (int) (dp * mDensity);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.app.Activity;2
import android.app.Dialog;2
import android.graphics.drawable.Drawable;2
import android.view.View;2
import android.view.ViewGroup;2
import android.view.Window;2
import android.widget.TextView;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.plugins.inspector.descriptors.ActivityDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.ApplicationDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.DialogDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.DialogFragmentDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.DrawableDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.FragmentDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.ObjectDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.SupportDialogFragmentDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.SupportFragmentDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.TextViewDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.ViewDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.ViewGroupDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.WindowDescriptor;2
import java.util.HashMap;2
import java.util.Map;2
2
/**2
 * A mapping from classes to the object use to describe instances of a class. When looking for a2
 * descriptor to describe an object this classs will traverse the object's class hierarchy until it2
 * finds a matching descriptor instance.2
 */2
public class DescriptorMapping {2
  private Map<Class<?>, NodeDescriptor<?>> mMapping = new HashMap<>();2
2
  /**2
   * @return A DescriptorMapping initialized with default descriptors for java and Android classes.2
   */2
  public static DescriptorMapping withDefaults() {2
    final DescriptorMapping mapping = new DescriptorMapping();2
    mapping.register(Object.class, new ObjectDescriptor());2
    mapping.register(ApplicationWrapper.class, new ApplicationDescriptor());2
    mapping.register(Activity.class, new ActivityDescriptor());2
    mapping.register(Window.class, new WindowDescriptor());2
    mapping.register(ViewGroup.class, new ViewGroupDescriptor());2
    mapping.register(View.class, new ViewDescriptor());2
    mapping.register(TextView.class, new TextViewDescriptor());2
    mapping.register(Drawable.class, new DrawableDescriptor());2
    mapping.register(Dialog.class, new DialogDescriptor());2
    mapping.register(android.app.Fragment.class, new FragmentDescriptor());2
    mapping.register(android.support.v4.app.Fragment.class, new SupportFragmentDescriptor());2
    mapping.register(android.app.DialogFragment.class, new DialogFragmentDescriptor());2
    mapping.register(2
        android.support.v4.app.DialogFragment.class, new SupportDialogFragmentDescriptor());2
    return mapping;2
  }2
2
  /** Register a descriptor for a given class. */2
  public <T> void register(Class<T> clazz, NodeDescriptor<T> descriptor) {2
    mMapping.put(clazz, descriptor);2
  }2
2
  NodeDescriptor<?> descriptorForClass(Class<?> clazz) {2
    while (!mMapping.containsKey(clazz)) {2
      clazz = clazz.getSuperclass();2
    }2
    return mMapping.get(clazz);2
  }2
2
  void onConnect(SonarConnection connection) {2
    for (NodeDescriptor descriptor : mMapping.values()) {2
      descriptor.setConnection(connection);2
      descriptor.setDescriptorMapping(this);2
    }2
  }2
2
  void onDisconnect() {2
    for (NodeDescriptor descriptor : mMapping.values()) {2
      descriptor.setConnection(null);2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
/** Marker interface to identify nodes which should not be traversed. */2
public interface HiddenNode {}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.graphics.Rect;2
import android.graphics.drawable.Drawable;2
import android.os.Build;2
import android.view.View;2
2
/**2
 * A singleton instance of a overlay drawable used for highlighting node bounds. See {@link2
 * NodeDescriptor#setHighlighted(Object, boolean)}.2
 */2
public class HighlightedOverlay {2
  private static final boolean VIEW_OVERLAY_SUPPORT =2
      Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2;2
2
  /**2
   * Highlights a particular view with its content bounds, padding and margin dimensions2
   *2
   * @param targetView The view to apply the highlight on2
   * @param margin A {@link Rect} containing the margin values2
   * @param padding A {@link Rect} containing the padding values2
   * @param contentBounds The {@link Rect} bounds of the content, which includes padding2
   */2
  public static void setHighlighted(2
      View targetView, Rect margin, Rect padding, Rect contentBounds) {2
    if (!VIEW_OVERLAY_SUPPORT) {2
      return;2
    }2
2
    contentBounds.set(2
        contentBounds.left + padding.left,2
        contentBounds.top + padding.top,2
        contentBounds.right - padding.right,2
        contentBounds.bottom - padding.bottom);2
2
    padding = enclose(padding, contentBounds);2
    margin = enclose(margin, padding);2
2
    final float density = targetView.getContext().getResources().getDisplayMetrics().density;2
    final Drawable overlay = BoundsDrawable.getInstance(density, margin, padding, contentBounds);2
    targetView.getOverlay().add(overlay);2
  }2
2
  public static void removeHighlight(View targetView) {2
    if (!VIEW_OVERLAY_SUPPORT) {2
      return;2
    }2
2
    final float density = targetView.getContext().getResources().getDisplayMetrics().density;2
    final Drawable overlay = BoundsDrawable.getInstance(density);2
    targetView.getOverlay().remove(overlay);2
  }2
2
  private static Rect enclose(Rect parent, Rect child) {2
    return new Rect(2
        child.left - parent.left,2
        child.top - parent.top,2
        child.right + parent.right,2
        child.bottom + parent.bottom);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.app.Application;2
import android.content.Context;2
import android.view.MotionEvent;2
import android.view.View;2
import android.view.ViewGroup;2
import com.facebook.sonar.core.ErrorReportingRunnable;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarPlugin;2
import com.facebook.sonar.core.SonarReceiver;2
import com.facebook.sonar.core.SonarResponder;2
import com.facebook.sonar.plugins.common.MainThreadSonarReceiver;2
import com.facebook.sonar.plugins.console.iface.ConsoleCommandReceiver;2
import com.facebook.sonar.plugins.console.iface.NullScriptingEnvironment;2
import com.facebook.sonar.plugins.console.iface.ScriptingEnvironment;2
import java.util.ArrayList;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class InspectorSonarPlugin implements SonarPlugin {2
2
  private ApplicationWrapper mApplication;2
  private DescriptorMapping mDescriptorMapping;2
  private ObjectTracker mObjectTracker;2
  private ScriptingEnvironment mScriptingEnvironment;2
  private String mHighlightedId;2
  private TouchOverlayView mTouchOverlay;2
  private SonarConnection mConnection;2
2
  public InspectorSonarPlugin(2
      Context context,2
      DescriptorMapping descriptorMapping,2
      ScriptingEnvironment scriptingEnvironment) {2
    this(2
        new ApplicationWrapper((Application) context.getApplicationContext()),2
        descriptorMapping,2
        scriptingEnvironment);2
  }2
2
  public InspectorSonarPlugin(Context context, DescriptorMapping descriptorMapping) {2
    this(context, descriptorMapping, new NullScriptingEnvironment());2
  }2
2
  // Package visible for testing2
  InspectorSonarPlugin(2
      ApplicationWrapper wrapper,2
      DescriptorMapping descriptorMapping,2
      ScriptingEnvironment scriptingEnvironment) {2
    mDescriptorMapping = descriptorMapping;2
2
    mObjectTracker = new ObjectTracker();2
    mApplication = wrapper;2
    mScriptingEnvironment = scriptingEnvironment;2
  }2
2
  @Override2
  public String getId() {2
    return "Inspector";2
  }2
2
  @Override2
  public void onConnect(SonarConnection connection) throws Exception {2
    mConnection = connection;2
    mDescriptorMapping.onConnect(connection);2
2
    ConsoleCommandReceiver.listenForCommands(2
        connection,2
        mScriptingEnvironment,2
        new ConsoleCommandReceiver.ContextProvider() {2
          @Override2
          @Nullable2
          public Object getObjectForId(String id) {2
            return mObjectTracker.get(id);2
          }2
        });2
    connection.receive("getRoot", mGetRoot);2
    connection.receive("getNodes", mGetNodes);2
    connection.receive("setData", mSetData);2
    connection.receive("setHighlighted", mSetHighlighted);2
    connection.receive("setSearchActive", mSetSearchActive);2
    connection.receive("getSearchResults", mGetSearchResults);2
  }2
2
  @Override2
  public void onDisconnect() throws Exception {2
    if (mHighlightedId != null) {2
      setHighlighted(mHighlightedId, false);2
      mHighlightedId = null;2
    }2
2
    mObjectTracker.clear();2
    mDescriptorMapping.onDisconnect();2
    mConnection = null;2
  }2
2
  final SonarReceiver mGetRoot =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(SonarObject params, SonarResponder responder)2
            throws Exception {2
          responder.success(getNode(trackObject(mApplication)));2
        }2
      };2
2
  final SonarReceiver mGetNodes =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(final SonarObject params, final SonarResponder responder)2
            throws Exception {2
          final SonarArray ids = params.getArray("ids");2
          final SonarArray.Builder result = new SonarArray.Builder();2
2
          for (int i = 0, count = ids.length(); i < count; i++) {2
            final String id = ids.getString(i);2
            final SonarObject node = getNode(id);2
            if (node != null) {2
              result.put(node);2
            } else {2
              responder.error(2
                  new SonarObject.Builder()2
                      .put("message", "No node with given id")2
                      .put("id", id)2
                      .build());2
              return;2
            }2
          }2
2
          responder.success(new SonarObject.Builder().put("elements", result).build());2
        }2
      };2
2
  final SonarReceiver mSetData =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(final SonarObject params, SonarResponder responder)2
            throws Exception {2
          final String nodeId = params.getString("id");2
          final SonarArray keyPath = params.getArray("path");2
          final SonarDynamic value = params.getDynamic("value");2
2
          final Object obj = mObjectTracker.get(nodeId);2
          if (obj == null) {2
            return;2
          }2
2
          final NodeDescriptor<Object> descriptor = descriptorForObject(obj);2
          if (descriptor == null) {2
            return;2
          }2
2
          final int count = keyPath.length();2
          final String[] path = new String[count];2
          for (int i = 0; i < count; i++) {2
            path[i] = keyPath.getString(i);2
          }2
2
          descriptor.setValue(obj, path, value);2
        }2
      };2
2
  final SonarReceiver mSetHighlighted =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(final SonarObject params, SonarResponder responder)2
            throws Exception {2
          final String nodeId = params.getString("id");2
2
          if (mHighlightedId != null) {2
            setHighlighted(mHighlightedId, false);2
          }2
2
          if (nodeId != null) {2
            setHighlighted(nodeId, true);2
          }2
2
          mHighlightedId = nodeId;2
        }2
      };2
2
  final SonarReceiver mSetSearchActive =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(final SonarObject params, SonarResponder responder)2
            throws Exception {2
          final boolean active = params.getBoolean("active");2
          final List<View> roots = mApplication.getViewRoots();2
2
          ViewGroup root = null;2
          for (int i = roots.size() - 1; i >= 0; i--) {2
            if (roots.get(i) instanceof ViewGroup) {2
              root = (ViewGroup) roots.get(i);2
              break;2
            }2
          }2
2
          if (root != null) {2
            if (active) {2
              mTouchOverlay = new TouchOverlayView(root.getContext());2
              root.addView(mTouchOverlay);2
              root.bringChildToFront(mTouchOverlay);2
            } else {2
              root.removeView(mTouchOverlay);2
              mTouchOverlay = null;2
            }2
          }2
        }2
      };2
2
  final SonarReceiver mGetSearchResults =2
      new MainThreadSonarReceiver(mConnection) {2
        @Override2
        public void onReceiveOnMainThread(SonarObject params, SonarResponder responder)2
            throws Exception {2
          final String query = params.getString("query");2
          final SearchResultNode matchTree = searchTree(query.toLowerCase(), mApplication);2
          final SonarObject results = matchTree == null ? null : matchTree.toSonarObject();2
          final SonarObject response =2
              new SonarObject.Builder().put("results", results).put("query", query).build();2
          responder.success(response);2
        }2
      };2
2
  class TouchOverlayView extends View implements HiddenNode {2
    public TouchOverlayView(Context context) {2
      super(context);2
      setBackgroundColor(BoundsDrawable.COLOR_HIGHLIGHT_CONTENT);2
    }2
2
    @Override2
    public boolean onTouchEvent(final MotionEvent event) {2
      if (event.getAction() != MotionEvent.ACTION_UP) {2
        return true;2
      }2
2
      new ErrorReportingRunnable(mConnection) {2
        @Override2
        public void runOrThrow() throws Exception {2
          hitTest((int) event.getX(), (int) event.getY());2
        }2
      }.run();2
2
      return true;2
    }2
  }2
2
  void hitTest(final int touchX, final int touchY) throws Exception {2
    final SonarArray.Builder path = new SonarArray.Builder();2
    path.put(trackObject(mApplication));2
2
    final Touch touch =2
        new Touch() {2
          int x = touchX;2
          int y = touchY;2
          Object node = mApplication;2
2
          @Override2
          public void finish() {2
            mConnection.send("select", new SonarObject.Builder().put("path", path).build());2
          }2
2
          @Override2
          public void continueWithOffset(2
              final int childIndex, final int offsetX, final int offsetY) {2
            final Touch touch = this;2
2
            new ErrorReportingRunnable(mConnection) {2
              @Override2
              protected void runOrThrow() throws Exception {2
                x -= offsetX;2
                y -= offsetY;2
2
                node = assertNotNull(descriptorForObject(node).getChildAt(node, childIndex));2
                path.put(trackObject(node));2
2
                final NodeDescriptor<Object> descriptor = descriptorForObject(node);2
                descriptor.hitTest(node, touch);2
              }2
            }.run();2
          }2
2
          @Override2
          public boolean containedIn(int l, int t, int r, int b) {2
            return x >= l && x <= r && y >= t && y <= b;2
          }2
        };2
2
    final NodeDescriptor<Object> descriptor = descriptorForObject(mApplication);2
    descriptor.hitTest(mApplication, touch);2
  }2
2
  private void setHighlighted(final String id, final boolean highlighted) throws Exception {2
    final Object obj = mObjectTracker.get(id);2
    if (obj == null) {2
      return;2
    }2
2
    final NodeDescriptor<Object> descriptor = descriptorForObject(obj);2
    if (descriptor == null) {2
      return;2
    }2
2
    descriptor.setHighlighted(obj, highlighted);2
  }2
2
  public SearchResultNode searchTree(String query, Object obj) throws Exception {2
    final NodeDescriptor descriptor = descriptorForObject(obj);2
    List<SearchResultNode> childTrees = null;2
    boolean isMatch = descriptor.matches(query, obj);2
2
    for (int i = 0; i < descriptor.getChildCount(obj); i++) {2
      Object child = descriptor.getChildAt(obj, i);2
      SearchResultNode childNode = searchTree(query, child);2
      if (childNode != null) {2
        if (childTrees == null) {2
          childTrees = new ArrayList<>();2
        }2
        childTrees.add(childNode);2
      }2
    }2
2
    if (isMatch || childTrees != null) {2
      final String id = trackObject(obj);2
      return new SearchResultNode(id, isMatch, getNode(id), childTrees);2
    }2
    return null;2
  }2
2
  private @Nullable SonarObject getNode(String id) throws Exception {2
    final Object obj = mObjectTracker.get(id);2
    if (obj == null) {2
      return null;2
    }2
2
    final NodeDescriptor<Object> descriptor = descriptorForObject(obj);2
    if (descriptor == null) {2
      return null;2
    }2
2
    final SonarArray.Builder children = new SonarArray.Builder();2
    new ErrorReportingRunnable(mConnection) {2
      @Override2
      protected void runOrThrow() throws Exception {2
        for (int i = 0, count = descriptor.getChildCount(obj); i < count; i++) {2
          final Object child = assertNotNull(descriptor.getChildAt(obj, i));2
          children.put(trackObject(child));2
        }2
      }2
    }.run();2
2
    final SonarObject.Builder data = new SonarObject.Builder();2
    new ErrorReportingRunnable(mConnection) {2
      @Override2
      protected void runOrThrow() throws Exception {2
        for (Named<SonarObject> props : descriptor.getData(obj)) {2
          data.put(props.getName(), props.getValue());2
        }2
      }2
    }.run();2
2
    final SonarArray.Builder attributes = new SonarArray.Builder();2
    new ErrorReportingRunnable(mConnection) {2
      @Override2
      protected void runOrThrow() throws Exception {2
        for (Named<String> attribute : descriptor.getAttributes(obj)) {2
          attributes.put(2
              new SonarObject.Builder()2
                  .put("name", attribute.getName())2
                  .put("value", attribute.getValue())2
                  .build());2
        }2
      }2
    }.run();2
2
    return new SonarObject.Builder()2
        .put("id", descriptor.getId(obj))2
        .put("name", descriptor.getName(obj))2
        .put("data", data)2
        .put("children", children)2
        .put("attributes", attributes)2
        .put("decoration", descriptor.getDecoration(obj))2
        .build();2
  }2
2
  private String trackObject(Object obj) throws Exception {2
    final NodeDescriptor<Object> descriptor = descriptorForObject(obj);2
    final String id = descriptor.getId(obj);2
    final Object curr = mObjectTracker.get(id);2
    if (obj != curr) {2
      mObjectTracker.put(id, obj);2
      descriptor.init(obj);2
    }2
    return id;2
  }2
2
  private NodeDescriptor<Object> descriptorForObject(Object obj) {2
    final Class c = assertNotNull(obj).getClass();2
    return (NodeDescriptor<Object>) mDescriptorMapping.descriptorForClass(c);2
  }2
2
  private static Object assertNotNull(@Nullable Object o) {2
    if (o == null) {2
      throw new AssertionError("Unexpected null value");2
    }2
    return o;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarValue;2
2
public class InspectorValue<T> implements SonarValue {2
2
  /**2
   * Descrive the type of data this value contains. This will influence how values are parsed and2
   * displayed by the Sonar desktop app. For example colors will be parse as integers and displayed2
   * using hex values and be editable using a color picker.2
   *2
   * <p>Do not extends this list of types without adding support for the type in the desktop2
   * Inspector.2
   */2
  public static class Type<T> {2
2
    public static final Type Auto = new Type<>("auto");2
    public static final Type<String> Text = new Type<>("text");2
    public static final Type<Number> Number = new Type<>("number");2
    public static final Type<Boolean> Boolean = new Type<>("boolean");2
    public static final Type<String> Enum = new Type<>("enum");2
    public static final Type<Integer> Color = new Type<>("color");2
2
    private final String mName;2
2
    Type(String name) {2
      mName = name;2
    }2
2
    @Override2
    public String toString() {2
      return mName;2
    }2
  }2
2
  final Type<T> mType;2
  final T mValue;2
  final boolean mMutable;2
2
  private InspectorValue(Type<T> type, T value, boolean mutable) {2
    mType = type;2
    mValue = value;2
    mMutable = mutable;2
  }2
2
  public static <T> InspectorValue<T> mutable(Type<T> type, T value) {2
    return new InspectorValue<>(type, value, true);2
  }2
2
  public static <T> InspectorValue<T> immutable(Type<T> type, T value) {2
    return new InspectorValue<>(type, value, false);2
  }2
2
  public static InspectorValue mutable(Object value) {2
    return new InspectorValue<>(Type.Auto, value, true);2
  }2
2
  public static InspectorValue immutable(Object value) {2
    return new InspectorValue<>(Type.Auto, value, false);2
  }2
2
  @Override2
  public SonarObject toSonarObject() {2
    return new SonarObject.Builder()2
        .put("__type__", mType)2
        .put("__mutable__", mMutable)2
        .put("value", mValue)2
        .build();2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
public class Named<ValueType> {2
  private final String mName;2
  private final ValueType mValue;2
2
  public Named(String name, ValueType value) {2
    mName = name;2
    mValue = value;2
  }2
2
  public String getName() {2
    return mName;2
  }2
2
  public ValueType getValue() {2
    return mValue;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import java.util.List;2
2
/**2
 * A NodeDescriptor is an object which known how to expose an Object of type T to the ew Inspector.2
 * This class is the extension point for the Sonar inspector plugin and is how custom classes and2
 * data can be exposed to the inspector.2
 */2
public abstract class NodeDescriptor<T> {2
  private SonarConnection mConnection;2
  private DescriptorMapping mDescriptorMapping;2
2
  void setConnection(SonarConnection connection) {2
    mConnection = connection;2
  }2
2
  void setDescriptorMapping(DescriptorMapping descriptorMapping) {2
    mDescriptorMapping = descriptorMapping;2
  }2
2
  /**2
   * @return The descriptor for a given class. This is useful for when a descriptor wants to2
   *     delegate parts of its implementation to another descriptor, say the super class of the2
   *     object it describes. This is highly encouraged instead of subclassing another descriptor2
   *     class.2
   */2
  protected final NodeDescriptor<?> descriptorForClass(Class<?> clazz) {2
    return mDescriptorMapping.descriptorForClass(clazz);2
  }2
2
  /**2
   * Invalidate a node. This tells Sonar that this node is no longer valid and its properties and/or2
   * children have changed. This will trigger Sonar to re-query this node getting any new data.2
   */2
  protected final void invalidate(final T node) {2
    if (mConnection != null) {2
      new ErrorReportingRunnable() {2
        @Override2
        protected void runOrThrow() throws Exception {2
          SonarArray array =2
              new SonarArray.Builder()2
                  .put(new SonarObject.Builder().put("id", getId(node)).build())2
                  .build();2
          SonarObject params = new SonarObject.Builder().put("nodes", array).build();2
          mConnection.send("invalidate", params);2
        }2
      }.run();2
    }2
  }2
2
  protected final boolean connected() {2
    return mConnection != null;2
  }2
2
  protected abstract class ErrorReportingRunnable2
      extends com.facebook.sonar.core.ErrorReportingRunnable {2
    public ErrorReportingRunnable() {2
      super(mConnection);2
    }2
  }2
2
  /**2
   * Initialize a node. This implementation usually consists of setting up listeners to know when to2
   * call {@link NodeDescriptor#invalidate(Object)}.2
   */2
  public abstract void init(T node) throws Exception;2
2
  /**2
   * A globally unique ID used to identify a node in a hierarchy. If your node does not have a2
   * globally unique ID it is fine to rely on {@link System#identityHashCode(Object)}.2
   */2
  public abstract String getId(T node) throws Exception;2
2
  /**2
   * The name used to identify this node in the inspector. Does not need to be unique. A good2
   * default is to use the class name of the node.2
   */2
  public abstract String getName(T node) throws Exception;2
2
  /** @return The number of children this node exposes in the inspector. */2
  public abstract int getChildCount(T node) throws Exception;2
2
  /** @return The child at index. */2
  public abstract Object getChildAt(T node, int index) throws Exception;2
2
  /**2
   * Get the data to show for this node in the sidebar of the inspector. The object will be showen2
   * in order and with a header matching the given name.2
   */2
  public abstract List<Named<SonarObject>> getData(T node) throws Exception;2
2
  /**2
   * Set a value on the provided node at the given path. The path will match a key path in the data2
   * provided by {@link this#getData(Object)} and the value will be of the same type as the value2
   * mathcing that path in the returned object.2
   */2
  public abstract void setValue(T node, String[] path, SonarDynamic value) throws Exception;2
2
  /**2
   * Get the attributes for this node. This is a list of read-only string:string mapping which show2
   * up inline in the elements inspector. See {@link Named} for more information.2
   */2
  public abstract List<Named<String>> getAttributes(T node) throws Exception;2
2
  /**2
   * Highlight this node. Use {@link HighlightedOverlay} if possible. This is used to highlight a2
   * node which is selected in the inspector. The plugin automatically takes care of de-selecting2
   * the previously highlighted node.2
   */2
  public abstract void setHighlighted(T node, boolean selected) throws Exception;2
2
  /**2
   * Perform hit testing on the given node. Either continue the search in a child with {@link2
   * Touch#continueWithOffset(int, int, int)} or finish the hit testing on this node with {@link2
   * Touch#finish()}2
   */2
  public abstract void hitTest(T node, Touch touch) throws Exception;2
2
  /**2
   * @return A string indicating how this element should be decorated. Check with the Sonar desktop2
   *     app to see what values are supported.2
   */2
  public abstract String getDecoration(T node) throws Exception;2
2
  /**2
   * Test this node against a given query to see if it matches. This is used for finding search2
   * results.2
   */2
  public abstract boolean matches(String query, T node) throws Exception;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import java.lang.ref.WeakReference;2
import java.util.HashMap;2
import java.util.Map;2
import javax.annotation.Nullable;2
2
class ObjectTracker {2
  private final Map<String, WeakReference<Object>> mObjects = new HashMap<>();2
2
  void put(String id, Object obj) {2
    mObjects.put(id, new WeakReference<>(obj));2
  }2
2
  @Nullable2
  Object get(String id) {2
    final WeakReference<Object> weakObj = mObjects.get(id);2
    if (weakObj == null) {2
      return null;2
    }2
2
    final Object obj = weakObj.get();2
    if (obj == null) {2
      mObjects.remove(id);2
    }2
2
    return obj;2
  }2
2
  void clear() {2
    mObjects.clear();2
  }2
2
  boolean contains(String id) {2
    return mObjects.containsKey(id);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
import android.support.annotation.Nullable;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarObject;2
import java.util.List;2
2
public class SearchResultNode {2
2
  private final String id;2
  private final boolean isMatch;2
  private final SonarObject element;2
  @Nullable2
  private final List<SearchResultNode> children;2
2
  SearchResultNode(2
      String id, boolean isMatch, SonarObject element, @Nullable List<SearchResultNode> children) {2
    this.id = id;2
    this.isMatch = isMatch;2
    this.element = element;2
    this.children = children;2
  }2
2
  SonarObject toSonarObject() {2
    final SonarArray childArray;2
    if (children != null) {2
      final SonarArray.Builder builder = new SonarArray.Builder();2
      for (SearchResultNode child : children) {2
        builder.put(child.toSonarObject());2
      }2
      childArray = builder.build();2
    } else {2
      childArray = null;2
    }2
2
    return new SonarObject.Builder()2
        .put("id", this.id)2
        .put("isMatch", this.isMatch)2
        .put("element", this.element)2
        .put("children", childArray)2
        .build();2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
public abstract class SelfRegisteringNodeDescriptor<T> extends NodeDescriptor<T> {2
2
  public abstract void register(DescriptorMapping descriptorMapping);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector;2
2
/**2
 * Used to collect the path from the root node to the node at point [x, y]. This is used for2
 * creating a node path to the targeting node from the root when performing hit testing.2
 */2
public interface Touch {2
2
  /**2
   * Call this when the path has reached its destination. This should be called from the descriptor2
   * which described the leaf node containing [x, y].2
   */2
  void finish();2
2
  /**2
   * Continue hit testing in child at the given index. Offseting the touch location to the child's2
   * coordinate system.2
   */2
  void continueWithOffset(int childIndex, int offsetX, int offsetY);2
2
  /** @return Whether or not this Touch is contained within the provided bounds. */2
  boolean containedIn(int l, int t, int r, int b);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Activity;2
import android.view.Window;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.stetho.common.android.FragmentActivityAccessor;2
import com.facebook.stetho.common.android.FragmentCompat;2
import com.facebook.stetho.common.android.FragmentManagerAccessor;2
import java.util.ArrayList;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class ActivityDescriptor extends NodeDescriptor<Activity> {2
2
  @Override2
  public void init(Activity node) {}2
2
  @Override2
  public String getId(Activity node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Activity node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Activity node) {2
    return (node.getWindow() != null ? 1 : 0)2
        + getDialogFragments(FragmentCompat.getSupportLibInstance(), node).size()2
        + getDialogFragments(FragmentCompat.getFrameworkInstance(), node).size();2
  }2
2
  @Override2
  public Object getChildAt(Activity node, int index) {2
    if (node.getWindow() != null) {2
      if (index == 0) {2
        return node.getWindow();2
      } else {2
        index--;2
      }2
    }2
2
    final List dialogs = getDialogFragments(FragmentCompat.getSupportLibInstance(), node);2
    if (index < dialogs.size()) {2
      return dialogs.get(index);2
    } else {2
      final List supportDialogs = getDialogFragments(FragmentCompat.getFrameworkInstance(), node);2
      return supportDialogs.get(index - dialogs.size());2
    }2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Activity node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setValue(Activity node, String[] path, SonarDynamic value) throws Exception {}2
2
  @Override2
  public List<Named<String>> getAttributes(Activity node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(Activity node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Window.class);2
    descriptor.setHighlighted(node.getWindow(), selected);2
  }2
2
  @Override2
  public void hitTest(Activity node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(Activity obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Activity node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
2
  private static List<Object> getDialogFragments(FragmentCompat compat, Activity activity) {2
    if (compat == null || !compat.getFragmentActivityClass().isInstance(activity)) {2
      return Collections.EMPTY_LIST;2
    }2
2
    FragmentActivityAccessor activityAccessor = compat.forFragmentActivity();2
    Object fragmentManager = activityAccessor.getFragmentManager(activity);2
    if (fragmentManager == null) {2
      return Collections.EMPTY_LIST;2
    }2
2
    FragmentManagerAccessor fragmentManagerAccessor = compat.forFragmentManager();2
    List<Object> addedFragments = fragmentManagerAccessor.getAddedFragments(fragmentManager);2
    if (addedFragments == null) {2
      return Collections.EMPTY_LIST;2
    }2
2
    final List<Object> dialogFragments = new ArrayList<>();2
    for (int i = 0, N = addedFragments.size(); i < N; ++i) {2
      final Object fragment = addedFragments.get(i);2
      if (compat.getDialogFragmentClass().isInstance(fragment)) {2
        dialogFragments.add(fragment);2
      }2
    }2
2
    return dialogFragments;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Activity;2
import android.view.View;2
import android.view.ViewGroup;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.ApplicationWrapper;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class ApplicationDescriptor extends NodeDescriptor<ApplicationWrapper> {2
2
  private class NodeKey {2
    private int[] mKey;2
2
    boolean set(ApplicationWrapper node) {2
      final List<View> roots = node.getViewRoots();2
      final int childCount = roots.size();2
      final int[] key = new int[childCount];2
2
      for (int i = 0; i < childCount; i++) {2
        final View child = roots.get(i);2
        key[i] = System.identityHashCode(child);2
      }2
2
      boolean changed = false;2
      if (mKey == null) {2
        changed = true;2
      } else if (mKey.length != key.length) {2
        changed = true;2
      } else {2
        for (int i = 0; i < childCount; i++) {2
          if (mKey[i] != key[i]) {2
            changed = true;2
            break;2
          }2
        }2
      }2
2
      mKey = key;2
      return changed;2
    }2
  }2
2
  @Override2
  public void init(final ApplicationWrapper node) {2
    node.setListener(2
        new ApplicationWrapper.ActivityStackChangedListener() {2
          @Override2
          public void onActivityStackChanged(List<Activity> stack) {2
            invalidate(node);2
          }2
        });2
2
    final NodeKey key = new NodeKey();2
    final Runnable maybeInvalidate =2
        new NodeDescriptor.ErrorReportingRunnable() {2
          @Override2
          public void runOrThrow() throws Exception {2
            if (connected()) {2
              if (key.set(node)) {2
                invalidate(node);2
              }2
              node.postDelayed(this, 1000);2
            }2
          }2
        };2
2
    node.postDelayed(maybeInvalidate, 1000);2
  }2
2
  @Override2
  public String getId(ApplicationWrapper node) {2
    return node.getApplication().getPackageName();2
  }2
2
  @Override2
  public String getName(ApplicationWrapper node) {2
    return node.getApplication().getPackageName();2
  }2
2
  @Override2
  public int getChildCount(ApplicationWrapper node) {2
    return node.getViewRoots().size();2
  }2
2
  @Override2
  public Object getChildAt(ApplicationWrapper node, int index) {2
    final View view = node.getViewRoots().get(index);2
2
    for (Activity activity : node.getActivityStack()) {2
      if (activity.getWindow().getDecorView() == view) {2
        return activity;2
      }2
    }2
2
    return view;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(ApplicationWrapper node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setValue(ApplicationWrapper node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(ApplicationWrapper node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(ApplicationWrapper node, boolean selected) throws Exception {2
    final int childCount = getChildCount(node);2
    if (childCount > 0) {2
      final Object topChild = getChildAt(node, childCount - 1);2
      final NodeDescriptor descriptor = descriptorForClass(topChild.getClass());2
      descriptor.setHighlighted(topChild, selected);2
    }2
  }2
2
  @Override2
  public void hitTest(ApplicationWrapper node, Touch touch) {2
    final int childCount = getChildCount(node);2
2
    for (int i = childCount - 1; i >= 0; i--) {2
      final Object child = getChildAt(node, i);2
      if (child instanceof Activity || child instanceof ViewGroup) {2
        touch.continueWithOffset(i, 0, 0);2
        return;2
      }2
    }2
2
    touch.finish();2
  }2
2
  @Override2
  public @Nullable String getDecoration(ApplicationWrapper obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, ApplicationWrapper node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Dialog;2
import android.view.Window;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class DialogDescriptor extends NodeDescriptor<Dialog> {2
2
  @Override2
  public void init(Dialog node) {}2
2
  @Override2
  public String getId(Dialog node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Dialog node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Dialog node) {2
    return node.getWindow() == null ? 0 : 1;2
  }2
2
  @Override2
  public Object getChildAt(Dialog node, int index) {2
    return node.getWindow();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Dialog node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setValue(Dialog node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(Dialog node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(Dialog node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Window.class);2
    descriptor.setHighlighted(node.getWindow(), selected);2
  }2
2
  @Override2
  public void hitTest(Dialog node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(Dialog obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Dialog node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Dialog;2
import android.app.DialogFragment;2
import android.app.Fragment;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class DialogFragmentDescriptor extends NodeDescriptor<DialogFragment> {2
2
  @Override2
  public void init(DialogFragment node) {}2
2
  @Override2
  public String getId(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getId(node);2
  }2
2
  @Override2
  public String getName(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getName(node);2
  }2
2
  @Override2
  public int getChildCount(DialogFragment node) {2
    return node.getDialog() == null ? 0 : 1;2
  }2
2
  @Override2
  public Object getChildAt(DialogFragment node, int index) {2
    return node.getDialog();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getData(node);2
  }2
2
  @Override2
  public void setValue(DialogFragment node, String[] path, SonarDynamic value) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    descriptor.setValue(node, path, value);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getAttributes(node);2
  }2
2
  @Override2
  public void setHighlighted(DialogFragment node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Dialog.class);2
    if (node.getDialog() != null) {2
      descriptor.setHighlighted(node.getDialog(), selected);2
    }2
  }2
2
  @Override2
  public void hitTest(DialogFragment node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(DialogFragment obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, DialogFragment node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.graphics.Rect;2
import android.graphics.drawable.Drawable;2
import android.os.Build;2
import android.view.View;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.HighlightedOverlay;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.Arrays;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class DrawableDescriptor extends NodeDescriptor<Drawable> {2
2
  @Override2
  public void init(Drawable node) {}2
2
  @Override2
  public String getId(Drawable node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Drawable node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Drawable node) {2
    return 0;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(Drawable node, int index) {2
    return null;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Drawable node) {2
    final SonarObject.Builder props = new SonarObject.Builder();2
    final Rect bounds = node.getBounds();2
2
    props.put("left", InspectorValue.mutable(bounds.left));2
    props.put("top", InspectorValue.mutable(bounds.top));2
    props.put("right", InspectorValue.mutable(bounds.right));2
    props.put("bottom", InspectorValue.mutable(bounds.bottom));2
2
    if (hasAlphaSupport()) {2
      props.put("alpha", InspectorValue.mutable(node.getAlpha()));2
    }2
2
    return Arrays.asList(new Named<>("Drawable", props.build()));2
  }2
2
  @Override2
  public void setValue(Drawable node, String[] path, SonarDynamic value) {2
    final Rect bounds = node.getBounds();2
2
    switch (path[0]) {2
      case "Drawable":2
        switch (path[1]) {2
          case "left":2
            bounds.left = value.asInt();2
            node.setBounds(bounds);2
            break;2
          case "top":2
            bounds.top = value.asInt();2
            node.setBounds(bounds);2
            break;2
          case "right":2
            bounds.right = value.asInt();2
            node.setBounds(bounds);2
            break;2
          case "bottom":2
            bounds.bottom = value.asInt();2
            node.setBounds(bounds);2
            break;2
          case "alpha":2
            node.setAlpha(value.asInt());2
            break;2
        }2
        break;2
    }2
  }2
2
  private static boolean hasAlphaSupport() {2
    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(Drawable node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(Drawable node, boolean selected) {2
    // Ensure we handle wrapping drawable2
    Drawable.Callback callbacks = node.getCallback();2
    while (callbacks instanceof Drawable) {2
      callbacks = ((Drawable) callbacks).getCallback();2
    }2
2
    if (!(callbacks instanceof View)) {2
      return;2
    }2
2
    final View callbackView = (View) callbacks;2
    if (selected) {2
      final Rect zero = new Rect();2
      final Rect bounds = node.getBounds();2
      HighlightedOverlay.setHighlighted(callbackView, zero, zero, bounds);2
    } else {2
      HighlightedOverlay.removeHighlight(callbackView);2
    }2
  }2
2
  @Override2
  public void hitTest(Drawable node, Touch touch) {2
    touch.finish();2
  }2
2
  @Override2
  public @Nullable String getDecoration(Drawable obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Drawable node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Fragment;2
import android.os.Bundle;2
import android.view.View;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.stetho.common.android.ResourcesUtil;2
import java.util.Arrays;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class FragmentDescriptor extends NodeDescriptor<Fragment> {2
2
  @Override2
  public void init(Fragment node) {}2
2
  @Override2
  public String getId(Fragment node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Fragment node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Fragment node) {2
    return node.getView() == null ? 0 : 1;2
  }2
2
  @Override2
  public Object getChildAt(Fragment node, int index) {2
    return node.getView();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Fragment node) {2
    final Bundle args = node.getArguments();2
    if (args == null || args.isEmpty()) {2
      return Collections.EMPTY_LIST;2
    }2
2
    final SonarObject.Builder bundle = new SonarObject.Builder();2
2
    for (String key : args.keySet()) {2
      bundle.put(key, args.get(key));2
    }2
2
    return Arrays.asList(new Named<>("Arguments", bundle.build()));2
  }2
2
  @Override2
  public void setValue(Fragment node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(Fragment node) {2
    final String resourceId = getResourceId(node);2
2
    if (resourceId == null) {2
      return Collections.EMPTY_LIST;2
    }2
2
    return Arrays.asList(new Named<>("id", resourceId));2
  }2
2
  @Nullable2
  private static String getResourceId(Fragment node) {2
    final int id = node.getId();2
2
    if (id == View.NO_ID || node.getHost() == null) {2
      return null;2
    }2
2
    return ResourcesUtil.getIdStringQuietly(node.getContext(), node.getResources(), id);2
  }2
2
  @Override2
  public void setHighlighted(Fragment node, boolean selected) throws Exception {2
    if (node.getView() == null) {2
      return;2
    }2
2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.setHighlighted(node.getView(), selected);2
  }2
2
  @Override2
  public void hitTest(Fragment node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(Fragment obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Fragment node) throws Exception {2
    final String resourceId = getResourceId(node);2
2
    if (resourceId != null) {2
      if (resourceId.toLowerCase().contains(query)) {2
        return true;2
      }2
    }2
2
    final NodeDescriptor objectDescriptor = descriptorForClass(Object.class);2
    return objectDescriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class ObjectDescriptor extends NodeDescriptor<Object> {2
2
  @Override2
  public void init(Object node) {}2
2
  @Override2
  public String getId(Object node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Object node) {2
    return node.getClass().getName();2
  }2
2
  @Override2
  public int getChildCount(Object node) {2
    return 0;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(Object node, int index) {2
    return null;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Object node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setValue(Object node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(Object node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(Object node, boolean selected) {}2
2
  @Override2
  public void hitTest(Object node, Touch touch) {2
    touch.finish();2
  }2
2
  @Override2
  public @Nullable String getDecoration(Object obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Object node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(node.getClass());2
    final List<Named<String>> attributes = descriptor.getAttributes(node);2
    for (Named<String> namedString : attributes) {2
      if (namedString.getName().equals("id")) {2
        if (namedString.getValue().toLowerCase().contains(query)) {2
          return true;2
        }2
      }2
    }2
2
    return descriptor.getName(node).toLowerCase().contains(query);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.app.Dialog;2
import android.support.v4.app.DialogFragment;2
import android.support.v4.app.Fragment;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class SupportDialogFragmentDescriptor extends NodeDescriptor<DialogFragment> {2
2
  @Override2
  public void init(DialogFragment node) {}2
2
  @Override2
  public String getId(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getId(node);2
  }2
2
  @Override2
  public String getName(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getName(node);2
  }2
2
  @Override2
  public int getChildCount(DialogFragment node) {2
    return node.getDialog() == null ? 0 : 1;2
  }2
2
  @Override2
  public Object getChildAt(DialogFragment node, int index) {2
    return node.getDialog();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getData(node);2
  }2
2
  @Override2
  public void setValue(DialogFragment node, String[] path, SonarDynamic value) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    descriptor.setValue(node, path, value);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Fragment.class);2
    return descriptor.getAttributes(node);2
  }2
2
  @Override2
  public void setHighlighted(DialogFragment node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Dialog.class);2
    if (node.getDialog() != null) {2
      descriptor.setHighlighted(node.getDialog(), selected);2
    }2
  }2
2
  @Override2
  public void hitTest(DialogFragment node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(DialogFragment obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, DialogFragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.os.Bundle;2
import android.support.v4.app.Fragment;2
import android.view.View;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.stetho.common.android.ResourcesUtil;2
import java.util.Arrays;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class SupportFragmentDescriptor extends NodeDescriptor<Fragment> {2
2
  @Override2
  public void init(Fragment node) {}2
2
  @Override2
  public String getId(Fragment node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Fragment node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Fragment node) {2
    return node.getView() == null ? 0 : 1;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(Fragment node, int index) {2
    return node.getView();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Fragment node) {2
    final Bundle args = node.getArguments();2
    if (args == null || args.isEmpty()) {2
      return Collections.EMPTY_LIST;2
    }2
2
    final SonarObject.Builder bundle = new SonarObject.Builder();2
2
    for (String key : args.keySet()) {2
      bundle.put(key, args.get(key));2
    }2
2
    return Arrays.asList(new Named<>("Arguments", bundle.build()));2
  }2
2
  @Override2
  public void setValue(Fragment node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(Fragment node) {2
    final int id = node.getId();2
    if (id == View.NO_ID || node.getHost() == null) {2
      return Collections.EMPTY_LIST;2
    }2
2
    return Arrays.asList(2
        new Named<>(2
            "id", ResourcesUtil.getIdStringQuietly(node.getContext(), node.getResources(), id)));2
  }2
2
  @Override2
  public void setHighlighted(Fragment node, boolean selected) throws Exception {2
    if (node.getView() == null) {2
      return;2
    }2
2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.setHighlighted(node.getView(), selected);2
  }2
2
  @Override2
  public void hitTest(Fragment node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(Fragment obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Fragment node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Color;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Number;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Text;2
2
import android.view.View;2
import android.widget.TextView;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.ArrayList;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class TextViewDescriptor extends NodeDescriptor<TextView> {2
2
  @Override2
  public void init(TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.init(node);2
  }2
2
  @Override2
  public String getId(TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getId(node);2
  }2
2
  @Override2
  public String getName(TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getName(node);2
  }2
2
  @Override2
  public int getChildCount(TextView node) {2
    return 0;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(TextView node, int index) {2
    return null;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(TextView node) throws Exception {2
    final List<Named<SonarObject>> props = new ArrayList<>();2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
2
    props.add(2
        0,2
        new Named<>(2
            "TextView",2
            new SonarObject.Builder()2
                .put("text", InspectorValue.mutable(Text, node.getText().toString()))2
                .put(2
                    "textColor",2
                    InspectorValue.mutable(Color, node.getTextColors().getDefaultColor()))2
                .put("textSize", InspectorValue.mutable(Number, node.getTextSize()))2
                .build()));2
2
    props.addAll(descriptor.getData(node));2
2
    return props;2
  }2
2
  @Override2
  public void setValue(TextView node, String[] path, SonarDynamic value) throws Exception {2
    switch (path[0]) {2
      case "TextView":2
        switch (path[1]) {2
          case "text":2
            node.setText(value.asString());2
            break;2
          case "textColor":2
            node.setTextColor(value.asInt());2
            break;2
          case "textSize":2
            node.setTextSize(value.asInt());2
            break;2
        }2
        break;2
      default:2
        final NodeDescriptor descriptor = descriptorForClass(View.class);2
        descriptor.setValue(node, path, value);2
        break;2
    }2
    invalidate(node);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getAttributes(node);2
  }2
2
  @Override2
  public void setHighlighted(TextView node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.setHighlighted(node, selected);2
  }2
2
  @Override2
  public void hitTest(TextView node, Touch touch) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.hitTest(node, touch);2
  }2
2
  @Override2
  public @Nullable String getDecoration(TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getDecoration(node);2
  }2
2
  @Override2
  public boolean matches(String query, TextView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Color;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Enum;2
2
import android.annotation.TargetApi;2
import android.graphics.Rect;2
import android.graphics.drawable.ColorDrawable;2
import android.graphics.drawable.Drawable;2
import android.os.Build;2
import android.support.v4.view.MarginLayoutParamsCompat;2
import android.support.v4.view.ViewCompat;2
import android.util.SparseArray;2
import android.view.Gravity;2
import android.view.View;2
import android.view.View.OnClickListener;2
import android.view.ViewGroup;2
import android.view.ViewGroup.LayoutParams;2
import android.view.ViewGroup.MarginLayoutParams;2
import android.view.ViewParent;2
import android.widget.FrameLayout;2
import android.widget.LinearLayout;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.HighlightedOverlay;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.AccessibilityUtil;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.EnumMapping;2
import com.facebook.stetho.common.android.ResourcesUtil;2
import java.lang.reflect.Field;2
import java.util.ArrayList;2
import java.util.Arrays;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class ViewDescriptor extends NodeDescriptor<View> {2
2
  private static Field sKeyedTagsField;2
  private static Field sListenerInfoField;2
  private static Field sOnClickListenerField;2
2
  static {2
    try {2
      sKeyedTagsField = View.class.getDeclaredField("mKeyedTags");2
      sKeyedTagsField.setAccessible(true);2
2
      sListenerInfoField = View.class.getDeclaredField("mListenerInfo");2
      sListenerInfoField.setAccessible(true);2
2
      final String viewInfoClassName = View.class.getName() + "$ListenerInfo";2
      sOnClickListenerField = Class.forName(viewInfoClassName).getDeclaredField("mOnClickListener");2
      sOnClickListenerField.setAccessible(true);2
    } catch (Exception ignored) {2
    }2
  }2
2
  @Override2
  public void init(final View node) {}2
2
  @Override2
  public String getId(View node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(View node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(View node) {2
    return 0;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(View node, int index) {2
    return null;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(View node) {2
    final SonarObject.Builder viewProps =2
        new SonarObject.Builder()2
            .put("height", InspectorValue.mutable(node.getHeight()))2
            .put("width", InspectorValue.mutable(node.getWidth()))2
            .put("alpha", InspectorValue.mutable(node.getAlpha()))2
            .put("visibility", sVisibilityMapping.get(node.getVisibility()))2
            .put("background", fromDrawable(node.getBackground()))2
            .put("tag", InspectorValue.mutable(node.getTag()))2
            .put("keyedTags", getTags(node))2
            .put("layoutParams", getLayoutParams(node))2
            .put(2
                "state",2
                new SonarObject.Builder()2
                    .put("enabled", InspectorValue.mutable(node.isEnabled()))2
                    .put("activated", InspectorValue.mutable(node.isActivated()))2
                    .put("focused", node.isFocused())2
                    .put("selected", InspectorValue.mutable(node.isSelected())))2
            .put(2
                "bounds",2
                new SonarObject.Builder()2
                    .put("left", InspectorValue.mutable(node.getLeft()))2
                    .put("right", InspectorValue.mutable(node.getRight()))2
                    .put("top", InspectorValue.mutable(node.getTop()))2
                    .put("bottom", InspectorValue.mutable(node.getBottom())))2
            .put(2
                "padding",2
                new SonarObject.Builder()2
                    .put("left", InspectorValue.mutable(node.getPaddingLeft()))2
                    .put("top", InspectorValue.mutable(node.getPaddingTop()))2
                    .put("right", InspectorValue.mutable(node.getPaddingRight()))2
                    .put("bottom", InspectorValue.mutable(node.getPaddingBottom())))2
            .put(2
                "rotation",2
                new SonarObject.Builder()2
                    .put("x", InspectorValue.mutable(node.getRotationX()))2
                    .put("y", InspectorValue.mutable(node.getRotationY()))2
                    .put("z", InspectorValue.mutable(node.getRotation())))2
            .put(2
                "scale",2
                new SonarObject.Builder()2
                    .put("x", InspectorValue.mutable(node.getScaleX()))2
                    .put("y", InspectorValue.mutable(node.getScaleY())))2
            .put(2
                "pivot",2
                new SonarObject.Builder()2
                    .put("x", InspectorValue.mutable(node.getPivotX()))2
                    .put("y", InspectorValue.mutable(node.getPivotY())));2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {2
      viewProps2
          .put("layoutDirection", sLayoutDirectionMapping.get(node.getLayoutDirection()))2
          .put("textDirection", sTextDirectionMapping.get(node.getTextDirection()))2
          .put("textAlignment", sTextAlignmentMapping.get(node.getTextAlignment()));2
    }2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {2
      viewProps.put("elevation", InspectorValue.mutable(node.getElevation()));2
    }2
2
    SonarObject.Builder translation =2
        new SonarObject.Builder()2
            .put("x", InspectorValue.mutable(node.getTranslationX()))2
            .put("y", InspectorValue.mutable(node.getTranslationY()));2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {2
      translation.put("z", InspectorValue.mutable(node.getTranslationZ()));2
    }2
    viewProps.put("translation", translation);2
2
    SonarObject.Builder position =2
        new SonarObject.Builder()2
            .put("x", InspectorValue.mutable(node.getX()))2
            .put("y", InspectorValue.mutable(node.getY()));2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP_MR1) {2
      position.put("z", InspectorValue.mutable(node.getZ()));2
    }2
    viewProps.put("position", position);2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {2
      viewProps.put("foreground", fromDrawable(node.getForeground()));2
    }2
2
    return Arrays.asList(2
        new Named<>("View", viewProps.build()),2
        new Named<>("Accessibility", getAccessibilityData(node)));2
  }2
2
  private static SonarObject getAccessibilityData(View view) {2
    final SonarObject.Builder accessibilityProps = new SonarObject.Builder();2
2
    // This needs to be an empty string to be mutable. See t20470623.2
    CharSequence contentDescription =2
        view.getContentDescription() != null ? view.getContentDescription() : "";2
    accessibilityProps.put("content-description", InspectorValue.mutable(contentDescription));2
    accessibilityProps.put("focusable", InspectorValue.mutable(view.isFocusable()));2
    accessibilityProps.put("node-info", AccessibilityUtil.getAccessibilityNodeInfoProperties(view));2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {2
      accessibilityProps.put(2
          "important-for-accessibility",2
          AccessibilityUtil.sImportantForAccessibilityMapping.get(2
              view.getImportantForAccessibility()));2
    }2
2
    AccessibilityUtil.addTalkbackProperties(accessibilityProps, view);2
2
    return accessibilityProps.build();2
  }2
2
  @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)2
  @Override2
  public void setValue(View node, String[] path, SonarDynamic value) {2
    if (path[0].equals("Accessibility")) {2
      setAccessibilityValue(node, path, value);2
    }2
2
    if (!path[0].equals("View")) {2
      return;2
    }2
2
    switch (path[1]) {2
      case "elevation":2
        node.setElevation(value.asFloat());2
        break;2
      case "alpha":2
        node.setAlpha(value.asFloat());2
        break;2
      case "visibility":2
        node.setVisibility(sVisibilityMapping.get(value.asString()));2
        break;2
      case "layoutParams":2
        setLayoutParams(node, Arrays.copyOfRange(path, 1, path.length), value);2
        break;2
      case "layoutDirection":2
        node.setLayoutDirection(sLayoutDirectionMapping.get(value.asString()));2
        break;2
      case "textDirection":2
        node.setTextDirection(sTextDirectionMapping.get(value.asString()));2
        break;2
      case "textAlignment":2
        node.setTextAlignment(sTextAlignmentMapping.get(value.asString()));2
        break;2
      case "background":2
        node.setBackground(new ColorDrawable(value.asInt()));2
        break;2
      case "foreground":2
        node.setForeground(new ColorDrawable(value.asInt()));2
        break;2
      case "state":2
        switch (path[2]) {2
          case "enabled":2
            node.setEnabled(value.asBoolean());2
            break;2
          case "activated":2
            node.setActivated(value.asBoolean());2
            break;2
          case "selected":2
            node.setSelected(value.asBoolean());2
            break;2
        }2
        break;2
      case "bounds":2
        switch (path[2]) {2
          case "left":2
            node.setLeft(value.asInt());2
            break;2
          case "top":2
            node.setTop(value.asInt());2
            break;2
          case "right":2
            node.setRight(value.asInt());2
            break;2
          case "bottom":2
            node.setBottom(value.asInt());2
            break;2
        }2
        break;2
      case "padding":2
        switch (path[2]) {2
          case "left":2
            node.setPadding(2
                value.asInt(),2
                node.getPaddingTop(),2
                node.getPaddingRight(),2
                node.getPaddingBottom());2
            break;2
          case "top":2
            node.setPadding(2
                node.getPaddingLeft(),2
                value.asInt(),2
                node.getPaddingRight(),2
                node.getPaddingBottom());2
            break;2
          case "right":2
            node.setPadding(2
                node.getPaddingLeft(),2
                node.getPaddingTop(),2
                value.asInt(),2
                node.getPaddingBottom());2
            break;2
          case "bottom":2
            node.setPadding(2
                node.getPaddingLeft(), node.getPaddingTop(), node.getPaddingRight(), value.asInt());2
            break;2
        }2
        break;2
      case "rotation":2
        switch (path[2]) {2
          case "x":2
            node.setRotationX(value.asFloat());2
            break;2
          case "y":2
            node.setRotationY(value.asFloat());2
            break;2
          case "z":2
            node.setRotation(value.asFloat());2
            break;2
        }2
        break;2
      case "translation":2
        switch (path[2]) {2
          case "x":2
            node.setTranslationX(value.asFloat());2
            break;2
          case "y":2
            node.setTranslationY(value.asFloat());2
            break;2
          case "z":2
            node.setTranslationZ(value.asFloat());2
            break;2
        }2
        break;2
      case "position":2
        switch (path[2]) {2
          case "x":2
            node.setX(value.asFloat());2
            break;2
          case "y":2
            node.setY(value.asFloat());2
            break;2
          case "z":2
            node.setZ(value.asFloat());2
            break;2
        }2
        break;2
      case "scale":2
        switch (path[2]) {2
          case "x":2
            node.setScaleX(value.asFloat());2
            break;2
          case "y":2
            node.setScaleY(value.asFloat());2
            break;2
        }2
        break;2
      case "pivot":2
        switch (path[2]) {2
          case "x":2
            node.setPivotY(value.asFloat());2
            break;2
          case "y":2
            node.setPivotX(value.asFloat());2
            break;2
        }2
        break;2
      case "width":2
        LayoutParams lpw = node.getLayoutParams();2
        lpw.width = value.asInt();2
        node.setLayoutParams(lpw);2
        break;2
      case "height":2
        LayoutParams lph = node.getLayoutParams();2
        lph.height = value.asInt();2
        node.setLayoutParams(lph);2
        break;2
    }2
2
    invalidate(node);2
  }2
2
  private void setAccessibilityValue(View node, String[] path, SonarDynamic value) {2
    switch (path[1]) {2
      case "focusable":2
        node.setFocusable(value.asBoolean());2
        break;2
      case "important-for-accessibility":2
        node.setImportantForAccessibility(2
            AccessibilityUtil.sImportantForAccessibilityMapping.get(value.asString()));2
        break;2
      case "content-description":2
        node.setContentDescription(value.asString());2
        break;2
    }2
    invalidate(node);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(View node) throws Exception {2
    final List<Named<String>> attributes = new ArrayList<>();2
2
    final String resourceId = getResourceId(node);2
    if (resourceId != null) {2
      attributes.add(new Named<>("id", resourceId));2
    }2
2
    if (sListenerInfoField != null && sOnClickListenerField != null) {2
      final Object listenerInfo = sListenerInfoField.get(node);2
      if (listenerInfo != null) {2
        final OnClickListener clickListener =2
            (OnClickListener) sOnClickListenerField.get(listenerInfo);2
        if (clickListener != null) {2
          attributes.add(new Named<>("onClick", clickListener.getClass().getName()));2
        }2
      }2
    }2
2
    return attributes;2
  }2
2
  @Nullable2
  private static String getResourceId(View node) {2
    final int id = node.getId();2
2
    if (id == View.NO_ID) {2
      return null;2
    }2
2
    return ResourcesUtil.getIdStringQuietly(node.getContext(), node.getResources(), id);2
  }2
2
  @Override2
  public void setHighlighted(View node, boolean selected) {2
    // We need to figure out whether the given View has a parent View since margins are not2
    // included within a View's bounds. So, in order to display the margin values for a particular2
    // view, we need to apply an overlay on its parent rather than itself.2
    final View targetView;2
    final ViewParent parent = node.getParent();2
    if (parent instanceof View) {2
      targetView = (View) parent;2
    } else {2
      targetView = node;2
    }2
2
    if (!selected) {2
      HighlightedOverlay.removeHighlight(targetView);2
      return;2
    }2
2
    final Rect padding =2
        new Rect(2
            ViewCompat.getPaddingStart(node),2
            node.getPaddingTop(),2
            ViewCompat.getPaddingEnd(node),2
            node.getPaddingBottom());2
2
    final Rect margin;2
    final ViewGroup.LayoutParams params = node.getLayoutParams();2
    if (params instanceof ViewGroup.MarginLayoutParams) {2
      final ViewGroup.MarginLayoutParams marginParams = (ViewGroup.MarginLayoutParams) params;2
      margin =2
          new Rect(2
              MarginLayoutParamsCompat.getMarginStart(marginParams),2
              marginParams.topMargin,2
              MarginLayoutParamsCompat.getMarginEnd(marginParams),2
              marginParams.bottomMargin);2
    } else {2
      margin = new Rect();2
    }2
2
    final int left = node.getLeft();2
    final int top = node.getTop();2
    final Rect contentBounds = new Rect(left, top, left + node.getWidth(), top + node.getHeight());2
    if (targetView == node) {2
      // If the View doesn't have a parent View that we're applying the overlay to, then2
      // we need to ensure that it is aligned to 0, 0, rather than its relative location to its2
      // parent2
      contentBounds.offset(-left, -top);2
    }2
2
    HighlightedOverlay.setHighlighted(targetView, margin, padding, contentBounds);2
  }2
2
  @Override2
  public void hitTest(View node, Touch touch) {2
    touch.finish();2
  }2
2
  @Override2
  public @Nullable String getDecoration(View obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, View node) throws Exception {2
    final String resourceId = getResourceId(node);2
2
    if (resourceId != null && resourceId.toLowerCase().contains(query)) {2
      return true;2
    }2
2
    final NodeDescriptor objectDescriptor = descriptorForClass(Object.class);2
    return objectDescriptor.matches(query, node);2
  }2
2
  private SonarObject getTags(final View node) {2
    final SonarObject.Builder tags = new SonarObject.Builder();2
    if (sKeyedTagsField == null) {2
      return tags.build();2
    }2
2
    new ErrorReportingRunnable() {2
      @Override2
      protected void runOrThrow() throws Exception {2
        final SparseArray keyedTags = (SparseArray) sKeyedTagsField.get(node);2
        if (keyedTags != null) {2
          for (int i = 0, count = keyedTags.size(); i < count; i++) {2
            final String id =2
                ResourcesUtil.getIdStringQuietly(2
                    node.getContext(), node.getResources(), keyedTags.keyAt(i));2
            tags.put(id, keyedTags.valueAt(i));2
          }2
        }2
      }2
    }.run();2
2
    return tags.build();2
  }2
2
  private static InspectorValue fromDrawable(Drawable d) {2
    if (d instanceof ColorDrawable) {2
      return InspectorValue.mutable(Color, ((ColorDrawable) d).getColor());2
    }2
    return InspectorValue.mutable(Color, 0);2
  }2
2
  private static SonarObject getLayoutParams(View node) {2
    final LayoutParams layoutParams = node.getLayoutParams();2
    final SonarObject.Builder params = new SonarObject.Builder();2
2
    params.put("width", fromSize(layoutParams.width));2
    params.put("height", fromSize(layoutParams.height));2
2
    if (layoutParams instanceof MarginLayoutParams) {2
      final MarginLayoutParams marginLayoutParams = (MarginLayoutParams) layoutParams;2
      params.put(2
          "margin",2
          new SonarObject.Builder()2
              .put("left", InspectorValue.mutable(marginLayoutParams.leftMargin))2
              .put("top", InspectorValue.mutable(marginLayoutParams.topMargin))2
              .put("right", InspectorValue.mutable(marginLayoutParams.rightMargin))2
              .put("bottom", InspectorValue.mutable(marginLayoutParams.bottomMargin)));2
    }2
2
    if (layoutParams instanceof FrameLayout.LayoutParams) {2
      final FrameLayout.LayoutParams frameLayoutParams = (FrameLayout.LayoutParams) layoutParams;2
      params.put("gravity", sGravityMapping.get(frameLayoutParams.gravity));2
    }2
2
    if (layoutParams instanceof LinearLayout.LayoutParams) {2
      final LinearLayout.LayoutParams linearLayoutParams = (LinearLayout.LayoutParams) layoutParams;2
      params2
          .put("weight", InspectorValue.mutable(linearLayoutParams.weight))2
          .put("gravity", sGravityMapping.get(linearLayoutParams.gravity));2
    }2
2
    return params.build();2
  }2
2
  private void setLayoutParams(View node, String[] path, SonarDynamic value) {2
    final LayoutParams params = node.getLayoutParams();2
2
    switch (path[0]) {2
      case "width":2
        params.width = toSize(value.asString());2
        break;2
      case "height":2
        params.height = toSize(value.asString());2
        break;2
      case "weight":2
        final LinearLayout.LayoutParams linearParams = (LinearLayout.LayoutParams) params;2
        linearParams.weight = value.asFloat();2
        break;2
    }2
2
    if (params instanceof MarginLayoutParams) {2
      final MarginLayoutParams marginParams = (MarginLayoutParams) params;2
2
      switch (path[0]) {2
        case "margin":2
          switch (path[1]) {2
            case "left":2
              marginParams.leftMargin = value.asInt();2
              break;2
            case "top":2
              marginParams.topMargin = value.asInt();2
              break;2
            case "right":2
              marginParams.rightMargin = value.asInt();2
              break;2
            case "bottom":2
              marginParams.bottomMargin = value.asInt();2
              break;2
          }2
          break;2
      }2
    }2
2
    if (params instanceof FrameLayout.LayoutParams) {2
      final FrameLayout.LayoutParams frameLayoutParams = (FrameLayout.LayoutParams) params;2
2
      switch (path[0]) {2
        case "gravity":2
          frameLayoutParams.gravity = sGravityMapping.get(value.asString());2
          break;2
      }2
    }2
2
    if (params instanceof LinearLayout.LayoutParams) {2
      final LinearLayout.LayoutParams linearParams = (LinearLayout.LayoutParams) params;2
2
      switch (path[0]) {2
        case "weight":2
          linearParams.weight = value.asFloat();2
          break;2
        case "gravity":2
          linearParams.gravity = sGravityMapping.get(value.asString());2
          break;2
      }2
    }2
2
    node.setLayoutParams(params);2
  }2
2
  private static InspectorValue fromSize(int size) {2
    switch (size) {2
      case LayoutParams.WRAP_CONTENT:2
        return InspectorValue.mutable(Enum, "WRAP_CONTENT");2
      case LayoutParams.MATCH_PARENT:2
        return InspectorValue.mutable(Enum, "MATCH_PARENT");2
      default:2
        return InspectorValue.mutable(Enum, Integer.toString(size));2
    }2
  }2
2
  private static int toSize(String size) {2
    switch (size) {2
      case "WRAP_CONTENT":2
        return LayoutParams.WRAP_CONTENT;2
      case "MATCH_PARENT":2
        return LayoutParams.MATCH_PARENT;2
      default:2
        return Integer.parseInt(size);2
    }2
  }2
2
  private static final EnumMapping sVisibilityMapping =2
      new EnumMapping("VISIBLE") {2
        {2
          put("VISIBLE", View.VISIBLE);2
          put("INVISIBLE", View.INVISIBLE);2
          put("GONE", View.GONE);2
        }2
      };2
2
  private static final EnumMapping sLayoutDirectionMapping =2
      new EnumMapping("LAYOUT_DIRECTION_INHERIT") {2
        {2
          put("LAYOUT_DIRECTION_INHERIT", View.LAYOUT_DIRECTION_INHERIT);2
          put("LAYOUT_DIRECTION_LOCALE", View.LAYOUT_DIRECTION_LOCALE);2
          put("LAYOUT_DIRECTION_LTR", View.LAYOUT_DIRECTION_LTR);2
          put("LAYOUT_DIRECTION_RTL", View.LAYOUT_DIRECTION_RTL);2
        }2
      };2
2
  private static final EnumMapping sTextDirectionMapping =2
      new EnumMapping("TEXT_DIRECTION_INHERIT") {2
        {2
          put("TEXT_DIRECTION_INHERIT", View.TEXT_DIRECTION_INHERIT);2
          put("TEXT_DIRECTION_FIRST_STRONG", View.TEXT_DIRECTION_FIRST_STRONG);2
          put("TEXT_DIRECTION_ANY_RTL", View.TEXT_DIRECTION_ANY_RTL);2
          put("TEXT_DIRECTION_LTR", View.TEXT_DIRECTION_LTR);2
          put("TEXT_DIRECTION_RTL", View.TEXT_DIRECTION_RTL);2
          put("TEXT_DIRECTION_LOCALE", View.TEXT_DIRECTION_LOCALE);2
          put("TEXT_DIRECTION_FIRST_STRONG_LTR", View.TEXT_DIRECTION_FIRST_STRONG_LTR);2
          put("TEXT_DIRECTION_FIRST_STRONG_RTL", View.TEXT_DIRECTION_FIRST_STRONG_RTL);2
        }2
      };2
2
  private static final EnumMapping sTextAlignmentMapping =2
      new EnumMapping("TEXT_ALIGNMENT_INHERIT") {2
        {2
          put("TEXT_ALIGNMENT_INHERIT", View.TEXT_ALIGNMENT_INHERIT);2
          put("TEXT_ALIGNMENT_GRAVITY", View.TEXT_ALIGNMENT_GRAVITY);2
          put("TEXT_ALIGNMENT_TEXT_START", View.TEXT_ALIGNMENT_TEXT_START);2
          put("TEXT_ALIGNMENT_TEXT_END", View.TEXT_ALIGNMENT_TEXT_END);2
          put("TEXT_ALIGNMENT_CENTER", View.TEXT_ALIGNMENT_CENTER);2
          put("TEXT_ALIGNMENT_VIEW_START", View.TEXT_ALIGNMENT_VIEW_START);2
          put("TEXT_ALIGNMENT_VIEW_END", View.TEXT_ALIGNMENT_VIEW_END);2
        }2
      };2
2
  private static final EnumMapping sGravityMapping =2
      new EnumMapping("NO_GRAVITY") {2
        {2
          put("NO_GRAVITY", Gravity.NO_GRAVITY);2
          put("LEFT", Gravity.LEFT);2
          put("TOP", Gravity.TOP);2
          put("RIGHT", Gravity.RIGHT);2
          put("BOTTOM", Gravity.BOTTOM);2
          put("CENTER", Gravity.CENTER);2
          put("CENTER_VERTICAL", Gravity.CENTER_VERTICAL);2
          put("FILL_VERTICAL", Gravity.FILL_VERTICAL);2
          put("CENTER_HORIZONTAL", Gravity.CENTER_HORIZONTAL);2
          put("FILL_HORIZONTAL", Gravity.FILL_HORIZONTAL);2
        }2
      };2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import static android.support.v4.view.ViewGroupCompat.LAYOUT_MODE_CLIP_BOUNDS;2
import static android.support.v4.view.ViewGroupCompat.LAYOUT_MODE_OPTICAL_BOUNDS;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Boolean;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Enum;2
2
import android.os.Build;2
import android.view.View;2
import android.view.ViewGroup;2
import com.facebook.sonar.R;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.HiddenNode;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.stetho.common.android.FragmentCompatUtil;2
import java.util.ArrayList;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class ViewGroupDescriptor extends NodeDescriptor<ViewGroup> {2
2
  private class NodeKey {2
    private int[] mKey;2
2
    boolean set(ViewGroup node) {2
      final int childCount = node.getChildCount();2
      final int[] key = new int[childCount];2
2
      for (int i = 0; i < childCount; i++) {2
        final View child = node.getChildAt(i);2
        key[i] = System.identityHashCode(child);2
      }2
2
      boolean changed = false;2
      if (mKey == null) {2
        changed = true;2
      } else if (mKey.length != key.length) {2
        changed = true;2
      } else {2
        for (int i = 0; i < childCount; i++) {2
          if (mKey[i] != key[i]) {2
            changed = true;2
            break;2
          }2
        }2
      }2
2
      mKey = key;2
      return changed;2
    }2
  }2
2
  @Override2
  public void init(final ViewGroup node) {2
    final NodeKey key = new NodeKey();2
2
    final Runnable maybeInvalidate =2
        new ErrorReportingRunnable() {2
          @Override2
          public void runOrThrow() throws Exception {2
            if (connected()) {2
              if (key.set(node)) {2
                invalidate(node);2
              }2
2
              final boolean hasAttachedToWindow =2
                  Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;2
              if (!hasAttachedToWindow || node.isAttachedToWindow()) {2
                node.postDelayed(this, 1000);2
              }2
            }2
          }2
        };2
2
    node.postDelayed(maybeInvalidate, 1000);2
  }2
2
  @Override2
  public String getId(ViewGroup node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getId(node);2
  }2
2
  @Override2
  public String getName(ViewGroup node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getName(node);2
  }2
2
  @Override2
  public int getChildCount(ViewGroup node) {2
    int childCount = 0;2
    for (int i = 0, count = node.getChildCount(); i < count; i++) {2
      if (!(node.getChildAt(i) instanceof HiddenNode)) {2
        childCount++;2
      }2
    }2
    return childCount;2
  }2
2
  @Override2
  public @Nullable Object getChildAt(ViewGroup node, int index) {2
    for (int i = 0, count = node.getChildCount(); i < count; i++) {2
      final View child = node.getChildAt(i);2
      if (child instanceof HiddenNode) {2
        continue;2
      }2
2
      if (i >= index) {2
        final Object fragment = getAttachedFragmentForView(child);2
        if (fragment != null && !FragmentCompatUtil.isDialogFragment(fragment)) {2
          return fragment;2
        }2
2
        return child;2
      }2
    }2
    return null;2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(ViewGroup node) throws Exception {2
    final List<Named<SonarObject>> props = new ArrayList<>();2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
2
    final SonarObject.Builder vgProps = new SonarObject.Builder();2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {2
      vgProps2
          .put(2
              "layoutMode",2
              InspectorValue.mutable(2
                  Enum,2
                  node.getLayoutMode() == LAYOUT_MODE_CLIP_BOUNDS2
                      ? "LAYOUT_MODE_CLIP_BOUNDS"2
                      : "LAYOUT_MODE_OPTICAL_BOUNDS"))2
          .put("clipChildren", InspectorValue.mutable(Boolean, node.getClipChildren()));2
    }2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {2
      vgProps.put("clipToPadding", InspectorValue.mutable(Boolean, node.getClipToPadding()));2
    }2
2
    props.add(0, new Named<>("ViewGroup", vgProps.build()));2
2
    props.addAll(descriptor.getData(node));2
2
    return props;2
  }2
2
  @Override2
  public void setValue(ViewGroup node, String[] path, SonarDynamic value) throws Exception {2
    switch (path[0]) {2
      case "ViewGroup":2
        switch (path[1]) {2
          case "layoutMode":2
            switch (value.asString()) {2
              case "LAYOUT_MODE_CLIP_BOUNDS":2
                node.setLayoutMode(LAYOUT_MODE_CLIP_BOUNDS);2
                break;2
              case "LAYOUT_MODE_OPTICAL_BOUNDS":2
                node.setLayoutMode(LAYOUT_MODE_OPTICAL_BOUNDS);2
                break;2
              default:2
                node.setLayoutMode(-1);2
                break;2
            }2
            break;2
          case "clipChildren":2
            node.setClipChildren(value.asBoolean());2
            break;2
          case "clipToPadding":2
            node.setClipToPadding(value.asBoolean());2
            break;2
        }2
        break;2
      default:2
        final NodeDescriptor descriptor = descriptorForClass(View.class);2
        descriptor.setValue(node, path, value);2
        break;2
    }2
    invalidate(node);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(ViewGroup node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    return descriptor.getAttributes(node);2
  }2
2
  @Override2
  public void setHighlighted(ViewGroup node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.setHighlighted(node, selected);2
  }2
2
  @Override2
  public void hitTest(ViewGroup node, Touch touch) {2
    for (int i = node.getChildCount() - 1; i >= 0; i--) {2
      final View child = node.getChildAt(i);2
      if (child instanceof HiddenNode2
          || child.getVisibility() != View.VISIBLE2
          || shouldSkip(child)) {2
        continue;2
      }2
2
      final int scrollX = node.getScrollX();2
      final int scrollY = node.getScrollY();2
2
      final int left = (child.getLeft() + (int) child.getTranslationX()) - scrollX;2
      final int top = (child.getTop() + (int) child.getTranslationY()) - scrollY;2
      final int right = (child.getRight() + (int) child.getTranslationX()) - scrollX;2
      final int bottom = (child.getBottom() + (int) child.getTranslationY()) - scrollY;2
2
      final boolean hit = touch.containedIn(left, top, right, bottom);2
2
      if (hit) {2
        touch.continueWithOffset(i, left, top);2
        return;2
      }2
    }2
2
    touch.finish();2
  }2
2
  private static boolean shouldSkip(View view) {2
    Object tag = view.getTag(R.id.sonar_skip_view_traversal);2
    if (!(tag instanceof Boolean)) {2
      return false;2
    }2
2
    return (Boolean) tag;2
  }2
2
  @Override2
  public @Nullable String getDecoration(ViewGroup obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, ViewGroup node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
2
  private static Object getAttachedFragmentForView(View v) {2
    try {2
      final Object fragment = FragmentCompatUtil.findFragmentForView(v);2
      boolean added = false;2
      if (fragment instanceof android.app.Fragment) {2
        added = ((android.app.Fragment) fragment).isAdded();2
      } else if (fragment instanceof android.support.v4.app.Fragment) {2
        added = ((android.support.v4.app.Fragment) fragment).isAdded();2
      }2
2
      return added ? fragment : null;2
    } catch (RuntimeException e) {2
      return null;2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import android.view.View;2
import android.view.Window;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.Collections;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public class WindowDescriptor extends NodeDescriptor<Window> {2
2
  @Override2
  public void init(Window node) {}2
2
  @Override2
  public String getId(Window node) {2
    return Integer.toString(System.identityHashCode(node));2
  }2
2
  @Override2
  public String getName(Window node) {2
    return node.getClass().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(Window node) {2
    return 1;2
  }2
2
  @Override2
  public Object getChildAt(Window node, int index) {2
    return node.getDecorView();2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(Window node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setValue(Window node, String[] path, SonarDynamic value) {}2
2
  @Override2
  public List<Named<String>> getAttributes(Window node) {2
    return Collections.EMPTY_LIST;2
  }2
2
  @Override2
  public void setHighlighted(Window node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(View.class);2
    descriptor.setHighlighted(node.getDecorView(), selected);2
  }2
2
  @Override2
  public void hitTest(Window node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public @Nullable String getDecoration(Window obj) {2
    return null;2
  }2
2
  @Override2
  public boolean matches(String query, Window node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import android.graphics.Rect;2
import android.support.v4.view.ViewCompat;2
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;2
import android.text.TextUtils;2
import android.view.View;2
import android.view.ViewGroup;2
import android.view.ViewParent;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;2
import java.util.List;2
import javax.annotation.Nullable;2
2
/**2
 * This class provides utility methods for determining certain accessibility properties of {@link2
 * View}s and {@link AccessibilityNodeInfoCompat}s. It is porting some of the checks from {@link2
 * com.googlecode.eyesfree.utils.AccessibilityNodeInfoUtils}, but has stripped many features which2
 * are unnecessary here.2
 */2
public class AccessibilityEvaluationUtil {2
2
  private AccessibilityEvaluationUtil() {}2
2
  /**2
   * Returns whether the specified node has text or a content description.2
   *2
   * @param node The node to check.2
   * @return {@code true} if the node has text.2
   */2
  public static boolean hasText(@Nullable AccessibilityNodeInfoCompat node) {2
    return node != null2
        && node.getCollectionInfo() == null2
        && (!TextUtils.isEmpty(node.getText()) || !TextUtils.isEmpty(node.getContentDescription()));2
  }2
2
  /**2
   * Returns whether the supplied {@link View} and {@link AccessibilityNodeInfoCompat} would produce2
   * spoken feedback if it were accessibility focused. NOTE: not all speaking nodes are focusable.2
   *2
   * @param view The {@link View} to evaluate2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if it meets the criterion for producing spoken feedback2
   */2
  public static boolean isSpeakingNode(2
      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {2
    if (node == null || view == null) {2
      return false;2
    }2
2
    final int important = ViewCompat.getImportantForAccessibility(view);2
    if (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS2
        || (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO && node.getChildCount() <= 0)) {2
      return false;2
    }2
2
    return node.isCheckable() || hasText(node) || hasNonActionableSpeakingDescendants(node, view);2
  }2
2
  /**2
   * Determines if the supplied {@link View} and {@link AccessibilityNodeInfoCompat} has any2
   * children which are not independently accessibility focusable and also have a spoken2
   * description.2
   *2
   * <p>NOTE: Accessibility services will include these children's descriptions in the closest2
   * focusable ancestor.2
   *2
   * @param view The {@link View} to evaluate2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if it has any non-actionable speaking descendants within its subtree2
   */2
  public static boolean hasNonActionableSpeakingDescendants(2
      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {2
2
    if (node == null || view == null || !(view instanceof ViewGroup)) {2
      return false;2
    }2
2
    final ViewGroup viewGroup = (ViewGroup) view;2
    for (int i = 0, count = viewGroup.getChildCount(); i < count; i++) {2
      final View childView = viewGroup.getChildAt(i);2
2
      if (childView == null) {2
        continue;2
      }2
2
      final AccessibilityNodeInfoCompat childNode = AccessibilityNodeInfoCompat.obtain();2
      try {2
        ViewCompat.onInitializeAccessibilityNodeInfo(childView, childNode);2
2
        if (!node.isVisibleToUser()) {2
          continue;2
        }2
2
        if (isAccessibilityFocusable(childNode, childView)) {2
          continue;2
        }2
2
        if (isSpeakingNode(childNode, childView)) {2
          return true;2
        }2
      } finally {2
        if (childNode != null) {2
          childNode.recycle();2
        }2
      }2
    }2
2
    return false;2
  }2
2
  /**2
   * Determines if the provided {@link View} and {@link AccessibilityNodeInfoCompat} meet the2
   * criteria for gaining accessibility focus.2
   *2
   * <p>Note: this is evaluating general focusability by accessibility services, and does not mean2
   * this view will be guaranteed to be focused by specific services such as Talkback. For Talkback2
   * focusability, see {@link #isTalkbackFocusable(View)}2
   *2
   * @param view The {@link View} to evaluate2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if it is possible to gain accessibility focus2
   */2
  public static boolean isAccessibilityFocusable(2
      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {2
    if (node == null || view == null) {2
      return false;2
    }2
2
    // Never focus invisible nodes.2
    if (!node.isVisibleToUser()) {2
      return false;2
    }2
2
    // Always focus "actionable" nodes.2
    if (isActionableForAccessibility(node)) {2
      return true;2
    }2
2
    // only focus top-level list items with non-actionable speaking children.2
    return isTopLevelScrollItem(node, view) && isSpeakingNode(node, view);2
  }2
2
  /**2
   * Determines whether the provided {@link View} and {@link AccessibilityNodeInfoCompat} is a2
   * top-level item in a scrollable container.2
   *2
   * @param view The {@link View} to evaluate2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if it is a top-level item in a scrollable container.2
   */2
  public static boolean isTopLevelScrollItem(2
      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {2
    if (node == null || view == null) {2
      return false;2
    }2
2
    final View parent = (View) ViewCompat.getParentForAccessibility(view);2
    if (parent == null) {2
      return false;2
    }2
2
    if (node.isScrollable()) {2
      return true;2
    }2
2
    final List actionList = node.getActionList();2
    if (actionList.contains(AccessibilityNodeInfoCompat.ACTION_SCROLL_FORWARD)2
        || actionList.contains(AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD)) {2
      return true;2
    }2
2
    // Top-level items in a scrolling pager are actually two levels down since the first2
    // level items in pagers are the pages themselves.2
    View grandparent = (View) ViewCompat.getParentForAccessibility(parent);2
    if (grandparent != null2
        && AccessibilityRoleUtil.getRole(grandparent) == AccessibilityRole.PAGER) {2
      return true;2
    }2
2
    AccessibilityRole parentRole = AccessibilityRoleUtil.getRole(parent);2
    return parentRole == AccessibilityRole.LIST2
        || parentRole == AccessibilityRole.GRID2
        || parentRole == AccessibilityRole.SCROLL_VIEW2
        || parentRole == AccessibilityRole.HORIZONTAL_SCROLL_VIEW;2
  }2
2
  /**2
   * Returns whether a node is actionable. That is, the node supports one of {@link2
   * AccessibilityNodeInfoCompat#isClickable()}, {@link AccessibilityNodeInfoCompat#isFocusable()},2
   * or {@link AccessibilityNodeInfoCompat#isLongClickable()}.2
   *2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if node is actionable.2
   */2
  public static boolean isActionableForAccessibility(@Nullable AccessibilityNodeInfoCompat node) {2
    if (node == null) {2
      return false;2
    }2
2
    if (node.isClickable() || node.isLongClickable() || node.isFocusable()) {2
      return true;2
    }2
2
    final List actionList = node.getActionList();2
    return actionList.contains(AccessibilityNodeInfoCompat.ACTION_CLICK)2
        || actionList.contains(AccessibilityNodeInfoCompat.ACTION_LONG_CLICK)2
        || actionList.contains(AccessibilityNodeInfoCompat.ACTION_FOCUS);2
  }2
2
  /**2
   * Determines if any of the provided {@link View}'s and {@link AccessibilityNodeInfoCompat}'s2
   * ancestors can receive accessibility focus2
   *2
   * @param view The {@link View} to evaluate2
   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate2
   * @return {@code true} if an ancestor of may receive accessibility focus2
   */2
  public static boolean hasFocusableAncestor(2
      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {2
    if (node == null || view == null) {2
      return false;2
    }2
2
    final ViewParent parentView = ViewCompat.getParentForAccessibility(view);2
    if (!(parentView instanceof View)) {2
      return false;2
    }2
2
    final AccessibilityNodeInfoCompat parentNode = AccessibilityNodeInfoCompat.obtain();2
    try {2
      ViewCompat.onInitializeAccessibilityNodeInfo((View) parentView, parentNode);2
      if (parentNode == null) {2
        return false;2
      }2
2
      if (hasEqualBoundsToViewRoot(parentNode, (View) parentView)2
          && parentNode.getChildCount() > 0) {2
        return false;2
      }2
2
      if (isAccessibilityFocusable(parentNode, (View) parentView)) {2
        return true;2
      }2
2
      if (hasFocusableAncestor(parentNode, (View) parentView)) {2
        return true;2
      }2
    } finally {2
      parentNode.recycle();2
    }2
    return false;2
  }2
2
  /**2
   * Returns whether a one given view is a descendant of another.2
   *2
   * @param view The {@link View} to evaluate2
   * @param potentialAncestor The potential ancestor {@link View}2
   * @return {@code true} if view is a descendant of potentialAncestor2
   */2
  private static boolean viewIsDescendant(View view, View potentialAncestor) {2
    ViewParent parent = view.getParent();2
    while (parent != null) {2
      if (parent == potentialAncestor) {2
        return true;2
      }2
      parent = parent.getParent();2
    }2
2
    return false;2
  }2
2
  /**2
   * Returns whether a View has the same size and position as its View Root.2
   *2
   * @param view The {@link View} to evaluate2
   * @return {@code true} if view has equal bounds2
   */2
  public static boolean hasEqualBoundsToViewRoot(AccessibilityNodeInfoCompat node, View view) {2
    AndroidRootResolver rootResolver = new AndroidRootResolver();2
    List<AndroidRootResolver.Root> roots = rootResolver.listActiveRoots();2
    if (roots != null) {2
      for (AndroidRootResolver.Root root : roots) {2
        if (view == root.view) {2
          return true;2
        }2
2
        if (viewIsDescendant(view, root.view)) {2
          Rect nodeBounds = new Rect();2
          node.getBoundsInScreen(nodeBounds);2
2
          Rect viewRootBounds = new Rect();2
          viewRootBounds.set(2
              root.param.x,2
              root.param.y,2
              root.param.width + root.param.x,2
              root.param.height + root.param.y);2
2
          return nodeBounds.equals(viewRootBounds);2
        }2
      }2
    }2
    return false;2
  }2
2
  /**2
   * Returns whether a given {@link View} will be focusable by Google's TalkBack screen reader.2
   *2
   * @param view The {@link View} to evaluate.2
   * @return {@code boolean} if the view will be ignored by TalkBack.2
   */2
  public static boolean isTalkbackFocusable(View view) {2
    if (view == null) {2
      return false;2
    }2
2
    final int important = ViewCompat.getImportantForAccessibility(view);2
    if (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO2
        || important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS) {2
      return false;2
    }2
2
    // Go all the way up the tree to make sure no parent has hidden its descendants2
    ViewParent parent = view.getParent();2
    while (parent instanceof View) {2
      if (ViewCompat.getImportantForAccessibility((View) parent)2
          == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS) {2
        return false;2
      }2
      parent = parent.getParent();2
    }2
2
    final AccessibilityNodeInfoCompat node = ViewAccessibilityHelper.createNodeInfoFromView(view);2
    if (node == null) {2
      return false;2
    }2
2
    // Non-leaf nodes identical in size to their View Root should not be focusable.2
    if (hasEqualBoundsToViewRoot(node, view) && node.getChildCount() > 0) {2
      return false;2
    }2
2
    try {2
      if (!node.isVisibleToUser()) {2
        return false;2
      }2
2
      if (isAccessibilityFocusable(node, view)) {2
        if (node.getChildCount() <= 0) {2
          // Leaves that are accessibility focusable are never ignored, even if they don't have a2
          // speakable description2
          return true;2
        } else if (isSpeakingNode(node, view)) {2
          // Node is focusable and has something to speak2
          return true;2
        }2
2
        // Node is focusable and has nothing to speak2
        return false;2
      }2
2
      // if view is not accessibility focusable, it needs to have text and no focusable ancestors.2
      if (!hasText(node)) {2
        return false;2
      }2
2
      if (!hasFocusableAncestor(node, view)) {2
        return true;2
      }2
2
      return false;2
    } finally {2
      node.recycle();2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import android.support.v4.view.ViewCompat;2
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;2
import android.view.View;2
import android.view.accessibility.AccessibilityNodeInfo;2
import javax.annotation.Nullable;2
2
/**2
 * Utility class that handles the addition of a "role" for accessibility to either a View or2
 * AccessibilityNodeInfo.2
 */2
public class AccessibilityRoleUtil {2
2
  /**2
   * These roles are defined by Google's TalkBack screen reader, and this list should be kept up to2
   * date with their implementation. Details can be seen in their source code here:2
   *2
   * <p>https://github.com/google/talkback/blob/master/utils/src/main/java/Role.java2
   */2
  public enum AccessibilityRole {2
    NONE(null),2
    BUTTON("android.widget.Button"),2
    CHECK_BOX("android.widget.CompoundButton"),2
    DROP_DOWN_LIST("android.widget.Spinner"),2
    EDIT_TEXT("android.widget.EditText"),2
    GRID("android.widget.GridView"),2
    IMAGE("android.widget.ImageView"),2
    IMAGE_BUTTON("android.widget.ImageView"),2
    LIST("android.widget.AbsListView"),2
    PAGER("android.support.v4.view.ViewPager"),2
    RADIO_BUTTON("android.widget.RadioButton"),2
    SEEK_CONTROL("android.widget.SeekBar"),2
    SWITCH("android.widget.Switch"),2
    TAB_BAR("android.widget.TabWidget"),2
    TOGGLE_BUTTON("android.widget.ToggleButton"),2
    VIEW_GROUP("android.view.ViewGroup"),2
    WEB_VIEW("android.webkit.WebView"),2
    CHECKED_TEXT_VIEW("android.widget.CheckedTextView"),2
    PROGRESS_BAR("android.widget.ProgressBar"),2
    ACTION_BAR_TAB("android.app.ActionBar$Tab"),2
    DRAWER_LAYOUT("android.support.v4.widget.DrawerLayout"),2
    SLIDING_DRAWER("android.widget.SlidingDrawer"),2
    ICON_MENU("com.android.internal.view.menu.IconMenuView"),2
    TOAST("android.widget.Toast$TN"),2
    DATE_PICKER_DIALOG("android.app.DatePickerDialog"),2
    TIME_PICKER_DIALOG("android.app.TimePickerDialog"),2
    DATE_PICKER("android.widget.DatePicker"),2
    TIME_PICKER("android.widget.TimePicker"),2
    NUMBER_PICKER("android.widget.NumberPicker"),2
    SCROLL_VIEW("android.widget.ScrollView"),2
    HORIZONTAL_SCROLL_VIEW("android.widget.HorizontalScrollView"),2
    KEYBOARD_KEY("android.inputmethodservice.Keyboard$Key");2
2
    @Nullable private final String mValue;2
2
    AccessibilityRole(String type) {2
      mValue = type;2
    }2
2
    @Nullable2
    public String getValue() {2
      return mValue;2
    }2
2
    public static AccessibilityRole fromValue(String value) {2
      for (AccessibilityRole role : AccessibilityRole.values()) {2
        if (role.getValue() != null && role.getValue().equals(value)) {2
          return role;2
        }2
      }2
      return AccessibilityRole.NONE;2
    }2
  }2
2
  private AccessibilityRoleUtil() {2
    // No instances2
  }2
2
  public static AccessibilityRole getRole(View view) {2
    AccessibilityNodeInfoCompat nodeInfo = AccessibilityNodeInfoCompat.obtain();2
    ViewCompat.onInitializeAccessibilityNodeInfo(view, nodeInfo);2
    AccessibilityRole role = getRole(nodeInfo);2
    nodeInfo.recycle();2
    return role;2
  }2
2
  public static AccessibilityRole getRole(AccessibilityNodeInfo nodeInfo) {2
    return getRole(new AccessibilityNodeInfoCompat(nodeInfo));2
  }2
2
  public static AccessibilityRole getRole(AccessibilityNodeInfoCompat nodeInfo) {2
    AccessibilityRole role = AccessibilityRole.fromValue((String) nodeInfo.getClassName());2
    if (role.equals(AccessibilityRole.IMAGE_BUTTON) || role.equals(AccessibilityRole.IMAGE)) {2
      return nodeInfo.isClickable() ? AccessibilityRole.IMAGE_BUTTON : AccessibilityRole.IMAGE;2
    }2
2
    if (role.equals(AccessibilityRole.NONE)) {2
      AccessibilityNodeInfoCompat.CollectionInfoCompat collection = nodeInfo.getCollectionInfo();2
      if (collection != null) {2
        // RecyclerView will be classified as a list or grid.2
        if (collection.getRowCount() > 1 && collection.getColumnCount() > 1) {2
          return AccessibilityRole.GRID;2
        } else {2
          return AccessibilityRole.LIST;2
        }2
      }2
    }2
2
    return role;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import static android.content.Context.ACCESSIBILITY_SERVICE;2
2
import android.content.Context;2
import android.graphics.Rect;2
import android.os.Build;2
import android.support.v4.view.ViewCompat;2
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;2
import android.text.TextUtils;2
import android.view.View;2
import android.view.ViewGroup;2
import android.view.ViewParent;2
import android.view.accessibility.AccessibilityManager;2
import android.widget.EditText;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarObject;2
import javax.annotation.Nullable;2
2
/**2
 * This class provides utility methods for determining certain accessibility properties of {@link2
 * View}s and {@link AccessibilityNodeInfoCompat}s. It is porting some of the checks from {@link2
 * com.googlecode.eyesfree.utils.AccessibilityNodeInfoUtils}, but has stripped many features which2
 * are unnecessary here.2
 */2
public final class AccessibilityUtil {2
  private AccessibilityUtil() {}2
2
  public static final EnumMapping sAccessibilityActionMapping =2
      new EnumMapping("UNKNOWN") {2
        {2
          put("FOCUS", AccessibilityNodeInfoCompat.ACTION_FOCUS);2
          put("CLEAR_FOCUS", AccessibilityNodeInfoCompat.ACTION_CLEAR_FOCUS);2
          put("SELECT", AccessibilityNodeInfoCompat.ACTION_SELECT);2
          put("CLEAR_SELECTION", AccessibilityNodeInfoCompat.ACTION_CLEAR_SELECTION);2
          put("CLICK", AccessibilityNodeInfoCompat.ACTION_CLICK);2
          put("LONG_CLICK", AccessibilityNodeInfoCompat.ACTION_LONG_CLICK);2
          put("ACCESSIBILITY_FOCUS", AccessibilityNodeInfoCompat.ACTION_ACCESSIBILITY_FOCUS);2
          put(2
              "CLEAR_ACCESSIBILITY_FOCUS",2
              AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS);2
          put(2
              "NEXT_AT_MOVEMENT_GRANULARITY",2
              AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY);2
          put(2
              "PREVIOUS_AT_MOVEMENT_GRANULARITY",2
              AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY);2
          put("NEXT_HTML_ELEMENT", AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT);2
          put("PREVIOUS_HTML_ELEMENT", AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT);2
          put("SCROLL_FORWARD", AccessibilityNodeInfoCompat.ACTION_SCROLL_FORWARD);2
          put("SCROLL_BACKWARD", AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD);2
          put("CUT", AccessibilityNodeInfoCompat.ACTION_CUT);2
          put("COPY", AccessibilityNodeInfoCompat.ACTION_COPY);2
          put("PASTE", AccessibilityNodeInfoCompat.ACTION_PASTE);2
          put("SET_SELECTION", AccessibilityNodeInfoCompat.ACTION_SET_SELECTION);2
          put("SET_SELECTION", AccessibilityNodeInfoCompat.ACTION_SET_SELECTION);2
          put("EXPAND", AccessibilityNodeInfoCompat.ACTION_EXPAND);2
          put("COLLAPSE", AccessibilityNodeInfoCompat.ACTION_COLLAPSE);2
          put("DISMISS", AccessibilityNodeInfoCompat.ACTION_DISMISS);2
          put("SET_TEXT", AccessibilityNodeInfoCompat.ACTION_SET_TEXT);2
        }2
      };2
2
  public static final EnumMapping sImportantForAccessibilityMapping =2
      new EnumMapping("AUTO") {2
        {2
          put("AUTO", View.IMPORTANT_FOR_ACCESSIBILITY_AUTO);2
          put("NO", View.IMPORTANT_FOR_ACCESSIBILITY_NO);2
          put("YES", View.IMPORTANT_FOR_ACCESSIBILITY_YES);2
          put("NO_HIDE_DESCENDANTS", View.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS);2
        }2
      };2
2
  /**2
   * Given a {@link Context}, determine if any accessibility service is running.2
   *2
   * @param context The {@link Context} used to get the {@link AccessibilityManager}.2
   * @return {@code true} if an accessibility service is currently running.2
   */2
  public static boolean isAccessibilityEnabled(Context context) {2
    return ((AccessibilityManager) context.getSystemService(ACCESSIBILITY_SERVICE)).isEnabled();2
  }2
2
  /**2
   * Returns a sentence describing why a given {@link View} will be ignored by Google's TalkBack2
   * screen reader.2
   *2
   * @param view The {@link View} to evaluate.2
   * @return {@code String} describing why a {@link View} is ignored.2
   */2
  public static String getTalkbackIgnoredReasons(View view) {2
    final int important = ViewCompat.getImportantForAccessibility(view);2
2
    if (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO) {2
      return "View has importantForAccessibility set to 'NO'.";2
    }2
2
    if (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS) {2
      return "View has importantForAccessibility set to 'NO_HIDE_DESCENDANTS'.";2
    }2
2
    ViewParent parent = view.getParent();2
    while (parent instanceof View) {2
      if (ViewCompat.getImportantForAccessibility((View) parent)2
          == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS) {2
        return "An ancestor View has importantForAccessibility set to 'NO_HIDE_DESCENDANTS'.";2
      }2
      parent = parent.getParent();2
    }2
2
    final AccessibilityNodeInfoCompat node = ViewAccessibilityHelper.createNodeInfoFromView(view);2
    if (node == null) {2
      return "AccessibilityNodeInfo cannot be found.";2
    }2
2
    try {2
      if (AccessibilityEvaluationUtil.hasEqualBoundsToViewRoot(node, view)) {2
        return "View has the same dimensions as the View Root.";2
      }2
2
      if (!node.isVisibleToUser()) {2
        return "View is not visible.";2
      }2
2
      if (AccessibilityEvaluationUtil.isAccessibilityFocusable(node, view)) {2
        return "View is actionable, but has no description.";2
      }2
2
      if (AccessibilityEvaluationUtil.hasText(node)) {2
        return "View is not actionable, and an ancestor View has co-opted its description.";2
      }2
2
      return "View is not actionable and has no description.";2
    } finally {2
      node.recycle();2
    }2
  }2
2
  /**2
   * Returns a sentence describing why a given {@link View} will be focusable by Google's TalkBack2
   * screen reader.2
   *2
   * @param view The {@link View} to evaluate.2
   * @return {@code String} describing why a {@link View} is focusable.2
   */2
  @Nullable2
  public static String getTalkbackFocusableReasons(View view) {2
    final AccessibilityNodeInfoCompat node = ViewAccessibilityHelper.createNodeInfoFromView(view);2
    if (node == null) {2
      return null;2
    }2
    try {2
      final boolean hasText = AccessibilityEvaluationUtil.hasText(node);2
      final boolean isCheckable = node.isCheckable();2
      final boolean hasNonActionableSpeakingDescendants =2
          AccessibilityEvaluationUtil.hasNonActionableSpeakingDescendants(node, view);2
2
      if (AccessibilityEvaluationUtil.isActionableForAccessibility(node)) {2
        if (node.getChildCount() <= 0) {2
          return "View is actionable and has no children.";2
        } else if (hasText) {2
          return "View is actionable and has a description.";2
        } else if (isCheckable) {2
          return "View is actionable and checkable.";2
        } else if (hasNonActionableSpeakingDescendants) {2
          return "View is actionable and has non-actionable descendants with descriptions.";2
        }2
      }2
2
      if (AccessibilityEvaluationUtil.isTopLevelScrollItem(node, view)) {2
        if (hasText) {2
          return "View is a direct child of a scrollable container and has a description.";2
        } else if (isCheckable) {2
          return "View is a direct child of a scrollable container and is checkable.";2
        } else if (hasNonActionableSpeakingDescendants) {2
          return "View is a direct child of a scrollable container and has non-actionable "2
              + "descendants with descriptions.";2
        }2
      }2
2
      if (hasText) {2
        return "View has a description and is not actionable, but has no actionable ancestor.";2
      }2
2
      return null;2
    } finally {2
      node.recycle();2
    }2
  }2
2
  /**2
   * Creates the text that Gogole's TalkBack screen reader will read aloud for a given {@link View}.2
   * This may be any combination of the {@link View}'s {@code text}, {@code contentDescription}, and2
   * the {@code text} and {@code contentDescription} of any ancestor {@link View}.2
   *2
   * <p>Note: This string does not include any additional semantic information that Talkback will2
   * read, such as "Button", or "disabled".2
   *2
   * @param view The {@link View} to evaluate.2
   * @return {@code String} describing why a {@link View} is focusable.2
   */2
  @Nullable2
  public static CharSequence getTalkbackDescription(View view) {2
    final AccessibilityNodeInfoCompat node = ViewAccessibilityHelper.createNodeInfoFromView(view);2
    if (node == null) {2
      return null;2
    }2
    try {2
      final CharSequence contentDescription = node.getContentDescription();2
      final CharSequence nodeText = node.getText();2
2
      final boolean hasNodeText = !TextUtils.isEmpty(nodeText);2
      final boolean isEditText = view instanceof EditText;2
2
      // EditText's prioritize their own text content over a contentDescription2
      if (!TextUtils.isEmpty(contentDescription) && (!isEditText || !hasNodeText)) {2
        return contentDescription;2
      }2
2
      if (hasNodeText) {2
        return nodeText;2
      }2
2
      // If there are child views and no contentDescription the text of all non-focusable children,2
      // comma separated, becomes the description.2
      if (view instanceof ViewGroup) {2
        final StringBuilder concatChildDescription = new StringBuilder();2
        final String separator = ", ";2
        final ViewGroup viewGroup = (ViewGroup) view;2
2
        for (int i = 0, count = viewGroup.getChildCount(); i < count; i++) {2
          final View child = viewGroup.getChildAt(i);2
2
          final AccessibilityNodeInfoCompat childNodeInfo = AccessibilityNodeInfoCompat.obtain();2
          ViewCompat.onInitializeAccessibilityNodeInfo(child, childNodeInfo);2
2
          CharSequence childNodeDescription = null;2
          if (AccessibilityEvaluationUtil.isSpeakingNode(childNodeInfo, child)2
              && !AccessibilityEvaluationUtil.isAccessibilityFocusable(childNodeInfo, child)) {2
            childNodeDescription = getTalkbackDescription(child);2
          }2
2
          if (!TextUtils.isEmpty(childNodeDescription)) {2
            if (concatChildDescription.length() > 0) {2
              concatChildDescription.append(separator);2
            }2
            concatChildDescription.append(childNodeDescription);2
          }2
          childNodeInfo.recycle();2
        }2
2
        return concatChildDescription.length() > 0 ? concatChildDescription.toString() : null;2
      }2
2
      return null;2
    } finally {2
      node.recycle();2
    }2
  }2
2
  /**2
   * Creates a {@link SonarObject} of useful properties of AccessibilityNodeInfo, to be shown in the2
   * Sonar Layout Inspector. All properties are immutable since they are all derived from various2
   * {@link View} properties.2
   *2
   * @param view The {@link View} to derive the AccessibilityNodeInfo properties from.2
   * @return {@link SonarObject} containing the properties.2
   */2
  @Nullable2
  public static SonarObject getAccessibilityNodeInfoProperties(View view) {2
    final AccessibilityNodeInfoCompat nodeInfo =2
        ViewAccessibilityHelper.createNodeInfoFromView(view);2
    if (nodeInfo == null) {2
      return null;2
    }2
2
    final SonarObject.Builder nodeInfoProps = new SonarObject.Builder();2
    final Rect bounds = new Rect();2
2
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {2
      final SonarArray.Builder actionsArrayBuilder = new SonarArray.Builder();2
      for (AccessibilityNodeInfoCompat.AccessibilityActionCompat action :2
          nodeInfo.getActionList()) {2
        final String actionLabel = (String) action.getLabel();2
        if (actionLabel != null) {2
          actionsArrayBuilder.put(actionLabel);2
        } else {2
          actionsArrayBuilder.put(2
              AccessibilityUtil.sAccessibilityActionMapping.get(action.getId(), false));2
        }2
      }2
      nodeInfoProps.put("actions", actionsArrayBuilder.build());2
    }2
2
    nodeInfoProps2
        .put("clickable", nodeInfo.isClickable())2
        .put("content-description", nodeInfo.getContentDescription())2
        .put("text", nodeInfo.getText())2
        .put("focused", nodeInfo.isAccessibilityFocused())2
        .put("long-clickable", nodeInfo.isLongClickable())2
        .put("focusable", nodeInfo.isFocusable());2
2
    nodeInfo.getBoundsInParent(bounds);2
    nodeInfoProps.put(2
        "parent-bounds",2
        new SonarObject.Builder()2
            .put("width", bounds.width())2
            .put("height", bounds.height())2
            .put("top", bounds.top)2
            .put("left", bounds.left)2
            .put("bottom", bounds.bottom)2
            .put("right", bounds.right));2
2
    nodeInfo.getBoundsInScreen(bounds);2
    nodeInfoProps.put(2
        "screen-bounds",2
        new SonarObject.Builder()2
            .put("width", bounds.width())2
            .put("height", bounds.height())2
            .put("top", bounds.top)2
            .put("left", bounds.left)2
            .put("bottom", bounds.bottom)2
            .put("right", bounds.right));2
2
    nodeInfo.recycle();2
2
    return nodeInfoProps.build();2
  }2
2
  /**2
   * Modifies a {@link SonarObject.Builder} to add Talkback-specific Accessibiltiy properties to be2
   * shown in the Sonar Layout Inspector.2
   *2
   * @param props The {@link SonarObject.Builder} to add the properties to.2
   * @param view The {@link View} to derive the properties from.2
   */2
  public static void addTalkbackProperties(SonarObject.Builder props, View view) {2
    if (!AccessibilityEvaluationUtil.isTalkbackFocusable(view)) {2
      props2
          .put("talkback-ignored", true)2
          .put("talkback-ignored-reasons", getTalkbackIgnoredReasons(view));2
    } else {2
      props2
          .put("talkback-focusable", true)2
          .put("talkback-focusable-reasons", getTalkbackFocusableReasons(view))2
          .put("talkback-description", getTalkbackDescription(view));2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import static android.view.WindowManager.LayoutParams;2
2
import android.os.Build;2
import android.view.View;2
import java.lang.reflect.Field;2
import java.lang.reflect.InvocationTargetException;2
import java.lang.reflect.Method;2
import java.util.ArrayList;2
import java.util.Arrays;2
import java.util.List;2
import javax.annotation.Nullable;2
2
public final class AndroidRootResolver {2
2
  private static final String WINDOW_MANAGER_IMPL_CLAZZ = "android.view.WindowManagerImpl";2
  private static final String WINDOW_MANAGER_GLOBAL_CLAZZ = "android.view.WindowManagerGlobal";2
  private static final String VIEWS_FIELD = "mViews";2
  private static final String WINDOW_PARAMS_FIELD = "mParams";2
  private static final String GET_DEFAULT_IMPL = "getDefault";2
  private static final String GET_GLOBAL_INSTANCE = "getInstance";2
2
  private boolean initialized;2
  private Object windowManagerObj;2
  private Field viewsField;2
  private Field paramsField;2
2
  public static class Root {2
    public final View view;2
    public final LayoutParams param;2
2
    private Root(View view, LayoutParams param) {2
      this.view = view;2
      this.param = param;2
    }2
  }2
2
  public @Nullable List<Root> listActiveRoots() {2
    if (!initialized) {2
      initialize();2
    }2
2
    if (null == windowManagerObj) {2
      return null;2
    }2
2
    if (null == viewsField) {2
      return null;2
    }2
    if (null == paramsField) {2
      return null;2
    }2
2
    List<View> views = null;2
    List<LayoutParams> params = null;2
2
    try {2
      if (Build.VERSION.SDK_INT < 19) {2
        views = Arrays.asList((View[]) viewsField.get(windowManagerObj));2
        params = Arrays.asList((LayoutParams[]) paramsField.get(windowManagerObj));2
      } else {2
        views = (List<View>) viewsField.get(windowManagerObj);2
        params = (List<LayoutParams>) paramsField.get(windowManagerObj);2
      }2
    } catch (RuntimeException | IllegalAccessException re) {2
      return null;2
    }2
2
    List<Root> roots = new ArrayList<>();2
    for (int i = 0, stop = views.size(); i < stop; i++) {2
      roots.add(new Root(views.get(i), params.get(i)));2
    }2
    return roots;2
  }2
2
  private void initialize() {2
    initialized = true;2
    String accessClass =2
        Build.VERSION.SDK_INT > 16 ? WINDOW_MANAGER_GLOBAL_CLAZZ : WINDOW_MANAGER_IMPL_CLAZZ;2
    String instanceMethod = Build.VERSION.SDK_INT > 16 ? GET_GLOBAL_INSTANCE : GET_DEFAULT_IMPL;2
2
    try {2
      Class<?> clazz = Class.forName(accessClass);2
      Method getMethod = clazz.getMethod(instanceMethod);2
      windowManagerObj = getMethod.invoke(null);2
      viewsField = clazz.getDeclaredField(VIEWS_FIELD);2
      viewsField.setAccessible(true);2
      paramsField = clazz.getDeclaredField(WINDOW_PARAMS_FIELD);2
      paramsField.setAccessible(true);2
    } catch (InvocationTargetException | IllegalAccessException | RuntimeException | NoSuchMethodException | NoSuchFieldException | ClassNotFoundException ignored) {2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Enum;2
2
import android.support.v4.util.SimpleArrayMap;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
2
public class EnumMapping {2
  private final SimpleArrayMap<String, Integer> mMapping = new SimpleArrayMap<>();2
  private final String mDefaultKey;2
2
  public EnumMapping(String defaultKey) {2
    mDefaultKey = defaultKey;2
  }2
2
  public void put(String s, int i) {2
    mMapping.put(s, i);2
  }2
2
  public InspectorValue get(final int i) {2
    return get(i, true);2
  }2
2
  public InspectorValue get(final int i, final boolean mutable) {2
    for (int ii = 0, count = mMapping.size(); ii < count; ii++) {2
      if (mMapping.valueAt(ii) == i) {2
        return mutable2
            ? InspectorValue.mutable(Enum, mMapping.keyAt(ii))2
            : InspectorValue.immutable(Enum, mMapping.keyAt(ii));2
      }2
    }2
    return mutable2
        ? InspectorValue.mutable(Enum, mDefaultKey)2
        : InspectorValue.immutable(Enum, mDefaultKey);2
  }2
2
  public int get(String s) {2
    if (mMapping.containsKey(s)) {2
      return mMapping.get(s);2
    }2
    return mMapping.get(mDefaultKey);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.inspector.descriptors.utils;2
2
import android.support.v4.view.ViewCompat;2
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;2
import android.view.View;2
import javax.annotation.Nullable;2
2
/** Class that helps with accessibility by providing useful methods. */2
public final class ViewAccessibilityHelper {2
2
  /**2
   * Creates and returns an {@link AccessibilityNodeInfoCompat} from the the provided {@link View}.2
   * Note: This does not handle recycling of the {@link AccessibilityNodeInfoCompat}.2
   *2
   * @param view The {@link View} to create the {@link AccessibilityNodeInfoCompat} from.2
   * @return {@link AccessibilityNodeInfoCompat}2
   */2
  @Nullable2
  public static AccessibilityNodeInfoCompat createNodeInfoFromView(View view) {2
    if (view == null) {2
      return null;2
    }2
2
    final AccessibilityNodeInfoCompat nodeInfo = AccessibilityNodeInfoCompat.obtain();2
2
    // For some unknown reason, Android seems to occasionally throw a NPE from2
    // onInitializeAccessibilityNodeInfo.2
    try {2
      ViewCompat.onInitializeAccessibilityNodeInfo(view, nodeInfo);2
    } catch (NullPointerException e) {2
      if (nodeInfo != null) {2
        nodeInfo.recycle();2
      }2
      return null;2
    }2
2
    return nodeInfo;2
  }2
2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.litho.sonar;2
2
import static com.facebook.litho.annotations.ImportantForAccessibility.IMPORTANT_FOR_ACCESSIBILITY_NO;2
import static com.facebook.litho.annotations.ImportantForAccessibility.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Color;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Enum;2
import static com.facebook.sonar.plugins.inspector.InspectorValue.Type.Number;2
2
import android.graphics.Rect;2
import android.graphics.drawable.ColorDrawable;2
import android.graphics.drawable.Drawable;2
import android.support.v4.util.Pair;2
import android.view.View;2
import com.facebook.litho.Component;2
import com.facebook.litho.ComponentContext;2
import com.facebook.litho.ComponentLifecycle;2
import com.facebook.litho.DebugComponent;2
import com.facebook.litho.DebugLayoutNode;2
import com.facebook.litho.EventHandler;2
import com.facebook.litho.LithoView;2
import com.facebook.litho.annotations.Prop;2
import com.facebook.litho.annotations.State;2
import com.facebook.litho.reference.Reference;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.HighlightedOverlay;2
import com.facebook.sonar.plugins.inspector.InspectorValue;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.sonar.plugins.inspector.descriptors.ObjectDescriptor;2
import com.facebook.sonar.plugins.inspector.descriptors.utils.AccessibilityUtil;2
import com.facebook.yoga.YogaAlign;2
import com.facebook.yoga.YogaDirection;2
import com.facebook.yoga.YogaEdge;2
import com.facebook.yoga.YogaFlexDirection;2
import com.facebook.yoga.YogaJustify;2
import com.facebook.yoga.YogaPositionType;2
import com.facebook.yoga.YogaValue;2
import java.lang.reflect.Field;2
import java.util.ArrayList;2
import java.util.Arrays;2
import java.util.HashMap;2
import java.util.List;2
import java.util.Map;2
import javax.annotation.Nullable;2
2
public class DebugComponentDescriptor extends NodeDescriptor<DebugComponent> {2
2
  private Map<String, List<Pair<String[], SonarDynamic>>> mOverrides = new HashMap<>();2
  private DebugComponent.Overrider mOverrider =2
      new DebugComponent.Overrider() {2
        @Override2
        public void applyComponentOverrides(String key, Component component) {2
          final List<Pair<String[], SonarDynamic>> overrides = mOverrides.get(key);2
          if (overrides == null) {2
            return;2
          }2
2
          for (Pair<String[], SonarDynamic> override : overrides) {2
            if (override.first[0].equals("Props")) {2
              applyReflectiveOverride(component, override.first[1], override.second);2
            }2
          }2
        }2
2
        @Override2
        public void applyStateOverrides(2
            String key, ComponentLifecycle.StateContainer stateContainer) {2
          final List<Pair<String[], SonarDynamic>> overrides = mOverrides.get(key);2
          if (overrides == null) {2
            return;2
          }2
2
          for (Pair<String[], SonarDynamic> override : overrides) {2
            if (override.first[0].equals("State")) {2
              applyReflectiveOverride(stateContainer, override.first[1], override.second);2
            }2
          }2
        }2
2
        @Override2
        public void applyLayoutOverrides(String key, DebugLayoutNode node) {2
          final List<Pair<String[], SonarDynamic>> overrides = mOverrides.get(key);2
          if (overrides == null) {2
            return;2
          }2
2
          for (Pair<String[], SonarDynamic> override : overrides) {2
            if (override.first[0].equals("Layout")) {2
              try {2
                applyLayoutOverride(2
                    node,2
                    Arrays.copyOfRange(override.first, 1, override.first.length),2
                    override.second);2
              } catch (Exception ignored) {2
              }2
            } else if (override.first[0].equals("Accessibility")) {2
              applyAccessibilityOverride(node, override.first[1], override.second);2
            }2
          }2
        }2
      };2
2
  @Override2
  public void init(DebugComponent node) {2
    // We rely on the LithoView being invalidated when a component hierarchy changes.2
  }2
2
  @Override2
  public String getId(DebugComponent node) {2
    return node.getGlobalKey();2
  }2
2
  @Override2
  public String getName(DebugComponent node) throws Exception {2
    NodeDescriptor componentDescriptor = descriptorForClass(node.getComponent().getClass());2
    if (componentDescriptor.getClass() != ObjectDescriptor.class) {2
      return componentDescriptor.getName(node.getComponent());2
    }2
    return node.getComponent().getSimpleName();2
  }2
2
  @Override2
  public int getChildCount(DebugComponent node) {2
    if (node.getMountedView() != null || node.getMountedDrawable() != null) {2
      return 1;2
    } else {2
      return node.getChildComponents().size();2
    }2
  }2
2
  @Override2
  public Object getChildAt(DebugComponent node, int index) {2
    final View mountedView = node.getMountedView();2
    final Drawable mountedDrawable = node.getMountedDrawable();2
2
    if (mountedView != null) {2
      return mountedView;2
    } else if (mountedDrawable != null) {2
      return mountedDrawable;2
    } else {2
      return node.getChildComponents().get(index);2
    }2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(DebugComponent node) throws Exception {2
    NodeDescriptor componentDescriptor = descriptorForClass(node.getComponent().getClass());2
    if (componentDescriptor.getClass() != ObjectDescriptor.class) {2
      return componentDescriptor.getData(node.getComponent());2
    }2
2
    final List<Named<SonarObject>> data = new ArrayList<>();2
2
    final SonarObject layoutData = getLayoutData(node);2
    if (layoutData != null) {2
      data.add(new Named<>("Layout", layoutData));2
    }2
2
    final SonarObject propData = getPropData(node);2
    if (propData != null) {2
      data.add(new Named<>("Props", propData));2
    }2
2
    final SonarObject stateData = getStateData(node);2
    if (stateData != null) {2
      data.add(new Named<>("State", stateData));2
    }2
2
    final SonarObject accessibilityData = getAccessibilityData(node);2
    if (accessibilityData != null) {2
      data.add(new Named<>("Accessibility", accessibilityData));2
    }2
2
    return data;2
  }2
2
  @Nullable2
  private static SonarObject getLayoutData(DebugComponent node) {2
    final DebugLayoutNode layout = node.getLayoutNode();2
    if (layout == null) {2
      return null;2
    }2
2
    final SonarObject.Builder data = new SonarObject.Builder();2
    data.put("background", fromReference(node.getContext(), layout.getBackground()));2
    data.put("foreground", fromDrawable(layout.getForeground()));2
2
    data.put("direction", InspectorValue.mutable(Enum, layout.getLayoutDirection().toString()));2
    data.put("flex-direction", InspectorValue.mutable(Enum, layout.getFlexDirection().toString()));2
    data.put(2
        "justify-content", InspectorValue.mutable(Enum, layout.getJustifyContent().toString()));2
    data.put("align-items", InspectorValue.mutable(Enum, layout.getAlignItems().toString()));2
    data.put("align-self", InspectorValue.mutable(Enum, layout.getAlignSelf().toString()));2
    data.put("align-content", InspectorValue.mutable(Enum, layout.getAlignContent().toString()));2
    data.put("position-type", InspectorValue.mutable(Enum, layout.getPositionType().toString()));2
2
    data.put("flex-grow", fromFloat(layout.getFlexGrow()));2
    data.put("flex-shrink", fromFloat(layout.getFlexShrink()));2
    data.put("flex-basis", fromYogaValue(layout.getFlexBasis()));2
2
    data.put("width", fromYogaValue(layout.getWidth()));2
    data.put("min-width", fromYogaValue(layout.getMinWidth()));2
    data.put("max-width", fromYogaValue(layout.getMaxWidth()));2
2
    data.put("height", fromYogaValue(layout.getHeight()));2
    data.put("min-height", fromYogaValue(layout.getMinHeight()));2
    data.put("max-height", fromYogaValue(layout.getMaxHeight()));2
2
    data.put("aspect-ratio", fromFloat(layout.getAspectRatio()));2
2
    data.put(2
        "margin",2
        new SonarObject.Builder()2
            .put("left", fromYogaValue(layout.getMargin(YogaEdge.LEFT)))2
            .put("top", fromYogaValue(layout.getMargin(YogaEdge.TOP)))2
            .put("right", fromYogaValue(layout.getMargin(YogaEdge.RIGHT)))2
            .put("bottom", fromYogaValue(layout.getMargin(YogaEdge.BOTTOM)))2
            .put("start", fromYogaValue(layout.getMargin(YogaEdge.START)))2
            .put("end", fromYogaValue(layout.getMargin(YogaEdge.END)))2
            .put("horizontal", fromYogaValue(layout.getMargin(YogaEdge.HORIZONTAL)))2
            .put("vertical", fromYogaValue(layout.getMargin(YogaEdge.VERTICAL)))2
            .put("all", fromYogaValue(layout.getMargin(YogaEdge.ALL))));2
2
    data.put(2
        "padding",2
        new SonarObject.Builder()2
            .put("left", fromYogaValue(layout.getPadding(YogaEdge.LEFT)))2
            .put("top", fromYogaValue(layout.getPadding(YogaEdge.TOP)))2
            .put("right", fromYogaValue(layout.getPadding(YogaEdge.RIGHT)))2
            .put("bottom", fromYogaValue(layout.getPadding(YogaEdge.BOTTOM)))2
            .put("start", fromYogaValue(layout.getPadding(YogaEdge.START)))2
            .put("end", fromYogaValue(layout.getPadding(YogaEdge.END)))2
            .put("horizontal", fromYogaValue(layout.getPadding(YogaEdge.HORIZONTAL)))2
            .put("vertical", fromYogaValue(layout.getPadding(YogaEdge.VERTICAL)))2
            .put("all", fromYogaValue(layout.getPadding(YogaEdge.ALL))));2
2
    data.put(2
        "border",2
        new SonarObject.Builder()2
            .put("left", fromFloat(layout.getBorderWidth(YogaEdge.LEFT)))2
            .put("top", fromFloat(layout.getBorderWidth(YogaEdge.TOP)))2
            .put("right", fromFloat(layout.getBorderWidth(YogaEdge.RIGHT)))2
            .put("bottom", fromFloat(layout.getBorderWidth(YogaEdge.BOTTOM)))2
            .put("start", fromFloat(layout.getBorderWidth(YogaEdge.START)))2
            .put("end", fromFloat(layout.getBorderWidth(YogaEdge.END)))2
            .put("horizontal", fromFloat(layout.getBorderWidth(YogaEdge.HORIZONTAL)))2
            .put("vertical", fromFloat(layout.getBorderWidth(YogaEdge.VERTICAL)))2
            .put("all", fromFloat(layout.getBorderWidth(YogaEdge.ALL))));2
2
    data.put(2
        "position",2
        new SonarObject.Builder()2
            .put("left", fromYogaValue(layout.getPosition(YogaEdge.LEFT)))2
            .put("top", fromYogaValue(layout.getPosition(YogaEdge.TOP)))2
            .put("right", fromYogaValue(layout.getPosition(YogaEdge.RIGHT)))2
            .put("bottom", fromYogaValue(layout.getPosition(YogaEdge.BOTTOM)))2
            .put("start", fromYogaValue(layout.getPosition(YogaEdge.START)))2
            .put("end", fromYogaValue(layout.getPosition(YogaEdge.END)))2
            .put("horizontal", fromYogaValue(layout.getPosition(YogaEdge.HORIZONTAL)))2
            .put("vertical", fromYogaValue(layout.getPosition(YogaEdge.VERTICAL)))2
            .put("all", fromYogaValue(layout.getPosition(YogaEdge.ALL))));2
2
    return data.build();2
  }2
2
  @Nullable2
  private static SonarObject getPropData(DebugComponent node) {2
    if (node.isInternalComponent()) {2
      return null;2
    }2
2
    final Component component = node.getComponent();2
    final SonarObject.Builder props = new SonarObject.Builder();2
2
    boolean hasProps = false;2
    for (Field f : component.getClass().getDeclaredFields()) {2
      try {2
        f.setAccessible(true);2
2
        final Prop annotation = f.getAnnotation(Prop.class);2
        if (annotation != null) {2
          switch (annotation.resType()) {2
            case COLOR:2
              props.put(f.getName(), fromColor((Integer) f.get(component)));2
              break;2
            case DRAWABLE:2
              props.put(f.getName(), fromDrawable((Drawable) f.get(component)));2
              break;2
            default:2
              if (f.get(component) != null2
                  && PropWithDescription.class.isAssignableFrom(f.get(component).getClass())) {2
                final Object description =2
                    ((PropWithDescription) f.get(component))2
                        .getSonarLayoutInspectorPropDescription();2
                // Treat the description as immutable for now, because it's a "translation" of the2
                // actual prop,2
                // mutating them is not going to change the original prop.2
                if (description instanceof Map<?, ?>) {2
                  final Map<?, ?> descriptionMap = (Map<?, ?>) description;2
                  for (Map.Entry<?, ?> entry : descriptionMap.entrySet()) {2
                    props.put(2
                        entry.getKey().toString(), InspectorValue.immutable(entry.getValue()));2
                  }2
                } else {2
                  props.put(f.getName(), InspectorValue.immutable(description));2
                }2
              } else {2
                if (isTypeMutable(f.getType())) {2
                  props.put(f.getName(), InspectorValue.mutable(f.get(component)));2
                } else {2
                  props.put(f.getName(), InspectorValue.immutable(f.get(component)));2
                }2
              }2
              break;2
          }2
          hasProps = true;2
        }2
      } catch (Exception ignored) {2
      }2
    }2
2
    return hasProps ? props.build() : null;2
  }2
2
  @Nullable2
  private static SonarObject getStateData(DebugComponent node) {2
    if (node.isInternalComponent()) {2
      return null;2
    }2
2
    final ComponentLifecycle.StateContainer stateContainer = node.getStateContainer();2
    if (stateContainer == null) {2
      return null;2
    }2
2
    final SonarObject.Builder state = new SonarObject.Builder();2
2
    boolean hasState = false;2
    for (Field f : stateContainer.getClass().getDeclaredFields()) {2
      try {2
        f.setAccessible(true);2
2
        final State annotation = f.getAnnotation(State.class);2
        if (annotation != null) {2
          if (isTypeMutable(f.getType())) {2
            state.put(f.getName(), InspectorValue.mutable(f.get(stateContainer)));2
          } else {2
            state.put(f.getName(), InspectorValue.immutable(f.get(stateContainer)));2
          }2
          hasState = true;2
        }2
      } catch (Exception ignored) {2
      }2
    }2
2
    return hasState ? state.build() : null;2
  }2
2
  private static boolean isTypeMutable(Class<?> type) {2
    if (type == int.class || type == Integer.class) {2
      return true;2
    } else if (type == long.class || type == Long.class) {2
      return true;2
    } else if (type == float.class || type == Float.class) {2
      return true;2
    } else if (type == double.class || type == Double.class) {2
      return true;2
    } else if (type == boolean.class || type == Boolean.class) {2
      return true;2
    } else if (type.isAssignableFrom(String.class)) {2
      return true;2
    }2
    return false;2
  }2
2
  @Nullable2
  private static SonarObject getAccessibilityData(DebugComponent node) {2
    final DebugLayoutNode layout = node.getLayoutNode();2
    if (layout == null) {2
      return null;2
    }2
2
    final View hostView = node.getComponentHost();2
    final SonarObject.Builder accessibilityProps = new SonarObject.Builder();2
2
    // This needs to be an empty string to be mutable. See t20470623.2
    final CharSequence contentDescription =2
        layout.getContentDescription() != null ? layout.getContentDescription() : "";2
    accessibilityProps.put("content-description", InspectorValue.mutable(contentDescription));2
    accessibilityProps.put("focusable", InspectorValue.mutable(layout.getFocusable()));2
    accessibilityProps.put(2
        "important-for-accessibility",2
        AccessibilityUtil.sImportantForAccessibilityMapping.get(2
            layout.getImportantForAccessibility()));2
2
    // No host view exists, so this component is inherently not accessible.  Add the reason why this2
    // is the case and then return.2
    if (hostView == node.getLithoView() || hostView == null) {2
      final int importantForAccessibility = layout.getImportantForAccessibility();2
      final boolean isAccessibilityEnabled =2
          AccessibilityUtil.isAccessibilityEnabled(node.getContext());2
      String ignoredReason;2
2
      if (!isAccessibilityEnabled) {2
        ignoredReason = "No accessibility service is running.";2
      } else if (importantForAccessibility == IMPORTANT_FOR_ACCESSIBILITY_NO) {2
        ignoredReason = "Component has importantForAccessibility set to NO.";2
      } else if (importantForAccessibility == IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS) {2
        ignoredReason = "Component has importantForAccessibility set to NO_HIDE_DESCENDANTS.";2
      } else {2
        ignoredReason = "Component does not have content, or accessibility handlers.";2
      }2
2
      accessibilityProps.put("talkback-ignored", true);2
      accessibilityProps.put("talkback-ignored-reasons", ignoredReason);2
2
      return accessibilityProps.build();2
    }2
2
    accessibilityProps.put(2
        "node-info", AccessibilityUtil.getAccessibilityNodeInfoProperties(hostView));2
    AccessibilityUtil.addTalkbackProperties(accessibilityProps, hostView);2
2
    return accessibilityProps.build();2
  }2
2
  @Override2
  public void setValue(DebugComponent node, String[] path, SonarDynamic value) {2
    List<Pair<String[], SonarDynamic>> overrides = mOverrides.get(node.getGlobalKey());2
    if (overrides == null) {2
      overrides = new ArrayList<>();2
      mOverrides.put(node.getGlobalKey(), overrides);2
    }2
    overrides.add(new Pair<>(path, value));2
2
    node.setOverrider(mOverrider);2
    node.rerender();2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(DebugComponent node) {2
    final List<Named<String>> attributes = new ArrayList<>();2
    final String key = node.getKey();2
    final String testKey = node.getTestKey();2
2
    if (key != null && key.trim().length() > 0) {2
      attributes.add(new Named<>("key", key));2
    }2
2
    if (testKey != null && testKey.trim().length() > 0) {2
      attributes.add(new Named<>("testKey", testKey));2
    }2
2
    return attributes;2
  }2
2
  @Override2
  public void setHighlighted(DebugComponent node, boolean selected) {2
    final LithoView lithoView = node.getLithoView();2
    if (lithoView == null) {2
      return;2
    }2
2
    if (!selected) {2
      HighlightedOverlay.removeHighlight(lithoView);2
      return;2
    }2
2
    final DebugLayoutNode layout = node.getLayoutNode();2
    final boolean hasNode = layout != null;2
    final Rect margin;2
    if (!node.isRoot()) {2
      margin =2
          new Rect(2
              hasNode ? (int) layout.getResultMargin(YogaEdge.START) : 0,2
              hasNode ? (int) layout.getResultMargin(YogaEdge.TOP) : 0,2
              hasNode ? (int) layout.getResultMargin(YogaEdge.END) : 0,2
              hasNode ? (int) layout.getResultMargin(YogaEdge.BOTTOM) : 0);2
    } else {2
      // Margin not applied if you're at the root2
      margin = new Rect();2
    }2
2
    final Rect padding =2
        new Rect(2
            hasNode ? (int) layout.getResultPadding(YogaEdge.START) : 0,2
            hasNode ? (int) layout.getResultPadding(YogaEdge.TOP) : 0,2
            hasNode ? (int) layout.getResultPadding(YogaEdge.END) : 0,2
            hasNode ? (int) layout.getResultPadding(YogaEdge.BOTTOM) : 0);2
2
    final Rect contentBounds = node.getBoundsInLithoView();2
    HighlightedOverlay.setHighlighted(lithoView, margin, padding, contentBounds);2
  }2
2
  @Override2
  public void hitTest(DebugComponent node, Touch touch) {2
    for (int i = getChildCount(node) - 1; i >= 0; i--) {2
      final Object child = getChildAt(node, i);2
      if (child instanceof DebugComponent) {2
        final DebugComponent componentChild = (DebugComponent) child;2
        final Rect bounds = componentChild.getBounds();2
2
        if (touch.containedIn(bounds.left, bounds.top, bounds.right, bounds.bottom)) {2
          touch.continueWithOffset(i, bounds.left, bounds.top);2
          return;2
        }2
      } else if (child instanceof View || child instanceof Drawable) {2
        // Components can only mount one view or drawable and its bounds are the same as the2
        // hosting component.2
        touch.continueWithOffset(i, 0, 0);2
        return;2
      }2
    }2
2
    touch.finish();2
  }2
2
  @Override2
  public String getDecoration(DebugComponent node) throws Exception {2
    if (node.getComponent() != null) {2
      NodeDescriptor componentDescriptor = descriptorForClass(node.getComponent().getClass());2
      if (componentDescriptor.getClass() != ObjectDescriptor.class) {2
        return componentDescriptor.getDecoration(node.getComponent());2
      }2
    }2
    return "litho";2
  }2
2
  @Override2
  public boolean matches(String query, DebugComponent node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
2
  private static void applyAccessibilityOverride(2
      DebugLayoutNode node, String key, SonarDynamic value) {2
    switch (key) {2
      case "focusable":2
        node.setFocusable(value.asBoolean());2
        break;2
      case "important-for-accessibility":2
        node.setImportantForAccessibility(2
            AccessibilityUtil.sImportantForAccessibilityMapping.get(value.asString()));2
        break;2
      case "content-description":2
        node.setContentDescription(value.asString());2
        break;2
    }2
  }2
2
  private static void applyLayoutOverride(DebugLayoutNode node, String[] path, SonarDynamic value) {2
    switch (path[0]) {2
      case "background":2
        node.setBackgroundColor(value.asInt());2
        break;2
      case "foreground":2
        node.setForegroundColor(value.asInt());2
        break;2
      case "direction":2
        node.setLayoutDirection(YogaDirection.valueOf(value.asString().toUpperCase()));2
        break;2
      case "flex-direction":2
        node.setFlexDirection(YogaFlexDirection.valueOf(value.asString().toUpperCase()));2
        break;2
      case "justify-content":2
        node.setJustifyContent(YogaJustify.valueOf(value.asString().toUpperCase()));2
        break;2
      case "align-items":2
        node.setAlignItems(YogaAlign.valueOf(value.asString().toUpperCase()));2
        break;2
      case "align-self":2
        node.setAlignSelf(YogaAlign.valueOf(value.asString().toUpperCase()));2
        break;2
      case "align-content":2
        node.setAlignContent(YogaAlign.valueOf(value.asString().toUpperCase()));2
        break;2
      case "position-type":2
        node.setPositionType(YogaPositionType.valueOf(value.asString().toUpperCase()));2
        break;2
      case "flex-grow":2
        node.setFlexGrow(value.asFloat());2
        break;2
      case "flex-shrink":2
        node.setFlexShrink(value.asFloat());2
        break;2
      case "flex-basis":2
        node.setFlexBasis(YogaValue.parse(value.asString()));2
        break;2
      case "width":2
        node.setWidth(YogaValue.parse(value.asString()));2
        break;2
      case "min-width":2
        node.setMinWidth(YogaValue.parse(value.asString()));2
        break;2
      case "max-width":2
        node.setMaxWidth(YogaValue.parse(value.asString()));2
        break;2
      case "height":2
        node.setHeight(YogaValue.parse(value.asString()));2
        break;2
      case "min-height":2
        node.setMinHeight(YogaValue.parse(value.asString()));2
        break;2
      case "max-height":2
        node.setMaxHeight(YogaValue.parse(value.asString()));2
        break;2
      case "aspect-ratio":2
        node.setAspectRatio(value.asFloat());2
        break;2
      case "margin":2
        node.setMargin(edgeFromString(path[1]), YogaValue.parse(value.asString()));2
        break;2
      case "padding":2
        node.setPadding(edgeFromString(path[1]), YogaValue.parse(value.asString()));2
        break;2
      case "border":2
        node.setBorderWidth(edgeFromString(path[1]), value.asFloat());2
        break;2
      case "position":2
        node.setPosition(edgeFromString(path[1]), YogaValue.parse(value.asString()));2
        break;2
    }2
  }2
2
  private static YogaEdge edgeFromString(String s) {2
    return YogaEdge.valueOf(s.toUpperCase());2
  }2
2
  private static void applyReflectiveOverride(Object o, String key, SonarDynamic dynamic) {2
    try {2
      final Field field = o.getClass().getDeclaredField(key);2
      field.setAccessible(true);2
2
      final Class type = field.getType();2
2
      Object value = null;2
      if (type == int.class || type == Integer.class) {2
        value = dynamic.asInt();2
      } else if (type == long.class || type == Long.class) {2
        value = dynamic.asLong();2
      } else if (type == float.class || type == Float.class) {2
        value = dynamic.asFloat();2
      } else if (type == double.class || type == Double.class) {2
        value = dynamic.asDouble();2
      } else if (type == boolean.class || type == Boolean.class) {2
        value = dynamic.asBoolean();2
      } else if (type.isAssignableFrom(String.class)) {2
        value = dynamic.asString();2
      }2
2
      if (value != null) {2
        field.set(o, value);2
      }2
    } catch (Exception ignored) {2
    }2
  }2
2
  private static InspectorValue fromDrawable(Drawable d) {2
    if (d instanceof ColorDrawable) {2
      return InspectorValue.mutable(Color, ((ColorDrawable) d).getColor());2
    }2
    return InspectorValue.mutable(Color, 0);2
  }2
2
  private static <T extends Drawable> InspectorValue fromReference(2
      ComponentContext c, Reference<T> r) {2
    if (r == null) {2
      return fromDrawable(null);2
    }2
2
    final T d = Reference.acquire(c, r);2
    final InspectorValue v = fromDrawable(d);2
    Reference.release(c, d, r);2
    return v;2
  }2
2
  private static InspectorValue fromFloat(float f) {2
    if (Float.isNaN(f)) {2
      return InspectorValue.mutable(Enum, "undefined");2
    }2
    return InspectorValue.mutable(Number, f);2
  }2
2
  private static InspectorValue fromYogaValue(YogaValue v) {2
    // TODO add support for Type.Dimension or similar2
    return InspectorValue.mutable(Enum, v.toString());2
  }2
2
  private static InspectorValue fromColor(int color) {2
    return InspectorValue.mutable(Color, color);2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.litho.sonar;2
2
import com.facebook.litho.DebugComponent;2
import com.facebook.litho.LithoView;2
import com.facebook.sonar.plugins.inspector.DescriptorMapping;2
2
public final class LithoSonarDescriptors {2
2
  public static void add(DescriptorMapping descriptorMapping) {2
    descriptorMapping.register(LithoView.class, new LithoViewDescriptor());2
    descriptorMapping.register(DebugComponent.class, new DebugComponentDescriptor());2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.litho.sonar;2
2
import android.graphics.Rect;2
import android.view.ViewGroup;2
import com.facebook.litho.DebugComponent;2
import com.facebook.litho.LithoView;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.inspector.Named;2
import com.facebook.sonar.plugins.inspector.NodeDescriptor;2
import com.facebook.sonar.plugins.inspector.Touch;2
import java.util.ArrayList;2
import java.util.List;2
2
public class LithoViewDescriptor extends NodeDescriptor<LithoView> {2
2
  @Override2
  public void init(LithoView node) throws Exception {2
    node.setOnDirtyMountListener(2
        new LithoView.OnDirtyMountListener() {2
          @Override2
          public void onDirtyMount(LithoView view) {2
            invalidate(view);2
          }2
        });2
  }2
2
  @Override2
  public String getId(LithoView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    return descriptor.getId(node);2
  }2
2
  @Override2
  public String getName(LithoView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    return descriptor.getName(node);2
  }2
2
  @Override2
  public int getChildCount(LithoView node) {2
    return DebugComponent.getRootInstance(node) == null ? 0 : 1;2
  }2
2
  @Override2
  public Object getChildAt(LithoView node, int index) {2
    return DebugComponent.getRootInstance(node);2
  }2
2
  @Override2
  public List<Named<SonarObject>> getData(LithoView node) throws Exception {2
    final List<Named<SonarObject>> props = new ArrayList<>();2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    final Rect mountedBounds = node.getPreviousMountBounds();2
2
    props.add(2
        0,2
        new Named<>(2
            "LithoView",2
            new SonarObject.Builder()2
                .put(2
                    "mountbounds",2
                    new SonarObject.Builder()2
                        .put("left", mountedBounds.left)2
                        .put("top", mountedBounds.top)2
                        .put("right", mountedBounds.right)2
                        .put("bottom", mountedBounds.bottom))2
                .build()));2
2
    props.addAll(descriptor.getData(node));2
2
    return props;2
  }2
2
  @Override2
  public void setValue(LithoView node, String[] path, SonarDynamic value) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    descriptor.setValue(node, path, value);2
  }2
2
  @Override2
  public List<Named<String>> getAttributes(LithoView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    return descriptor.getAttributes(node);2
  }2
2
  @Override2
  public void setHighlighted(LithoView node, boolean selected) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    descriptor.setHighlighted(node, selected);2
  }2
2
  @Override2
  public void hitTest(LithoView node, Touch touch) {2
    touch.continueWithOffset(0, 0, 0);2
  }2
2
  @Override2
  public String getDecoration(LithoView node) throws Exception {2
    final NodeDescriptor descriptor = descriptorForClass(ViewGroup.class);2
    return descriptor.getDecoration(node);2
  }2
2
  @Override2
  public boolean matches(String query, LithoView node) throws Exception {2
    NodeDescriptor descriptor = descriptorForClass(Object.class);2
    return descriptor.matches(query, node);2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.litho.sonar;2
2
public interface PropWithDescription {2
2
  Object getSonarLayoutInspectorPropDescription();2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.network;2
2
import java.util.ArrayList;2
import java.util.List;2
2
public interface NetworkReporter {2
  void reportRequest(RequestInfo requestInfo);2
2
  void reportResponse(ResponseInfo responseInfo);2
2
  public class Header {2
    public final String name;2
    public final String value;2
2
    public Header(final String name, final String value) {2
      this.name = name;2
      this.value = value;2
    }2
2
    @Override2
    public String toString() {2
      return "Header{" + name + ": " + value + "}";2
    }2
  }2
2
  public class RequestInfo {2
    public String requestId;2
    public long timeStamp;2
    public List<Header> headers = new ArrayList<>();2
    public String method;2
    public String uri;2
    public byte[] body;2
2
    public Header getFirstHeader(final String name) {2
      for (Header header : headers) {2
        if (name.equalsIgnoreCase(header.name)) {2
          return header;2
        }2
      }2
      return null;2
    }2
  }2
2
  public class ResponseInfo {2
    public String requestId;2
    public long timeStamp;2
    public int statusCode;2
    public String statusReason;2
    public List<Header> headers = new ArrayList<>();2
    public byte[] body;2
2
    public Header getFirstHeader(final String name) {2
      for (Header header : headers) {2
        if (name.equalsIgnoreCase(header.name)) {2
          return header;2
        }2
      }2
      return null;2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.network;2
2
import com.facebook.sonar.plugins.network.NetworkReporter.ResponseInfo;2
2
public interface NetworkResponseFormatter {2
2
  interface OnCompletionListener {2
    void onCompletion(String json);2
  }2
2
  boolean shouldFormat(ResponseInfo response);2
2
  void format(ResponseInfo response, OnCompletionListener onCompletionListener);2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.network;2
2
import android.util.Base64;2
import com.facebook.sonar.core.ErrorReportingRunnable;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.common.BufferingSonarPlugin;2
import java.util.List;2
2
public class NetworkSonarPlugin extends BufferingSonarPlugin implements NetworkReporter {2
  public static final String ID = "Network";2
2
  private final List<NetworkResponseFormatter> mFormatters;2
2
  public NetworkSonarPlugin() {2
    this(null);2
  }2
2
  public NetworkSonarPlugin(List<NetworkResponseFormatter> formatters) {2
    this.mFormatters = formatters;2
  }2
2
  @Override2
  public String getId() {2
    return ID;2
  }2
2
  @Override2
  public void reportRequest(RequestInfo requestInfo) {2
    final SonarObject request =2
        new SonarObject.Builder()2
            .put("id", requestInfo.requestId)2
            .put("timestamp", requestInfo.timeStamp)2
            .put("method", requestInfo.method)2
            .put("url", requestInfo.uri)2
            .put("headers", toSonarObject(requestInfo.headers))2
            .put("data", toBase64(requestInfo.body))2
            .build();2
2
    send("newRequest", request);2
  }2
2
  @Override2
  public void reportResponse(final ResponseInfo responseInfo) {2
    final Runnable job =2
        new ErrorReportingRunnable(getConnection()) {2
          @Override2
          protected void runOrThrow() throws Exception {2
            if (shouldStripResponseBody(responseInfo)) {2
              responseInfo.body = null;2
            }2
2
            final SonarObject response =2
                new SonarObject.Builder()2
                    .put("id", responseInfo.requestId)2
                    .put("timestamp", responseInfo.timeStamp)2
                    .put("status", responseInfo.statusCode)2
                    .put("reason", responseInfo.statusReason)2
                    .put("headers", toSonarObject(responseInfo.headers))2
                    .put("data", toBase64(responseInfo.body))2
                    .build();2
2
            send("newResponse", response);2
          }2
        };2
2
    if (mFormatters != null) {2
      for (NetworkResponseFormatter formatter : mFormatters) {2
        if (formatter.shouldFormat(responseInfo)) {2
          formatter.format(2
              responseInfo,2
              new NetworkResponseFormatter.OnCompletionListener() {2
                @Override2
                public void onCompletion(final String json) {2
                  responseInfo.body = json.getBytes();2
                  job.run();2
                }2
              });2
          return;2
        }2
      }2
    }2
2
    job.run();2
  }2
2
  private String toBase64(byte[] bytes) {2
    if (bytes == null) {2
      return null;2
    }2
    return new String(Base64.encode(bytes, Base64.DEFAULT));2
  }2
2
  private SonarArray toSonarObject(List<Header> headers) {2
    final SonarArray.Builder list = new SonarArray.Builder();2
2
    for (Header header : headers) {2
      list.put(new SonarObject.Builder().put("key", header.name).put("value", header.value));2
    }2
2
    return list.build();2
  }2
2
  private static boolean shouldStripResponseBody(ResponseInfo responseInfo) {2
    final Header contentType = responseInfo.getFirstHeader("content-type");2
    if (contentType == null) {2
      return false;2
    }2
2
    return contentType.value.contains("image/")2
        || contentType.value.contains("video/")2
        || contentType.value.contains("application/zip");2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
package com.facebook.sonar.plugins.network;2
2
import android.util.Log;2
import com.facebook.sonar.plugins.network.NetworkReporter.RequestInfo;2
import com.facebook.sonar.plugins.network.NetworkReporter.ResponseInfo;2
import java.io.IOException;2
import java.util.ArrayList;2
import java.util.List;2
import java.util.Random;2
import java.util.Set;2
import javax.annotation.Nullable;2
import okhttp3.Headers;2
import okhttp3.Interceptor;2
import okhttp3.Request;2
import okhttp3.Response;2
import okhttp3.ResponseBody;2
import okio.Buffer;2
2
public class SonarOkhttpInterceptor implements Interceptor {2
2
  public @Nullable NetworkSonarPlugin plugin;2
2
  public SonarOkhttpInterceptor() {2
    this.plugin = null;2
  }2
2
  public SonarOkhttpInterceptor(NetworkSonarPlugin plugin) {2
    this.plugin = plugin;2
  }2
2
  @Override2
  public Response intercept(Interceptor.Chain chain) throws IOException {2
    Request request = chain.request();2
    int randInt = randInt(1, Integer.MAX_VALUE);2
    plugin.reportRequest(convertRequest(request, randInt));2
    Response response = chain.proceed(request);2
    ResponseBody body = response.body();2
    ResponseInfo responseInfo = convertResponse(response, body, randInt);2
    plugin.reportResponse(responseInfo);2
    // Creating new response as can't used response.body() more than once2
    return response2
        .newBuilder()2
        .body(ResponseBody.create(body.contentType(), responseInfo.body))2
        .build();2
  }2
2
  private static byte[] bodyToByteArray(final Request request) {2
2
    try {2
      final Request copy = request.newBuilder().build();2
      final Buffer buffer = new Buffer();2
      copy.body().writeTo(buffer);2
      return buffer.readByteArray();2
    } catch (final IOException e) {2
      return e.getMessage().getBytes();2
    }2
  }2
2
  private RequestInfo convertRequest(Request request, int identifier) {2
    List<NetworkReporter.Header> headers = convertHeader(request.headers());2
    RequestInfo info = new RequestInfo();2
    info.requestId = String.valueOf(identifier);2
    info.timeStamp = System.currentTimeMillis();2
    info.headers = headers;2
    info.method = request.method();2
    info.uri = request.url().toString();2
    if (request.body() != null) {2
      info.body = bodyToByteArray(request);2
    }2
2
    return info;2
  }2
2
  private ResponseInfo convertResponse(Response response, ResponseBody body, int identifier) {2
2
    List<NetworkReporter.Header> headers = convertHeader(response.headers());2
    ResponseInfo info = new ResponseInfo();2
    info.requestId = String.valueOf(identifier);2
    info.timeStamp = response.receivedResponseAtMillis();2
    info.statusCode = response.code();2
    info.headers = headers;2
    try {2
      info.body = body.bytes();2
    } catch (IOException e) {2
      Log.e("Sonar", e.toString());2
    }2
    return info;2
  }2
2
  private List<NetworkReporter.Header> convertHeader(Headers headers) {2
    List<NetworkReporter.Header> list = new ArrayList<>();2
2
    Set<String> keys = headers.names();2
    for (String key : keys) {2
      list.add(new NetworkReporter.Header(key, headers.get(key)));2
    }2
    return list;2
  }2
2
  private int randInt(int min, int max) {2
    Random rand = new Random();2
    int randomNum = rand.nextInt((max - min) + 1) + min;2
    return randomNum;2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.sonar.plugins.sharedpreferences;2
2
import static android.content.Context.MODE_PRIVATE;2
2
import android.content.Context;2
import android.content.SharedPreferences;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarPlugin;2
import com.facebook.sonar.core.SonarReceiver;2
import com.facebook.sonar.core.SonarResponder;2
import java.util.Map;2
2
public class SharedPreferencesSonarPlugin implements SonarPlugin {2
2
  private SonarConnection mConnection;2
  private final SharedPreferences mSharedPreferences;2
2
  public SharedPreferencesSonarPlugin(Context context) {2
    mSharedPreferences = context.getSharedPreferences(context.getPackageName(), MODE_PRIVATE);2
2
    mSharedPreferences.registerOnSharedPreferenceChangeListener(2
        new SharedPreferences.OnSharedPreferenceChangeListener() {2
          @Override2
          public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {2
            if (mConnection != null) {2
              mConnection.send(2
                  "sharedPreferencesChange",2
                  new SonarObject.Builder()2
                      .put("name", key)2
                      .put("deleted", !mSharedPreferences.contains(key))2
                      .put("time", System.currentTimeMillis())2
                      .put("value", mSharedPreferences.getAll().get(key))2
                      .build());2
            }2
          }2
        });2
  }2
2
  @Override2
  public String getId() {2
    return "Preferences";2
  }2
2
  private SonarObject getSharedPreferencesObject() {2
    final SonarObject.Builder builder = new SonarObject.Builder();2
    final Map<String, ?> map = mSharedPreferences.getAll();2
2
    for (Map.Entry<String, ?> entry : map.entrySet()) {2
      final Object val = entry.getValue();2
      builder.put(entry.getKey(), val);2
    }2
2
    return builder.build();2
  }2
2
  @Override2
  public void onConnect(SonarConnection connection) {2
    mConnection = connection;2
2
    connection.receive(2
        "getSharedPreferences",2
        new SonarReceiver() {2
          @Override2
          public void onReceive(SonarObject params, SonarResponder responder) {2
            responder.success(getSharedPreferencesObject());2
          }2
        });2
2
    connection.receive(2
        "setSharedPreference",2
        new SonarReceiver() {2
          @Override2
          public void onReceive(SonarObject params, SonarResponder responder)2
              throws IllegalArgumentException {2
2
            String preferenceName = params.getString("preferenceName");2
            Object originalValue = mSharedPreferences.getAll().get(preferenceName);2
            SharedPreferences.Editor editor = mSharedPreferences.edit();2
2
            if (originalValue instanceof Boolean) {2
              editor.putBoolean(preferenceName, params.getBoolean("preferenceValue"));2
            } else if (originalValue instanceof Long) {2
              editor.putLong(preferenceName, params.getLong("preferenceValue"));2
            } else if (originalValue instanceof Integer) {2
              editor.putInt(preferenceName, params.getInt("preferenceValue"));2
            } else if (originalValue instanceof Float) {2
              editor.putFloat(preferenceName, params.getFloat("preferenceValue"));2
            } else if (originalValue instanceof String) {2
              editor.putString(preferenceName, params.getString("preferenceValue"));2
            } else {2
              throw new IllegalArgumentException("Type not supported: " + preferenceName);2
            }2
2
            editor.apply();2
2
            responder.success(getSharedPreferencesObject());2
          }2
        });2
  }2
2
  @Override2
  public void onDisconnect() {2
    mConnection = null;2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.sonar.sample;2
2
import android.os.Bundle;2
import android.support.v7.app.AppCompatActivity;2
import com.facebook.litho.ComponentContext;2
import com.facebook.litho.LithoView;2
2
public class MainActivity extends AppCompatActivity {2
2
  @Override2
  protected void onCreate(Bundle savedInstanceState) {2
    super.onCreate(savedInstanceState);2
2
    final ComponentContext c = new ComponentContext(this);2
    setContentView(2
        LithoView.create(2
            c,2
            RootComponent.create(c).build()));2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.sonar.sample;2
2
import com.facebook.litho.Column;2
import com.facebook.litho.Component;2
import com.facebook.litho.ComponentContext;2
import com.facebook.litho.annotations.LayoutSpec;2
import com.facebook.litho.annotations.OnCreateLayout;2
import com.facebook.litho.widget.Text;2
import okhttp3.Request;2
import okhttp3.Response;2
import okhttp3.RequestBody;2
import okhttp3.FormBody;2
import okhttp3.FormBody.Builder;2
import okhttp3.OkHttpClient;2
import okhttp3.Call;2
import okhttp3.Callback;2
import com.facebook.litho.ClickEvent;2
import android.util.Log;2
import java.io.IOException;2
import com.facebook.litho.annotations.OnEvent;2
2
@LayoutSpec2
public class RootComponentSpec {2
2
  @OnCreateLayout2
  static Component onCreateLayout(ComponentContext c) {2
    return Column.create(c)2
        .child(2
            Text.create(c)2
                .text("Tap to hit get request")2
                .key("1")2
                .textSizeSp(20)2
                .clickHandler(RootComponent.hitGetRequest(c)))2
        .child(2
            Text.create(c)2
                .text("Tap to hit post request")2
                .key("2")2
                .textSizeSp(20)2
                .clickHandler(RootComponent.hitPostRequest(c)))2
        .child(2
            Text.create(c)2
                .text("I m just a text")2
                .key("3")2
                .textSizeSp(20))2
        .build();2
  }2
2
@OnEvent(ClickEvent.class)2
  static void hitGetRequest(ComponentContext c) {2
2
        Request request = new Request.Builder()2
            .url("https://api.github.com/repos/facebook/yoga")2
            .get()2
            .build();2
       SonarSampleApplication.okhttpClient.newCall(request).enqueue(new Callback() {2
           @Override2
           public void onFailure(Call call, IOException e) {2
               e.printStackTrace();2
               Log.d("Sonar", e.getMessage());2
           }2
2
           @Override2
           public void onResponse(Call call, Response response) throws IOException {2
               if (response.isSuccessful()) {2
                   Log.d("Sonar", response.body().string());2
               } else {2
               Log.d("Sonar", "not successful");2
           }2
       }2
   });2
  }2
2
  @OnEvent(ClickEvent.class)2
  static void hitPostRequest(ComponentContext c) {2
2
      RequestBody formBody = new FormBody.Builder()2
              .add("app", "Sonar")2
              .add("remarks", "Its awesome")2
              .build();2
2
        Request request = new Request.Builder()2
            .url("https://demo9512366.mockable.io/SonarPost")2
            .post(formBody)2
            .build();2
2
       SonarSampleApplication.okhttpClient.newCall(request).enqueue(new Callback() {2
           @Override2
           public void onFailure(Call call, IOException e) {2
               e.printStackTrace();2
               Log.d("Sonar", e.getMessage());2
           }2
2
           @Override2
           public void onResponse(Call call, Response response) throws IOException {2
               if (response.isSuccessful()) {2
                   Log.d("Sonar", response.body().string());2
               } else {2
               Log.d("Sonar", "not successful");2
               }2
           }2
   });2
  }2
}2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
package com.facebook.sonar.sample;2
2
import android.app.Application;2
import android.net.Network;2
import android.support.annotation.Nullable;2
import java.util.ArrayList;2
import java.util.List;2
import com.facebook.litho.sonar.LithoSonarDescriptors;2
import com.facebook.soloader.SoLoader;2
import com.facebook.sonar.android.utils.SonarUtils;2
import com.facebook.sonar.android.AndroidSonarClient;2
import com.facebook.sonar.core.SonarClient;2
import com.facebook.sonar.plugins.inspector.DescriptorMapping;2
import com.facebook.sonar.plugins.inspector.InspectorSonarPlugin;2
import com.facebook.sonar.plugins.network.NetworkSonarPlugin;2
import com.facebook.sonar.plugins.network.SonarOkhttpInterceptor;2
import com.facebook.sonar.plugins.network.NetworkResponseFormatter;2
import okhttp3.OkHttpClient;2
import java.util.concurrent.TimeUnit;2
2
public class SonarSampleApplication extends Application {2
2
  static public OkHttpClient okhttpClient;2
2
  @Override2
  public void onCreate() {2
    super.onCreate();2
    SoLoader.init(this, false);2
2
    final SonarClient client = AndroidSonarClient.getInstance(this);2
    final DescriptorMapping descriptorMapping = DescriptorMapping.withDefaults();2
2
    NetworkSonarPlugin networkPlugin = new NetworkSonarPlugin();2
    SonarOkhttpInterceptor interceptor = new SonarOkhttpInterceptor(networkPlugin);2
2
    okhttpClient = new OkHttpClient.Builder()2
    .addNetworkInterceptor(interceptor)2
    .connectTimeout(60, TimeUnit.SECONDS)2
    .readTimeout(60, TimeUnit.SECONDS)2
    .writeTimeout(10, TimeUnit.MINUTES)2
    .build();2
2
    LithoSonarDescriptors.add(descriptorMapping);2
    client.addPlugin(new InspectorSonarPlugin(this, descriptorMapping));2
    client.addPlugin(networkPlugin);2
    client.start();2
}2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.testing;2
2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarReceiver;2
import java.util.ArrayList;2
import java.util.HashMap;2
import java.util.List;2
import java.util.Map;2
2
public class SonarConnectionMock implements SonarConnection {2
  public final Map<String, SonarReceiver> receivers = new HashMap<>();2
  public final Map<String, List<Object>> sent = new HashMap<>();2
2
  @Override2
  public void send(String method, SonarObject params) {2
    final List<Object> paramList;2
    if (sent.containsKey(method)) {2
      paramList = sent.get(method);2
    } else {2
      paramList = new ArrayList<>();2
      sent.put(method, paramList);2
    }2
2
    paramList.add(params);2
  }2
2
  @Override2
  public void send(String method, SonarArray params) {2
    final List<Object> paramList;2
    if (sent.containsKey(method)) {2
      paramList = sent.get(method);2
    } else {2
      paramList = new ArrayList<>();2
      sent.put(method, paramList);2
    }2
2
    paramList.add(params);2
  }2
2
  @Override2
  public void reportError(Throwable throwable) {}2
2
  @Override2
  public void receive(String method, SonarReceiver receiver) {2
    receivers.put(method, receiver);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.testing;2
2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.core.SonarResponder;2
import java.util.LinkedList;2
import java.util.List;2
2
public class SonarResponderMock implements SonarResponder {2
  public final List<Object> successes = new LinkedList<>();2
  public final List<SonarObject> errors = new LinkedList<>();2
2
  @Override2
  public void success(SonarObject response) {2
    successes.add(response);2
  }2
2
  @Override2
  public void success(SonarArray response) {2
    successes.add(response);2
  }2
2
  @Override2
  public void success() {2
    successes.add(new SonarObject.Builder().build());2
  }2
2
  @Override2
  public void error(SonarObject response) {2
    errors.add(response);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console;2
2
import static org.hamcrest.CoreMatchers.hasItem;2
import static org.hamcrest.MatcherAssert.assertThat;2
2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.testing.SonarConnectionMock;2
import com.facebook.sonar.testing.SonarResponderMock;2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import org.junit.Before;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class ConsoleSonarPluginTest {2
2
  SonarConnectionMock connection;2
  SonarResponderMock responder;2
2
  @Before2
  public void setup() throws Exception {2
    JavascriptEnvironment jsEnvironment = new JavascriptEnvironment();2
    final ConsoleSonarPlugin plugin = new ConsoleSonarPlugin(jsEnvironment);2
    connection = new SonarConnectionMock();2
    responder = new SonarResponderMock();2
    plugin.onConnect(connection);2
  }2
2
  @Test2
  public void simpleExpressionShouldEvaluateCorrectly() throws Exception {2
2
    receiveScript("2 + 2");2
    assertThat(2
        responder.successes,2
        hasItem(new SonarObject.Builder().put("value", 4).put("type", "json").build()));2
  }2
2
  private void receiveScript(String a) throws Exception {2
    SonarObject getValue = new SonarObject.Builder().put("command", a).build();2
    connection.receivers.get("executeCommand").onReceive(getValue, responder);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.console;2
2
import static org.junit.Assert.assertEquals;2
2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import com.google.common.collect.ImmutableMap;2
import java.util.Collections;2
import java.util.HashMap;2
import org.json.JSONObject;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
import org.mozilla.javascript.ContextFactory;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class JavascriptSessionTest {2
2
  ContextFactory mContextFactory = new ContextFactory();2
2
  @Test2
  public void testSimpleExpressionsEvaluate() throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(mContextFactory, Collections.<String, Object>emptyMap());2
    JSONObject json = session.evaluateCommand("2+2-1");2
    assertEquals(3, json.getInt("value"));2
  }2
2
  @Test2
  public void testStatePersistsBetweenCommands() throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(mContextFactory, Collections.<String, Object>emptyMap());2
    session.evaluateCommand("var x = 10;");2
    JSONObject json = session.evaluateCommand("x");2
    assertEquals(10, json.getInt("value"));2
  }2
2
  @Test2
  public void testVariablesGetBoundCorrectly() throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(2
            mContextFactory,2
            ImmutableMap.<String, Object>of(2
                "a", 2,2
                "b", 2));2
    JSONObject json = session.evaluateCommand("a+b");2
    assertEquals("json", json.getString("type"));2
    assertEquals(4, json.getInt("value"));2
  }2
2
  @Test2
  public void testNumberEvaluation() throws Exception {2
    assertEquals(4, evaluateWithNoGlobals("4").getInt("value"));2
  }2
2
  @Test2
  public void testStringEvaluation() throws Exception {2
    assertEquals("hello", evaluateWithNoGlobals("\"hello\"").getString("value"));2
  }2
2
  @Test2
  public void testJavaObjectEvaluation() throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(2
            mContextFactory,2
            ImmutableMap.<String, Object>of("object", new HashMap<String, String>()));2
    JSONObject json = session.evaluateCommand("object");2
    assertEquals("javaObject", json.getString("type"));2
    assertEquals("{}", json.getJSONObject("value").getString("toString"));2
  }2
2
  @Test2
  public void testJavaMethodEvaluation() throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(2
            mContextFactory,2
            ImmutableMap.<String, Object>of("object", new HashMap<String, String>()));2
    JSONObject json = session.evaluateCommand("object.get");2
    assertEquals("method", json.getString("type"));2
  }2
2
  @Test2
  public void testJsFunctionEvaluation() throws Exception {2
    JSONObject json = evaluateWithNoGlobals("function() {}");2
    assertEquals("function", json.getString("type"));2
    assertEquals("function(){}", removeWhitespace(json.getString("value")));2
  }2
2
  @Test2
  public void testNullEvaluation() throws Exception {2
    assertEquals("null", evaluateWithNoGlobals("null").getString("type"));2
    assertEquals("null", evaluateWithNoGlobals("undefined").getString("type"));2
  }2
2
  private static String removeWhitespace(String input) {2
    return input.replaceAll("\\s", "");2
  }2
2
  private JSONObject evaluateWithNoGlobals(String input) throws Exception {2
    JavascriptSession session =2
        new JavascriptSession(mContextFactory, new HashMap<String, Object>());2
    return session.evaluateCommand(input);2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.inspector;2
2
import static org.hamcrest.CoreMatchers.equalTo;2
import static org.hamcrest.MatcherAssert.assertThat;2
2
import android.app.Activity;2
import android.app.Application;2
import android.app.Application.ActivityLifecycleCallbacks;2
import android.os.Bundle;2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import org.junit.Before;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
import org.mockito.Mockito;2
import org.mockito.invocation.InvocationOnMock;2
import org.mockito.stubbing.Answer;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class ApplicationWrapperTest {2
2
  private ApplicationWrapper mWrapper;2
  private ActivityLifecycleCallbacks mCallbacks;2
2
  @Before2
  public void setup() {2
    final Application app = Mockito.mock(Application.class);2
    Mockito.doAnswer(2
            new Answer() {2
              @Override2
              public Object answer(InvocationOnMock invocation) throws Throwable {2
                mCallbacks = (ActivityLifecycleCallbacks) invocation.getArguments()[0];2
                return null;2
              }2
            })2
        .when(app)2
        .registerActivityLifecycleCallbacks(Mockito.any(ActivityLifecycleCallbacks.class));2
2
    mWrapper = new ApplicationWrapper(app);2
  }2
2
  @Test2
  public void testActivityCreated() {2
    final Activity activity1 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity1, Mockito.mock(Bundle.class));2
2
    final Activity activity2 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity2, Mockito.mock(Bundle.class));2
2
    assertThat(mWrapper.getActivityStack().size(), equalTo(2));2
    assertThat(mWrapper.getActivityStack().get(0), equalTo(activity1));2
    assertThat(mWrapper.getActivityStack().get(1), equalTo(activity2));2
  }2
2
  @Test2
  public void testActivityPaused() {2
    final Activity activity1 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity1, Mockito.mock(Bundle.class));2
2
    final Activity activity2 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity2, Mockito.mock(Bundle.class));2
2
    mCallbacks.onActivityPaused(activity2);2
2
    assertThat(mWrapper.getActivityStack().size(), equalTo(2));2
    assertThat(mWrapper.getActivityStack().get(0), equalTo(activity1));2
    assertThat(mWrapper.getActivityStack().get(1), equalTo(activity2));2
  }2
2
  @Test2
  public void testFinishingActivityPaused() {2
    final Activity activity1 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity1, Mockito.mock(Bundle.class));2
2
    final Activity activity2 = Mockito.mock(Activity.class);2
    mCallbacks.onActivityCreated(activity2, Mockito.mock(Bundle.class));2
2
    Mockito.when(activity2.isFinishing()).thenReturn(true);2
    mCallbacks.onActivityPaused(activity2);2
2
    assertThat(mWrapper.getActivityStack().size(), equalTo(1));2
    assertThat(mWrapper.getActivityStack().get(0), equalTo(activity1));2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.inspector;2
2
import static org.hamcrest.CoreMatchers.equalTo;2
import static org.hamcrest.MatcherAssert.assertThat;2
2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.testing.SonarConnectionMock;2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import java.util.List;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class DescriptorMappingTest {2
2
  private class TestClass {}2
2
  private class TestSubClass extends TestClass {}2
2
  private class TestDescriptor<T> extends NodeDescriptor<T> {2
    @Override2
    public void init(T node) {}2
2
    @Override2
    public String getId(T node) {2
      return null;2
    }2
2
    @Override2
    public String getName(T node) {2
      return null;2
    }2
2
    @Override2
    public int getChildCount(T node) {2
      return 0;2
    }2
2
    @Override2
    public T getChildAt(T node, int index) {2
      return null;2
    }2
2
    @Override2
    public List<Named<SonarObject>> getData(T node) {2
      return null;2
    }2
2
    @Override2
    public void setValue(T node, String[] path, SonarDynamic value) throws Exception {}2
2
    @Override2
    public List<Named<String>> getAttributes(T node) {2
      return null;2
    }2
2
    @Override2
    public void setHighlighted(T node, boolean selected) {}2
2
    @Override2
    public void hitTest(T node, Touch touch) {}2
2
    @Override2
    public String getDecoration(T obj) {2
      return null;2
    }2
2
    @Override2
    public boolean matches(String query, T obj) {2
      return false;2
    }2
  }2
2
  @Test2
  public void testDescriptorForRegisteredClass() {2
    final DescriptorMapping descriptorMapping = new DescriptorMapping();2
    final NodeDescriptor descriptor1 = new TestDescriptor<>();2
    final NodeDescriptor descriptor2 = new TestDescriptor<>();2
2
    descriptorMapping.register(TestClass.class, descriptor1);2
    descriptorMapping.register(TestSubClass.class, descriptor2);2
2
    assertThat(descriptorMapping.descriptorForClass(TestSubClass.class), equalTo(descriptor2));2
  }2
2
  @Test2
  public void testDescriptorForRegisteredSuperClass() {2
    final DescriptorMapping descriptorMapping = new DescriptorMapping();2
    final NodeDescriptor descriptor = new TestDescriptor<>();2
2
    descriptorMapping.register(TestClass.class, descriptor);2
2
    assertThat(descriptorMapping.descriptorForClass(TestSubClass.class), equalTo(descriptor));2
  }2
2
  @Test2
  public void testOnConnect() {2
    final DescriptorMapping descriptorMapping = new DescriptorMapping();2
    final NodeDescriptor descriptor = new TestDescriptor<>();2
    descriptorMapping.register(TestClass.class, descriptor);2
2
    final SonarConnection connection = new SonarConnectionMock();2
    descriptorMapping.onConnect(connection);2
2
    assertThat(descriptor.connected(), equalTo(true));2
  }2
2
  @Test2
  public void testOnDisconnect() {2
    final DescriptorMapping descriptorMapping = new DescriptorMapping();2
    final NodeDescriptor descriptor = new TestDescriptor<>();2
    descriptorMapping.register(TestClass.class, descriptor);2
2
    final SonarConnection connection = new SonarConnectionMock();2
    descriptorMapping.onConnect(connection);2
    descriptorMapping.onDisconnect();2
2
    assertThat(descriptor.connected(), equalTo(false));2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.inspector;2
2
import static org.hamcrest.CoreMatchers.equalTo;2
import static org.hamcrest.CoreMatchers.hasItem;2
import static org.hamcrest.MatcherAssert.assertThat;2
2
import android.app.Application;2
import android.graphics.Rect;2
import android.view.View;2
import android.view.ViewGroup;2
import android.widget.FrameLayout;2
import com.facebook.sonar.core.SonarArray;2
import com.facebook.sonar.core.SonarConnection;2
import com.facebook.sonar.core.SonarDynamic;2
import com.facebook.sonar.core.SonarObject;2
import com.facebook.sonar.plugins.console.iface.NullScriptingEnvironment;2
import com.facebook.sonar.plugins.console.iface.ScriptingEnvironment;2
import com.facebook.sonar.plugins.inspector.InspectorSonarPlugin.TouchOverlayView;2
import com.facebook.sonar.plugins.inspector.descriptors.ApplicationDescriptor;2
import com.facebook.sonar.testing.SonarConnectionMock;2
import com.facebook.sonar.testing.SonarResponderMock;2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import java.util.ArrayList;2
import java.util.Arrays;2
import java.util.Collections;2
import java.util.List;2
import org.junit.Before;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
import org.mockito.Mockito;2
import org.robolectric.RuntimeEnvironment;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class InspectorSonarPluginTest {2
2
  private MockApplicationDescriptor mApplicationDescriptor;2
  private DescriptorMapping mDescriptorMapping;2
  private ApplicationWrapper mApp;2
  private ScriptingEnvironment mScriptingEnvironment;2
2
  @Before2
  public void setup() {2
    final Application app = Mockito.spy(RuntimeEnvironment.application);2
    Mockito.when(app.getApplicationContext()).thenReturn(app);2
    Mockito.when(app.getPackageName()).thenReturn("com.facebook.sonar");2
2
    mDescriptorMapping = new DescriptorMapping();2
    mApplicationDescriptor = new MockApplicationDescriptor();2
    mDescriptorMapping.register(ApplicationWrapper.class, mApplicationDescriptor);2
    mDescriptorMapping.register(TestNode.class, new TestNodeDescriptor());2
    mScriptingEnvironment = new NullScriptingEnvironment();2
    mApp = Mockito.spy(new ApplicationWrapper(app));2
  }2
2
  @Test2
  public void testOnConnect() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnection connection = new SonarConnectionMock();2
2
    plugin.onConnect(connection);2
    assertThat(mApplicationDescriptor.connected(), equalTo(true));2
  }2
2
  @Test2
  public void testOnDisconnect() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnection connection = new SonarConnectionMock();2
2
    plugin.onConnect(connection);2
    plugin.onDisconnect();2
    assertThat(mApplicationDescriptor.connected(), equalTo(false));2
  }2
2
  @Test2
  public void testGetRoot() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarResponderMock responder = new SonarResponderMock();2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    mApplicationDescriptor.root = root;2
    plugin.mGetRoot.onReceive(null, responder);2
2
    assertThat(2
        responder.successes,2
        hasItem(2
            new SonarObject.Builder()2
                .put("id", "com.facebook.sonar")2
                .put("name", "com.facebook.sonar")2
                .put("data", new SonarObject.Builder())2
                .put("children", new SonarArray.Builder().put("test"))2
                .put("attributes", new SonarArray.Builder())2
                .put("decoration", (String) null)2
                .build()));2
  }2
2
  @Test2
  public void testGetNodes() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarResponderMock responder = new SonarResponderMock();2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    root.name = "test";2
    mApplicationDescriptor.root = root;2
2
    plugin.mGetRoot.onReceive(null, responder);2
    plugin.mGetNodes.onReceive(2
        new SonarObject.Builder().put("ids", new SonarArray.Builder().put("test")).build(),2
        responder);2
2
    assertThat(2
        responder.successes,2
        hasItem(2
            new SonarObject.Builder()2
                .put(2
                    "elements",2
                    new SonarArray.Builder()2
                        .put(2
                            new SonarObject.Builder()2
                                .put("id", "test")2
                                .put("name", "test")2
                                .put("data", new SonarObject.Builder())2
                                .put("children", new SonarArray.Builder())2
                                .put("attributes", new SonarArray.Builder())2
                                .put("decoration", (String) null)))2
                .build()));2
  }2
2
  @Test2
  public void testGetNodesThatDontExist() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarResponderMock responder = new SonarResponderMock();2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    mApplicationDescriptor.root = root;2
2
    plugin.mGetRoot.onReceive(null, responder);2
    plugin.mGetNodes.onReceive(2
        new SonarObject.Builder().put("ids", new SonarArray.Builder().put("notest")).build(),2
        responder);2
2
    assertThat(2
        responder.errors,2
        hasItem(2
            new SonarObject.Builder()2
                .put("message", "No node with given id")2
                .put("id", "notest")2
                .build()));2
  }2
2
  @Test2
  public void testSetData() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    final SonarResponderMock responder = new SonarResponderMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    root.data = new SonarObject.Builder().put("prop", "value").build();2
2
    mApplicationDescriptor.root = root;2
2
    plugin.mGetRoot.onReceive(null, responder);2
    plugin.mSetData.onReceive(2
        new SonarObject.Builder()2
            .put("id", "test")2
            .put("path", new SonarArray.Builder().put("data"))2
            .put("value", new SonarObject.Builder().put("prop", "updated_value"))2
            .build(),2
        responder);2
2
    assertThat(root.data.getString("prop"), equalTo("updated_value"));2
    assertThat(2
        connection.sent.get("invalidate"),2
        hasItem(2
            new SonarObject.Builder()2
                .put(2
                    "nodes",2
                    new SonarArray.Builder()2
                        .put(new SonarObject.Builder().put("id", "test").build())2
                        .build())2
                .build()));2
  }2
2
  @Test2
  public void testSetHighlighted() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    final SonarResponderMock responder = new SonarResponderMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    mApplicationDescriptor.root = root;2
2
    plugin.mGetRoot.onReceive(null, responder);2
    plugin.mSetHighlighted.onReceive(2
        new SonarObject.Builder().put("id", "com.facebook.sonar").build(), responder);2
2
    assertThat(mApplicationDescriptor.highlighted, equalTo(true));2
2
    plugin.mSetHighlighted.onReceive(2
        new SonarObject.Builder().put("id", "test").build(), responder);2
2
    assertThat(mApplicationDescriptor.highlighted, equalTo(false));2
    assertThat(root.highlighted, equalTo(true));2
2
    plugin.onDisconnect();2
2
    assertThat(root.highlighted, equalTo(false));2
  }2
2
  @Test2
  public void testHitTest() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    plugin.onConnect(connection);2
2
    final TestNode one = new TestNode();2
    one.id = "1";2
    one.bounds.set(5, 5, 20, 20);2
2
    final TestNode two = new TestNode();2
    two.id = "2";2
    two.bounds.set(20, 20, 100, 100);2
2
    final TestNode three = new TestNode();2
    three.id = "3";2
    three.bounds.set(0, 0, 20, 20);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    root.children.add(one);2
    root.children.add(two);2
    root.children.add(three);2
    mApplicationDescriptor.root = root;2
2
    plugin.hitTest(10, 10);2
2
    assertThat(2
        connection.sent.get("select"),2
        hasItem(2
            new SonarObject.Builder()2
                .put(2
                    "path", new SonarArray.Builder().put("com.facebook.sonar").put("test").put("3"))2
                .build()));2
  }2
2
  @Test2
  public void testSetSearchActive() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    final SonarResponderMock responder = new SonarResponderMock();2
    plugin.onConnect(connection);2
2
    final ViewGroup decorView = Mockito.spy(new FrameLayout(mApp.getApplication()));2
    Mockito.when(mApp.getViewRoots()).thenReturn(Arrays.<View>asList(decorView));2
2
    plugin.mSetSearchActive.onReceive(2
        new SonarObject.Builder().put("active", true).build(), responder);2
2
    Mockito.verify(decorView, Mockito.times(1)).addView(Mockito.any(TouchOverlayView.class));2
2
    plugin.mSetSearchActive.onReceive(2
        new SonarObject.Builder().put("active", false).build(), responder);2
2
    Mockito.verify(decorView, Mockito.times(1)).removeView(Mockito.any(TouchOverlayView.class));2
  }2
2
  @Test(expected = AssertionError.class)2
  public void testNullChildThrows() throws Exception {2
    final InspectorSonarPlugin plugin =2
        new InspectorSonarPlugin(mApp, mDescriptorMapping, mScriptingEnvironment);2
    final SonarResponderMock responder = new SonarResponderMock();2
    final SonarConnectionMock connection = new SonarConnectionMock();2
    plugin.onConnect(connection);2
2
    final TestNode root = new TestNode();2
    root.id = "test";2
    root.name = "test";2
    root.children = new ArrayList<>();2
    root.children.add(null);2
    mApplicationDescriptor.root = root;2
2
    plugin.mGetRoot.onReceive(null, responder);2
    plugin.mGetNodes.onReceive(2
        new SonarObject.Builder().put("ids", new SonarArray.Builder().put("test")).build(),2
        responder);2
  }2
2
  private class TestNode {2
    String id;2
    String name;2
    List<TestNode> children = new ArrayList<>();2
    SonarObject data;2
    List<Named<String>> atttributes = new ArrayList<>();2
    String decoration;2
    boolean highlighted;2
    Rect bounds = new Rect();2
  }2
2
  private class TestNodeDescriptor extends NodeDescriptor<TestNode> {2
2
    @Override2
    public void init(TestNode node) {}2
2
    @Override2
    public String getId(TestNode node) {2
      return node.id;2
    }2
2
    @Override2
    public String getName(TestNode node) {2
      return node.name;2
    }2
2
    @Override2
    public int getChildCount(TestNode node) {2
      return node.children.size();2
    }2
2
    @Override2
    public Object getChildAt(TestNode node, int index) {2
      return node.children.get(index);2
    }2
2
    @Override2
    public List<Named<SonarObject>> getData(TestNode node) {2
      return Collections.singletonList(new Named<>("data", node.data));2
    }2
2
    @Override2
    public void setValue(TestNode node, String[] path, SonarDynamic value) throws Exception {2
      if (path[0].equals("data")) {2
        node.data = value.asObject();2
      }2
      invalidate(node);2
    }2
2
    @Override2
    public List<Named<String>> getAttributes(TestNode node) {2
      return node.atttributes;2
    }2
2
    @Override2
    public void setHighlighted(TestNode node, boolean selected) {2
      node.highlighted = selected;2
    }2
2
    @Override2
    public void hitTest(TestNode node, Touch touch) {2
      for (int i = node.children.size() - 1; i >= 0; i--) {2
        final TestNode child = node.children.get(i);2
        final Rect bounds = child.bounds;2
        if (touch.containedIn(bounds.left, bounds.top, bounds.right, bounds.bottom)) {2
          touch.continueWithOffset(i, bounds.left, bounds.top);2
          return;2
        }2
      }2
2
      touch.finish();2
    }2
2
    @Override2
    public String getDecoration(TestNode node) {2
      return node.decoration;2
    }2
2
    @Override2
    public boolean matches(String query, TestNode node) {2
      return getName(node).contains(query);2
    }2
  }2
2
  private class MockApplicationDescriptor extends ApplicationDescriptor {2
    TestNode root;2
    boolean highlighted;2
2
    @Override2
    public int getChildCount(ApplicationWrapper node) {2
      return 1;2
    }2
2
    @Override2
    public Object getChildAt(ApplicationWrapper node, int index) {2
      return root;2
    }2
2
    @Override2
    public void setHighlighted(ApplicationWrapper node, boolean selected) {2
      highlighted = selected;2
    }2
2
    @Override2
    public void hitTest(ApplicationWrapper node, Touch touch) {2
      touch.continueWithOffset(0, 0, 0);2
    }2
  }2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.sonar.plugins.inspector.descriptors;2
2
import static android.view.View.MeasureSpec.EXACTLY;2
import static android.view.View.MeasureSpec.makeMeasureSpec;2
import static org.mockito.Matchers.any;2
2
import android.view.View;2
import android.view.ViewGroup;2
import android.widget.FrameLayout;2
import com.facebook.sonar.plugins.inspector.Touch;2
import com.facebook.testing.robolectric.v3.WithTestDefaultsRunner;2
import org.junit.Test;2
import org.junit.runner.RunWith;2
import org.mockito.Mockito;2
import org.robolectric.RuntimeEnvironment;2
2
@RunWith(WithTestDefaultsRunner.class)2
public class ViewGroupDescriptorTest {2
2
  @Test2
  public void testHitTestVisibleChild() {2
    final ViewGroupDescriptor descriptor = new ViewGroupDescriptor();2
2
    final ViewGroup root = new FrameLayout(RuntimeEnvironment.application);2
    final View child = new View(RuntimeEnvironment.application);2
    root.addView(child);2
2
    root.measure(makeMeasureSpec(100, EXACTLY), makeMeasureSpec(100, EXACTLY));2
    root.layout(0, 0, 100, 100);2
2
    final Touch touch = Mockito.mock(Touch.class);2
    Mockito.when(touch.containedIn(any(int.class), any(int.class), any(int.class), any(int.class)))2
        .thenReturn(true);2
    descriptor.hitTest(root, touch);2
    Mockito.verify(touch, Mockito.times(1)).continueWithOffset(0, 0, 0);2
  }2
2
  @Test2
  public void testHitTestInvisibleChild() {2
    final ViewGroupDescriptor descriptor = new ViewGroupDescriptor();2
2
    final ViewGroup root = new FrameLayout(RuntimeEnvironment.application);2
    final View child = new View(RuntimeEnvironment.application);2
    child.setVisibility(View.GONE);2
    root.addView(child);2
2
    root.measure(makeMeasureSpec(100, EXACTLY), makeMeasureSpec(100, EXACTLY));2
    root.layout(0, 0, 100, 100);2
2
    final Touch touch = Mockito.mock(Touch.class);2
    Mockito.when(touch.containedIn(any(int.class), any(int.class), any(int.class), any(int.class)))2
        .thenReturn(true);2
    descriptor.hitTest(root, touch);2
    Mockito.verify(touch, Mockito.times(1)).finish();2
  }2
}2
/* src/config.h.  Generated from config.h.in by configure.  */2
/* src/config.h.in.  Generated from configure.ac by autoheader.  */2
2
/* define if glog doesn't use RTTI */2
#define DISABLE_RTTI 12
2
/* Namespace for Google classes */2
#define GOOGLE_NAMESPACE google2
2
/* Define if you have the `dladdr' function */2
#define HAVE_DLADDR 12
2
/* Define to 1 if you have the <dlfcn.h> header file. */2
#define HAVE_DLFCN_H 12
2
/* Define to 1 if you have the <execinfo.h> header file. */2
/* #undef HAVE_EXECINFO_H */2
2
/* Define if you have the `fcntl' function */2
#define HAVE_FCNTL 12
2
/* Define to 1 if you have the <glob.h> header file. */2
/* #undef HAVE_GLOB_H */2
2
/* Define to 1 if you have the <inttypes.h> header file. */2
#define HAVE_INTTYPES_H 12
2
/* Define to 1 if you have the `pthread' library (-lpthread). */2
/* #undef HAVE_LIBPTHREAD */2
2
/* Define to 1 if you have the <libunwind.h> header file. */2
/* #undef HAVE_LIBUNWIND_H */2
2
/* define if you have google gflags library */2
/* #undef HAVE_LIB_GFLAGS */2
2
/* define if you have google gmock library */2
/* #undef HAVE_LIB_GMOCK */2
2
/* define if you have google gtest library */2
/* #undef HAVE_LIB_GTEST */2
2
/* define if you have libunwind */2
/* #undef HAVE_LIB_UNWIND */2
2
/* Define to 1 if you have the <memory.h> header file. */2
#define HAVE_MEMORY_H 12
2
/* define if the compiler implements namespaces */2
#define HAVE_NAMESPACES 12
2
/* Define if you have POSIX threads libraries and header files. */2
#define HAVE_PTHREAD 12
2
/* Define to 1 if you have the <pwd.h> header file. */2
#define HAVE_PWD_H 12
2
/* define if the compiler implements pthread_rwlock_* */2
#define HAVE_RWLOCK 12
2
/* Define if you have the `sigaltstack' function */2
#define HAVE_SIGALTSTACK 12
2
/* Define to 1 if you have the <stdint.h> header file. */2
#define HAVE_STDINT_H 12
2
/* Define to 1 if you have the <stdlib.h> header file. */2
#define HAVE_STDLIB_H 12
2
/* Define to 1 if you have the <strings.h> header file. */2
#define HAVE_STRINGS_H 12
2
/* Define to 1 if you have the <string.h> header file. */2
#define HAVE_STRING_H 12
2
/* Define to 1 if you have the <syscall.h> header file. */2
/* #undef HAVE_SYSCALL_H */2
2
/* Define to 1 if you have the <syslog.h> header file. */2
#define HAVE_SYSLOG_H 12
2
/* Define to 1 if you have the <sys/stat.h> header file. */2
#define HAVE_SYS_STAT_H 12
2
/* Define to 1 if you have the <sys/syscall.h> header file. */2
#define HAVE_SYS_SYSCALL_H 12
2
/* Define to 1 if you have the <sys/time.h> header file. */2
#define HAVE_SYS_TIME_H 12
2
/* Define to 1 if you have the <sys/types.h> header file. */2
#define HAVE_SYS_TYPES_H 12
2
/* Define to 1 if you have the <sys/ucontext.h> header file. */2
/* #undef HAVE_SYS_UCONTEXT_H */2
2
/* Define to 1 if you have the <sys/utsname.h> header file. */2
#define HAVE_SYS_UTSNAME_H 12
2
/* Define to 1 if you have the <ucontext.h> header file. */2
/* #undef HAVE_UCONTEXT_H */2
2
/* Define to 1 if you have the <unistd.h> header file. */2
#define HAVE_UNISTD_H 12
2
/* Define to 1 if you have the <unwind.h> header file. */2
#define HAVE_UNWIND_H 12
2
/* define if the compiler supports using expression for operator */2
#define HAVE_USING_OPERATOR 12
2
/* define if your compiler has __attribute__ */2
#define HAVE___ATTRIBUTE__ 12
2
/* define if your compiler has __builtin_expect */2
#define HAVE___BUILTIN_EXPECT 12
2
/* define if your compiler has __sync_val_compare_and_swap */2
#define HAVE___SYNC_VAL_COMPARE_AND_SWAP 12
2
/* Define to the sub-directory in which libtool stores uninstalled libraries.2
   */2
#define LT_OBJDIR ".libs/"2
2
/* Name of package */2
#define PACKAGE "glog"2
2
/* Define to the address where bug reports for this package should be sent. */2
#define PACKAGE_BUGREPORT "opensource@google.com"2
2
/* Define to the full name of this package. */2
#define PACKAGE_NAME "glog"2
2
/* Define to the full name and version of this package. */2
#define PACKAGE_STRING "glog 0.3.3"2
2
/* Define to the one symbol short name of this package. */2
#define PACKAGE_TARNAME "glog"2
2
/* Define to the home page for this package. */2
#define PACKAGE_URL ""2
2
/* Define to the version of this package. */2
#define PACKAGE_VERSION "0.3.3"2
2
/* How to access the PC from a struct ucontext */2
/* #undef PC_FROM_UCONTEXT */2
2
/* Define to necessary symbol if this constant uses a non-standard name on2
   your system. */2
/* #undef PTHREAD_CREATE_JOINABLE */2
2
/* The size of `void *', as computed by sizeof. */2
#define SIZEOF_VOID_P 42
2
/* Define to 1 if you have the ANSI C header files. */2
/* #undef STDC_HEADERS */2
2
/* the namespace where STL code like vector<> is defined */2
#define STL_NAMESPACE std2
2
/* location of source code */2
#define TEST_SRC_DIR "."2
2
/* Version number of package */2
#define VERSION "0.3.3"2
2
/* Stops putting the code inside the Google namespace */2
#define _END_GOOGLE_NAMESPACE_ }2
2
/* Puts following code inside the Google namespace */2
#define _START_GOOGLE_NAMESPACE_ namespace google {2
2
2
/* TODO(vjn/dreiss): revisit these when use the android-21 (or newer) NDK platform. */2
#undef HAVE_SYSCALL_H2
#undef HAVE_SYS_SYSCALL_H2
#undef OS_LINUX2
#undef OS_MACOSX2
// Copyright (c) 1999, Google Inc.2
// All rights reserved.2
//2
// Redistribution and use in source and binary forms, with or without2
// modification, are permitted provided that the following conditions are2
// met:2
//2
//     * Redistributions of source code must retain the above copyright2
// notice, this list of conditions and the following disclaimer.2
//     * Redistributions in binary form must reproduce the above2
// copyright notice, this list of conditions and the following disclaimer2
// in the documentation and/or other materials provided with the2
// distribution.2
//     * Neither the name of Google Inc. nor the names of its2
// contributors may be used to endorse or promote products derived from2
// this software without specific prior written permission.2
//2
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS2
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT2
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR2
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT2
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,2
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT2
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,2
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY2
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT2
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE2
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.2
2
#define _GNU_SOURCE 1 // needed for O_NOFOLLOW and pread()/pwrite()2
2
#include "utilities.h"2
2
#include <algorithm>2
#include <assert.h>2
#include <iomanip>2
#include <string>2
#ifdef HAVE_UNISTD_H2
# include <unistd.h>  // For _exit.2
#endif2
#include <climits>2
#include <sys/types.h>2
#include <sys/stat.h>2
#ifdef HAVE_SYS_UTSNAME_H2
# include <sys/utsname.h>  // For uname.2
#endif2
#include <fcntl.h>2
#include <cstdio>2
#include <iostream>2
#include <stdarg.h>2
#include <stdlib.h>2
#ifdef HAVE_PWD_H2
# include <pwd.h>2
#endif2
#ifdef HAVE_SYSLOG_H2
# include <syslog.h>2
#endif2
#include <vector>2
#include <errno.h>                   // for errno2
#include <sstream>2
#include "base/commandlineflags.h"        // to get the program name2
#include "glog/logging.h"2
#include "glog/raw_logging.h"2
#include "base/googleinit.h"2
2
#ifdef HAVE_STACKTRACE2
# include "stacktrace.h"2
#endif2
2
using std::string;2
using std::vector;2
using std::setw;2
using std::setfill;2
using std::hex;2
using std::dec;2
using std::min;2
using std::ostream;2
using std::ostringstream;2
2
using std::FILE;2
using std::fwrite;2
using std::fclose;2
using std::fflush;2
using std::fprintf;2
using std::perror;2
2
#ifdef __QNX__2
using std::fdopen;2
#endif2
2
#ifdef _WIN322
#define fdopen _fdopen2
#endif2
2
// There is no thread annotation support.2
#define EXCLUSIVE_LOCKS_REQUIRED(mu)2
2
static bool BoolFromEnv(const char *varname, bool defval) {2
  const char* const valstr = getenv(varname);2
  if (!valstr) {2
    return defval;2
  }2
  return memchr("tTyY1\0", valstr[0], 6) != NULL;2
}2
2
GLOG_DEFINE_bool(logtostderr, BoolFromEnv("GOOGLE_LOGTOSTDERR", false),2
                 "log messages go to stderr instead of logfiles");2
GLOG_DEFINE_bool(alsologtostderr, BoolFromEnv("GOOGLE_ALSOLOGTOSTDERR", false),2
                 "log messages go to stderr in addition to logfiles");2
GLOG_DEFINE_bool(colorlogtostderr, false,2
                 "color messages logged to stderr (if supported by terminal)");2
#ifdef OS_LINUX2
GLOG_DEFINE_bool(drop_log_memory, true, "Drop in-memory buffers of log contents. "2
                 "Logs can grow very quickly and they are rarely read before they "2
                 "need to be evicted from memory. Instead, drop them from memory "2
                 "as soon as they are flushed to disk.");2
_START_GOOGLE_NAMESPACE_2
namespace logging {2
static const int64 kPageSize = getpagesize();2
}2
_END_GOOGLE_NAMESPACE_2
#endif2
2
// By default, errors (including fatal errors) get logged to stderr as2
// well as the file.2
//2
// The default is ERROR instead of FATAL so that users can see problems2
// when they run a program without having to look in another file.2
DEFINE_int32(stderrthreshold,2
             GOOGLE_NAMESPACE::GLOG_ERROR,2
             "log messages at or above this level are copied to stderr in "2
             "addition to logfiles.  This flag obsoletes --alsologtostderr.");2
2
GLOG_DEFINE_string(alsologtoemail, "",2
                   "log messages go to these email addresses "2
                   "in addition to logfiles");2
GLOG_DEFINE_bool(log_prefix, true,2
                 "Prepend the log prefix to the start of each log line");2
GLOG_DEFINE_int32(minloglevel, 0, "Messages logged at a lower level than this don't "2
                  "actually get logged anywhere");2
GLOG_DEFINE_int32(logbuflevel, 0,2
                  "Buffer log messages logged at this level or lower"2
                  " (-1 means don't buffer; 0 means buffer INFO only;"2
                  " ...)");2
GLOG_DEFINE_int32(logbufsecs, 30,2
                  "Buffer log messages for at most this many seconds");2
GLOG_DEFINE_int32(logemaillevel, 999,2
                  "Email log messages logged at this level or higher"2
                  " (0 means email all; 3 means email FATAL only;"2
                  " ...)");2
GLOG_DEFINE_string(logmailer, "/bin/mail",2
                   "Mailer used to send logging email");2
2
// Compute the default value for --log_dir2
static const char* DefaultLogDir() {2
  const char* env;2
  env = getenv("GOOGLE_LOG_DIR");2
  if (env != NULL && env[0] != '\0') {2
    return env;2
  }2
  env = getenv("TEST_TMPDIR");2
  if (env != NULL && env[0] != '\0') {2
    return env;2
  }2
  return "";2
}2
2
GLOG_DEFINE_int32(logfile_mode, 0664, "Log file mode/permissions.");2
2
GLOG_DEFINE_string(log_dir, DefaultLogDir(),2
                   "If specified, logfiles are written into this directory instead "2
                   "of the default logging directory.");2
GLOG_DEFINE_string(log_link, "", "Put additional links to the log "2
                   "files in this directory");2
2
GLOG_DEFINE_int32(max_log_size, 1800,2
                  "approx. maximum log file size (in MB). A value of 0 will "2
                  "be silently overridden to 1.");2
2
GLOG_DEFINE_bool(stop_logging_if_full_disk, false,2
                 "Stop attempting to log to disk if the disk is full.");2
2
GLOG_DEFINE_string(log_backtrace_at, "",2
                   "Emit a backtrace when logging at file:linenum.");2
2
// TODO(hamaji): consider windows2
#define PATH_SEPARATOR '/'2
2
#ifndef HAVE_PREAD2
#if defined(OS_WINDOWS)2
#include <BaseTsd.h>2
#define ssize_t SSIZE_T2
#endif2
ssize_t pread(int fd, void* buf, size_t count, off_t offset) {2
  off_t orig_offset = lseek(fd, 0, SEEK_CUR);2
  if (orig_offset == (off_t)-1)2
    return -1;2
  if (lseek(fd, offset, SEEK_CUR) == (off_t)-1)2
    return -1;2
  ssize_t len = read(fd, buf, count);2
  if (len < 0)2
    return len;2
  if (lseek(fd, orig_offset, SEEK_SET) == (off_t)-1)2
    return -1;2
  return len;2
}2
#endif  // !HAVE_PREAD2
2
#ifndef HAVE_PWRITE2
static ssize_t pwrite(int fd, void* buf, size_t count, off_t offset) {2
  off_t orig_offset = lseek(fd, 0, SEEK_CUR);2
  if (orig_offset == (off_t)-1)2
    return -1;2
  if (lseek(fd, offset, SEEK_CUR) == (off_t)-1)2
    return -1;2
  ssize_t len = write(fd, buf, count);2
  if (len < 0)2
    return len;2
  if (lseek(fd, orig_offset, SEEK_SET) == (off_t)-1)2
    return -1;2
  return len;2
}2
#endif  // !HAVE_PWRITE2
2
static void GetHostName(string* hostname) {2
#if defined(HAVE_SYS_UTSNAME_H)2
  struct utsname buf;2
  if (0 != uname(&buf)) {2
    // ensure null termination on failure2
    *buf.nodename = '\0';2
  }2
  *hostname = buf.nodename;2
#elif defined(OS_WINDOWS)2
  char buf[MAX_COMPUTERNAME_LENGTH + 1];2
  DWORD len = MAX_COMPUTERNAME_LENGTH + 1;2
  if (GetComputerNameA(buf, &len)) {2
    *hostname = buf;2
  } else {2
    hostname->clear();2
  }2
#else2
# warning There is no way to retrieve the host name.2
  *hostname = "(unknown)";2
#endif2
}2
2
// Returns true iff terminal supports using colors in output.2
static bool TerminalSupportsColor() {2
  bool term_supports_color = false;2
#ifdef OS_WINDOWS2
  // on Windows TERM variable is usually not set, but the console does2
  // support colors.2
  term_supports_color = true;2
#else2
  // On non-Windows platforms, we rely on the TERM variable.2
  const char* const term = getenv("TERM");2
  if (term != NULL && term[0] != '\0') {2
    term_supports_color =2
      !strcmp(term, "xterm") ||2
      !strcmp(term, "xterm-color") ||2
      !strcmp(term, "xterm-256color") ||2
      !strcmp(term, "screen-256color") ||2
      !strcmp(term, "screen") ||2
      !strcmp(term, "linux") ||2
      !strcmp(term, "cygwin");2
  }2
#endif2
  return term_supports_color;2
}2
2
_START_GOOGLE_NAMESPACE_2
2
enum GLogColor {2
  COLOR_DEFAULT,2
  COLOR_RED,2
  COLOR_GREEN,2
  COLOR_YELLOW2
};2
2
static GLogColor SeverityToColor(LogSeverity severity) {2
  assert(severity >= 0 && severity < NUM_SEVERITIES);2
  GLogColor color = COLOR_DEFAULT;2
  switch (severity) {2
  case GLOG_INFO:2
    color = COLOR_DEFAULT;2
    break;2
  case GLOG_WARNING:2
    color = COLOR_YELLOW;2
    break;2
  case GLOG_ERROR:2
  case GLOG_FATAL:2
    color = COLOR_RED;2
    break;2
  default:2
    // should never get here.2
    assert(false);2
  }2
  return color;2
}2
2
#ifdef OS_WINDOWS2
2
// Returns the character attribute for the given color.2
WORD GetColorAttribute(GLogColor color) {2
  switch (color) {2
    case COLOR_RED:    return FOREGROUND_RED;2
    case COLOR_GREEN:  return FOREGROUND_GREEN;2
    case COLOR_YELLOW: return FOREGROUND_RED | FOREGROUND_GREEN;2
    default:           return 0;2
  }2
}2
2
#else2
2
// Returns the ANSI color code for the given color.2
const char* GetAnsiColorCode(GLogColor color) {2
  switch (color) {2
  case COLOR_RED:     return "1";2
  case COLOR_GREEN:   return "2";2
  case COLOR_YELLOW:  return "3";2
  case COLOR_DEFAULT:  return "";2
  };2
  return NULL; // stop warning about return type.2
}2
2
#endif  // OS_WINDOWS2
2
// Safely get max_log_size, overriding to 1 if it somehow gets defined as 02
static int32 MaxLogSize() {2
  return (FLAGS_max_log_size > 0 ? FLAGS_max_log_size : 1);2
}2
2
// An arbitrary limit on the length of a single log message.  This2
// is so that streaming can be done more efficiently.2
const size_t LogMessage::kMaxLogMessageLen = 30000;2
2
struct LogMessage::LogMessageData  {2
  LogMessageData();2
2
  int preserved_errno_;      // preserved errno2
  // Buffer space; contains complete message text.2
  char message_text_[LogMessage::kMaxLogMessageLen+1];2
  LogStream stream_;2
  char severity_;      // What level is this LogMessage logged at?2
  int line_;                 // line number where logging call is.2
  void (LogMessage::*send_method_)();  // Call this in destructor to send2
  union {  // At most one of these is used: union to keep the size low.2
    LogSink* sink_;             // NULL or sink to send message to2
    std::vector<std::string>* outvec_; // NULL or vector to push message onto2
    std::string* message_;             // NULL or string to write message into2
  };2
  time_t timestamp_;            // Time of creation of LogMessage2
  struct ::tm tm_time_;         // Time of creation of LogMessage2
  size_t num_prefix_chars_;     // # of chars of prefix in this message2
  size_t num_chars_to_log_;     // # of chars of msg to send to log2
  size_t num_chars_to_syslog_;  // # of chars of msg to send to syslog2
  const char* basename_;        // basename of file that called LOG2
  const char* fullname_;        // fullname of file that called LOG2
  bool has_been_flushed_;       // false => data has not been flushed2
  bool first_fatal_;            // true => this was first fatal msg2
2
 private:2
  LogMessageData(const LogMessageData&);2
  void operator=(const LogMessageData&);2
};2
2
// A mutex that allows only one thread to log at a time, to keep things from2
// getting jumbled.  Some other very uncommon logging operations (like2
// changing the destination file for log messages of a given severity) also2
// lock this mutex.  Please be sure that anybody who might possibly need to2
// lock it does so.2
static Mutex log_mutex;2
2
// Number of messages sent at each severity.  Under log_mutex.2
int64 LogMessage::num_messages_[NUM_SEVERITIES] = {0, 0, 0, 0};2
2
// Globally disable log writing (if disk is full)2
static bool stop_writing = false;2
2
const char*const LogSeverityNames[NUM_SEVERITIES] = {2
  "INFO", "WARNING", "ERROR", "FATAL"2
};2
2
// Has the user called SetExitOnDFatal(true)?2
static bool exit_on_dfatal = true;2
2
const char* GetLogSeverityName(LogSeverity severity) {2
  return LogSeverityNames[severity];2
}2
2
static bool SendEmailInternal(const char*dest, const char *subject,2
                              const char*body, bool use_logging);2
2
base::Logger::~Logger() {2
}2
2
namespace {2
2
// Encapsulates all file-system related state2
class LogFileObject : public base::Logger {2
 public:2
  LogFileObject(LogSeverity severity, const char* base_filename);2
  ~LogFileObject();2
2
  virtual void Write(bool force_flush, // Should we force a flush here?2
                     time_t timestamp,  // Timestamp for this entry2
                     const char* message,2
                     int message_len);2
2
  // Configuration options2
  void SetBasename(const char* basename);2
  void SetExtension(const char* ext);2
  void SetSymlinkBasename(const char* symlink_basename);2
2
  // Normal flushing routine2
  virtual void Flush();2
2
  // It is the actual file length for the system loggers,2
  // i.e., INFO, ERROR, etc.2
  virtual uint32 LogSize() {2
    MutexLock l(&lock_);2
    return file_length_;2
  }2
2
  // Internal flush routine.  Exposed so that FlushLogFilesUnsafe()2
  // can avoid grabbing a lock.  Usually Flush() calls it after2
  // acquiring lock_.2
  void FlushUnlocked();2
2
 private:2
  static const uint32 kRolloverAttemptFrequency = 0x20;2
2
  Mutex lock_;2
  bool base_filename_selected_;2
  string base_filename_;2
  string symlink_basename_;2
  string filename_extension_;     // option users can specify (eg to add port#)2
  FILE* file_;2
  LogSeverity severity_;2
  uint32 bytes_since_flush_;2
  uint32 file_length_;2
  unsigned int rollover_attempt_;2
  int64 next_flush_time_;         // cycle count at which to flush log2
2
  // Actually create a logfile using the value of base_filename_ and the2
  // supplied argument time_pid_string2
  // REQUIRES: lock_ is held2
  bool CreateLogfile(const string& time_pid_string);2
};2
2
}  // namespace2
2
class LogDestination {2
 public:2
  friend class LogMessage;2
  friend void ReprintFatalMessage();2
  friend base::Logger* base::GetLogger(LogSeverity);2
  friend void base::SetLogger(LogSeverity, base::Logger*);2
2
  // These methods are just forwarded to by their global versions.2
  static void SetLogDestination(LogSeverity severity,2
				const char* base_filename);2
  static void SetLogSymlink(LogSeverity severity,2
                            const char* symlink_basename);2
  static void AddLogSink(LogSink *destination);2
  static void RemoveLogSink(LogSink *destination);2
  static void SetLogFilenameExtension(const char* filename_extension);2
  static void SetStderrLogging(LogSeverity min_severity);2
  static void SetEmailLogging(LogSeverity min_severity, const char* addresses);2
  static void LogToStderr();2
  // Flush all log files that are at least at the given severity level2
  static void FlushLogFiles(int min_severity);2
  static void FlushLogFilesUnsafe(int min_severity);2
2
  // we set the maximum size of our packet to be 1400, the logic being2
  // to prevent fragmentation.2
  // Really this number is arbitrary.2
  static const int kNetworkBytes = 1400;2
2
  static const string& hostname();2
  static const bool& terminal_supports_color() {2
    return terminal_supports_color_;2
  }2
2
  static void DeleteLogDestinations();2
2
 private:2
  LogDestination(LogSeverity severity, const char* base_filename);2
  ~LogDestination() { }2
2
  // Take a log message of a particular severity and log it to stderr2
  // iff it's of a high enough severity to deserve it.2
  static void MaybeLogToStderr(LogSeverity severity, const char* message,2
			       size_t len);2
2
  // Take a log message of a particular severity and log it to email2
  // iff it's of a high enough severity to deserve it.2
  static void MaybeLogToEmail(LogSeverity severity, const char* message,2
			      size_t len);2
  // Take a log message of a particular severity and log it to a file2
  // iff the base filename is not "" (which means "don't log to me")2
  static void MaybeLogToLogfile(LogSeverity severity,2
                                time_t timestamp,2
				const char* message, size_t len);2
  // Take a log message of a particular severity and log it to the file2
  // for that severity and also for all files with severity less than2
  // this severity.2
  static void LogToAllLogfiles(LogSeverity severity,2
                               time_t timestamp,2
                               const char* message, size_t len);2
2
  // Send logging info to all registered sinks.2
  static void LogToSinks(LogSeverity severity,2
                         const char *full_filename,2
                         const char *base_filename,2
                         int line,2
                         const struct ::tm* tm_time,2
                         const char* message,2
                         size_t message_len);2
2
  // Wait for all registered sinks via WaitTillSent2
  // including the optional one in "data".2
  static void WaitForSinks(LogMessage::LogMessageData* data);2
2
  static LogDestination* log_destination(LogSeverity severity);2
2
  LogFileObject fileobject_;2
  base::Logger* logger_;      // Either &fileobject_, or wrapper around it2
2
  static LogDestination* log_destinations_[NUM_SEVERITIES];2
  static LogSeverity email_logging_severity_;2
  static string addresses_;2
  static string hostname_;2
  static bool terminal_supports_color_;2
2
  // arbitrary global logging destinations.2
  static vector<LogSink*>* sinks_;2
2
  // Protects the vector sinks_,2
  // but not the LogSink objects its elements reference.2
  static Mutex sink_mutex_;2
2
  // Disallow2
  LogDestination(const LogDestination&);2
  LogDestination& operator=(const LogDestination&);2
};2
2
// Errors do not get logged to email by default.2
LogSeverity LogDestination::email_logging_severity_ = 99999;2
2
string LogDestination::addresses_;2
string LogDestination::hostname_;2
2
vector<LogSink*>* LogDestination::sinks_ = NULL;2
Mutex LogDestination::sink_mutex_;2
bool LogDestination::terminal_supports_color_ = TerminalSupportsColor();2
2
/* static */2
const string& LogDestination::hostname() {2
  if (hostname_.empty()) {2
    GetHostName(&hostname_);2
    if (hostname_.empty()) {2
      hostname_ = "(unknown)";2
    }2
  }2
  return hostname_;2
}2
2
LogDestination::LogDestination(LogSeverity severity,2
                               const char* base_filename)2
  : fileobject_(severity, base_filename),2
    logger_(&fileobject_) {2
}2
2
inline void LogDestination::FlushLogFilesUnsafe(int min_severity) {2
  // assume we have the log_mutex or we simply don't care2
  // about it2
  for (int i = min_severity; i < NUM_SEVERITIES; i++) {2
    LogDestination* log = log_destinations_[i];2
    if (log != NULL) {2
      // Flush the base fileobject_ logger directly instead of going2
      // through any wrappers to reduce chance of deadlock.2
      log->fileobject_.FlushUnlocked();2
    }2
  }2
}2
2
inline void LogDestination::FlushLogFiles(int min_severity) {2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&log_mutex);2
  for (int i = min_severity; i < NUM_SEVERITIES; i++) {2
    LogDestination* log = log_destination(i);2
    if (log != NULL) {2
      log->logger_->Flush();2
    }2
  }2
}2
2
inline void LogDestination::SetLogDestination(LogSeverity severity,2
					      const char* base_filename) {2
  assert(severity >= 0 && severity < NUM_SEVERITIES);2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&log_mutex);2
  log_destination(severity)->fileobject_.SetBasename(base_filename);2
}2
2
inline void LogDestination::SetLogSymlink(LogSeverity severity,2
                                          const char* symlink_basename) {2
  CHECK_GE(severity, 0);2
  CHECK_LT(severity, NUM_SEVERITIES);2
  MutexLock l(&log_mutex);2
  log_destination(severity)->fileobject_.SetSymlinkBasename(symlink_basename);2
}2
2
inline void LogDestination::AddLogSink(LogSink *destination) {2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&sink_mutex_);2
  if (!sinks_)  sinks_ = new vector<LogSink*>;2
  sinks_->push_back(destination);2
}2
2
inline void LogDestination::RemoveLogSink(LogSink *destination) {2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&sink_mutex_);2
  // This doesn't keep the sinks in order, but who cares?2
  if (sinks_) {2
    for (int i = sinks_->size() - 1; i >= 0; i--) {2
      if ((*sinks_)[i] == destination) {2
        (*sinks_)[i] = (*sinks_)[sinks_->size() - 1];2
        sinks_->pop_back();2
        break;2
      }2
    }2
  }2
}2
2
inline void LogDestination::SetLogFilenameExtension(const char* ext) {2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&log_mutex);2
  for ( int severity = 0; severity < NUM_SEVERITIES; ++severity ) {2
    log_destination(severity)->fileobject_.SetExtension(ext);2
  }2
}2
2
inline void LogDestination::SetStderrLogging(LogSeverity min_severity) {2
  assert(min_severity >= 0 && min_severity < NUM_SEVERITIES);2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&log_mutex);2
  FLAGS_stderrthreshold = min_severity;2
}2
2
inline void LogDestination::LogToStderr() {2
  // *Don't* put this stuff in a mutex lock, since SetStderrLogging &2
  // SetLogDestination already do the locking!2
  SetStderrLogging(0);            // thus everything is "also" logged to stderr2
  for ( int i = 0; i < NUM_SEVERITIES; ++i ) {2
    SetLogDestination(i, "");     // "" turns off logging to a logfile2
  }2
}2
2
inline void LogDestination::SetEmailLogging(LogSeverity min_severity,2
					    const char* addresses) {2
  assert(min_severity >= 0 && min_severity < NUM_SEVERITIES);2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // all this stuff.2
  MutexLock l(&log_mutex);2
  LogDestination::email_logging_severity_ = min_severity;2
  LogDestination::addresses_ = addresses;2
}2
2
static void ColoredWriteToStderr(LogSeverity severity,2
                                 const char* message, size_t len) {2
  const GLogColor color =2
      (LogDestination::terminal_supports_color() && FLAGS_colorlogtostderr) ?2
      SeverityToColor(severity) : COLOR_DEFAULT;2
2
  // Avoid using cerr from this module since we may get called during2
  // exit code, and cerr may be partially or fully destroyed by then.2
  if (COLOR_DEFAULT == color) {2
    fwrite(message, len, 1, stderr);2
    return;2
  }2
#ifdef OS_WINDOWS2
  const HANDLE stderr_handle = GetStdHandle(STD_ERROR_HANDLE);2
2
  // Gets the current text color.2
  CONSOLE_SCREEN_BUFFER_INFO buffer_info;2
  GetConsoleScreenBufferInfo(stderr_handle, &buffer_info);2
  const WORD old_color_attrs = buffer_info.wAttributes;2
2
  // We need to flush the stream buffers into the console before each2
  // SetConsoleTextAttribute call lest it affect the text that is already2
  // printed but has not yet reached the console.2
  fflush(stderr);2
  SetConsoleTextAttribute(stderr_handle,2
                          GetColorAttribute(color) | FOREGROUND_INTENSITY);2
  fwrite(message, len, 1, stderr);2
  fflush(stderr);2
  // Restores the text color.2
  SetConsoleTextAttribute(stderr_handle, old_color_attrs);2
#else2
  fprintf(stderr, "\033[0;3%sm", GetAnsiColorCode(color));2
  fwrite(message, len, 1, stderr);2
  fprintf(stderr, "\033[m");  // Resets the terminal to default.2
#endif  // OS_WINDOWS2
}2
2
static void WriteToStderr(const char* message, size_t len) {2
  // Avoid using cerr from this module since we may get called during2
  // exit code, and cerr may be partially or fully destroyed by then.2
  fwrite(message, len, 1, stderr);2
}2
2
inline void LogDestination::MaybeLogToStderr(LogSeverity severity,2
					     const char* message, size_t len) {2
  if ((severity >= FLAGS_stderrthreshold) || FLAGS_alsologtostderr) {2
    ColoredWriteToStderr(severity, message, len);2
#ifdef OS_WINDOWS2
    // On Windows, also output to the debugger2
    ::OutputDebugStringA(string(message,len).c_str());2
#endif2
  }2
}2
2
2
inline void LogDestination::MaybeLogToEmail(LogSeverity severity,2
					    const char* message, size_t len) {2
  if (severity >= email_logging_severity_ ||2
      severity >= FLAGS_logemaillevel) {2
    string to(FLAGS_alsologtoemail);2
    if (!addresses_.empty()) {2
      if (!to.empty()) {2
        to += ",";2
      }2
      to += addresses_;2
    }2
    const string subject(string("[LOG] ") + LogSeverityNames[severity] + ": " +2
                         glog_internal_namespace_::ProgramInvocationShortName());2
    string body(hostname());2
    body += "\n\n";2
    body.append(message, len);2
2
    // should NOT use SendEmail().  The caller of this function holds the2
    // log_mutex and SendEmail() calls LOG/VLOG which will block trying to2
    // acquire the log_mutex object.  Use SendEmailInternal() and set2
    // use_logging to false.2
    SendEmailInternal(to.c_str(), subject.c_str(), body.c_str(), false);2
  }2
}2
2
2
inline void LogDestination::MaybeLogToLogfile(LogSeverity severity,2
                                              time_t timestamp,2
					      const char* message,2
					      size_t len) {2
  const bool should_flush = severity > FLAGS_logbuflevel;2
  LogDestination* destination = log_destination(severity);2
  destination->logger_->Write(should_flush, timestamp, message, len);2
}2
2
inline void LogDestination::LogToAllLogfiles(LogSeverity severity,2
                                             time_t timestamp,2
                                             const char* message,2
                                             size_t len) {2
2
  if ( FLAGS_logtostderr ) {           // global flag: never log to file2
    ColoredWriteToStderr(severity, message, len);2
  } else {2
    for (int i = severity; i >= 0; --i)2
      LogDestination::MaybeLogToLogfile(i, timestamp, message, len);2
  }2
}2
2
inline void LogDestination::LogToSinks(LogSeverity severity,2
                                       const char *full_filename,2
                                       const char *base_filename,2
                                       int line,2
                                       const struct ::tm* tm_time,2
                                       const char* message,2
                                       size_t message_len) {2
  ReaderMutexLock l(&sink_mutex_);2
  if (sinks_) {2
    for (int i = sinks_->size() - 1; i >= 0; i--) {2
      (*sinks_)[i]->send(severity, full_filename, base_filename,2
                         line, tm_time, message, message_len);2
    }2
  }2
}2
2
inline void LogDestination::WaitForSinks(LogMessage::LogMessageData* data) {2
  ReaderMutexLock l(&sink_mutex_);2
  if (sinks_) {2
    for (int i = sinks_->size() - 1; i >= 0; i--) {2
      (*sinks_)[i]->WaitTillSent();2
    }2
  }2
  const bool send_to_sink =2
      (data->send_method_ == &LogMessage::SendToSink) ||2
      (data->send_method_ == &LogMessage::SendToSinkAndLog);2
  if (send_to_sink && data->sink_ != NULL) {2
    data->sink_->WaitTillSent();2
  }2
}2
2
LogDestination* LogDestination::log_destinations_[NUM_SEVERITIES];2
2
inline LogDestination* LogDestination::log_destination(LogSeverity severity) {2
  assert(severity >=0 && severity < NUM_SEVERITIES);2
  if (!log_destinations_[severity]) {2
    log_destinations_[severity] = new LogDestination(severity, NULL);2
  }2
  return log_destinations_[severity];2
}2
2
void LogDestination::DeleteLogDestinations() {2
  for (int severity = 0; severity < NUM_SEVERITIES; ++severity) {2
    delete log_destinations_[severity];2
    log_destinations_[severity] = NULL;2
  }2
  MutexLock l(&sink_mutex_);2
  delete sinks_;2
  sinks_ = NULL;2
}2
2
namespace {2
2
LogFileObject::LogFileObject(LogSeverity severity,2
                             const char* base_filename)2
  : base_filename_selected_(base_filename != NULL),2
    base_filename_((base_filename != NULL) ? base_filename : ""),2
    symlink_basename_(glog_internal_namespace_::ProgramInvocationShortName()),2
    filename_extension_(),2
    file_(NULL),2
    severity_(severity),2
    bytes_since_flush_(0),2
    file_length_(0),2
    rollover_attempt_(kRolloverAttemptFrequency-1),2
    next_flush_time_(0) {2
  assert(severity >= 0);2
  assert(severity < NUM_SEVERITIES);2
}2
2
LogFileObject::~LogFileObject() {2
  MutexLock l(&lock_);2
  if (file_ != NULL) {2
    fclose(file_);2
    file_ = NULL;2
  }2
}2
2
void LogFileObject::SetBasename(const char* basename) {2
  MutexLock l(&lock_);2
  base_filename_selected_ = true;2
  if (base_filename_ != basename) {2
    // Get rid of old log file since we are changing names2
    if (file_ != NULL) {2
      fclose(file_);2
      file_ = NULL;2
      rollover_attempt_ = kRolloverAttemptFrequency-1;2
    }2
    base_filename_ = basename;2
  }2
}2
2
void LogFileObject::SetExtension(const char* ext) {2
  MutexLock l(&lock_);2
  if (filename_extension_ != ext) {2
    // Get rid of old log file since we are changing names2
    if (file_ != NULL) {2
      fclose(file_);2
      file_ = NULL;2
      rollover_attempt_ = kRolloverAttemptFrequency-1;2
    }2
    filename_extension_ = ext;2
  }2
}2
2
void LogFileObject::SetSymlinkBasename(const char* symlink_basename) {2
  MutexLock l(&lock_);2
  symlink_basename_ = symlink_basename;2
}2
2
void LogFileObject::Flush() {2
  MutexLock l(&lock_);2
  FlushUnlocked();2
}2
2
void LogFileObject::FlushUnlocked(){2
  if (file_ != NULL) {2
    fflush(file_);2
    bytes_since_flush_ = 0;2
  }2
  // Figure out when we are due for another flush.2
  const int64 next = (FLAGS_logbufsecs2
                      * static_cast<int64>(1000000));  // in usec2
  next_flush_time_ = CycleClock_Now() + UsecToCycles(next);2
}2
2
bool LogFileObject::CreateLogfile(const string& time_pid_string) {2
  string string_filename = base_filename_+filename_extension_+2
                           time_pid_string;2
  const char* filename = string_filename.c_str();2
  int fd = open(filename, O_WRONLY | O_CREAT | O_EXCL, FLAGS_logfile_mode);2
  if (fd == -1) return false;2
#ifdef HAVE_FCNTL2
  // Mark the file close-on-exec. We don't really care if this fails2
  fcntl(fd, F_SETFD, FD_CLOEXEC);2
#endif2
2
  file_ = fdopen(fd, "a");  // Make a FILE*.2
  if (file_ == NULL) {  // Man, we're screwed!2
    close(fd);2
    unlink(filename);  // Erase the half-baked evidence: an unusable log file2
    return false;2
  }2
2
  // We try to create a symlink called <program_name>.<severity>,2
  // which is easier to use.  (Every time we create a new logfile,2
  // we destroy the old symlink and create a new one, so it always2
  // points to the latest logfile.)  If it fails, we're sad but it's2
  // no error.2
  if (!symlink_basename_.empty()) {2
    // take directory from filename2
    const char* slash = strrchr(filename, PATH_SEPARATOR);2
    const string linkname =2
      symlink_basename_ + '.' + LogSeverityNames[severity_];2
    string linkpath;2
    if ( slash ) linkpath = string(filename, slash-filename+1);  // get dirname2
    linkpath += linkname;2
    unlink(linkpath.c_str());                    // delete old one if it exists2
2
#if defined(OS_WINDOWS)2
    // TODO(hamaji): Create lnk file on Windows?2
#elif defined(HAVE_UNISTD_H)2
    // We must have unistd.h.2
    // Make the symlink be relative (in the same dir) so that if the2
    // entire log directory gets relocated the link is still valid.2
    const char *linkdest = slash ? (slash + 1) : filename;2
    if (symlink(linkdest, linkpath.c_str()) != 0) {2
      // silently ignore failures2
    }2
2
    // Make an additional link to the log file in a place specified by2
    // FLAGS_log_link, if indicated2
    if (!FLAGS_log_link.empty()) {2
      linkpath = FLAGS_log_link + "/" + linkname;2
      unlink(linkpath.c_str());                  // delete old one if it exists2
      if (symlink(filename, linkpath.c_str()) != 0) {2
        // silently ignore failures2
      }2
    }2
#endif2
  }2
2
  return true;  // Everything worked2
}2
2
void LogFileObject::Write(bool force_flush,2
                          time_t timestamp,2
                          const char* message,2
                          int message_len) {2
  MutexLock l(&lock_);2
2
  // We don't log if the base_name_ is "" (which means "don't write")2
  if (base_filename_selected_ && base_filename_.empty()) {2
    return;2
  }2
2
  if (static_cast<int>(file_length_ >> 20) >= MaxLogSize() ||2
      PidHasChanged()) {2
    if (file_ != NULL) fclose(file_);2
    file_ = NULL;2
    file_length_ = bytes_since_flush_ = 0;2
    rollover_attempt_ = kRolloverAttemptFrequency-1;2
  }2
2
  // If there's no destination file, make one before outputting2
  if (file_ == NULL) {2
    // Try to rollover the log file every 32 log messages.  The only time2
    // this could matter would be when we have trouble creating the log2
    // file.  If that happens, we'll lose lots of log messages, of course!2
    if (++rollover_attempt_ != kRolloverAttemptFrequency) return;2
    rollover_attempt_ = 0;2
2
    struct ::tm tm_time;2
    localtime_r(&timestamp, &tm_time);2
2
    // The logfile's filename will have the date/time & pid in it2
    ostringstream time_pid_stream;2
    time_pid_stream.fill('0');2
    time_pid_stream << 1900+tm_time.tm_year2
                    << setw(2) << 1+tm_time.tm_mon2
                    << setw(2) << tm_time.tm_mday2
                    << '-'2
                    << setw(2) << tm_time.tm_hour2
                    << setw(2) << tm_time.tm_min2
                    << setw(2) << tm_time.tm_sec2
                    << '.'2
                    << GetMainThreadPid();2
    const string& time_pid_string = time_pid_stream.str();2
2
    if (base_filename_selected_) {2
      if (!CreateLogfile(time_pid_string)) {2
        perror("Could not create log file");2
        fprintf(stderr, "COULD NOT CREATE LOGFILE '%s'!\n",2
                time_pid_string.c_str());2
        return;2
      }2
    } else {2
      // If no base filename for logs of this severity has been set, use a2
      // default base filename of2
      // "<program name>.<hostname>.<user name>.log.<severity level>.".  So2
      // logfiles will have names like2
      // webserver.examplehost.root.log.INFO.19990817-150000.4354, where2
      // 19990817 is a date (1999 August 17), 150000 is a time (15:00:00),2
      // and 4354 is the pid of the logging process.  The date & time reflect2
      // when the file was created for output.2
      //2
      // Where does the file get put?  Successively try the directories2
      // "/tmp", and "."2
      string stripped_filename(2
          glog_internal_namespace_::ProgramInvocationShortName());2
      string hostname;2
      GetHostName(&hostname);2
2
      string uidname = MyUserName();2
      // We should not call CHECK() here because this function can be2
      // called after holding on to log_mutex. We don't want to2
      // attempt to hold on to the same mutex, and get into a2
      // deadlock. Simply use a name like invalid-user.2
      if (uidname.empty()) uidname = "invalid-user";2
2
      stripped_filename = stripped_filename+'.'+hostname+'.'2
                          +uidname+".log."2
                          +LogSeverityNames[severity_]+'.';2
      // We're going to (potentially) try to put logs in several different dirs2
      const vector<string> & log_dirs = GetLoggingDirectories();2
2
      // Go through the list of dirs, and try to create the log file in each2
      // until we succeed or run out of options2
      bool success = false;2
      for (vector<string>::const_iterator dir = log_dirs.begin();2
           dir != log_dirs.end();2
           ++dir) {2
        base_filename_ = *dir + "/" + stripped_filename;2
        if ( CreateLogfile(time_pid_string) ) {2
          success = true;2
          break;2
        }2
      }2
      // If we never succeeded, we have to give up2
      if ( success == false ) {2
        perror("Could not create logging file");2
        fprintf(stderr, "COULD NOT CREATE A LOGGINGFILE %s!",2
                time_pid_string.c_str());2
        return;2
      }2
    }2
2
    // Write a header message into the log file2
    ostringstream file_header_stream;2
    file_header_stream.fill('0');2
    file_header_stream << "Log file created at: "2
                       << 1900+tm_time.tm_year << '/'2
                       << setw(2) << 1+tm_time.tm_mon << '/'2
                       << setw(2) << tm_time.tm_mday2
                       << ' '2
                       << setw(2) << tm_time.tm_hour << ':'2
                       << setw(2) << tm_time.tm_min << ':'2
                       << setw(2) << tm_time.tm_sec << '\n'2
                       << "Running on machine: "2
                       << LogDestination::hostname() << '\n'2
                       << "Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu "2
                       << "threadid file:line] msg" << '\n';2
    const string& file_header_string = file_header_stream.str();2
2
    const int header_len = file_header_string.size();2
    fwrite(file_header_string.data(), 1, header_len, file_);2
    file_length_ += header_len;2
    bytes_since_flush_ += header_len;2
  }2
2
  // Write to LOG file2
  if ( !stop_writing ) {2
    // fwrite() doesn't return an error when the disk is full, for2
    // messages that are less than 4096 bytes. When the disk is full,2
    // it returns the message length for messages that are less than2
    // 4096 bytes. fwrite() returns 4096 for message lengths that are2
    // greater than 4096, thereby indicating an error.2
    errno = 0;2
    fwrite(message, 1, message_len, file_);2
    if ( FLAGS_stop_logging_if_full_disk &&2
         errno == ENOSPC ) {  // disk full, stop writing to disk2
      stop_writing = true;  // until the disk is2
      return;2
    } else {2
      file_length_ += message_len;2
      bytes_since_flush_ += message_len;2
    }2
  } else {2
    if ( CycleClock_Now() >= next_flush_time_ )2
      stop_writing = false;  // check to see if disk has free space.2
    return;  // no need to flush2
  }2
2
  // See important msgs *now*.  Also, flush logs at least every 10^6 chars,2
  // or every "FLAGS_logbufsecs" seconds.2
  if ( force_flush ||2
       (bytes_since_flush_ >= 1000000) ||2
       (CycleClock_Now() >= next_flush_time_) ) {2
    FlushUnlocked();2
#ifdef OS_LINUX2
    if (FLAGS_drop_log_memory) {2
      if (file_length_ >= logging::kPageSize) {2
        // don't evict the most recent page2
        uint32 len = file_length_ & ~(logging::kPageSize - 1);2
        posix_fadvise(fileno(file_), 0, len, POSIX_FADV_DONTNEED);2
      }2
    }2
#endif2
  }2
}2
2
}  // namespace2
2
2
// Static log data space to avoid alloc failures in a LOG(FATAL)2
//2
// Since multiple threads may call LOG(FATAL), and we want to preserve2
// the data from the first call, we allocate two sets of space.  One2
// for exclusive use by the first thread, and one for shared use by2
// all other threads.2
static Mutex fatal_msg_lock;2
static CrashReason crash_reason;2
static bool fatal_msg_exclusive = true;2
static LogMessage::LogMessageData fatal_msg_data_exclusive;2
static LogMessage::LogMessageData fatal_msg_data_shared;2
2
LogMessage::LogMessageData::LogMessageData()2
  : stream_(message_text_, LogMessage::kMaxLogMessageLen, 0) {2
}2
2
LogMessage::LogMessage(const char* file, int line, LogSeverity severity,2
                       int ctr, void (LogMessage::*send_method)())2
    : allocated_(NULL) {2
  Init(file, line, severity, send_method);2
  data_->stream_.set_ctr(ctr);2
}2
2
LogMessage::LogMessage(const char* file, int line,2
                       const CheckOpString& result)2
    : allocated_(NULL) {2
  Init(file, line, GLOG_FATAL, &LogMessage::SendToLog);2
  stream() << "Check failed: " << (*result.str_) << " ";2
}2
2
LogMessage::LogMessage(const char* file, int line)2
    : allocated_(NULL) {2
  Init(file, line, GLOG_INFO, &LogMessage::SendToLog);2
}2
2
LogMessage::LogMessage(const char* file, int line, LogSeverity severity)2
    : allocated_(NULL) {2
  Init(file, line, severity, &LogMessage::SendToLog);2
}2
2
LogMessage::LogMessage(const char* file, int line, LogSeverity severity,2
                       LogSink* sink, bool also_send_to_log)2
    : allocated_(NULL) {2
  Init(file, line, severity, also_send_to_log ? &LogMessage::SendToSinkAndLog :2
                                                &LogMessage::SendToSink);2
  data_->sink_ = sink;  // override Init()'s setting to NULL2
}2
2
LogMessage::LogMessage(const char* file, int line, LogSeverity severity,2
                       vector<string> *outvec)2
    : allocated_(NULL) {2
  Init(file, line, severity, &LogMessage::SaveOrSendToLog);2
  data_->outvec_ = outvec; // override Init()'s setting to NULL2
}2
2
LogMessage::LogMessage(const char* file, int line, LogSeverity severity,2
                       string *message)2
    : allocated_(NULL) {2
  Init(file, line, severity, &LogMessage::WriteToStringAndLog);2
  data_->message_ = message;  // override Init()'s setting to NULL2
}2
2
void LogMessage::Init(const char* file,2
                      int line,2
                      LogSeverity severity,2
                      void (LogMessage::*send_method)()) {2
  allocated_ = NULL;2
  if (severity != GLOG_FATAL || !exit_on_dfatal) {2
    allocated_ = new LogMessageData();2
    data_ = allocated_;2
    data_->first_fatal_ = false;2
  } else {2
    MutexLock l(&fatal_msg_lock);2
    if (fatal_msg_exclusive) {2
      fatal_msg_exclusive = false;2
      data_ = &fatal_msg_data_exclusive;2
      data_->first_fatal_ = true;2
    } else {2
      data_ = &fatal_msg_data_shared;2
      data_->first_fatal_ = false;2
    }2
  }2
2
  stream().fill('0');2
  data_->preserved_errno_ = errno;2
  data_->severity_ = severity;2
  data_->line_ = line;2
  data_->send_method_ = send_method;2
  data_->sink_ = NULL;2
  data_->outvec_ = NULL;2
  WallTime now = WallTime_Now();2
  data_->timestamp_ = static_cast<time_t>(now);2
  localtime_r(&data_->timestamp_, &data_->tm_time_);2
  int usecs = static_cast<int>((now - data_->timestamp_) * 1000000);2
  RawLog__SetLastTime(data_->tm_time_, usecs);2
2
  data_->num_chars_to_log_ = 0;2
  data_->num_chars_to_syslog_ = 0;2
  data_->basename_ = const_basename(file);2
  data_->fullname_ = file;2
  data_->has_been_flushed_ = false;2
2
  // If specified, prepend a prefix to each line.  For example:2
  //    I1018 160715 f5d4fbb0 logging.cc:1153]2
  //    (log level, GMT month, date, time, thread_id, file basename, line)2
  // We exclude the thread_id for the default thread.2
  if (FLAGS_log_prefix && (line != kNoLogPrefix)) {2
    stream() << LogSeverityNames[severity][0]2
             << setw(2) << 1+data_->tm_time_.tm_mon2
             << setw(2) << data_->tm_time_.tm_mday2
             << ' '2
             << setw(2) << data_->tm_time_.tm_hour  << ':'2
             << setw(2) << data_->tm_time_.tm_min   << ':'2
             << setw(2) << data_->tm_time_.tm_sec   << "."2
             << setw(6) << usecs2
             << ' '2
             << setfill(' ') << setw(5)2
             << static_cast<unsigned int>(GetTID()) << setfill('0')2
             << ' '2
             << data_->basename_ << ':' << data_->line_ << "] ";2
  }2
  data_->num_prefix_chars_ = data_->stream_.pcount();2
2
  if (!FLAGS_log_backtrace_at.empty()) {2
    char fileline[128];2
    snprintf(fileline, sizeof(fileline), "%s:%d", data_->basename_, line);2
#ifdef HAVE_STACKTRACE2
    if (!strcmp(FLAGS_log_backtrace_at.c_str(), fileline)) {2
      string stacktrace;2
      DumpStackTraceToString(&stacktrace);2
      stream() << " (stacktrace:\n" << stacktrace << ") ";2
    }2
#endif2
  }2
}2
2
LogMessage::~LogMessage() {2
  Flush();2
  delete allocated_;2
}2
2
int LogMessage::preserved_errno() const {2
  return data_->preserved_errno_;2
}2
2
ostream& LogMessage::stream() {2
  return data_->stream_;2
}2
2
// Flush buffered message, called by the destructor, or any other function2
// that needs to synchronize the log.2
void LogMessage::Flush() {2
  if (data_->has_been_flushed_ || data_->severity_ < FLAGS_minloglevel)2
    return;2
2
  data_->num_chars_to_log_ = data_->stream_.pcount();2
  data_->num_chars_to_syslog_ =2
    data_->num_chars_to_log_ - data_->num_prefix_chars_;2
2
  // Do we need to add a \n to the end of this message?2
  bool append_newline =2
      (data_->message_text_[data_->num_chars_to_log_-1] != '\n');2
  char original_final_char = '\0';2
2
  // If we do need to add a \n, we'll do it by violating the memory of the2
  // ostrstream buffer.  This is quick, and we'll make sure to undo our2
  // modification before anything else is done with the ostrstream.  It2
  // would be preferable not to do things this way, but it seems to be2
  // the best way to deal with this.2
  if (append_newline) {2
    original_final_char = data_->message_text_[data_->num_chars_to_log_];2
    data_->message_text_[data_->num_chars_to_log_++] = '\n';2
  }2
2
  // Prevent any subtle race conditions by wrapping a mutex lock around2
  // the actual logging action per se.2
  {2
    MutexLock l(&log_mutex);2
    (this->*(data_->send_method_))();2
    ++num_messages_[static_cast<int>(data_->severity_)];2
  }2
  LogDestination::WaitForSinks(data_);2
2
  if (append_newline) {2
    // Fix the ostrstream back how it was before we screwed with it.2
    // It's 99.44% certain that we don't need to worry about doing this.2
    data_->message_text_[data_->num_chars_to_log_-1] = original_final_char;2
  }2
2
  // If errno was already set before we enter the logging call, we'll2
  // set it back to that value when we return from the logging call.2
  // It happens often that we log an error message after a syscall2
  // failure, which can potentially set the errno to some other2
  // values.  We would like to preserve the original errno.2
  if (data_->preserved_errno_ != 0) {2
    errno = data_->preserved_errno_;2
  }2
2
  // Note that this message is now safely logged.  If we're asked to flush2
  // again, as a result of destruction, say, we'll do nothing on future calls.2
  data_->has_been_flushed_ = true;2
}2
2
// Copy of first FATAL log message so that we can print it out again2
// after all the stack traces.  To preserve legacy behavior, we don't2
// use fatal_msg_data_exclusive.2
static time_t fatal_time;2
static char fatal_message[256];2
2
void ReprintFatalMessage() {2
  if (fatal_message[0]) {2
    const int n = strlen(fatal_message);2
    if (!FLAGS_logtostderr) {2
      // Also write to stderr (don't color to avoid terminal checks)2
      WriteToStderr(fatal_message, n);2
    }2
    LogDestination::LogToAllLogfiles(GLOG_ERROR, fatal_time, fatal_message, n);2
  }2
}2
2
// L >= log_mutex (callers must hold the log_mutex).2
void LogMessage::SendToLog() EXCLUSIVE_LOCKS_REQUIRED(log_mutex) {2
  static bool already_warned_before_initgoogle = false;2
2
  log_mutex.AssertHeld();2
2
  RAW_DCHECK(data_->num_chars_to_log_ > 0 &&2
             data_->message_text_[data_->num_chars_to_log_-1] == '\n', "");2
2
  // Messages of a given severity get logged to lower severity logs, too2
2
  if (!already_warned_before_initgoogle && !IsGoogleLoggingInitialized()) {2
    const char w[] = "WARNING: Logging before InitGoogleLogging() is "2
                     "written to STDERR\n";2
    WriteToStderr(w, strlen(w));2
    already_warned_before_initgoogle = true;2
  }2
2
  // global flag: never log to file if set.  Also -- don't log to a2
  // file if we haven't parsed the command line flags to get the2
  // program name.2
  if (FLAGS_logtostderr || !IsGoogleLoggingInitialized()) {2
    ColoredWriteToStderr(data_->severity_,2
                         data_->message_text_, data_->num_chars_to_log_);2
2
    // this could be protected by a flag if necessary.2
    LogDestination::LogToSinks(data_->severity_,2
                               data_->fullname_, data_->basename_,2
                               data_->line_, &data_->tm_time_,2
                               data_->message_text_ + data_->num_prefix_chars_,2
                               (data_->num_chars_to_log_ -2
                                data_->num_prefix_chars_ - 1));2
  } else {2
2
    // log this message to all log files of severity <= severity_2
    LogDestination::LogToAllLogfiles(data_->severity_, data_->timestamp_,2
                                     data_->message_text_,2
                                     data_->num_chars_to_log_);2
2
    LogDestination::MaybeLogToStderr(data_->severity_, data_->message_text_,2
                                     data_->num_chars_to_log_);2
    LogDestination::MaybeLogToEmail(data_->severity_, data_->message_text_,2
                                    data_->num_chars_to_log_);2
    LogDestination::LogToSinks(data_->severity_,2
                               data_->fullname_, data_->basename_,2
                               data_->line_, &data_->tm_time_,2
                               data_->message_text_ + data_->num_prefix_chars_,2
                               (data_->num_chars_to_log_2
                                - data_->num_prefix_chars_ - 1));2
    // NOTE: -1 removes trailing \n2
  }2
2
  // If we log a FATAL message, flush all the log destinations, then toss2
  // a signal for others to catch. We leave the logs in a state that2
  // someone else can use them (as long as they flush afterwards)2
  if (data_->severity_ == GLOG_FATAL && exit_on_dfatal) {2
    if (data_->first_fatal_) {2
      // Store crash information so that it is accessible from within signal2
      // handlers that may be invoked later.2
      RecordCrashReason(&crash_reason);2
      SetCrashReason(&crash_reason);2
2
      // Store shortened fatal message for other logs and GWQ status2
      const int copy = min<int>(data_->num_chars_to_log_,2
                                sizeof(fatal_message)-1);2
      memcpy(fatal_message, data_->message_text_, copy);2
      fatal_message[copy] = '\0';2
      fatal_time = data_->timestamp_;2
    }2
2
    if (!FLAGS_logtostderr) {2
      for (int i = 0; i < NUM_SEVERITIES; ++i) {2
        if ( LogDestination::log_destinations_[i] )2
          LogDestination::log_destinations_[i]->logger_->Write(true, 0, "", 0);2
      }2
    }2
2
    // release the lock that our caller (directly or indirectly)2
    // LogMessage::~LogMessage() grabbed so that signal handlers2
    // can use the logging facility. Alternately, we could add2
    // an entire unsafe logging interface to bypass locking2
    // for signal handlers but this seems simpler.2
    log_mutex.Unlock();2
    LogDestination::WaitForSinks(data_);2
2
    const char* message = "*** Check failure stack trace: ***\n";2
    if (write(STDERR_FILENO, message, strlen(message)) < 0) {2
      // Ignore errors.2
    }2
    Fail();2
  }2
}2
2
void LogMessage::RecordCrashReason(2
    glog_internal_namespace_::CrashReason* reason) {2
  reason->filename = fatal_msg_data_exclusive.fullname_;2
  reason->line_number = fatal_msg_data_exclusive.line_;2
  reason->message = fatal_msg_data_exclusive.message_text_ +2
                    fatal_msg_data_exclusive.num_prefix_chars_;2
#ifdef HAVE_STACKTRACE2
  // Retrieve the stack trace, omitting the logging frames that got us here.2
  reason->depth = GetStackTrace(reason->stack, ARRAYSIZE(reason->stack), 4);2
#else2
  reason->depth = 0;2
#endif2
}2
2
#ifdef HAVE___ATTRIBUTE__2
# define ATTRIBUTE_NORETURN __attribute__((noreturn))2
#else2
# define ATTRIBUTE_NORETURN2
#endif2
2
static void logging_fail() ATTRIBUTE_NORETURN;2
2
static void logging_fail() {2
#if defined(_DEBUG) && defined(_MSC_VER)2
  // When debugging on windows, avoid the obnoxious dialog and make2
  // it possible to continue past a LOG(FATAL) in the debugger2
  __debugbreak();2
#else2
  abort();2
#endif2
}2
2
typedef void (*logging_fail_func_t)() ATTRIBUTE_NORETURN;2
2
GOOGLE_GLOG_DLL_DECL2
logging_fail_func_t g_logging_fail_func = &logging_fail;2
2
void InstallFailureFunction(void (*fail_func)()) {2
  g_logging_fail_func = (logging_fail_func_t)fail_func;2
}2
2
void LogMessage::Fail() {2
  g_logging_fail_func();2
}2
2
// L >= log_mutex (callers must hold the log_mutex).2
void LogMessage::SendToSink() EXCLUSIVE_LOCKS_REQUIRED(log_mutex) {2
  if (data_->sink_ != NULL) {2
    RAW_DCHECK(data_->num_chars_to_log_ > 0 &&2
               data_->message_text_[data_->num_chars_to_log_-1] == '\n', "");2
    data_->sink_->send(data_->severity_, data_->fullname_, data_->basename_,2
                       data_->line_, &data_->tm_time_,2
                       data_->message_text_ + data_->num_prefix_chars_,2
                       (data_->num_chars_to_log_ -2
                        data_->num_prefix_chars_ - 1));2
  }2
}2
2
// L >= log_mutex (callers must hold the log_mutex).2
void LogMessage::SendToSinkAndLog() EXCLUSIVE_LOCKS_REQUIRED(log_mutex) {2
  SendToSink();2
  SendToLog();2
}2
2
// L >= log_mutex (callers must hold the log_mutex).2
void LogMessage::SaveOrSendToLog() EXCLUSIVE_LOCKS_REQUIRED(log_mutex) {2
  if (data_->outvec_ != NULL) {2
    RAW_DCHECK(data_->num_chars_to_log_ > 0 &&2
               data_->message_text_[data_->num_chars_to_log_-1] == '\n', "");2
    // Omit prefix of message and trailing newline when recording in outvec_.2
    const char *start = data_->message_text_ + data_->num_prefix_chars_;2
    int len = data_->num_chars_to_log_ - data_->num_prefix_chars_ - 1;2
    data_->outvec_->push_back(string(start, len));2
  } else {2
    SendToLog();2
  }2
}2
2
void LogMessage::WriteToStringAndLog() EXCLUSIVE_LOCKS_REQUIRED(log_mutex) {2
  if (data_->message_ != NULL) {2
    RAW_DCHECK(data_->num_chars_to_log_ > 0 &&2
               data_->message_text_[data_->num_chars_to_log_-1] == '\n', "");2
    // Omit prefix of message and trailing newline when writing to message_.2
    const char *start = data_->message_text_ + data_->num_prefix_chars_;2
    int len = data_->num_chars_to_log_ - data_->num_prefix_chars_ - 1;2
    data_->message_->assign(start, len);2
  }2
  SendToLog();2
}2
2
// L >= log_mutex (callers must hold the log_mutex).2
void LogMessage::SendToSyslogAndLog() {2
#ifdef HAVE_SYSLOG_H2
  // Before any calls to syslog(), make a single call to openlog()2
  static bool openlog_already_called = false;2
  if (!openlog_already_called) {2
    openlog(glog_internal_namespace_::ProgramInvocationShortName(),2
            LOG_CONS | LOG_NDELAY | LOG_PID,2
            LOG_USER);2
    openlog_already_called = true;2
  }2
2
  // This array maps Google severity levels to syslog levels2
  const int SEVERITY_TO_LEVEL[] = { LOG_INFO, LOG_WARNING, LOG_ERR, LOG_EMERG };2
  syslog(LOG_USER | SEVERITY_TO_LEVEL[static_cast<int>(data_->severity_)], "%.*s",2
         int(data_->num_chars_to_syslog_),2
         data_->message_text_ + data_->num_prefix_chars_);2
  SendToLog();2
#else2
  LOG(ERROR) << "No syslog support: message=" << data_->message_text_;2
#endif2
}2
2
base::Logger* base::GetLogger(LogSeverity severity) {2
  MutexLock l(&log_mutex);2
  return LogDestination::log_destination(severity)->logger_;2
}2
2
void base::SetLogger(LogSeverity severity, base::Logger* logger) {2
  MutexLock l(&log_mutex);2
  LogDestination::log_destination(severity)->logger_ = logger;2
}2
2
// L < log_mutex.  Acquires and releases mutex_.2
int64 LogMessage::num_messages(int severity) {2
  MutexLock l(&log_mutex);2
  return num_messages_[severity];2
}2
2
// Output the COUNTER value. This is only valid if ostream is a2
// LogStream.2
ostream& operator<<(ostream &os, const PRIVATE_Counter&) {2
#ifdef DISABLE_RTTI2
  LogMessage::LogStream *log = static_cast<LogMessage::LogStream*>(&os);2
#else2
  LogMessage::LogStream *log = dynamic_cast<LogMessage::LogStream*>(&os);2
#endif2
  CHECK(log && log == log->self())2
      << "You must not use COUNTER with non-glog ostream";2
  os << log->ctr();2
  return os;2
}2
2
ErrnoLogMessage::ErrnoLogMessage(const char* file, int line,2
                                 LogSeverity severity, int ctr,2
                                 void (LogMessage::*send_method)())2
    : LogMessage(file, line, severity, ctr, send_method) {2
}2
2
ErrnoLogMessage::~ErrnoLogMessage() {2
  // Don't access errno directly because it may have been altered2
  // while streaming the message.2
  stream() << ": " << StrError(preserved_errno()) << " ["2
           << preserved_errno() << "]";2
}2
2
void FlushLogFiles(LogSeverity min_severity) {2
  LogDestination::FlushLogFiles(min_severity);2
}2
2
void FlushLogFilesUnsafe(LogSeverity min_severity) {2
  LogDestination::FlushLogFilesUnsafe(min_severity);2
}2
2
void SetLogDestination(LogSeverity severity, const char* base_filename) {2
  LogDestination::SetLogDestination(severity, base_filename);2
}2
2
void SetLogSymlink(LogSeverity severity, const char* symlink_basename) {2
  LogDestination::SetLogSymlink(severity, symlink_basename);2
}2
2
LogSink::~LogSink() {2
}2
2
void LogSink::WaitTillSent() {2
  // noop default2
}2
2
string LogSink::ToString(LogSeverity severity, const char* file, int line,2
                         const struct ::tm* tm_time,2
                         const char* message, size_t message_len) {2
  ostringstream stream(string(message, message_len));2
  stream.fill('0');2
2
  // FIXME(jrvb): Updating this to use the correct value for usecs2
  // requires changing the signature for both this method and2
  // LogSink::send().  This change needs to be done in a separate CL2
  // so subclasses of LogSink can be updated at the same time.2
  int usecs = 0;2
2
  stream << LogSeverityNames[severity][0]2
         << setw(2) << 1+tm_time->tm_mon2
         << setw(2) << tm_time->tm_mday2
         << ' '2
         << setw(2) << tm_time->tm_hour << ':'2
         << setw(2) << tm_time->tm_min << ':'2
         << setw(2) << tm_time->tm_sec << '.'2
         << setw(6) << usecs2
         << ' '2
         << setfill(' ') << setw(5) << GetTID() << setfill('0')2
         << ' '2
         << file << ':' << line << "] ";2
2
  stream << string(message, message_len);2
  return stream.str();2
}2
2
void AddLogSink(LogSink *destination) {2
  LogDestination::AddLogSink(destination);2
}2
2
void RemoveLogSink(LogSink *destination) {2
  LogDestination::RemoveLogSink(destination);2
}2
2
void SetLogFilenameExtension(const char* ext) {2
  LogDestination::SetLogFilenameExtension(ext);2
}2
2
void SetStderrLogging(LogSeverity min_severity) {2
  LogDestination::SetStderrLogging(min_severity);2
}2
2
void SetEmailLogging(LogSeverity min_severity, const char* addresses) {2
  LogDestination::SetEmailLogging(min_severity, addresses);2
}2
2
void LogToStderr() {2
  LogDestination::LogToStderr();2
}2
2
namespace base {2
namespace internal {2
2
bool GetExitOnDFatal() {2
  MutexLock l(&log_mutex);2
  return exit_on_dfatal;2
}2
2
// Determines whether we exit the program for a LOG(DFATAL) message in2
// debug mode.  It does this by skipping the call to Fail/FailQuietly.2
// This is intended for testing only.2
//2
// This can have some effects on LOG(FATAL) as well.  Failure messages2
// are always allocated (rather than sharing a buffer), the crash2
// reason is not recorded, the "gwq" status message is not updated,2
// and the stack trace is not recorded.  The LOG(FATAL) *will* still2
// exit the program.  Since this function is used only in testing,2
// these differences are acceptable.2
void SetExitOnDFatal(bool value) {2
  MutexLock l(&log_mutex);2
  exit_on_dfatal = value;2
}2
2
}  // namespace internal2
}  // namespace base2
2
// use_logging controls whether the logging functions LOG/VLOG are used2
// to log errors.  It should be set to false when the caller holds the2
// log_mutex.2
static bool SendEmailInternal(const char*dest, const char *subject,2
                              const char*body, bool use_logging) {2
  if (dest && *dest) {2
    if ( use_logging ) {2
      VLOG(1) << "Trying to send TITLE:" << subject2
              << " BODY:" << body << " to " << dest;2
    } else {2
      fprintf(stderr, "Trying to send TITLE: %s BODY: %s to %s\n",2
              subject, body, dest);2
    }2
2
    string cmd =2
        FLAGS_logmailer + " -s\"" + subject + "\" " + dest;2
    FILE* pipe = popen(cmd.c_str(), "w");2
    if (pipe != NULL) {2
      // Add the body if we have one2
      if (body)2
        fwrite(body, sizeof(char), strlen(body), pipe);2
      bool ok = pclose(pipe) != -1;2
      if ( !ok ) {2
        if ( use_logging ) {2
          LOG(ERROR) << "Problems sending mail to " << dest << ": "2
                     << StrError(errno);2
        } else {2
          fprintf(stderr, "Problems sending mail to %s: %s\n",2
                  dest, StrError(errno).c_str());2
        }2
      }2
      return ok;2
    } else {2
      if ( use_logging ) {2
        LOG(ERROR) << "Unable to send mail to " << dest;2
      } else {2
        fprintf(stderr, "Unable to send mail to %s\n", dest);2
      }2
    }2
  }2
  return false;2
}2
2
bool SendEmail(const char*dest, const char *subject, const char*body){2
  return SendEmailInternal(dest, subject, body, true);2
}2
2
static void GetTempDirectories(vector<string>* list) {2
  list->clear();2
#ifdef OS_WINDOWS2
  // On windows we'll try to find a directory in this order:2
  //   C:/Documents & Settings/whomever/TEMP (or whatever GetTempPath() is)2
  //   C:/TMP/2
  //   C:/TEMP/2
  //   C:/WINDOWS/ or C:/WINNT/2
  //   .2
  char tmp[MAX_PATH];2
  if (GetTempPathA(MAX_PATH, tmp))2
    list->push_back(tmp);2
  list->push_back("C:\\tmp\\");2
  list->push_back("C:\\temp\\");2
#else2
  // Directories, in order of preference. If we find a dir that2
  // exists, we stop adding other less-preferred dirs2
  const char * candidates[] = {2
    // Non-null only during unittest/regtest2
    getenv("TEST_TMPDIR"),2
2
    // Explicitly-supplied temp dirs2
    getenv("TMPDIR"), getenv("TMP"),2
2
    // If all else fails2
    "/tmp",2
  };2
2
  for (size_t i = 0; i < ARRAYSIZE(candidates); i++) {2
    const char *d = candidates[i];2
    if (!d) continue;  // Empty env var2
2
    // Make sure we don't surprise anyone who's expecting a '/'2
    string dstr = d;2
    if (dstr[dstr.size() - 1] != '/') {2
      dstr += "/";2
    }2
    list->push_back(dstr);2
2
    struct stat statbuf;2
    if (!stat(d, &statbuf) && S_ISDIR(statbuf.st_mode)) {2
      // We found a dir that exists - we're done.2
      return;2
    }2
  }2
2
#endif2
}2
2
static vector<string>* logging_directories_list;2
2
const vector<string>& GetLoggingDirectories() {2
  // Not strictly thread-safe but we're called early in InitGoogle().2
  if (logging_directories_list == NULL) {2
    logging_directories_list = new vector<string>;2
2
    if ( !FLAGS_log_dir.empty() ) {2
      // A dir was specified, we should use it2
      logging_directories_list->push_back(FLAGS_log_dir.c_str());2
    } else {2
      GetTempDirectories(logging_directories_list);2
#ifdef OS_WINDOWS2
      char tmp[MAX_PATH];2
      if (GetWindowsDirectoryA(tmp, MAX_PATH))2
        logging_directories_list->push_back(tmp);2
      logging_directories_list->push_back(".\\");2
#else2
      logging_directories_list->push_back("./");2
#endif2
    }2
  }2
  return *logging_directories_list;2
}2
2
void TestOnly_ClearLoggingDirectoriesList() {2
  fprintf(stderr, "TestOnly_ClearLoggingDirectoriesList should only be "2
          "called from test code.\n");2
  delete logging_directories_list;2
  logging_directories_list = NULL;2
}2
2
void GetExistingTempDirectories(vector<string>* list) {2
  GetTempDirectories(list);2
  vector<string>::iterator i_dir = list->begin();2
  while( i_dir != list->end() ) {2
    // zero arg to access means test for existence; no constant2
    // defined on windows2
    if ( access(i_dir->c_str(), 0) ) {2
      i_dir = list->erase(i_dir);2
    } else {2
      ++i_dir;2
    }2
  }2
}2
2
void TruncateLogFile(const char *path, int64 limit, int64 keep) {2
#ifdef HAVE_UNISTD_H2
  struct stat statbuf;2
  const int kCopyBlockSize = 8 << 10;2
  char copybuf[kCopyBlockSize];2
  int64 read_offset, write_offset;2
  // Don't follow symlinks unless they're our own fd symlinks in /proc2
  int flags = O_RDWR;2
  // TODO(hamaji): Support other environments.2
#ifdef OS_LINUX2
  const char *procfd_prefix = "/proc/self/fd/";2
  if (strncmp(procfd_prefix, path, strlen(procfd_prefix))) flags |= O_NOFOLLOW;2
#endif2
2
  int fd = open(path, flags);2
  if (fd == -1) {2
    if (errno == EFBIG) {2
      // The log file in question has got too big for us to open. The2
      // real fix for this would be to compile logging.cc (or probably2
      // all of base/...) with -D_FILE_OFFSET_BITS=64 but that's2
      // rather scary.2
      // Instead just truncate the file to something we can manage2
      if (truncate(path, 0) == -1) {2
        PLOG(ERROR) << "Unable to truncate " << path;2
      } else {2
        LOG(ERROR) << "Truncated " << path << " due to EFBIG error";2
      }2
    } else {2
      PLOG(ERROR) << "Unable to open " << path;2
    }2
    return;2
  }2
2
  if (fstat(fd, &statbuf) == -1) {2
    PLOG(ERROR) << "Unable to fstat()";2
    goto out_close_fd;2
  }2
2
  // See if the path refers to a regular file bigger than the2
  // specified limit2
  if (!S_ISREG(statbuf.st_mode)) goto out_close_fd;2
  if (statbuf.st_size <= limit)  goto out_close_fd;2
  if (statbuf.st_size <= keep) goto out_close_fd;2
2
  // This log file is too large - we need to truncate it2
  LOG(INFO) << "Truncating " << path << " to " << keep << " bytes";2
2
  // Copy the last "keep" bytes of the file to the beginning of the file2
  read_offset = statbuf.st_size - keep;2
  write_offset = 0;2
  int bytesin, bytesout;2
  while ((bytesin = pread(fd, copybuf, sizeof(copybuf), read_offset)) > 0) {2
    bytesout = pwrite(fd, copybuf, bytesin, write_offset);2
    if (bytesout == -1) {2
      PLOG(ERROR) << "Unable to write to " << path;2
      break;2
    } else if (bytesout != bytesin) {2
      LOG(ERROR) << "Expected to write " << bytesin << ", wrote " << bytesout;2
    }2
    read_offset += bytesin;2
    write_offset += bytesout;2
  }2
  if (bytesin == -1) PLOG(ERROR) << "Unable to read from " << path;2
2
  // Truncate the remainder of the file. If someone else writes to the2
  // end of the file after our last read() above, we lose their latest2
  // data. Too bad ...2
  if (ftruncate(fd, write_offset) == -1) {2
    PLOG(ERROR) << "Unable to truncate " << path;2
  }2
2
 out_close_fd:2
  close(fd);2
#else2
  LOG(ERROR) << "No log truncation support.";2
#endif2
}2
2
void TruncateStdoutStderr() {2
#ifdef HAVE_UNISTD_H2
  int64 limit = MaxLogSize() << 20;2
  int64 keep = 1 << 20;2
  TruncateLogFile("/proc/self/fd/1", limit, keep);2
  TruncateLogFile("/proc/self/fd/2", limit, keep);2
#else2
  LOG(ERROR) << "No log truncation support.";2
#endif2
}2
2
2
// Helper functions for string comparisons.2
#define DEFINE_CHECK_STROP_IMPL(name, func, expected)                   \2
  string* Check##func##expected##Impl(const char* s1, const char* s2,   \2
                                      const char* names) {              \2
    bool equal = s1 == s2 || (s1 && s2 && !func(s1, s2));               \2
    if (equal == expected) return NULL;                                 \2
    else {                                                              \2
      ostringstream ss;                                                 \2
      if (!s1) s1 = "";                                                 \2
      if (!s2) s2 = "";                                                 \2
      ss << #name " failed: " << names << " (" << s1 << " vs. " << s2 << ")"; \2
      return new string(ss.str());                                      \2
    }                                                                   \2
  }2
DEFINE_CHECK_STROP_IMPL(CHECK_STREQ, strcmp, true)2
DEFINE_CHECK_STROP_IMPL(CHECK_STRNE, strcmp, false)2
DEFINE_CHECK_STROP_IMPL(CHECK_STRCASEEQ, strcasecmp, true)2
DEFINE_CHECK_STROP_IMPL(CHECK_STRCASENE, strcasecmp, false)2
#undef DEFINE_CHECK_STROP_IMPL2
2
int posix_strerror_r(int err, char *buf, size_t len) {2
  // Sanity check input parameters2
  if (buf == NULL || len <= 0) {2
    errno = EINVAL;2
    return -1;2
  }2
2
  // Reset buf and errno, and try calling whatever version of strerror_r()2
  // is implemented by glibc2
  buf[0] = '\000';2
  int old_errno = errno;2
  errno = 0;2
  char *rc = reinterpret_cast<char *>(strerror_r(err, buf, len));2
2
  // Both versions set errno on failure2
  if (errno) {2
    // Should already be there, but better safe than sorry2
    buf[0]     = '\000';2
    return -1;2
  }2
  errno = old_errno;2
2
  // POSIX is vague about whether the string will be terminated, although2
  // is indirectly implies that typically ERANGE will be returned, instead2
  // of truncating the string. This is different from the GNU implementation.2
  // We play it safe by always terminating the string explicitly.2
  buf[len-1] = '\000';2
2
  // If the function succeeded, we can use its exit code to determine the2
  // semantics implemented by glibc2
  if (!rc) {2
    return 0;2
  } else {2
    // GNU semantics detected2
    if (rc == buf) {2
      return 0;2
    } else {2
      buf[0] = '\000';2
#if defined(OS_MACOSX) || defined(OS_FREEBSD) || defined(OS_OPENBSD)2
      if (reinterpret_cast<intptr_t>(rc) < sys_nerr) {2
        // This means an error on MacOSX or FreeBSD.2
        return -1;2
      }2
#endif2
      strncat(buf, rc, len-1);2
      return 0;2
    }2
  }2
}2
2
string StrError(int err) {2
  char buf[100];2
  int rc = posix_strerror_r(err, buf, sizeof(buf));2
  if ((rc < 0) || (buf[0] == '\000')) {2
    snprintf(buf, sizeof(buf), "Error number %d", err);2
  }2
  return buf;2
}2
2
LogMessageFatal::LogMessageFatal(const char* file, int line) :2
    LogMessage(file, line, GLOG_FATAL) {}2
2
LogMessageFatal::LogMessageFatal(const char* file, int line,2
                                 const CheckOpString& result) :2
    LogMessage(file, line, result) {}2
2
LogMessageFatal::~LogMessageFatal() {2
    Flush();2
    LogMessage::Fail();2
}2
2
namespace base {2
2
CheckOpMessageBuilder::CheckOpMessageBuilder(const char *exprtext)2
    : stream_(new ostringstream) {2
  *stream_ << exprtext << " (";2
}2
2
CheckOpMessageBuilder::~CheckOpMessageBuilder() {2
  delete stream_;2
}2
2
ostream* CheckOpMessageBuilder::ForVar2() {2
  *stream_ << " vs. ";2
  return stream_;2
}2
2
string* CheckOpMessageBuilder::NewString() {2
  *stream_ << ")";2
  return new string(stream_->str());2
}2
2
}  // namespace base2
2
template <>2
void MakeCheckOpValueString(std::ostream* os, const char& v) {2
  if (v >= 32 && v <= 126) {2
    (*os) << "'" << v << "'";2
  } else {2
    (*os) << "char value " << (short)v;2
  }2
}2
2
template <>2
void MakeCheckOpValueString(std::ostream* os, const signed char& v) {2
  if (v >= 32 && v <= 126) {2
    (*os) << "'" << v << "'";2
  } else {2
    (*os) << "signed char value " << (short)v;2
  }2
}2
2
template <>2
void MakeCheckOpValueString(std::ostream* os, const unsigned char& v) {2
  if (v >= 32 && v <= 126) {2
    (*os) << "'" << v << "'";2
  } else {2
    (*os) << "unsigned char value " << (unsigned short)v;2
  }2
}2
2
void InitGoogleLogging(const char* argv0) {2
  glog_internal_namespace_::InitGoogleLoggingUtilities(argv0);2
}2
2
void ShutdownGoogleLogging() {2
  glog_internal_namespace_::ShutdownGoogleLoggingUtilities();2
  LogDestination::DeleteLogDestinations();2
  delete logging_directories_list;2
  logging_directories_list = NULL;2
}2
2
_END_GOOGLE_NAMESPACE_2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
type Electron$BrowserWindow = any;2
type Electron$NativeImage = any;2
2
type Electron$MenuRoles =2
  | 'undo'2
  | 'redo'2
  | 'cut'2
  | 'copy'2
  | 'paste'2
  | 'pasteandmatchstyle'2
  | 'selectall'2
  | 'delete'2
  | 'minimize'2
  | 'close'2
  | 'quit'2
  | 'togglefullscreen' // macOS-only2
  | 'about'2
  | 'hide'2
  | 'hideothers'2
  | 'unhide'2
  | 'front'2
  | 'zoom'2
  | 'window'2
  | 'help'2
  | 'services';2
2
type Electron$MenuType =2
  | 'normal'2
  | 'separator'2
  | 'submenu'2
  | 'checkbox'2
  | 'radio';2
2
type Electron$MenuItemOptions = {2
  click?: (2
    menuItem: Electron$MenuItem,2
    browserWindow: Object,2
    event: Object,2
  ) => void,2
  role?: Electron$MenuRoles,2
  type?: Electron$MenuType,2
  label?: string,2
  sublabel?: string,2
  accelerator?: string,2
  icon?: Object,2
  enabled?: boolean,2
  visible?: boolean,2
  checked?: boolean,2
  submenu?: Electron$MenuItem | Electron$MenuItemOptions,2
  id?: string,2
  position?: string,2
};2
2
declare class Electron$MenuItem {2
  constructor: (options: Electron$MenuItemOptions) => void;2
  enabled: boolean;2
  visible: boolean;2
  checked: boolean;2
}2
2
declare class Electron$Menu {2
  static setApplicationMenu: (menu: Electron$Menu) => void;2
  static getApplicationMenu: () => ?Electron$Menu;2
  static sendActionToFirstResponder: (action: string) => void;2
  static buildFromTemplate: (2
    templates: Array<Electron$MenuItemOptions>,2
  ) => Electron$Menu;2
  popup: (2
    browserWindow: Object,2
    x?: number,2
    y?: number,2
    positioningItem?: number,2
  ) => void;2
  popup: (x?: number, y?: number, positioningItem?: number) => void;2
  append: (menuItem: Electron$MenuItem) => void;2
  insert: (pos: number, menuItem: Electron$MenuItem) => void;2
  items: Array<Electron$MenuItem>;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
declare var React: $Exports<'react'>;2
// flow-typed signature: 7849d9ce4b390afcfc917a08445a20eb2
// flow-typed version: <<STUB>>/adbkit-fb_v2.10.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'adbkit-fb'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'adbkit-fb' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'adbkit-fb/lib/adb' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/auth' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/client' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/forward' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/getdevicepath' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/getserialno' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/getstate' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/listforwards' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-serial/waitfordevice' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/clear' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/framebuffer' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/getfeatures' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/getpackages' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/getproperties' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/install' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/isinstalled' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/listreverses' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/local' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/log' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/logcat' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/monkey' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/reboot' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/remount' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/reverse' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/root' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/screencap' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/shell' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/startactivity' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/startservice' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/sync' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/tcp' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/tcpip' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/trackjdwp' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/uninstall' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/usb' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host-transport/waitbootcomplete' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/connect' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/devices' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/deviceswithpaths' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/disconnect' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/kill' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/trackdevices' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/transport' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/command/host/version' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/connection' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/dump' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/framebuffer/rgbtransform' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/keycode' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/linetransform' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/parser' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/proc/stat' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/protocol' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/sync' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/sync/entry' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/sync/pulltransfer' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/sync/pushtransfer' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/sync/stats' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/packet' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/packetreader' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/rollingcounter' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/server' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/service' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/servicemap' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tcpusb/socket' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/tracker' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/adb/util' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-fb/lib/cli' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'adbkit-fb/index' {2
  declare module.exports: $Exports<'adbkit-fb'>;2
}2
declare module 'adbkit-fb/index.js' {2
  declare module.exports: $Exports<'adbkit-fb'>;2
}2
declare module 'adbkit-fb/lib/adb.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb'>;2
}2
declare module 'adbkit-fb/lib/adb/auth.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/auth'>;2
}2
declare module 'adbkit-fb/lib/adb/client.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/client'>;2
}2
declare module 'adbkit-fb/lib/adb/command.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/forward.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/forward'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/getdevicepath.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/getdevicepath'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/getserialno.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/getserialno'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/getstate.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/getstate'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/listforwards.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/listforwards'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-serial/waitfordevice.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-serial/waitfordevice'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/clear.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/clear'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/framebuffer.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/framebuffer'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/getfeatures.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/getfeatures'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/getpackages.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/getpackages'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/getproperties.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/getproperties'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/install.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/install'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/isinstalled.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/isinstalled'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/listreverses.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/listreverses'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/local.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/local'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/log.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/log'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/logcat.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/logcat'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/monkey.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/monkey'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/reboot.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/reboot'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/remount.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/remount'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/reverse.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/reverse'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/root.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/root'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/screencap.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/screencap'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/shell.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/shell'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/startactivity.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/startactivity'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/startservice.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/startservice'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/sync.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/sync'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/tcp.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/tcp'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/tcpip.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/tcpip'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/trackjdwp.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/trackjdwp'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/uninstall.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/uninstall'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/usb.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/usb'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host-transport/waitbootcomplete.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host-transport/waitbootcomplete'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/connect.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/connect'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/devices.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/devices'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/deviceswithpaths.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/deviceswithpaths'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/disconnect.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/disconnect'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/kill.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/kill'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/trackdevices.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/trackdevices'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/transport.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/transport'>;2
}2
declare module 'adbkit-fb/lib/adb/command/host/version.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/command/host/version'>;2
}2
declare module 'adbkit-fb/lib/adb/connection.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/connection'>;2
}2
declare module 'adbkit-fb/lib/adb/dump.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/dump'>;2
}2
declare module 'adbkit-fb/lib/adb/framebuffer/rgbtransform.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/framebuffer/rgbtransform'>;2
}2
declare module 'adbkit-fb/lib/adb/keycode.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/keycode'>;2
}2
declare module 'adbkit-fb/lib/adb/linetransform.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/linetransform'>;2
}2
declare module 'adbkit-fb/lib/adb/parser.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/parser'>;2
}2
declare module 'adbkit-fb/lib/adb/proc/stat.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/proc/stat'>;2
}2
declare module 'adbkit-fb/lib/adb/protocol.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/protocol'>;2
}2
declare module 'adbkit-fb/lib/adb/sync.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/sync'>;2
}2
declare module 'adbkit-fb/lib/adb/sync/entry.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/sync/entry'>;2
}2
declare module 'adbkit-fb/lib/adb/sync/pulltransfer.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/sync/pulltransfer'>;2
}2
declare module 'adbkit-fb/lib/adb/sync/pushtransfer.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/sync/pushtransfer'>;2
}2
declare module 'adbkit-fb/lib/adb/sync/stats.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/sync/stats'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/packet.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/packet'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/packetreader.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/packetreader'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/rollingcounter.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/rollingcounter'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/server.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/server'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/service.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/service'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/servicemap.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/servicemap'>;2
}2
declare module 'adbkit-fb/lib/adb/tcpusb/socket.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tcpusb/socket'>;2
}2
declare module 'adbkit-fb/lib/adb/tracker.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/tracker'>;2
}2
declare module 'adbkit-fb/lib/adb/util.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/adb/util'>;2
}2
declare module 'adbkit-fb/lib/cli.js' {2
  declare module.exports: $Exports<'adbkit-fb/lib/cli'>;2
}2
// flow-typed signature: 4c4fcc7d39703336b04af263e250bdd12
// flow-typed version: <<STUB>>/adbkit-logcat-fb_v1.1.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'adbkit-logcat-fb'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'adbkit-logcat-fb' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'adbkit-logcat-fb/lib/logcat' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/entry' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/parser' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/parser/binary' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/priority' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/reader' {2
  declare module.exports: any;2
}2
2
declare module 'adbkit-logcat-fb/lib/logcat/transform' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'adbkit-logcat-fb/index' {2
  declare module.exports: $Exports<'adbkit-logcat-fb'>;2
}2
declare module 'adbkit-logcat-fb/index.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/entry.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/entry'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/parser.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/parser'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/parser/binary.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/parser/binary'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/priority.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/priority'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/reader.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/reader'>;2
}2
declare module 'adbkit-logcat-fb/lib/logcat/transform.js' {2
  declare module.exports: $Exports<'adbkit-logcat-fb/lib/logcat/transform'>;2
}2
// flow-typed signature: 0f7f1ee584ef43d0f9403cfe273cc39d2
// flow-typed version: <<STUB>>/babel-cli_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-cli'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-cli' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-cli/bin/babel-doctor' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/bin/babel-external-helpers' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/bin/babel-node' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/bin/babel' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/_babel-node' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel-external-helpers' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel-node' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel/dir' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel/file' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-cli/lib/babel/util' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-cli/bin/babel-doctor.js' {2
  declare module.exports: $Exports<'babel-cli/bin/babel-doctor'>;2
}2
declare module 'babel-cli/bin/babel-external-helpers.js' {2
  declare module.exports: $Exports<'babel-cli/bin/babel-external-helpers'>;2
}2
declare module 'babel-cli/bin/babel-node.js' {2
  declare module.exports: $Exports<'babel-cli/bin/babel-node'>;2
}2
declare module 'babel-cli/bin/babel.js' {2
  declare module.exports: $Exports<'babel-cli/bin/babel'>;2
}2
declare module 'babel-cli/index' {2
  declare module.exports: $Exports<'babel-cli'>;2
}2
declare module 'babel-cli/index.js' {2
  declare module.exports: $Exports<'babel-cli'>;2
}2
declare module 'babel-cli/lib/_babel-node.js' {2
  declare module.exports: $Exports<'babel-cli/lib/_babel-node'>;2
}2
declare module 'babel-cli/lib/babel-external-helpers.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel-external-helpers'>;2
}2
declare module 'babel-cli/lib/babel-node.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel-node'>;2
}2
declare module 'babel-cli/lib/babel/dir.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel/dir'>;2
}2
declare module 'babel-cli/lib/babel/file.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel/file'>;2
}2
declare module 'babel-cli/lib/babel/index.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel/index'>;2
}2
declare module 'babel-cli/lib/babel/util.js' {2
  declare module.exports: $Exports<'babel-cli/lib/babel/util'>;2
}2
// flow-typed signature: d1d2d301b3f753cb6d40f8ac6d8df8c82
// flow-typed version: <<STUB>>/babel-code-frame_v^6.22.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-code-frame'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-code-frame' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-code-frame/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-code-frame/lib/index.js' {2
  declare module.exports: $Exports<'babel-code-frame/lib/index'>;2
}2
// flow-typed signature: 8f20b8fc8e610a76416674f109b1d8bc2
// flow-typed version: <<STUB>>/babel-core_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-core'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-core' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-core/lib/config/build-config-chain' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/caching' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/helpers/environment' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/loading/files/configuration' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/loading/files/index-browser' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/loading/files/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/loading/files/plugins' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/option-manager' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/plugin' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/config/removed' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/tools/build-external-helpers' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/file/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/file/metadata' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/internal-plugins/block-hoist' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/pipeline' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/plugin-pass' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/lib/transformation/store' {2
  declare module.exports: any;2
}2
2
declare module 'babel-core/register' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-core/index' {2
  declare module.exports: $Exports<'babel-core'>;2
}2
declare module 'babel-core/index.js' {2
  declare module.exports: $Exports<'babel-core'>;2
}2
declare module 'babel-core/lib/config/build-config-chain.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/build-config-chain'>;2
}2
declare module 'babel-core/lib/config/caching.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/caching'>;2
}2
declare module 'babel-core/lib/config/helpers/environment.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/helpers/environment'>;2
}2
declare module 'babel-core/lib/config/index.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/index'>;2
}2
declare module 'babel-core/lib/config/loading/files/configuration.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/loading/files/configuration'>;2
}2
declare module 'babel-core/lib/config/loading/files/index-browser.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/loading/files/index-browser'>;2
}2
declare module 'babel-core/lib/config/loading/files/index.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/loading/files/index'>;2
}2
declare module 'babel-core/lib/config/loading/files/plugins.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/loading/files/plugins'>;2
}2
declare module 'babel-core/lib/config/option-manager.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/option-manager'>;2
}2
declare module 'babel-core/lib/config/plugin.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/plugin'>;2
}2
declare module 'babel-core/lib/config/removed.js' {2
  declare module.exports: $Exports<'babel-core/lib/config/removed'>;2
}2
declare module 'babel-core/lib/index.js' {2
  declare module.exports: $Exports<'babel-core/lib/index'>;2
}2
declare module 'babel-core/lib/tools/build-external-helpers.js' {2
  declare module.exports: $Exports<'babel-core/lib/tools/build-external-helpers'>;2
}2
declare module 'babel-core/lib/transformation/file/index.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/file/index'>;2
}2
declare module 'babel-core/lib/transformation/file/metadata.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/file/metadata'>;2
}2
declare module 'babel-core/lib/transformation/internal-plugins/block-hoist.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/internal-plugins/block-hoist'>;2
}2
declare module 'babel-core/lib/transformation/pipeline.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/pipeline'>;2
}2
declare module 'babel-core/lib/transformation/plugin-pass.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/plugin-pass'>;2
}2
declare module 'babel-core/lib/transformation/store.js' {2
  declare module.exports: $Exports<'babel-core/lib/transformation/store'>;2
}2
declare module 'babel-core/register.js' {2
  declare module.exports: $Exports<'babel-core/register'>;2
}2
// flow-typed signature: 1fb22ed9a932c432e0fdd6cf6450c58e2
// flow-typed version: <<STUB>>/babel-eslint_v7.2.3/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-eslint'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-eslint' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-eslint/babylon-to-espree/attachComments' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/convertComments' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/convertTemplateType' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/toAST' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/toToken' {2
  declare module.exports: any;2
}2
2
declare module 'babel-eslint/babylon-to-espree/toTokens' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-eslint/babylon-to-espree/attachComments.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/attachComments'>;2
}2
declare module 'babel-eslint/babylon-to-espree/convertComments.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/convertComments'>;2
}2
declare module 'babel-eslint/babylon-to-espree/convertTemplateType.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/convertTemplateType'>;2
}2
declare module 'babel-eslint/babylon-to-espree/index.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/index'>;2
}2
declare module 'babel-eslint/babylon-to-espree/toAST.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/toAST'>;2
}2
declare module 'babel-eslint/babylon-to-espree/toToken.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/toToken'>;2
}2
declare module 'babel-eslint/babylon-to-espree/toTokens.js' {2
  declare module.exports: $Exports<'babel-eslint/babylon-to-espree/toTokens'>;2
}2
declare module 'babel-eslint/index' {2
  declare module.exports: $Exports<'babel-eslint'>;2
}2
declare module 'babel-eslint/index.js' {2
  declare module.exports: $Exports<'babel-eslint'>;2
}2
// flow-typed signature: 0b1639e0bffdd43bd3a51636725d6b052
// flow-typed version: <<STUB>>/babel-generator_v^6.24.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-generator'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-generator' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-generator/lib/buffer' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/base' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/classes' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/expressions' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/flow' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/jsx' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/methods' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/modules' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/statements' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/template-literals' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/generators/types' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/node/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/node/parentheses' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/node/whitespace' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/printer' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/source-map' {2
  declare module.exports: any;2
}2
2
declare module 'babel-generator/lib/whitespace' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-generator/lib/buffer.js' {2
  declare module.exports: $Exports<'babel-generator/lib/buffer'>;2
}2
declare module 'babel-generator/lib/generators/base.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/base'>;2
}2
declare module 'babel-generator/lib/generators/classes.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/classes'>;2
}2
declare module 'babel-generator/lib/generators/expressions.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/expressions'>;2
}2
declare module 'babel-generator/lib/generators/flow.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/flow'>;2
}2
declare module 'babel-generator/lib/generators/jsx.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/jsx'>;2
}2
declare module 'babel-generator/lib/generators/methods.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/methods'>;2
}2
declare module 'babel-generator/lib/generators/modules.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/modules'>;2
}2
declare module 'babel-generator/lib/generators/statements.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/statements'>;2
}2
declare module 'babel-generator/lib/generators/template-literals.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/template-literals'>;2
}2
declare module 'babel-generator/lib/generators/types.js' {2
  declare module.exports: $Exports<'babel-generator/lib/generators/types'>;2
}2
declare module 'babel-generator/lib/index.js' {2
  declare module.exports: $Exports<'babel-generator/lib/index'>;2
}2
declare module 'babel-generator/lib/node/index.js' {2
  declare module.exports: $Exports<'babel-generator/lib/node/index'>;2
}2
declare module 'babel-generator/lib/node/parentheses.js' {2
  declare module.exports: $Exports<'babel-generator/lib/node/parentheses'>;2
}2
declare module 'babel-generator/lib/node/whitespace.js' {2
  declare module.exports: $Exports<'babel-generator/lib/node/whitespace'>;2
}2
declare module 'babel-generator/lib/printer.js' {2
  declare module.exports: $Exports<'babel-generator/lib/printer'>;2
}2
declare module 'babel-generator/lib/source-map.js' {2
  declare module.exports: $Exports<'babel-generator/lib/source-map'>;2
}2
declare module 'babel-generator/lib/whitespace.js' {2
  declare module.exports: $Exports<'babel-generator/lib/whitespace'>;2
}2
// flow-typed signature: b952c89ce390b876119ae568acff43b62
// flow-typed version: <<STUB>>/babel-plugin-transform-class-properties_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-plugin-transform-class-properties'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-plugin-transform-class-properties' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-plugin-transform-class-properties/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-plugin-transform-class-properties/lib/index.js' {2
  declare module.exports: $Exports<'babel-plugin-transform-class-properties/lib/index'>;2
}2
// flow-typed signature: 1bad2e410546918dc0e7272dc87e0a342
// flow-typed version: <<STUB>>/babel-plugin-transform-es2015-destructuring_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-plugin-transform-es2015-destructuring'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-plugin-transform-es2015-destructuring' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-plugin-transform-es2015-destructuring/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-plugin-transform-es2015-destructuring/lib/index.js' {2
  declare module.exports: $Exports<'babel-plugin-transform-es2015-destructuring/lib/index'>;2
}2
// flow-typed signature: bc928daf5d3cf67f45a4ae5920314b132
// flow-typed version: <<STUB>>/babel-plugin-transform-es2015-modules-commonjs_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-plugin-transform-es2015-modules-commonjs'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-plugin-transform-es2015-modules-commonjs' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-plugin-transform-es2015-modules-commonjs/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-plugin-transform-es2015-modules-commonjs/lib/index.js' {2
  declare module.exports: $Exports<'babel-plugin-transform-es2015-modules-commonjs/lib/index'>;2
}2
// flow-typed signature: 8f14e19a39c2bd3974954eea41f594102
// flow-typed version: <<STUB>>/babel-plugin-transform-flow-strip-types_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-plugin-transform-flow-strip-types'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-plugin-transform-flow-strip-types' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-plugin-transform-flow-strip-types/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-plugin-transform-flow-strip-types/lib/index.js' {2
  declare module.exports: $Exports<'babel-plugin-transform-flow-strip-types/lib/index'>;2
}2
// flow-typed signature: 529d59fc1e249a090e2a76a3835db8762
// flow-typed version: <<STUB>>/babel-plugin-transform-object-rest-spread_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-plugin-transform-object-rest-spread'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-plugin-transform-object-rest-spread' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-plugin-transform-object-rest-spread/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-plugin-transform-object-rest-spread/lib/index.js' {2
  declare module.exports: $Exports<'babel-plugin-transform-object-rest-spread/lib/index'>;2
}2
// flow-typed signature: 1daf2e279938e1a1932c392cf775b7dc2
// flow-typed version: <<STUB>>/babel-preset-react_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-preset-react'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-preset-react' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-preset-react/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-preset-react/lib/index.js' {2
  declare module.exports: $Exports<'babel-preset-react/lib/index'>;2
}2
// flow-typed signature: d1ce10c85f971481323ed89a9b5029e02
// flow-typed version: <<STUB>>/babel-register_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-register'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-register' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-register/lib/browser' {2
  declare module.exports: any;2
}2
2
declare module 'babel-register/lib/cache' {2
  declare module.exports: any;2
}2
2
declare module 'babel-register/lib/node' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-register/lib/browser.js' {2
  declare module.exports: $Exports<'babel-register/lib/browser'>;2
}2
declare module 'babel-register/lib/cache.js' {2
  declare module.exports: $Exports<'babel-register/lib/cache'>;2
}2
declare module 'babel-register/lib/node.js' {2
  declare module.exports: $Exports<'babel-register/lib/node'>;2
}2
// flow-typed signature: b39ccdff10eaf6fe22d8bbd6a64153242
// flow-typed version: <<STUB>>/babel-traverse_v7.0.0-alpha.12/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babel-traverse'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babel-traverse' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babel-traverse/lib/cache' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/context' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/hub' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/ancestry' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/comments' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/context' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/conversion' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/evaluation' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/family' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/inference/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/inference/inferer-reference' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/inference/inferers' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/introspection' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/lib/hoister' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/lib/removal-hooks' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/lib/virtual-types' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/modification' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/removal' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/path/replacement' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/scope/binding' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/scope/index' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/scope/lib/renamer' {2
  declare module.exports: any;2
}2
2
declare module 'babel-traverse/lib/visitors' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babel-traverse/lib/cache.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/cache'>;2
}2
declare module 'babel-traverse/lib/context.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/context'>;2
}2
declare module 'babel-traverse/lib/hub.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/hub'>;2
}2
declare module 'babel-traverse/lib/index.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/index'>;2
}2
declare module 'babel-traverse/lib/path/ancestry.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/ancestry'>;2
}2
declare module 'babel-traverse/lib/path/comments.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/comments'>;2
}2
declare module 'babel-traverse/lib/path/context.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/context'>;2
}2
declare module 'babel-traverse/lib/path/conversion.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/conversion'>;2
}2
declare module 'babel-traverse/lib/path/evaluation.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/evaluation'>;2
}2
declare module 'babel-traverse/lib/path/family.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/family'>;2
}2
declare module 'babel-traverse/lib/path/index.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/index'>;2
}2
declare module 'babel-traverse/lib/path/inference/index.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/inference/index'>;2
}2
declare module 'babel-traverse/lib/path/inference/inferer-reference.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/inference/inferer-reference'>;2
}2
declare module 'babel-traverse/lib/path/inference/inferers.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/inference/inferers'>;2
}2
declare module 'babel-traverse/lib/path/introspection.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/introspection'>;2
}2
declare module 'babel-traverse/lib/path/lib/hoister.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/lib/hoister'>;2
}2
declare module 'babel-traverse/lib/path/lib/removal-hooks.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/lib/removal-hooks'>;2
}2
declare module 'babel-traverse/lib/path/lib/virtual-types.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/lib/virtual-types'>;2
}2
declare module 'babel-traverse/lib/path/modification.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/modification'>;2
}2
declare module 'babel-traverse/lib/path/removal.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/removal'>;2
}2
declare module 'babel-traverse/lib/path/replacement.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/path/replacement'>;2
}2
declare module 'babel-traverse/lib/scope/binding.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/scope/binding'>;2
}2
declare module 'babel-traverse/lib/scope/index.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/scope/index'>;2
}2
declare module 'babel-traverse/lib/scope/lib/renamer.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/scope/lib/renamer'>;2
}2
declare module 'babel-traverse/lib/visitors.js' {2
  declare module.exports: $Exports<'babel-traverse/lib/visitors'>;2
}2
// flow-typed signature: f472557a9bcea4a046c88cdcdd21ff402
// flow-typed version: <<STUB>>/babylon_v7.0.0-beta.14/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'babylon'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'babylon' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'babylon/bin/babylon' {2
  declare module.exports: any;2
}2
2
declare module 'babylon/bin/generate-identifier-regex' {2
  declare module.exports: any;2
}2
2
declare module 'babylon/lib/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'babylon/bin/babylon.js' {2
  declare module.exports: $Exports<'babylon/bin/babylon'>;2
}2
declare module 'babylon/bin/generate-identifier-regex.js' {2
  declare module.exports: $Exports<'babylon/bin/generate-identifier-regex'>;2
}2
declare module 'babylon/lib/index.js' {2
  declare module.exports: $Exports<'babylon/lib/index'>;2
}2
// flow-typed signature: b1a2d646047879188d7e44cb218212b52
// flow-typed version: b43dff3e0e/chalk_v1.x.x/flow_>=v0.19.x2
2
type $npm$chalk$StyleElement = {2
  open: string;2
  close: string;2
};2
2
type $npm$chalk$Chain = $npm$chalk$Style & (...text: any[]) => string;2
2
type $npm$chalk$Style = {2
  // General2
  reset: $npm$chalk$Chain;2
  bold: $npm$chalk$Chain;2
  dim: $npm$chalk$Chain;2
  italic: $npm$chalk$Chain;2
  underline: $npm$chalk$Chain;2
  inverse: $npm$chalk$Chain;2
  strikethrough: $npm$chalk$Chain;2
2
  // Text colors2
  black: $npm$chalk$Chain;2
  red: $npm$chalk$Chain;2
  green: $npm$chalk$Chain;2
  yellow: $npm$chalk$Chain;2
  blue: $npm$chalk$Chain;2
  magenta: $npm$chalk$Chain;2
  cyan: $npm$chalk$Chain;2
  white: $npm$chalk$Chain;2
  gray: $npm$chalk$Chain;2
  grey: $npm$chalk$Chain;2
2
  // Background colors2
  bgBlack: $npm$chalk$Chain;2
  bgRed: $npm$chalk$Chain;2
  bgGreen: $npm$chalk$Chain;2
  bgYellow: $npm$chalk$Chain;2
  bgBlue: $npm$chalk$Chain;2
  bgMagenta: $npm$chalk$Chain;2
  bgCyan: $npm$chalk$Chain;2
  bgWhite: $npm$chalk$Chain;2
};2
2
type $npm$chalk$StyleMap = {2
  // General2
  reset: $npm$chalk$StyleElement;2
  bold: $npm$chalk$StyleElement;2
  dim: $npm$chalk$StyleElement;2
  italic: $npm$chalk$StyleElement;2
  underline: $npm$chalk$StyleElement;2
  inverse: $npm$chalk$StyleElement;2
  strikethrough: $npm$chalk$StyleElement;2
2
  // Text colors2
  black: $npm$chalk$StyleElement;2
  red: $npm$chalk$StyleElement;2
  green: $npm$chalk$StyleElement;2
  yellow: $npm$chalk$StyleElement;2
  blue: $npm$chalk$StyleElement;2
  magenta: $npm$chalk$StyleElement;2
  cyan: $npm$chalk$StyleElement;2
  white: $npm$chalk$StyleElement;2
  gray: $npm$chalk$StyleElement;2
2
  // Background colors2
  bgBlack: $npm$chalk$StyleElement;2
  bgRed: $npm$chalk$StyleElement;2
  bgGreen: $npm$chalk$StyleElement;2
  bgYellow: $npm$chalk$StyleElement;2
  bgBlue: $npm$chalk$StyleElement;2
  bgMagenta: $npm$chalk$StyleElement;2
  bgCyan: $npm$chalk$StyleElement;2
  bgWhite: $npm$chalk$StyleElement;2
};2
2
declare module "chalk" {2
  declare var enabled: boolean;2
  declare var supportsColor: boolean;2
  declare var styles: $npm$chalk$StyleMap;2
2
  declare function stripColor(value: string): any;2
  declare function hasColor(str: string): boolean;2
2
  // General2
  declare var reset: $npm$chalk$Chain;2
  declare var bold: $npm$chalk$Chain;2
  declare var dim: $npm$chalk$Chain;2
  declare var italic: $npm$chalk$Chain;2
  declare var underline: $npm$chalk$Chain;2
  declare var inverse: $npm$chalk$Chain;2
  declare var strikethrough: $npm$chalk$Chain;2
2
  // Text colors2
  declare var black: $npm$chalk$Chain;2
  declare var red: $npm$chalk$Chain;2
  declare var green: $npm$chalk$Chain;2
  declare var yellow: $npm$chalk$Chain;2
  declare var blue: $npm$chalk$Chain;2
  declare var magenta: $npm$chalk$Chain;2
  declare var cyan: $npm$chalk$Chain;2
  declare var white: $npm$chalk$Chain;2
  declare var gray: $npm$chalk$Chain;2
  declare var grey: $npm$chalk$Chain;2
2
  // Background colors2
  declare var bgBlack: $npm$chalk$Chain;2
  declare var bgRed: $npm$chalk$Chain;2
  declare var bgGreen: $npm$chalk$Chain;2
  declare var bgYellow: $npm$chalk$Chain;2
  declare var bgBlue: $npm$chalk$Chain;2
  declare var bgMagenta: $npm$chalk$Chain;2
  declare var bgCyan: $npm$chalk$Chain;2
  declare var bgWhite: $npm$chalk$Chain;2
}2
// flow-typed signature: 56334b937a6991fded5d2f2312821ccd2
// flow-typed version: <<STUB>>/codemirror_v^5.25.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'codemirror'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'codemirror' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'codemirror/addon/comment/comment' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/comment/continuecomment' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/dialog/dialog' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/display/autorefresh' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/display/fullscreen' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/display/panel' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/display/placeholder' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/display/rulers' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/closebrackets' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/closetag' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/continuelist' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/matchbrackets' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/matchtags' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/edit/trailingspace' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/brace-fold' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/comment-fold' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/foldcode' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/foldgutter' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/indent-fold' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/markdown-fold' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/fold/xml-fold' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/anyword-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/css-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/html-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/javascript-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/show-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/sql-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/hint/xml-hint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/coffeescript-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/css-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/html-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/javascript-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/json-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/lint/yaml-lint' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/merge/merge' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/mode/loadmode' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/mode/multiplex_test' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/mode/multiplex' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/mode/overlay' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/mode/simple' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/runmode/colorize' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/runmode/runmode-standalone' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/runmode/runmode' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/runmode/runmode.node' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/scroll/annotatescrollbar' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/scroll/scrollpastend' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/scroll/simplescrollbars' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/search/jump-to-line' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/search/match-highlighter' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/search/matchesonscrollbar' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/search/search' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/search/searchcursor' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/selection/active-line' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/selection/mark-selection' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/selection/selection-pointer' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/tern/tern' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/tern/worker' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/addon/wrap/hardwrap' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/keymap/emacs' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/keymap/sublime' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/keymap/vim' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/lib/codemirror' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/apl/apl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/asciiarmor/asciiarmor' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/asn.1/asn.1' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/asterisk/asterisk' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/brainfuck/brainfuck' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/clike/clike' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/clojure/clojure' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/cmake/cmake' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/cobol/cobol' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/coffeescript/coffeescript' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/commonlisp/commonlisp' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/crystal/crystal' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/css/css' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/cypher/cypher' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/d/d' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/dart/dart' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/diff/diff' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/django/django' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/dockerfile/dockerfile' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/dtd/dtd' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/dylan/dylan' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ebnf/ebnf' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ecl/ecl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/eiffel/eiffel' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/elm/elm' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/erlang/erlang' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/factor/factor' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/fcl/fcl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/forth/forth' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/fortran/fortran' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/gas/gas' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/gfm/gfm' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/gherkin/gherkin' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/go/go' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/groovy/groovy' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/haml/haml' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/handlebars/handlebars' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/haskell-literate/haskell-literate' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/haskell/haskell' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/haxe/haxe' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/htmlembedded/htmlembedded' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/htmlmixed/htmlmixed' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/http/http' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/idl/idl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/javascript/javascript' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/jinja2/jinja2' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/jsx/jsx' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/julia/julia' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/livescript/livescript' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/lua/lua' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/markdown/markdown' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mathematica/mathematica' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mbox/mbox' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/meta' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mirc/mirc' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mllike/mllike' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/modelica/modelica' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mscgen/mscgen' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/mumps/mumps' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/nginx/nginx' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/nsis/nsis' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ntriples/ntriples' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/octave/octave' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/oz/oz' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/pascal/pascal' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/pegjs/pegjs' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/perl/perl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/php/php' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/pig/pig' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/powershell/powershell' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/properties/properties' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/protobuf/protobuf' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/pug/pug' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/puppet/puppet' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/python/python' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/q/q' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/r/r' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/rpm/rpm' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/rst/rst' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ruby/ruby' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/rust/rust' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/sas/sas' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/sass/sass' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/scheme/scheme' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/shell/shell' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/sieve/sieve' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/slim/slim' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/smalltalk/smalltalk' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/smarty/smarty' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/solr/solr' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/soy/soy' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/sparql/sparql' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/spreadsheet/spreadsheet' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/sql/sql' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/stex/stex' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/stylus/stylus' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/swift/swift' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/tcl/tcl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/textile/textile' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/tiddlywiki/tiddlywiki' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/tiki/tiki' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/toml/toml' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/tornado/tornado' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/troff/troff' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ttcn-cfg/ttcn-cfg' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/ttcn/ttcn' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/turtle/turtle' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/twig/twig' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/vb/vb' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/vbscript/vbscript' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/velocity/velocity' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/verilog/verilog' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/vhdl/vhdl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/vue/vue' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/webidl/webidl' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/xml/xml' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/xquery/xquery' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/yacas/yacas' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/yaml-frontmatter/yaml-frontmatter' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/yaml/yaml' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/mode/z80/z80' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/rollup.config' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/codemirror' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/Display' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/focus' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/gutters' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/highlight_worker' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/line_numbers' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/mode_state' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/operations' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/scroll_events' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/scrollbars' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/scrolling' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/selection' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/update_display' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/update_line' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/update_lines' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/display/view_tracking' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/CodeMirror' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/commands' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/deleteNearSelection' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/drop_events' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/fromTextArea' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/global_events' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/key_events' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/legacy' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/main' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/methods' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/mouse_events' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/options' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/edit/utils' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/ContentEditableInput' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/indent' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/input' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/keymap' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/keynames' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/movement' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/input/TextareaInput' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/highlight' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/line_data' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/pos' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/saw_special_spans' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/spans' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/line/utils_line' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/measurement/position_measurement' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/measurement/widgets' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/change_measurement' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/changes' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/chunk' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/Doc' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/document_data' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/history' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/line_widget' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/mark_text' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/selection_updates' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/model/selection' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/modes' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/bidi' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/browser' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/dom' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/event' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/feature_detection' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/misc' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/operation_group' {2
  declare module.exports: any;2
}2
2
declare module 'codemirror/src/util/StringStream' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'codemirror/addon/comment/comment.js' {2
  declare module.exports: $Exports<'codemirror/addon/comment/comment'>;2
}2
declare module 'codemirror/addon/comment/continuecomment.js' {2
  declare module.exports: $Exports<'codemirror/addon/comment/continuecomment'>;2
}2
declare module 'codemirror/addon/dialog/dialog.js' {2
  declare module.exports: $Exports<'codemirror/addon/dialog/dialog'>;2
}2
declare module 'codemirror/addon/display/autorefresh.js' {2
  declare module.exports: $Exports<'codemirror/addon/display/autorefresh'>;2
}2
declare module 'codemirror/addon/display/fullscreen.js' {2
  declare module.exports: $Exports<'codemirror/addon/display/fullscreen'>;2
}2
declare module 'codemirror/addon/display/panel.js' {2
  declare module.exports: $Exports<'codemirror/addon/display/panel'>;2
}2
declare module 'codemirror/addon/display/placeholder.js' {2
  declare module.exports: $Exports<'codemirror/addon/display/placeholder'>;2
}2
declare module 'codemirror/addon/display/rulers.js' {2
  declare module.exports: $Exports<'codemirror/addon/display/rulers'>;2
}2
declare module 'codemirror/addon/edit/closebrackets.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/closebrackets'>;2
}2
declare module 'codemirror/addon/edit/closetag.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/closetag'>;2
}2
declare module 'codemirror/addon/edit/continuelist.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/continuelist'>;2
}2
declare module 'codemirror/addon/edit/matchbrackets.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/matchbrackets'>;2
}2
declare module 'codemirror/addon/edit/matchtags.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/matchtags'>;2
}2
declare module 'codemirror/addon/edit/trailingspace.js' {2
  declare module.exports: $Exports<'codemirror/addon/edit/trailingspace'>;2
}2
declare module 'codemirror/addon/fold/brace-fold.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/brace-fold'>;2
}2
declare module 'codemirror/addon/fold/comment-fold.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/comment-fold'>;2
}2
declare module 'codemirror/addon/fold/foldcode.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/foldcode'>;2
}2
declare module 'codemirror/addon/fold/foldgutter.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/foldgutter'>;2
}2
declare module 'codemirror/addon/fold/indent-fold.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/indent-fold'>;2
}2
declare module 'codemirror/addon/fold/markdown-fold.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/markdown-fold'>;2
}2
declare module 'codemirror/addon/fold/xml-fold.js' {2
  declare module.exports: $Exports<'codemirror/addon/fold/xml-fold'>;2
}2
declare module 'codemirror/addon/hint/anyword-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/anyword-hint'>;2
}2
declare module 'codemirror/addon/hint/css-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/css-hint'>;2
}2
declare module 'codemirror/addon/hint/html-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/html-hint'>;2
}2
declare module 'codemirror/addon/hint/javascript-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/javascript-hint'>;2
}2
declare module 'codemirror/addon/hint/show-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/show-hint'>;2
}2
declare module 'codemirror/addon/hint/sql-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/sql-hint'>;2
}2
declare module 'codemirror/addon/hint/xml-hint.js' {2
  declare module.exports: $Exports<'codemirror/addon/hint/xml-hint'>;2
}2
declare module 'codemirror/addon/lint/coffeescript-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/coffeescript-lint'>;2
}2
declare module 'codemirror/addon/lint/css-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/css-lint'>;2
}2
declare module 'codemirror/addon/lint/html-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/html-lint'>;2
}2
declare module 'codemirror/addon/lint/javascript-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/javascript-lint'>;2
}2
declare module 'codemirror/addon/lint/json-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/json-lint'>;2
}2
declare module 'codemirror/addon/lint/lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/lint'>;2
}2
declare module 'codemirror/addon/lint/yaml-lint.js' {2
  declare module.exports: $Exports<'codemirror/addon/lint/yaml-lint'>;2
}2
declare module 'codemirror/addon/merge/merge.js' {2
  declare module.exports: $Exports<'codemirror/addon/merge/merge'>;2
}2
declare module 'codemirror/addon/mode/loadmode.js' {2
  declare module.exports: $Exports<'codemirror/addon/mode/loadmode'>;2
}2
declare module 'codemirror/addon/mode/multiplex_test.js' {2
  declare module.exports: $Exports<'codemirror/addon/mode/multiplex_test'>;2
}2
declare module 'codemirror/addon/mode/multiplex.js' {2
  declare module.exports: $Exports<'codemirror/addon/mode/multiplex'>;2
}2
declare module 'codemirror/addon/mode/overlay.js' {2
  declare module.exports: $Exports<'codemirror/addon/mode/overlay'>;2
}2
declare module 'codemirror/addon/mode/simple.js' {2
  declare module.exports: $Exports<'codemirror/addon/mode/simple'>;2
}2
declare module 'codemirror/addon/runmode/colorize.js' {2
  declare module.exports: $Exports<'codemirror/addon/runmode/colorize'>;2
}2
declare module 'codemirror/addon/runmode/runmode-standalone.js' {2
  declare module.exports: $Exports<'codemirror/addon/runmode/runmode-standalone'>;2
}2
declare module 'codemirror/addon/runmode/runmode.js' {2
  declare module.exports: $Exports<'codemirror/addon/runmode/runmode'>;2
}2
declare module 'codemirror/addon/runmode/runmode.node.js' {2
  declare module.exports: $Exports<'codemirror/addon/runmode/runmode.node'>;2
}2
declare module 'codemirror/addon/scroll/annotatescrollbar.js' {2
  declare module.exports: $Exports<'codemirror/addon/scroll/annotatescrollbar'>;2
}2
declare module 'codemirror/addon/scroll/scrollpastend.js' {2
  declare module.exports: $Exports<'codemirror/addon/scroll/scrollpastend'>;2
}2
declare module 'codemirror/addon/scroll/simplescrollbars.js' {2
  declare module.exports: $Exports<'codemirror/addon/scroll/simplescrollbars'>;2
}2
declare module 'codemirror/addon/search/jump-to-line.js' {2
  declare module.exports: $Exports<'codemirror/addon/search/jump-to-line'>;2
}2
declare module 'codemirror/addon/search/match-highlighter.js' {2
  declare module.exports: $Exports<'codemirror/addon/search/match-highlighter'>;2
}2
declare module 'codemirror/addon/search/matchesonscrollbar.js' {2
  declare module.exports: $Exports<'codemirror/addon/search/matchesonscrollbar'>;2
}2
declare module 'codemirror/addon/search/search.js' {2
  declare module.exports: $Exports<'codemirror/addon/search/search'>;2
}2
declare module 'codemirror/addon/search/searchcursor.js' {2
  declare module.exports: $Exports<'codemirror/addon/search/searchcursor'>;2
}2
declare module 'codemirror/addon/selection/active-line.js' {2
  declare module.exports: $Exports<'codemirror/addon/selection/active-line'>;2
}2
declare module 'codemirror/addon/selection/mark-selection.js' {2
  declare module.exports: $Exports<'codemirror/addon/selection/mark-selection'>;2
}2
declare module 'codemirror/addon/selection/selection-pointer.js' {2
  declare module.exports: $Exports<'codemirror/addon/selection/selection-pointer'>;2
}2
declare module 'codemirror/addon/tern/tern.js' {2
  declare module.exports: $Exports<'codemirror/addon/tern/tern'>;2
}2
declare module 'codemirror/addon/tern/worker.js' {2
  declare module.exports: $Exports<'codemirror/addon/tern/worker'>;2
}2
declare module 'codemirror/addon/wrap/hardwrap.js' {2
  declare module.exports: $Exports<'codemirror/addon/wrap/hardwrap'>;2
}2
declare module 'codemirror/keymap/emacs.js' {2
  declare module.exports: $Exports<'codemirror/keymap/emacs'>;2
}2
declare module 'codemirror/keymap/sublime.js' {2
  declare module.exports: $Exports<'codemirror/keymap/sublime'>;2
}2
declare module 'codemirror/keymap/vim.js' {2
  declare module.exports: $Exports<'codemirror/keymap/vim'>;2
}2
declare module 'codemirror/lib/codemirror.js' {2
  declare module.exports: $Exports<'codemirror/lib/codemirror'>;2
}2
declare module 'codemirror/mode/apl/apl.js' {2
  declare module.exports: $Exports<'codemirror/mode/apl/apl'>;2
}2
declare module 'codemirror/mode/asciiarmor/asciiarmor.js' {2
  declare module.exports: $Exports<'codemirror/mode/asciiarmor/asciiarmor'>;2
}2
declare module 'codemirror/mode/asn.1/asn.1.js' {2
  declare module.exports: $Exports<'codemirror/mode/asn.1/asn.1'>;2
}2
declare module 'codemirror/mode/asterisk/asterisk.js' {2
  declare module.exports: $Exports<'codemirror/mode/asterisk/asterisk'>;2
}2
declare module 'codemirror/mode/brainfuck/brainfuck.js' {2
  declare module.exports: $Exports<'codemirror/mode/brainfuck/brainfuck'>;2
}2
declare module 'codemirror/mode/clike/clike.js' {2
  declare module.exports: $Exports<'codemirror/mode/clike/clike'>;2
}2
declare module 'codemirror/mode/clojure/clojure.js' {2
  declare module.exports: $Exports<'codemirror/mode/clojure/clojure'>;2
}2
declare module 'codemirror/mode/cmake/cmake.js' {2
  declare module.exports: $Exports<'codemirror/mode/cmake/cmake'>;2
}2
declare module 'codemirror/mode/cobol/cobol.js' {2
  declare module.exports: $Exports<'codemirror/mode/cobol/cobol'>;2
}2
declare module 'codemirror/mode/coffeescript/coffeescript.js' {2
  declare module.exports: $Exports<'codemirror/mode/coffeescript/coffeescript'>;2
}2
declare module 'codemirror/mode/commonlisp/commonlisp.js' {2
  declare module.exports: $Exports<'codemirror/mode/commonlisp/commonlisp'>;2
}2
declare module 'codemirror/mode/crystal/crystal.js' {2
  declare module.exports: $Exports<'codemirror/mode/crystal/crystal'>;2
}2
declare module 'codemirror/mode/css/css.js' {2
  declare module.exports: $Exports<'codemirror/mode/css/css'>;2
}2
declare module 'codemirror/mode/cypher/cypher.js' {2
  declare module.exports: $Exports<'codemirror/mode/cypher/cypher'>;2
}2
declare module 'codemirror/mode/d/d.js' {2
  declare module.exports: $Exports<'codemirror/mode/d/d'>;2
}2
declare module 'codemirror/mode/dart/dart.js' {2
  declare module.exports: $Exports<'codemirror/mode/dart/dart'>;2
}2
declare module 'codemirror/mode/diff/diff.js' {2
  declare module.exports: $Exports<'codemirror/mode/diff/diff'>;2
}2
declare module 'codemirror/mode/django/django.js' {2
  declare module.exports: $Exports<'codemirror/mode/django/django'>;2
}2
declare module 'codemirror/mode/dockerfile/dockerfile.js' {2
  declare module.exports: $Exports<'codemirror/mode/dockerfile/dockerfile'>;2
}2
declare module 'codemirror/mode/dtd/dtd.js' {2
  declare module.exports: $Exports<'codemirror/mode/dtd/dtd'>;2
}2
declare module 'codemirror/mode/dylan/dylan.js' {2
  declare module.exports: $Exports<'codemirror/mode/dylan/dylan'>;2
}2
declare module 'codemirror/mode/ebnf/ebnf.js' {2
  declare module.exports: $Exports<'codemirror/mode/ebnf/ebnf'>;2
}2
declare module 'codemirror/mode/ecl/ecl.js' {2
  declare module.exports: $Exports<'codemirror/mode/ecl/ecl'>;2
}2
declare module 'codemirror/mode/eiffel/eiffel.js' {2
  declare module.exports: $Exports<'codemirror/mode/eiffel/eiffel'>;2
}2
declare module 'codemirror/mode/elm/elm.js' {2
  declare module.exports: $Exports<'codemirror/mode/elm/elm'>;2
}2
declare module 'codemirror/mode/erlang/erlang.js' {2
  declare module.exports: $Exports<'codemirror/mode/erlang/erlang'>;2
}2
declare module 'codemirror/mode/factor/factor.js' {2
  declare module.exports: $Exports<'codemirror/mode/factor/factor'>;2
}2
declare module 'codemirror/mode/fcl/fcl.js' {2
  declare module.exports: $Exports<'codemirror/mode/fcl/fcl'>;2
}2
declare module 'codemirror/mode/forth/forth.js' {2
  declare module.exports: $Exports<'codemirror/mode/forth/forth'>;2
}2
declare module 'codemirror/mode/fortran/fortran.js' {2
  declare module.exports: $Exports<'codemirror/mode/fortran/fortran'>;2
}2
declare module 'codemirror/mode/gas/gas.js' {2
  declare module.exports: $Exports<'codemirror/mode/gas/gas'>;2
}2
declare module 'codemirror/mode/gfm/gfm.js' {2
  declare module.exports: $Exports<'codemirror/mode/gfm/gfm'>;2
}2
declare module 'codemirror/mode/gherkin/gherkin.js' {2
  declare module.exports: $Exports<'codemirror/mode/gherkin/gherkin'>;2
}2
declare module 'codemirror/mode/go/go.js' {2
  declare module.exports: $Exports<'codemirror/mode/go/go'>;2
}2
declare module 'codemirror/mode/groovy/groovy.js' {2
  declare module.exports: $Exports<'codemirror/mode/groovy/groovy'>;2
}2
declare module 'codemirror/mode/haml/haml.js' {2
  declare module.exports: $Exports<'codemirror/mode/haml/haml'>;2
}2
declare module 'codemirror/mode/handlebars/handlebars.js' {2
  declare module.exports: $Exports<'codemirror/mode/handlebars/handlebars'>;2
}2
declare module 'codemirror/mode/haskell-literate/haskell-literate.js' {2
  declare module.exports: $Exports<'codemirror/mode/haskell-literate/haskell-literate'>;2
}2
declare module 'codemirror/mode/haskell/haskell.js' {2
  declare module.exports: $Exports<'codemirror/mode/haskell/haskell'>;2
}2
declare module 'codemirror/mode/haxe/haxe.js' {2
  declare module.exports: $Exports<'codemirror/mode/haxe/haxe'>;2
}2
declare module 'codemirror/mode/htmlembedded/htmlembedded.js' {2
  declare module.exports: $Exports<'codemirror/mode/htmlembedded/htmlembedded'>;2
}2
declare module 'codemirror/mode/htmlmixed/htmlmixed.js' {2
  declare module.exports: $Exports<'codemirror/mode/htmlmixed/htmlmixed'>;2
}2
declare module 'codemirror/mode/http/http.js' {2
  declare module.exports: $Exports<'codemirror/mode/http/http'>;2
}2
declare module 'codemirror/mode/idl/idl.js' {2
  declare module.exports: $Exports<'codemirror/mode/idl/idl'>;2
}2
declare module 'codemirror/mode/javascript/javascript.js' {2
  declare module.exports: $Exports<'codemirror/mode/javascript/javascript'>;2
}2
declare module 'codemirror/mode/jinja2/jinja2.js' {2
  declare module.exports: $Exports<'codemirror/mode/jinja2/jinja2'>;2
}2
declare module 'codemirror/mode/jsx/jsx.js' {2
  declare module.exports: $Exports<'codemirror/mode/jsx/jsx'>;2
}2
declare module 'codemirror/mode/julia/julia.js' {2
  declare module.exports: $Exports<'codemirror/mode/julia/julia'>;2
}2
declare module 'codemirror/mode/livescript/livescript.js' {2
  declare module.exports: $Exports<'codemirror/mode/livescript/livescript'>;2
}2
declare module 'codemirror/mode/lua/lua.js' {2
  declare module.exports: $Exports<'codemirror/mode/lua/lua'>;2
}2
declare module 'codemirror/mode/markdown/markdown.js' {2
  declare module.exports: $Exports<'codemirror/mode/markdown/markdown'>;2
}2
declare module 'codemirror/mode/mathematica/mathematica.js' {2
  declare module.exports: $Exports<'codemirror/mode/mathematica/mathematica'>;2
}2
declare module 'codemirror/mode/mbox/mbox.js' {2
  declare module.exports: $Exports<'codemirror/mode/mbox/mbox'>;2
}2
declare module 'codemirror/mode/meta.js' {2
  declare module.exports: $Exports<'codemirror/mode/meta'>;2
}2
declare module 'codemirror/mode/mirc/mirc.js' {2
  declare module.exports: $Exports<'codemirror/mode/mirc/mirc'>;2
}2
declare module 'codemirror/mode/mllike/mllike.js' {2
  declare module.exports: $Exports<'codemirror/mode/mllike/mllike'>;2
}2
declare module 'codemirror/mode/modelica/modelica.js' {2
  declare module.exports: $Exports<'codemirror/mode/modelica/modelica'>;2
}2
declare module 'codemirror/mode/mscgen/mscgen.js' {2
  declare module.exports: $Exports<'codemirror/mode/mscgen/mscgen'>;2
}2
declare module 'codemirror/mode/mumps/mumps.js' {2
  declare module.exports: $Exports<'codemirror/mode/mumps/mumps'>;2
}2
declare module 'codemirror/mode/nginx/nginx.js' {2
  declare module.exports: $Exports<'codemirror/mode/nginx/nginx'>;2
}2
declare module 'codemirror/mode/nsis/nsis.js' {2
  declare module.exports: $Exports<'codemirror/mode/nsis/nsis'>;2
}2
declare module 'codemirror/mode/ntriples/ntriples.js' {2
  declare module.exports: $Exports<'codemirror/mode/ntriples/ntriples'>;2
}2
declare module 'codemirror/mode/octave/octave.js' {2
  declare module.exports: $Exports<'codemirror/mode/octave/octave'>;2
}2
declare module 'codemirror/mode/oz/oz.js' {2
  declare module.exports: $Exports<'codemirror/mode/oz/oz'>;2
}2
declare module 'codemirror/mode/pascal/pascal.js' {2
  declare module.exports: $Exports<'codemirror/mode/pascal/pascal'>;2
}2
declare module 'codemirror/mode/pegjs/pegjs.js' {2
  declare module.exports: $Exports<'codemirror/mode/pegjs/pegjs'>;2
}2
declare module 'codemirror/mode/perl/perl.js' {2
  declare module.exports: $Exports<'codemirror/mode/perl/perl'>;2
}2
declare module 'codemirror/mode/php/php.js' {2
  declare module.exports: $Exports<'codemirror/mode/php/php'>;2
}2
declare module 'codemirror/mode/pig/pig.js' {2
  declare module.exports: $Exports<'codemirror/mode/pig/pig'>;2
}2
declare module 'codemirror/mode/powershell/powershell.js' {2
  declare module.exports: $Exports<'codemirror/mode/powershell/powershell'>;2
}2
declare module 'codemirror/mode/properties/properties.js' {2
  declare module.exports: $Exports<'codemirror/mode/properties/properties'>;2
}2
declare module 'codemirror/mode/protobuf/protobuf.js' {2
  declare module.exports: $Exports<'codemirror/mode/protobuf/protobuf'>;2
}2
declare module 'codemirror/mode/pug/pug.js' {2
  declare module.exports: $Exports<'codemirror/mode/pug/pug'>;2
}2
declare module 'codemirror/mode/puppet/puppet.js' {2
  declare module.exports: $Exports<'codemirror/mode/puppet/puppet'>;2
}2
declare module 'codemirror/mode/python/python.js' {2
  declare module.exports: $Exports<'codemirror/mode/python/python'>;2
}2
declare module 'codemirror/mode/q/q.js' {2
  declare module.exports: $Exports<'codemirror/mode/q/q'>;2
}2
declare module 'codemirror/mode/r/r.js' {2
  declare module.exports: $Exports<'codemirror/mode/r/r'>;2
}2
declare module 'codemirror/mode/rpm/rpm.js' {2
  declare module.exports: $Exports<'codemirror/mode/rpm/rpm'>;2
}2
declare module 'codemirror/mode/rst/rst.js' {2
  declare module.exports: $Exports<'codemirror/mode/rst/rst'>;2
}2
declare module 'codemirror/mode/ruby/ruby.js' {2
  declare module.exports: $Exports<'codemirror/mode/ruby/ruby'>;2
}2
declare module 'codemirror/mode/rust/rust.js' {2
  declare module.exports: $Exports<'codemirror/mode/rust/rust'>;2
}2
declare module 'codemirror/mode/sas/sas.js' {2
  declare module.exports: $Exports<'codemirror/mode/sas/sas'>;2
}2
declare module 'codemirror/mode/sass/sass.js' {2
  declare module.exports: $Exports<'codemirror/mode/sass/sass'>;2
}2
declare module 'codemirror/mode/scheme/scheme.js' {2
  declare module.exports: $Exports<'codemirror/mode/scheme/scheme'>;2
}2
declare module 'codemirror/mode/shell/shell.js' {2
  declare module.exports: $Exports<'codemirror/mode/shell/shell'>;2
}2
declare module 'codemirror/mode/sieve/sieve.js' {2
  declare module.exports: $Exports<'codemirror/mode/sieve/sieve'>;2
}2
declare module 'codemirror/mode/slim/slim.js' {2
  declare module.exports: $Exports<'codemirror/mode/slim/slim'>;2
}2
declare module 'codemirror/mode/smalltalk/smalltalk.js' {2
  declare module.exports: $Exports<'codemirror/mode/smalltalk/smalltalk'>;2
}2
declare module 'codemirror/mode/smarty/smarty.js' {2
  declare module.exports: $Exports<'codemirror/mode/smarty/smarty'>;2
}2
declare module 'codemirror/mode/solr/solr.js' {2
  declare module.exports: $Exports<'codemirror/mode/solr/solr'>;2
}2
declare module 'codemirror/mode/soy/soy.js' {2
  declare module.exports: $Exports<'codemirror/mode/soy/soy'>;2
}2
declare module 'codemirror/mode/sparql/sparql.js' {2
  declare module.exports: $Exports<'codemirror/mode/sparql/sparql'>;2
}2
declare module 'codemirror/mode/spreadsheet/spreadsheet.js' {2
  declare module.exports: $Exports<'codemirror/mode/spreadsheet/spreadsheet'>;2
}2
declare module 'codemirror/mode/sql/sql.js' {2
  declare module.exports: $Exports<'codemirror/mode/sql/sql'>;2
}2
declare module 'codemirror/mode/stex/stex.js' {2
  declare module.exports: $Exports<'codemirror/mode/stex/stex'>;2
}2
declare module 'codemirror/mode/stylus/stylus.js' {2
  declare module.exports: $Exports<'codemirror/mode/stylus/stylus'>;2
}2
declare module 'codemirror/mode/swift/swift.js' {2
  declare module.exports: $Exports<'codemirror/mode/swift/swift'>;2
}2
declare module 'codemirror/mode/tcl/tcl.js' {2
  declare module.exports: $Exports<'codemirror/mode/tcl/tcl'>;2
}2
declare module 'codemirror/mode/textile/textile.js' {2
  declare module.exports: $Exports<'codemirror/mode/textile/textile'>;2
}2
declare module 'codemirror/mode/tiddlywiki/tiddlywiki.js' {2
  declare module.exports: $Exports<'codemirror/mode/tiddlywiki/tiddlywiki'>;2
}2
declare module 'codemirror/mode/tiki/tiki.js' {2
  declare module.exports: $Exports<'codemirror/mode/tiki/tiki'>;2
}2
declare module 'codemirror/mode/toml/toml.js' {2
  declare module.exports: $Exports<'codemirror/mode/toml/toml'>;2
}2
declare module 'codemirror/mode/tornado/tornado.js' {2
  declare module.exports: $Exports<'codemirror/mode/tornado/tornado'>;2
}2
declare module 'codemirror/mode/troff/troff.js' {2
  declare module.exports: $Exports<'codemirror/mode/troff/troff'>;2
}2
declare module 'codemirror/mode/ttcn-cfg/ttcn-cfg.js' {2
  declare module.exports: $Exports<'codemirror/mode/ttcn-cfg/ttcn-cfg'>;2
}2
declare module 'codemirror/mode/ttcn/ttcn.js' {2
  declare module.exports: $Exports<'codemirror/mode/ttcn/ttcn'>;2
}2
declare module 'codemirror/mode/turtle/turtle.js' {2
  declare module.exports: $Exports<'codemirror/mode/turtle/turtle'>;2
}2
declare module 'codemirror/mode/twig/twig.js' {2
  declare module.exports: $Exports<'codemirror/mode/twig/twig'>;2
}2
declare module 'codemirror/mode/vb/vb.js' {2
  declare module.exports: $Exports<'codemirror/mode/vb/vb'>;2
}2
declare module 'codemirror/mode/vbscript/vbscript.js' {2
  declare module.exports: $Exports<'codemirror/mode/vbscript/vbscript'>;2
}2
declare module 'codemirror/mode/velocity/velocity.js' {2
  declare module.exports: $Exports<'codemirror/mode/velocity/velocity'>;2
}2
declare module 'codemirror/mode/verilog/verilog.js' {2
  declare module.exports: $Exports<'codemirror/mode/verilog/verilog'>;2
}2
declare module 'codemirror/mode/vhdl/vhdl.js' {2
  declare module.exports: $Exports<'codemirror/mode/vhdl/vhdl'>;2
}2
declare module 'codemirror/mode/vue/vue.js' {2
  declare module.exports: $Exports<'codemirror/mode/vue/vue'>;2
}2
declare module 'codemirror/mode/webidl/webidl.js' {2
  declare module.exports: $Exports<'codemirror/mode/webidl/webidl'>;2
}2
declare module 'codemirror/mode/xml/xml.js' {2
  declare module.exports: $Exports<'codemirror/mode/xml/xml'>;2
}2
declare module 'codemirror/mode/xquery/xquery.js' {2
  declare module.exports: $Exports<'codemirror/mode/xquery/xquery'>;2
}2
declare module 'codemirror/mode/yacas/yacas.js' {2
  declare module.exports: $Exports<'codemirror/mode/yacas/yacas'>;2
}2
declare module 'codemirror/mode/yaml-frontmatter/yaml-frontmatter.js' {2
  declare module.exports: $Exports<'codemirror/mode/yaml-frontmatter/yaml-frontmatter'>;2
}2
declare module 'codemirror/mode/yaml/yaml.js' {2
  declare module.exports: $Exports<'codemirror/mode/yaml/yaml'>;2
}2
declare module 'codemirror/mode/z80/z80.js' {2
  declare module.exports: $Exports<'codemirror/mode/z80/z80'>;2
}2
declare module 'codemirror/rollup.config.js' {2
  declare module.exports: $Exports<'codemirror/rollup.config'>;2
}2
declare module 'codemirror/src/codemirror.js' {2
  declare module.exports: $Exports<'codemirror/src/codemirror'>;2
}2
declare module 'codemirror/src/display/Display.js' {2
  declare module.exports: $Exports<'codemirror/src/display/Display'>;2
}2
declare module 'codemirror/src/display/focus.js' {2
  declare module.exports: $Exports<'codemirror/src/display/focus'>;2
}2
declare module 'codemirror/src/display/gutters.js' {2
  declare module.exports: $Exports<'codemirror/src/display/gutters'>;2
}2
declare module 'codemirror/src/display/highlight_worker.js' {2
  declare module.exports: $Exports<'codemirror/src/display/highlight_worker'>;2
}2
declare module 'codemirror/src/display/line_numbers.js' {2
  declare module.exports: $Exports<'codemirror/src/display/line_numbers'>;2
}2
declare module 'codemirror/src/display/mode_state.js' {2
  declare module.exports: $Exports<'codemirror/src/display/mode_state'>;2
}2
declare module 'codemirror/src/display/operations.js' {2
  declare module.exports: $Exports<'codemirror/src/display/operations'>;2
}2
declare module 'codemirror/src/display/scroll_events.js' {2
  declare module.exports: $Exports<'codemirror/src/display/scroll_events'>;2
}2
declare module 'codemirror/src/display/scrollbars.js' {2
  declare module.exports: $Exports<'codemirror/src/display/scrollbars'>;2
}2
declare module 'codemirror/src/display/scrolling.js' {2
  declare module.exports: $Exports<'codemirror/src/display/scrolling'>;2
}2
declare module 'codemirror/src/display/selection.js' {2
  declare module.exports: $Exports<'codemirror/src/display/selection'>;2
}2
declare module 'codemirror/src/display/update_display.js' {2
  declare module.exports: $Exports<'codemirror/src/display/update_display'>;2
}2
declare module 'codemirror/src/display/update_line.js' {2
  declare module.exports: $Exports<'codemirror/src/display/update_line'>;2
}2
declare module 'codemirror/src/display/update_lines.js' {2
  declare module.exports: $Exports<'codemirror/src/display/update_lines'>;2
}2
declare module 'codemirror/src/display/view_tracking.js' {2
  declare module.exports: $Exports<'codemirror/src/display/view_tracking'>;2
}2
declare module 'codemirror/src/edit/CodeMirror.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/CodeMirror'>;2
}2
declare module 'codemirror/src/edit/commands.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/commands'>;2
}2
declare module 'codemirror/src/edit/deleteNearSelection.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/deleteNearSelection'>;2
}2
declare module 'codemirror/src/edit/drop_events.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/drop_events'>;2
}2
declare module 'codemirror/src/edit/fromTextArea.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/fromTextArea'>;2
}2
declare module 'codemirror/src/edit/global_events.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/global_events'>;2
}2
declare module 'codemirror/src/edit/key_events.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/key_events'>;2
}2
declare module 'codemirror/src/edit/legacy.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/legacy'>;2
}2
declare module 'codemirror/src/edit/main.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/main'>;2
}2
declare module 'codemirror/src/edit/methods.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/methods'>;2
}2
declare module 'codemirror/src/edit/mouse_events.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/mouse_events'>;2
}2
declare module 'codemirror/src/edit/options.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/options'>;2
}2
declare module 'codemirror/src/edit/utils.js' {2
  declare module.exports: $Exports<'codemirror/src/edit/utils'>;2
}2
declare module 'codemirror/src/input/ContentEditableInput.js' {2
  declare module.exports: $Exports<'codemirror/src/input/ContentEditableInput'>;2
}2
declare module 'codemirror/src/input/indent.js' {2
  declare module.exports: $Exports<'codemirror/src/input/indent'>;2
}2
declare module 'codemirror/src/input/input.js' {2
  declare module.exports: $Exports<'codemirror/src/input/input'>;2
}2
declare module 'codemirror/src/input/keymap.js' {2
  declare module.exports: $Exports<'codemirror/src/input/keymap'>;2
}2
declare module 'codemirror/src/input/keynames.js' {2
  declare module.exports: $Exports<'codemirror/src/input/keynames'>;2
}2
declare module 'codemirror/src/input/movement.js' {2
  declare module.exports: $Exports<'codemirror/src/input/movement'>;2
}2
declare module 'codemirror/src/input/TextareaInput.js' {2
  declare module.exports: $Exports<'codemirror/src/input/TextareaInput'>;2
}2
declare module 'codemirror/src/line/highlight.js' {2
  declare module.exports: $Exports<'codemirror/src/line/highlight'>;2
}2
declare module 'codemirror/src/line/line_data.js' {2
  declare module.exports: $Exports<'codemirror/src/line/line_data'>;2
}2
declare module 'codemirror/src/line/pos.js' {2
  declare module.exports: $Exports<'codemirror/src/line/pos'>;2
}2
declare module 'codemirror/src/line/saw_special_spans.js' {2
  declare module.exports: $Exports<'codemirror/src/line/saw_special_spans'>;2
}2
declare module 'codemirror/src/line/spans.js' {2
  declare module.exports: $Exports<'codemirror/src/line/spans'>;2
}2
declare module 'codemirror/src/line/utils_line.js' {2
  declare module.exports: $Exports<'codemirror/src/line/utils_line'>;2
}2
declare module 'codemirror/src/measurement/position_measurement.js' {2
  declare module.exports: $Exports<'codemirror/src/measurement/position_measurement'>;2
}2
declare module 'codemirror/src/measurement/widgets.js' {2
  declare module.exports: $Exports<'codemirror/src/measurement/widgets'>;2
}2
declare module 'codemirror/src/model/change_measurement.js' {2
  declare module.exports: $Exports<'codemirror/src/model/change_measurement'>;2
}2
declare module 'codemirror/src/model/changes.js' {2
  declare module.exports: $Exports<'codemirror/src/model/changes'>;2
}2
declare module 'codemirror/src/model/chunk.js' {2
  declare module.exports: $Exports<'codemirror/src/model/chunk'>;2
}2
declare module 'codemirror/src/model/Doc.js' {2
  declare module.exports: $Exports<'codemirror/src/model/Doc'>;2
}2
declare module 'codemirror/src/model/document_data.js' {2
  declare module.exports: $Exports<'codemirror/src/model/document_data'>;2
}2
declare module 'codemirror/src/model/history.js' {2
  declare module.exports: $Exports<'codemirror/src/model/history'>;2
}2
declare module 'codemirror/src/model/line_widget.js' {2
  declare module.exports: $Exports<'codemirror/src/model/line_widget'>;2
}2
declare module 'codemirror/src/model/mark_text.js' {2
  declare module.exports: $Exports<'codemirror/src/model/mark_text'>;2
}2
declare module 'codemirror/src/model/selection_updates.js' {2
  declare module.exports: $Exports<'codemirror/src/model/selection_updates'>;2
}2
declare module 'codemirror/src/model/selection.js' {2
  declare module.exports: $Exports<'codemirror/src/model/selection'>;2
}2
declare module 'codemirror/src/modes.js' {2
  declare module.exports: $Exports<'codemirror/src/modes'>;2
}2
declare module 'codemirror/src/util/bidi.js' {2
  declare module.exports: $Exports<'codemirror/src/util/bidi'>;2
}2
declare module 'codemirror/src/util/browser.js' {2
  declare module.exports: $Exports<'codemirror/src/util/browser'>;2
}2
declare module 'codemirror/src/util/dom.js' {2
  declare module.exports: $Exports<'codemirror/src/util/dom'>;2
}2
declare module 'codemirror/src/util/event.js' {2
  declare module.exports: $Exports<'codemirror/src/util/event'>;2
}2
declare module 'codemirror/src/util/feature_detection.js' {2
  declare module.exports: $Exports<'codemirror/src/util/feature_detection'>;2
}2
declare module 'codemirror/src/util/misc.js' {2
  declare module.exports: $Exports<'codemirror/src/util/misc'>;2
}2
declare module 'codemirror/src/util/operation_group.js' {2
  declare module.exports: $Exports<'codemirror/src/util/operation_group'>;2
}2
declare module 'codemirror/src/util/StringStream.js' {2
  declare module.exports: $Exports<'codemirror/src/util/StringStream'>;2
}2
// flow-typed signature: b26465a763805506e2f1120d04ab58eb2
// flow-typed version: <<STUB>>/dashify_v^0.2.2/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'dashify'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'dashify' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
2
2
// Filename aliases2
declare module 'dashify/index' {2
  declare module.exports: $Exports<'dashify'>;2
}2
declare module 'dashify/index.js' {2
  declare module.exports: $Exports<'dashify'>;2
}2
// flow-typed signature: ac858859a846498c06179ada0c8b78a12
// flow-typed version: <<STUB>>/deep-equal_v^1.0.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'deep-equal'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'deep-equal' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'deep-equal/example/cmp' {2
  declare module.exports: any;2
}2
2
declare module 'deep-equal/lib/is_arguments' {2
  declare module.exports: any;2
}2
2
declare module 'deep-equal/lib/keys' {2
  declare module.exports: any;2
}2
2
declare module 'deep-equal/test/cmp' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'deep-equal/example/cmp.js' {2
  declare module.exports: $Exports<'deep-equal/example/cmp'>;2
}2
declare module 'deep-equal/index' {2
  declare module.exports: $Exports<'deep-equal'>;2
}2
declare module 'deep-equal/index.js' {2
  declare module.exports: $Exports<'deep-equal'>;2
}2
declare module 'deep-equal/lib/is_arguments.js' {2
  declare module.exports: $Exports<'deep-equal/lib/is_arguments'>;2
}2
declare module 'deep-equal/lib/keys.js' {2
  declare module.exports: $Exports<'deep-equal/lib/keys'>;2
}2
declare module 'deep-equal/test/cmp.js' {2
  declare module.exports: $Exports<'deep-equal/test/cmp'>;2
}2
// flow-typed signature: ca3761607eebb8eefa0b0b2cd828537f2
// flow-typed version: <<STUB>>/detect-port_v^1.1.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'detect-port'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'detect-port' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'detect-port/lib/detect-port' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'detect-port/index' {2
  declare module.exports: $Exports<'detect-port'>;2
}2
declare module 'detect-port/index.js' {2
  declare module.exports: $Exports<'detect-port'>;2
}2
declare module 'detect-port/lib/detect-port.js' {2
  declare module.exports: $Exports<'detect-port/lib/detect-port'>;2
}2
// flow-typed signature: 0782c9570706be2268d543150a4f38dc2
// flow-typed version: <<STUB>>/electron-builder_v^16.8.3/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'electron-builder'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'electron-builder' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'electron-builder/out/appInfo' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/asar' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/asarUtil' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/builder' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/cli/build-cli' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/cli/cliOptions' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/cli/create-self-signed-cert' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/cli/install-app-deps' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/cli/node-gyp-rebuild' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/codeSign' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/errorMessages' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/fileMatcher' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/fileTransformer' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/forge/forge-maker' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/index' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/linuxPackager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/macPackager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/metadata' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/options/linuxOptions' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/options/macOptions' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/options/winOptions' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/packager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/packager/dirPackager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/packager/mac' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/packagerApi' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/platformPackager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/publish/PublishManager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/readInstalled' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/repositoryInfo' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/appImage' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/appx' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/archive' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/ArchiveTarget' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/dmg' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/fpm' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/LinuxTargetHelper' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/nsis' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/pkg' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/snap' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/targetFactory' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/targets/WebInstallerTarget' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/util/filter' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/util/readPackageJson' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/windowsCodeSign' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/winPackager' {2
  declare module.exports: any;2
}2
2
declare module 'electron-builder/out/yarn' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'electron-builder/out/appInfo.js' {2
  declare module.exports: $Exports<'electron-builder/out/appInfo'>;2
}2
declare module 'electron-builder/out/asar.js' {2
  declare module.exports: $Exports<'electron-builder/out/asar'>;2
}2
declare module 'electron-builder/out/asarUtil.js' {2
  declare module.exports: $Exports<'electron-builder/out/asarUtil'>;2
}2
declare module 'electron-builder/out/builder.js' {2
  declare module.exports: $Exports<'electron-builder/out/builder'>;2
}2
declare module 'electron-builder/out/cli/build-cli.js' {2
  declare module.exports: $Exports<'electron-builder/out/cli/build-cli'>;2
}2
declare module 'electron-builder/out/cli/cliOptions.js' {2
  declare module.exports: $Exports<'electron-builder/out/cli/cliOptions'>;2
}2
declare module 'electron-builder/out/cli/create-self-signed-cert.js' {2
  declare module.exports: $Exports<'electron-builder/out/cli/create-self-signed-cert'>;2
}2
declare module 'electron-builder/out/cli/install-app-deps.js' {2
  declare module.exports: $Exports<'electron-builder/out/cli/install-app-deps'>;2
}2
declare module 'electron-builder/out/cli/node-gyp-rebuild.js' {2
  declare module.exports: $Exports<'electron-builder/out/cli/node-gyp-rebuild'>;2
}2
declare module 'electron-builder/out/codeSign.js' {2
  declare module.exports: $Exports<'electron-builder/out/codeSign'>;2
}2
declare module 'electron-builder/out/errorMessages.js' {2
  declare module.exports: $Exports<'electron-builder/out/errorMessages'>;2
}2
declare module 'electron-builder/out/fileMatcher.js' {2
  declare module.exports: $Exports<'electron-builder/out/fileMatcher'>;2
}2
declare module 'electron-builder/out/fileTransformer.js' {2
  declare module.exports: $Exports<'electron-builder/out/fileTransformer'>;2
}2
declare module 'electron-builder/out/forge/forge-maker.js' {2
  declare module.exports: $Exports<'electron-builder/out/forge/forge-maker'>;2
}2
declare module 'electron-builder/out/index.js' {2
  declare module.exports: $Exports<'electron-builder/out/index'>;2
}2
declare module 'electron-builder/out/linuxPackager.js' {2
  declare module.exports: $Exports<'electron-builder/out/linuxPackager'>;2
}2
declare module 'electron-builder/out/macPackager.js' {2
  declare module.exports: $Exports<'electron-builder/out/macPackager'>;2
}2
declare module 'electron-builder/out/metadata.js' {2
  declare module.exports: $Exports<'electron-builder/out/metadata'>;2
}2
declare module 'electron-builder/out/options/linuxOptions.js' {2
  declare module.exports: $Exports<'electron-builder/out/options/linuxOptions'>;2
}2
declare module 'electron-builder/out/options/macOptions.js' {2
  declare module.exports: $Exports<'electron-builder/out/options/macOptions'>;2
}2
declare module 'electron-builder/out/options/winOptions.js' {2
  declare module.exports: $Exports<'electron-builder/out/options/winOptions'>;2
}2
declare module 'electron-builder/out/packager.js' {2
  declare module.exports: $Exports<'electron-builder/out/packager'>;2
}2
declare module 'electron-builder/out/packager/dirPackager.js' {2
  declare module.exports: $Exports<'electron-builder/out/packager/dirPackager'>;2
}2
declare module 'electron-builder/out/packager/mac.js' {2
  declare module.exports: $Exports<'electron-builder/out/packager/mac'>;2
}2
declare module 'electron-builder/out/packagerApi.js' {2
  declare module.exports: $Exports<'electron-builder/out/packagerApi'>;2
}2
declare module 'electron-builder/out/platformPackager.js' {2
  declare module.exports: $Exports<'electron-builder/out/platformPackager'>;2
}2
declare module 'electron-builder/out/publish/PublishManager.js' {2
  declare module.exports: $Exports<'electron-builder/out/publish/PublishManager'>;2
}2
declare module 'electron-builder/out/readInstalled.js' {2
  declare module.exports: $Exports<'electron-builder/out/readInstalled'>;2
}2
declare module 'electron-builder/out/repositoryInfo.js' {2
  declare module.exports: $Exports<'electron-builder/out/repositoryInfo'>;2
}2
declare module 'electron-builder/out/targets/appImage.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/appImage'>;2
}2
declare module 'electron-builder/out/targets/appx.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/appx'>;2
}2
declare module 'electron-builder/out/targets/archive.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/archive'>;2
}2
declare module 'electron-builder/out/targets/ArchiveTarget.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/ArchiveTarget'>;2
}2
declare module 'electron-builder/out/targets/dmg.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/dmg'>;2
}2
declare module 'electron-builder/out/targets/fpm.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/fpm'>;2
}2
declare module 'electron-builder/out/targets/LinuxTargetHelper.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/LinuxTargetHelper'>;2
}2
declare module 'electron-builder/out/targets/nsis.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/nsis'>;2
}2
declare module 'electron-builder/out/targets/pkg.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/pkg'>;2
}2
declare module 'electron-builder/out/targets/snap.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/snap'>;2
}2
declare module 'electron-builder/out/targets/targetFactory.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/targetFactory'>;2
}2
declare module 'electron-builder/out/targets/WebInstallerTarget.js' {2
  declare module.exports: $Exports<'electron-builder/out/targets/WebInstallerTarget'>;2
}2
declare module 'electron-builder/out/util/filter.js' {2
  declare module.exports: $Exports<'electron-builder/out/util/filter'>;2
}2
declare module 'electron-builder/out/util/readPackageJson.js' {2
  declare module.exports: $Exports<'electron-builder/out/util/readPackageJson'>;2
}2
declare module 'electron-builder/out/windowsCodeSign.js' {2
  declare module.exports: $Exports<'electron-builder/out/windowsCodeSign'>;2
}2
declare module 'electron-builder/out/winPackager.js' {2
  declare module.exports: $Exports<'electron-builder/out/winPackager'>;2
}2
declare module 'electron-builder/out/yarn.js' {2
  declare module.exports: $Exports<'electron-builder/out/yarn'>;2
}2
// flow-typed signature: fce58527cae3f8649ab3ffb72e58090c2
// flow-typed version: <<STUB>>/electron-devtools-installer_v^2.2.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'electron-devtools-installer'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'electron-devtools-installer' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'electron-devtools-installer/dist/downloadChromeExtension' {2
  declare module.exports: any;2
}2
2
declare module 'electron-devtools-installer/dist/index' {2
  declare module.exports: any;2
}2
2
declare module 'electron-devtools-installer/dist/utils' {2
  declare module.exports: any;2
}2
2
declare module 'electron-devtools-installer/src/downloadChromeExtension' {2
  declare module.exports: any;2
}2
2
declare module 'electron-devtools-installer/src/index' {2
  declare module.exports: any;2
}2
2
declare module 'electron-devtools-installer/src/utils' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'electron-devtools-installer/dist/downloadChromeExtension.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/dist/downloadChromeExtension'>;2
}2
declare module 'electron-devtools-installer/dist/index.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/dist/index'>;2
}2
declare module 'electron-devtools-installer/dist/utils.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/dist/utils'>;2
}2
declare module 'electron-devtools-installer/src/downloadChromeExtension.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/src/downloadChromeExtension'>;2
}2
declare module 'electron-devtools-installer/src/index.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/src/index'>;2
}2
declare module 'electron-devtools-installer/src/utils.js' {2
  declare module.exports: $Exports<'electron-devtools-installer/src/utils'>;2
}2
// flow-typed signature: 451c88326bb7cc6aa79491d34e1c60b02
// flow-typed version: <<STUB>>/electron_v1.7.3/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'electron'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'electron' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'electron/cli' {2
  declare module.exports: any;2
}2
2
declare module 'electron/install' {2
  declare module.exports: any;2
}2
2
declare module 'electron/test/errors' {2
  declare module.exports: any;2
}2
2
declare module 'electron/test/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'electron/cli.js' {2
  declare module.exports: $Exports<'electron/cli'>;2
}2
declare module 'electron/index' {2
  declare module.exports: $Exports<'electron'>;2
}2
declare module 'electron/index.js' {2
  declare module.exports: $Exports<'electron'>;2
}2
declare module 'electron/install.js' {2
  declare module.exports: $Exports<'electron/install'>;2
}2
declare module 'electron/test/errors.js' {2
  declare module.exports: $Exports<'electron/test/errors'>;2
}2
declare module 'electron/test/index.js' {2
  declare module.exports: $Exports<'electron/test/index'>;2
}2
// flow-typed signature: 44d1e6a2fb005812ddc1cec21c490caf2
// flow-typed version: <<STUB>>/eslint-config-react-app_v^0.6.2/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-config-react-app'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-config-react-app' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
2
2
// Filename aliases2
declare module 'eslint-config-react-app/index' {2
  declare module.exports: $Exports<'eslint-config-react-app'>;2
}2
declare module 'eslint-config-react-app/index.js' {2
  declare module.exports: $Exports<'eslint-config-react-app'>;2
}2
// flow-typed signature: 01f86fa0dc19e1126195f0bded4a75de2
// flow-typed version: <<STUB>>/eslint-plugin-flowtype_v^2.30.4/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-flowtype'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-flowtype' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-flowtype/bin/readmeAssertions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/booleanStyle' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/defineFlowType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/delimiterDangle' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/genericSpacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noDupeKeys' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noMutableArray' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noPrimitiveConstructorTypes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noTypesMissingFileAnnotation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noUnusedExpressions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/noWeakTypes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/objectTypeDelimiter' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/requireParameterType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/requireReturnType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/requireValidFileAnnotation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/requireVariableType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/semi' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/sortKeys' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/spaceAfterTypeColon' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/spaceBeforeGenericBracket' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/spaceBeforeTypeColon' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateFunctions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeProperty' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateReturnType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypeCastExpression' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypical' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/reporter' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/typeIdMatch' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/unionIntersectionSpacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/useFlowType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/rules/validSyntax' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/checkFlowFileAnnotation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/fuzzyStringMatch' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/getParameterName' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/getTokenAfterParens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/getTokenBeforeParens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/isFlowFile' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/isFlowFileAnnotation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/iterateFunctionNodes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/quoteName' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-flowtype/dist/utilities/spacingFixers' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-flowtype/bin/readmeAssertions.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/bin/readmeAssertions'>;2
}2
declare module 'eslint-plugin-flowtype/dist/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/index'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/booleanStyle.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/booleanStyle'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/defineFlowType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/defineFlowType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/delimiterDangle.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/delimiterDangle'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/genericSpacing.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/genericSpacing'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noDupeKeys.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noDupeKeys'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noMutableArray.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noMutableArray'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noPrimitiveConstructorTypes.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noPrimitiveConstructorTypes'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noTypesMissingFileAnnotation.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noTypesMissingFileAnnotation'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noUnusedExpressions.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noUnusedExpressions'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/noWeakTypes.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/noWeakTypes'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/objectTypeDelimiter.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/objectTypeDelimiter'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/requireParameterType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/requireParameterType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/requireReturnType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/requireReturnType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/requireValidFileAnnotation.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/requireValidFileAnnotation'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/requireVariableType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/requireVariableType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/semi.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/semi'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/sortKeys.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/sortKeys'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/spaceAfterTypeColon.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/spaceAfterTypeColon'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/spaceBeforeGenericBracket.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/spaceBeforeGenericBracket'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/spaceBeforeTypeColon.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/spaceBeforeTypeColon'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateFunctions.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateFunctions'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeIndexer'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeProperty.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateObjectTypeProperty'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateReturnType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateReturnType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypeCastExpression.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypeCastExpression'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypical.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypical'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/index'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeColonSpacing/reporter.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeColonSpacing/reporter'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/typeIdMatch.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/typeIdMatch'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/unionIntersectionSpacing.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/unionIntersectionSpacing'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/useFlowType.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/useFlowType'>;2
}2
declare module 'eslint-plugin-flowtype/dist/rules/validSyntax.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/rules/validSyntax'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/checkFlowFileAnnotation.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/checkFlowFileAnnotation'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/fuzzyStringMatch.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/fuzzyStringMatch'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/getParameterName.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/getParameterName'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/getTokenAfterParens.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/getTokenAfterParens'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/getTokenBeforeParens.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/getTokenBeforeParens'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/index'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/isFlowFile.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/isFlowFile'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/isFlowFileAnnotation.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/isFlowFileAnnotation'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/iterateFunctionNodes.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/iterateFunctionNodes'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/quoteName.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/quoteName'>;2
}2
declare module 'eslint-plugin-flowtype/dist/utilities/spacingFixers.js' {2
  declare module.exports: $Exports<'eslint-plugin-flowtype/dist/utilities/spacingFixers'>;2
}2
// flow-typed signature: e6182e793944459234f882bb47d2ba012
// flow-typed version: <<STUB>>/eslint-plugin-import_v^2.2.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-import'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-import' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-import/config/electron' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/errors' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/react-native' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/react' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/recommended' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/stage-0' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/config/warnings' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/core/importType' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/core/staticRequire' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/ExportMap' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/importDeclaration' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/default' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/export' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/exports-last' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/extensions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/first' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/imports-first' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/max-dependencies' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/named' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/namespace' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/newline-after-import' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-absolute-path' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-amd' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-anonymous-default-export' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-commonjs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-deprecated' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-duplicates' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-dynamic-require' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-extraneous-dependencies' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-internal-modules' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-mutable-exports' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-named-as-default-member' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-named-as-default' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-named-default' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-namespace' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-nodejs-modules' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-restricted-paths' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-unassigned-import' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-unresolved' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/no-webpack-loader-syntax' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/order' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/prefer-default-export' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/lib/rules/unambiguous' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-import/memo-parser/index' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-import/config/electron.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/electron'>;2
}2
declare module 'eslint-plugin-import/config/errors.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/errors'>;2
}2
declare module 'eslint-plugin-import/config/react-native.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/react-native'>;2
}2
declare module 'eslint-plugin-import/config/react.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/react'>;2
}2
declare module 'eslint-plugin-import/config/recommended.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/recommended'>;2
}2
declare module 'eslint-plugin-import/config/stage-0.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/stage-0'>;2
}2
declare module 'eslint-plugin-import/config/warnings.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/config/warnings'>;2
}2
declare module 'eslint-plugin-import/lib/core/importType.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/core/importType'>;2
}2
declare module 'eslint-plugin-import/lib/core/staticRequire.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/core/staticRequire'>;2
}2
declare module 'eslint-plugin-import/lib/ExportMap.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/ExportMap'>;2
}2
declare module 'eslint-plugin-import/lib/importDeclaration.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/importDeclaration'>;2
}2
declare module 'eslint-plugin-import/lib/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/index'>;2
}2
declare module 'eslint-plugin-import/lib/rules/default.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/default'>;2
}2
declare module 'eslint-plugin-import/lib/rules/export.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/export'>;2
}2
declare module 'eslint-plugin-import/lib/rules/exports-last.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/exports-last'>;2
}2
declare module 'eslint-plugin-import/lib/rules/extensions.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/extensions'>;2
}2
declare module 'eslint-plugin-import/lib/rules/first.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/first'>;2
}2
declare module 'eslint-plugin-import/lib/rules/imports-first.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/imports-first'>;2
}2
declare module 'eslint-plugin-import/lib/rules/max-dependencies.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/max-dependencies'>;2
}2
declare module 'eslint-plugin-import/lib/rules/named.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/named'>;2
}2
declare module 'eslint-plugin-import/lib/rules/namespace.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/namespace'>;2
}2
declare module 'eslint-plugin-import/lib/rules/newline-after-import.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/newline-after-import'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-absolute-path.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-absolute-path'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-amd.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-amd'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-anonymous-default-export.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-anonymous-default-export'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-commonjs.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-commonjs'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-deprecated.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-deprecated'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-duplicates.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-duplicates'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-dynamic-require.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-dynamic-require'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-extraneous-dependencies.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-extraneous-dependencies'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-internal-modules.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-internal-modules'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-mutable-exports.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-mutable-exports'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-named-as-default-member.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-named-as-default-member'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-named-as-default.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-named-as-default'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-named-default.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-named-default'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-namespace.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-namespace'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-nodejs-modules.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-nodejs-modules'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-restricted-paths.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-restricted-paths'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-unassigned-import.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-unassigned-import'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-unresolved.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-unresolved'>;2
}2
declare module 'eslint-plugin-import/lib/rules/no-webpack-loader-syntax.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/no-webpack-loader-syntax'>;2
}2
declare module 'eslint-plugin-import/lib/rules/order.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/order'>;2
}2
declare module 'eslint-plugin-import/lib/rules/prefer-default-export.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/prefer-default-export'>;2
}2
declare module 'eslint-plugin-import/lib/rules/unambiguous.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/lib/rules/unambiguous'>;2
}2
declare module 'eslint-plugin-import/memo-parser/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-import/memo-parser/index'>;2
}2
// flow-typed signature: 8a40d0f5dc4e849acdc08684ab7c532f2
// flow-typed version: <<STUB>>/eslint-plugin-jest_v^20.0.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-jest'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-jest' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-jest/build/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jest/build/rules/no-disabled-tests' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jest/build/rules/no-focused-tests' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jest/build/rules/no-identical-title' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jest/build/rules/types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jest/build/rules/valid-expect' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-jest/build/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/index'>;2
}2
declare module 'eslint-plugin-jest/build/rules/no-disabled-tests.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/rules/no-disabled-tests'>;2
}2
declare module 'eslint-plugin-jest/build/rules/no-focused-tests.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/rules/no-focused-tests'>;2
}2
declare module 'eslint-plugin-jest/build/rules/no-identical-title.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/rules/no-identical-title'>;2
}2
declare module 'eslint-plugin-jest/build/rules/types.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/rules/types'>;2
}2
declare module 'eslint-plugin-jest/build/rules/valid-expect.js' {2
  declare module.exports: $Exports<'eslint-plugin-jest/build/rules/valid-expect'>;2
}2
// flow-typed signature: 6b61f7970cc96dba334588a5e4980afa2
// flow-typed version: <<STUB>>/eslint-plugin-jsx-a11y_v^4.0.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-jsx-a11y'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-jsx-a11y' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-jsx-a11y/__mocks__/genInteractives' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__mocks__/IdentifierMock' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXAttributeMock' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXElementMock' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXExpressionContainerMock' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/__util__/parserOptionsMapper' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/index-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/accessible-emoji-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-has-content-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-activedescendant-has-tabindex-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-props-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-proptypes-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-role-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-unsupported-elements-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/click-events-have-key-events-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/heading-has-content-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/href-no-hash-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/html-has-lang-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/iframe-has-title-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/img-has-alt-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/img-redundant-alt-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/label-has-for-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/lang-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/mouse-events-have-key-events-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-access-key-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-autofocus-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-distracting-elements-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-onchange-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-redundant-roles-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-static-element-interactions-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-focus-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-role-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/role-has-required-aria-props-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/role-supports-aria-props-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/scope-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/tabindex-no-positive-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/getSuggestion-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/getTabIndex-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveElement-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveRole-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/parserOptionsMapper-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/schemas-test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/flow/eslint' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/accessible-emoji' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/anchor-has-content' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-activedescendant-has-tabindex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-proptypes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-role' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-unsupported-elements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/click-events-have-key-events' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/heading-has-content' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/href-no-hash' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/html-has-lang' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/iframe-has-title' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/img-has-alt' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/img-redundant-alt' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/label-has-for' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/lang' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/mouse-events-have-key-events' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-access-key' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-autofocus' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-distracting-elements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-onchange' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-redundant-roles' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-static-element-interactions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/onclick-has-focus' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/onclick-has-role' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/role-has-required-aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/role-supports-aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/scope' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/rules/tabindex-no-positive' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/getImplicitRole' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/getSuggestion' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/getTabIndex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/a' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/area' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/article' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/aside' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/body' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/button' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/datalist' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/details' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dialog' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dl' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/form' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h1' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h2' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h3' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h4' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h5' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h6' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/hr' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/img' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/input' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/li' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/link' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menu' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menuitem' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/meter' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/nav' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ol' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/option' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/output' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/progress' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/section' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/select' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tbody' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/textarea' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tfoot' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/thead' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ul' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/isHiddenFromScreenReader' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/isInteractiveElement' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/isInteractiveRole' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/lib/util/schemas' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/scripts/addRuleToIndex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/doc' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/rule' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/test' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/scripts/create-rule' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/accessible-emoji' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/anchor-has-content' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-activedescendant-has-tabindex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-proptypes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-role' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-unsupported-elements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/click-events-have-key-events' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/heading-has-content' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/href-no-hash' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/html-has-lang' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/iframe-has-title' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/img-has-alt' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/img-redundant-alt' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/label-has-for' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/lang' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/mouse-events-have-key-events' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-access-key' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-autofocus' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-distracting-elements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-onchange' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-redundant-roles' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-static-element-interactions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/onclick-has-focus' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/onclick-has-role' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/role-has-required-aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/role-supports-aria-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/scope' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/rules/tabindex-no-positive' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/getImplicitRole' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/getSuggestion' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/getTabIndex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/a' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/area' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/article' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/aside' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/body' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/button' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/datalist' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/details' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/dialog' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/dl' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/form' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h1' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h2' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h3' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h4' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h5' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h6' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/hr' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/img' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/input' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/li' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/link' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/menu' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/menuitem' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/meter' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/nav' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/ol' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/option' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/output' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/progress' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/section' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/select' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/tbody' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/textarea' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/tfoot' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/thead' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/ul' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/isHiddenFromScreenReader' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/isInteractiveElement' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/isInteractiveRole' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-jsx-a11y/src/util/schemas' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-jsx-a11y/__mocks__/genInteractives.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__mocks__/genInteractives'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__mocks__/IdentifierMock.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__mocks__/IdentifierMock'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXAttributeMock.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__mocks__/JSXAttributeMock'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXElementMock.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__mocks__/JSXElementMock'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__mocks__/JSXExpressionContainerMock.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__mocks__/JSXExpressionContainerMock'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/__util__/parserOptionsMapper.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/__util__/parserOptionsMapper'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/index-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/index-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/accessible-emoji-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/accessible-emoji-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-has-content-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-has-content-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-activedescendant-has-tabindex-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-activedescendant-has-tabindex-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-props-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-props-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-proptypes-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-proptypes-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-role-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-role-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-unsupported-elements-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/aria-unsupported-elements-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/click-events-have-key-events-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/click-events-have-key-events-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/heading-has-content-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/heading-has-content-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/href-no-hash-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/href-no-hash-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/html-has-lang-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/html-has-lang-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/iframe-has-title-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/iframe-has-title-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/img-has-alt-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/img-has-alt-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/img-redundant-alt-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/img-redundant-alt-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/label-has-for-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/label-has-for-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/lang-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/lang-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/mouse-events-have-key-events-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/mouse-events-have-key-events-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-access-key-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-access-key-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-autofocus-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-autofocus-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-distracting-elements-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-distracting-elements-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-onchange-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-onchange-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-redundant-roles-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-redundant-roles-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/no-static-element-interactions-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/no-static-element-interactions-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-focus-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-focus-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-role-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/onclick-has-role-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/role-has-required-aria-props-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/role-has-required-aria-props-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/role-supports-aria-props-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/role-supports-aria-props-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/scope-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/scope-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/rules/tabindex-no-positive-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/rules/tabindex-no-positive-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/getSuggestion-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/getSuggestion-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/getTabIndex-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/getTabIndex-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveElement-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveElement-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveRole-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/isInteractiveRole-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/parserOptionsMapper-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/parserOptionsMapper-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/__tests__/src/util/schemas-test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/__tests__/src/util/schemas-test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/flow/eslint.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/flow/eslint'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/index'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/accessible-emoji.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/accessible-emoji'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/anchor-has-content.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/anchor-has-content'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-activedescendant-has-tabindex.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/aria-activedescendant-has-tabindex'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-proptypes.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/aria-proptypes'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-role.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/aria-role'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/aria-unsupported-elements.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/aria-unsupported-elements'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/click-events-have-key-events.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/click-events-have-key-events'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/heading-has-content.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/heading-has-content'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/href-no-hash.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/href-no-hash'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/html-has-lang.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/html-has-lang'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/iframe-has-title.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/iframe-has-title'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/img-has-alt.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/img-has-alt'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/img-redundant-alt.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/img-redundant-alt'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/label-has-for.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/label-has-for'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/lang.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/lang'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/mouse-events-have-key-events.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/mouse-events-have-key-events'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-access-key.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-access-key'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-autofocus.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-autofocus'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-distracting-elements.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-distracting-elements'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-onchange.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-onchange'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-redundant-roles.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-redundant-roles'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/no-static-element-interactions.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/no-static-element-interactions'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/onclick-has-focus.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/onclick-has-focus'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/onclick-has-role.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/onclick-has-role'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/role-has-required-aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/role-has-required-aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/role-supports-aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/role-supports-aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/scope.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/scope'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/rules/tabindex-no-positive.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/rules/tabindex-no-positive'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/getImplicitRole.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/getImplicitRole'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/getSuggestion.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/getSuggestion'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/getTabIndex.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/getTabIndex'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/a.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/a'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/area.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/area'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/article.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/article'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/aside.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/aside'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/body.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/body'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/button.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/button'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/datalist.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/datalist'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/details.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/details'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dialog.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dialog'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dl.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/dl'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/form.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/form'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h1.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h1'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h2.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h2'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h3.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h3'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h4.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h4'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h5.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h5'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h6.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/h6'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/hr.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/hr'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/img.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/img'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/index'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/input.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/input'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/li.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/li'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/link.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/link'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menu.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menu'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menuitem.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/menuitem'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/meter.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/meter'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/nav.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/nav'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ol.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ol'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/option.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/option'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/output.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/output'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/progress.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/progress'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/section.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/section'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/select.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/select'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tbody.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tbody'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/textarea.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/textarea'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tfoot.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/tfoot'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/thead.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/thead'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ul.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/implicitRoles/ul'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/isHiddenFromScreenReader.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/isHiddenFromScreenReader'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/isInteractiveElement.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/isInteractiveElement'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/isInteractiveRole.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/isInteractiveRole'>;2
}2
declare module 'eslint-plugin-jsx-a11y/lib/util/schemas.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/lib/util/schemas'>;2
}2
declare module 'eslint-plugin-jsx-a11y/scripts/addRuleToIndex.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/scripts/addRuleToIndex'>;2
}2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/doc.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/scripts/boilerplate/doc'>;2
}2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/rule.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/scripts/boilerplate/rule'>;2
}2
declare module 'eslint-plugin-jsx-a11y/scripts/boilerplate/test.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/scripts/boilerplate/test'>;2
}2
declare module 'eslint-plugin-jsx-a11y/scripts/create-rule.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/scripts/create-rule'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/index'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/accessible-emoji.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/accessible-emoji'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/anchor-has-content.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/anchor-has-content'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-activedescendant-has-tabindex.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/aria-activedescendant-has-tabindex'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-proptypes.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/aria-proptypes'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-role.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/aria-role'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/aria-unsupported-elements.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/aria-unsupported-elements'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/click-events-have-key-events.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/click-events-have-key-events'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/heading-has-content.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/heading-has-content'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/href-no-hash.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/href-no-hash'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/html-has-lang.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/html-has-lang'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/iframe-has-title.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/iframe-has-title'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/img-has-alt.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/img-has-alt'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/img-redundant-alt.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/img-redundant-alt'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/label-has-for.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/label-has-for'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/lang.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/lang'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/mouse-events-have-key-events.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/mouse-events-have-key-events'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-access-key.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-access-key'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-autofocus.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-autofocus'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-distracting-elements.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-distracting-elements'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-onchange.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-onchange'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-redundant-roles.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-redundant-roles'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/no-static-element-interactions.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/no-static-element-interactions'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/onclick-has-focus.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/onclick-has-focus'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/onclick-has-role.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/onclick-has-role'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/role-has-required-aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/role-has-required-aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/role-supports-aria-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/role-supports-aria-props'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/scope.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/scope'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/rules/tabindex-no-positive.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/rules/tabindex-no-positive'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/getImplicitRole.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/getImplicitRole'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/getSuggestion.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/getSuggestion'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/getTabIndex.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/getTabIndex'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/a.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/a'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/area.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/area'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/article.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/article'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/aside.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/aside'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/body.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/body'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/button.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/button'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/datalist.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/datalist'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/details.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/details'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/dialog.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/dialog'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/dl.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/dl'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/form.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/form'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h1.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h1'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h2.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h2'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h3.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h3'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h4.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h4'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h5.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h5'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/h6.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/h6'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/hr.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/hr'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/img.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/img'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/index'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/input.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/input'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/li.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/li'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/link.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/link'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/menu.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/menu'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/menuitem.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/menuitem'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/meter.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/meter'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/nav.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/nav'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/ol.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/ol'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/option.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/option'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/output.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/output'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/progress.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/progress'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/section.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/section'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/select.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/select'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/tbody.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/tbody'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/textarea.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/textarea'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/tfoot.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/tfoot'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/thead.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/thead'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/implicitRoles/ul.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/implicitRoles/ul'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/isHiddenFromScreenReader.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/isHiddenFromScreenReader'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/isInteractiveElement.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/isInteractiveElement'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/isInteractiveRole.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/isInteractiveRole'>;2
}2
declare module 'eslint-plugin-jsx-a11y/src/util/schemas.js' {2
  declare module.exports: $Exports<'eslint-plugin-jsx-a11y/src/util/schemas'>;2
}2
// flow-typed signature: 409c518b379d758c595068e9eefec26b2
// flow-typed version: <<STUB>>/eslint-plugin-prettier_v^2.3.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-prettier'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-prettier' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-prettier/eslint-plugin-prettier' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-prettier/eslint-plugin-prettier.js' {2
  declare module.exports: $Exports<'eslint-plugin-prettier/eslint-plugin-prettier'>;2
}2
// flow-typed signature: bcecc715564737f1856994b80c3fff422
// flow-typed version: <<STUB>>/eslint-plugin-prettify_v^1.0.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-prettify'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-prettify' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-prettify/no-styles' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-prettify/rule' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-prettify/index' {2
  declare module.exports: $Exports<'eslint-plugin-prettify'>;2
}2
declare module 'eslint-plugin-prettify/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-prettify'>;2
}2
declare module 'eslint-plugin-prettify/no-styles.js' {2
  declare module.exports: $Exports<'eslint-plugin-prettify/no-styles'>;2
}2
declare module 'eslint-plugin-prettify/rule.js' {2
  declare module.exports: $Exports<'eslint-plugin-prettify/rule'>;2
}2
// flow-typed signature: db9fe4d9399695da59af119fe46c104a2
// flow-typed version: <<STUB>>/eslint-plugin-react_v^6.10.3/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint-plugin-react'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint-plugin-react' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint-plugin-react/lib/rules/display-name' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/forbid-component-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/forbid-elements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/forbid-foreign-prop-types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/forbid-prop-types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-boolean-value' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-closing-bracket-location' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-curly-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-equals-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-filename-extension' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-first-prop-new-line' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-handler-names' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-indent-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-indent' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-key' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-max-props-per-line' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-bind' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-comment-textnodes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-duplicate-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-literals' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-target-blank' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-no-undef' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-pascal-case' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-sort-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-space-before-closing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-tag-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-uses-react' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-uses-vars' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/jsx-wrap-multilines' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-array-index-key' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-children-prop' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-comment-textnodes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-danger-with-children' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-danger' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-deprecated' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-did-mount-set-state' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-did-update-set-state' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-direct-mutation-state' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-find-dom-node' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-is-mounted' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-multi-comp' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-render-return-value' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-set-state' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-string-refs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-unescaped-entities' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-unknown-property' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/no-unused-prop-types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/prefer-es6-class' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/prefer-stateless-function' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/prop-types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/react-in-jsx-scope' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/require-default-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/require-extension' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/require-optimization' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/require-render-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/self-closing-comp' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/sort-comp' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/sort-prop-types' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/style-prop-object' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/void-dom-elements-no-children' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/rules/wrap-multilines' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/annotations' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/Components' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/getTokenBeforeClosingBracket' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/pragma' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/variable' {2
  declare module.exports: any;2
}2
2
declare module 'eslint-plugin-react/lib/util/version' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint-plugin-react/index' {2
  declare module.exports: $Exports<'eslint-plugin-react'>;2
}2
declare module 'eslint-plugin-react/index.js' {2
  declare module.exports: $Exports<'eslint-plugin-react'>;2
}2
declare module 'eslint-plugin-react/lib/rules/display-name.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/display-name'>;2
}2
declare module 'eslint-plugin-react/lib/rules/forbid-component-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/forbid-component-props'>;2
}2
declare module 'eslint-plugin-react/lib/rules/forbid-elements.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/forbid-elements'>;2
}2
declare module 'eslint-plugin-react/lib/rules/forbid-foreign-prop-types.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/forbid-foreign-prop-types'>;2
}2
declare module 'eslint-plugin-react/lib/rules/forbid-prop-types.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/forbid-prop-types'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-boolean-value.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-boolean-value'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-closing-bracket-location.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-closing-bracket-location'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-curly-spacing.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-curly-spacing'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-equals-spacing.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-equals-spacing'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-filename-extension.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-filename-extension'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-first-prop-new-line.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-first-prop-new-line'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-handler-names.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-handler-names'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-indent-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-indent-props'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-indent.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-indent'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-key.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-key'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-max-props-per-line.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-max-props-per-line'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-bind.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-bind'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-comment-textnodes.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-comment-textnodes'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-duplicate-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-duplicate-props'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-literals.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-literals'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-target-blank.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-target-blank'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-no-undef.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-no-undef'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-pascal-case.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-pascal-case'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-sort-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-sort-props'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-space-before-closing.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-space-before-closing'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-tag-spacing.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-tag-spacing'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-uses-react.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-uses-react'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-uses-vars.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-uses-vars'>;2
}2
declare module 'eslint-plugin-react/lib/rules/jsx-wrap-multilines.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/jsx-wrap-multilines'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-array-index-key.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-array-index-key'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-children-prop.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-children-prop'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-comment-textnodes.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-comment-textnodes'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-danger-with-children.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-danger-with-children'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-danger.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-danger'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-deprecated.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-deprecated'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-did-mount-set-state.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-did-mount-set-state'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-did-update-set-state.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-did-update-set-state'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-direct-mutation-state.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-direct-mutation-state'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-find-dom-node.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-find-dom-node'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-is-mounted.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-is-mounted'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-multi-comp.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-multi-comp'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-render-return-value.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-render-return-value'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-set-state.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-set-state'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-string-refs.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-string-refs'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-unescaped-entities.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-unescaped-entities'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-unknown-property.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-unknown-property'>;2
}2
declare module 'eslint-plugin-react/lib/rules/no-unused-prop-types.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/no-unused-prop-types'>;2
}2
declare module 'eslint-plugin-react/lib/rules/prefer-es6-class.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/prefer-es6-class'>;2
}2
declare module 'eslint-plugin-react/lib/rules/prefer-stateless-function.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/prefer-stateless-function'>;2
}2
declare module 'eslint-plugin-react/lib/rules/prop-types.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/prop-types'>;2
}2
declare module 'eslint-plugin-react/lib/rules/react-in-jsx-scope.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/react-in-jsx-scope'>;2
}2
declare module 'eslint-plugin-react/lib/rules/require-default-props.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/require-default-props'>;2
}2
declare module 'eslint-plugin-react/lib/rules/require-extension.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/require-extension'>;2
}2
declare module 'eslint-plugin-react/lib/rules/require-optimization.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/require-optimization'>;2
}2
declare module 'eslint-plugin-react/lib/rules/require-render-return.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/require-render-return'>;2
}2
declare module 'eslint-plugin-react/lib/rules/self-closing-comp.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/self-closing-comp'>;2
}2
declare module 'eslint-plugin-react/lib/rules/sort-comp.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/sort-comp'>;2
}2
declare module 'eslint-plugin-react/lib/rules/sort-prop-types.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/sort-prop-types'>;2
}2
declare module 'eslint-plugin-react/lib/rules/style-prop-object.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/style-prop-object'>;2
}2
declare module 'eslint-plugin-react/lib/rules/void-dom-elements-no-children.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/void-dom-elements-no-children'>;2
}2
declare module 'eslint-plugin-react/lib/rules/wrap-multilines.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/rules/wrap-multilines'>;2
}2
declare module 'eslint-plugin-react/lib/util/annotations.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/annotations'>;2
}2
declare module 'eslint-plugin-react/lib/util/Components.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/Components'>;2
}2
declare module 'eslint-plugin-react/lib/util/getTokenBeforeClosingBracket.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/getTokenBeforeClosingBracket'>;2
}2
declare module 'eslint-plugin-react/lib/util/pragma.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/pragma'>;2
}2
declare module 'eslint-plugin-react/lib/util/variable.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/variable'>;2
}2
declare module 'eslint-plugin-react/lib/util/version.js' {2
  declare module.exports: $Exports<'eslint-plugin-react/lib/util/version'>;2
}2
// flow-typed signature: 21bb1519e9485a20d45c150ed4f678de2
// flow-typed version: <<STUB>>/eslint_v^3.19.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'eslint'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'eslint' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'eslint/bin/eslint' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/conf/cli-options' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/conf/environments' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/conf/eslint-all' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/conf/eslint-recommended' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/api' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/ast-utils' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/cli-engine' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/cli' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/code-path-analyzer' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/code-path-segment' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/code-path-state' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/code-path' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/debug-helpers' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/fork-context' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/code-path-analysis/id-generator' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/autoconfig' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/config-file' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/config-initializer' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/config-ops' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/config-rule' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/config-validator' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/environments' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/config/plugins' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/eslint' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/file-finder' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/checkstyle' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/codeframe' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/compact' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/html' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/jslint-xml' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/json' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/junit' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/stylish' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/table' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/tap' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/unix' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/formatters/visualstudio' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/ignored-paths' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/internal-rules/internal-consistent-docs-description' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/internal-rules/internal-no-invalid-meta' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/load-rules' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/logging' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/options' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rule-context' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/accessor-pairs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/array-bracket-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/array-callback-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/arrow-body-style' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/arrow-parens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/arrow-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/block-scoped-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/block-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/brace-style' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/callback-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/camelcase' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/capitalized-comments' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/class-methods-use-this' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/comma-dangle' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/comma-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/comma-style' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/complexity' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/computed-property-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/consistent-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/consistent-this' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/constructor-super' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/curly' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/default-case' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/dot-location' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/dot-notation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/eol-last' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/eqeqeq' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/func-call-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/func-name-matching' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/func-names' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/func-style' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/generator-star-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/global-require' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/guard-for-in' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/handle-callback-err' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/id-blacklist' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/id-length' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/id-match' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/indent' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/init-declarations' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/jsx-quotes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/key-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/keyword-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/line-comment-position' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/linebreak-style' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/lines-around-comment' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/lines-around-directive' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-depth' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-len' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-lines' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-nested-callbacks' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-params' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-statements-per-line' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/max-statements' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/multiline-ternary' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/new-cap' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/new-parens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/newline-after-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/newline-before-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/newline-per-chained-call' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-alert' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-array-constructor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-await-in-loop' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-bitwise' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-caller' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-case-declarations' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-catch-shadow' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-class-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-compare-neg-zero' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-cond-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-confusing-arrow' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-console' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-const-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-constant-condition' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-continue' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-control-regex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-debugger' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-delete-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-div-regex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-dupe-args' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-dupe-class-members' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-dupe-keys' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-duplicate-case' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-duplicate-imports' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-else-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-empty-character-class' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-empty-function' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-empty-pattern' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-empty' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-eq-null' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-eval' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-ex-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extend-native' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extra-bind' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extra-boolean-cast' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extra-label' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extra-parens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-extra-semi' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-fallthrough' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-floating-decimal' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-func-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-global-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-implicit-coercion' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-implicit-globals' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-implied-eval' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-inline-comments' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-inner-declarations' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-invalid-regexp' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-invalid-this' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-irregular-whitespace' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-iterator' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-label-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-labels' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-lone-blocks' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-lonely-if' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-loop-func' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-magic-numbers' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-mixed-operators' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-mixed-requires' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-mixed-spaces-and-tabs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-multi-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-multi-spaces' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-multi-str' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-multiple-empty-lines' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-native-reassign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-negated-condition' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-negated-in-lhs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-nested-ternary' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new-func' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new-object' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new-require' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new-symbol' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new-wrappers' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-new' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-obj-calls' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-octal-escape' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-octal' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-param-reassign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-path-concat' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-plusplus' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-process-env' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-process-exit' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-proto' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-prototype-builtins' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-redeclare' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-regex-spaces' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-restricted-globals' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-restricted-imports' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-restricted-modules' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-restricted-properties' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-restricted-syntax' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-return-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-return-await' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-script-url' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-self-assign' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-self-compare' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-sequences' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-shadow-restricted-names' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-shadow' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-spaced-func' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-sparse-arrays' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-sync' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-tabs' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-template-curly-in-string' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-ternary' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-this-before-super' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-throw-literal' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-trailing-spaces' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-undef-init' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-undef' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-undefined' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-underscore-dangle' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unexpected-multiline' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unmodified-loop-condition' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unneeded-ternary' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unreachable' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unsafe-finally' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unsafe-negation' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unused-expressions' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unused-labels' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-unused-vars' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-use-before-define' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-call' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-computed-key' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-concat' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-constructor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-escape' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-rename' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-useless-return' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-void' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-warning-comments' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-whitespace-before-property' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/no-with' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/nonblock-statement-body-position' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/object-curly-newline' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/object-curly-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/object-property-newline' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/object-shorthand' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/one-var-declaration-per-line' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/one-var' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/operator-assignment' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/operator-linebreak' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/padded-blocks' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-arrow-callback' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-const' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-destructuring' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-numeric-literals' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-promise-reject-errors' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-reflect' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-rest-params' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-spread' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/prefer-template' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/quote-props' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/quotes' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/radix' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/require-await' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/require-jsdoc' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/require-yield' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/rest-spread-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/semi-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/semi' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/sort-imports' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/sort-keys' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/sort-vars' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/space-before-blocks' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/space-before-function-paren' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/space-in-parens' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/space-infix-ops' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/space-unary-ops' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/spaced-comment' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/strict' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/symbol-description' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/template-curly-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/template-tag-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/unicode-bom' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/use-isnan' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/valid-jsdoc' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/valid-typeof' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/vars-on-top' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/wrap-iife' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/wrap-regex' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/yield-star-spacing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/rules/yoda' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/testers/event-generator-tester' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/testers/rule-tester' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/timing' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/backward-token-comment-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/backward-token-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/cursors' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/decorative-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/filter-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/forward-token-comment-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/forward-token-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/index' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/limit-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/padded-token-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/skip-cursor' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/token-store/utils' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/comment-event-generator' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/fix-tracker' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/glob-util' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/glob' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/hash' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/keywords' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/module-resolver' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/node-event-generator' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/npm-util' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/path-util' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/patterns/letters' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/rule-fixer' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/source-code-fixer' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/source-code-util' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/source-code' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/traverser' {2
  declare module.exports: any;2
}2
2
declare module 'eslint/lib/util/xml-escape' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'eslint/bin/eslint.js' {2
  declare module.exports: $Exports<'eslint/bin/eslint'>;2
}2
declare module 'eslint/conf/cli-options.js' {2
  declare module.exports: $Exports<'eslint/conf/cli-options'>;2
}2
declare module 'eslint/conf/environments.js' {2
  declare module.exports: $Exports<'eslint/conf/environments'>;2
}2
declare module 'eslint/conf/eslint-all.js' {2
  declare module.exports: $Exports<'eslint/conf/eslint-all'>;2
}2
declare module 'eslint/conf/eslint-recommended.js' {2
  declare module.exports: $Exports<'eslint/conf/eslint-recommended'>;2
}2
declare module 'eslint/lib/api.js' {2
  declare module.exports: $Exports<'eslint/lib/api'>;2
}2
declare module 'eslint/lib/ast-utils.js' {2
  declare module.exports: $Exports<'eslint/lib/ast-utils'>;2
}2
declare module 'eslint/lib/cli-engine.js' {2
  declare module.exports: $Exports<'eslint/lib/cli-engine'>;2
}2
declare module 'eslint/lib/cli.js' {2
  declare module.exports: $Exports<'eslint/lib/cli'>;2
}2
declare module 'eslint/lib/code-path-analysis/code-path-analyzer.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/code-path-analyzer'>;2
}2
declare module 'eslint/lib/code-path-analysis/code-path-segment.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/code-path-segment'>;2
}2
declare module 'eslint/lib/code-path-analysis/code-path-state.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/code-path-state'>;2
}2
declare module 'eslint/lib/code-path-analysis/code-path.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/code-path'>;2
}2
declare module 'eslint/lib/code-path-analysis/debug-helpers.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/debug-helpers'>;2
}2
declare module 'eslint/lib/code-path-analysis/fork-context.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/fork-context'>;2
}2
declare module 'eslint/lib/code-path-analysis/id-generator.js' {2
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/id-generator'>;2
}2
declare module 'eslint/lib/config.js' {2
  declare module.exports: $Exports<'eslint/lib/config'>;2
}2
declare module 'eslint/lib/config/autoconfig.js' {2
  declare module.exports: $Exports<'eslint/lib/config/autoconfig'>;2
}2
declare module 'eslint/lib/config/config-file.js' {2
  declare module.exports: $Exports<'eslint/lib/config/config-file'>;2
}2
declare module 'eslint/lib/config/config-initializer.js' {2
  declare module.exports: $Exports<'eslint/lib/config/config-initializer'>;2
}2
declare module 'eslint/lib/config/config-ops.js' {2
  declare module.exports: $Exports<'eslint/lib/config/config-ops'>;2
}2
declare module 'eslint/lib/config/config-rule.js' {2
  declare module.exports: $Exports<'eslint/lib/config/config-rule'>;2
}2
declare module 'eslint/lib/config/config-validator.js' {2
  declare module.exports: $Exports<'eslint/lib/config/config-validator'>;2
}2
declare module 'eslint/lib/config/environments.js' {2
  declare module.exports: $Exports<'eslint/lib/config/environments'>;2
}2
declare module 'eslint/lib/config/plugins.js' {2
  declare module.exports: $Exports<'eslint/lib/config/plugins'>;2
}2
declare module 'eslint/lib/eslint.js' {2
  declare module.exports: $Exports<'eslint/lib/eslint'>;2
}2
declare module 'eslint/lib/file-finder.js' {2
  declare module.exports: $Exports<'eslint/lib/file-finder'>;2
}2
declare module 'eslint/lib/formatters/checkstyle.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/checkstyle'>;2
}2
declare module 'eslint/lib/formatters/codeframe.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/codeframe'>;2
}2
declare module 'eslint/lib/formatters/compact.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/compact'>;2
}2
declare module 'eslint/lib/formatters/html.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/html'>;2
}2
declare module 'eslint/lib/formatters/jslint-xml.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/jslint-xml'>;2
}2
declare module 'eslint/lib/formatters/json.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/json'>;2
}2
declare module 'eslint/lib/formatters/junit.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/junit'>;2
}2
declare module 'eslint/lib/formatters/stylish.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/stylish'>;2
}2
declare module 'eslint/lib/formatters/table.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/table'>;2
}2
declare module 'eslint/lib/formatters/tap.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/tap'>;2
}2
declare module 'eslint/lib/formatters/unix.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/unix'>;2
}2
declare module 'eslint/lib/formatters/visualstudio.js' {2
  declare module.exports: $Exports<'eslint/lib/formatters/visualstudio'>;2
}2
declare module 'eslint/lib/ignored-paths.js' {2
  declare module.exports: $Exports<'eslint/lib/ignored-paths'>;2
}2
declare module 'eslint/lib/internal-rules/internal-consistent-docs-description.js' {2
  declare module.exports: $Exports<'eslint/lib/internal-rules/internal-consistent-docs-description'>;2
}2
declare module 'eslint/lib/internal-rules/internal-no-invalid-meta.js' {2
  declare module.exports: $Exports<'eslint/lib/internal-rules/internal-no-invalid-meta'>;2
}2
declare module 'eslint/lib/load-rules.js' {2
  declare module.exports: $Exports<'eslint/lib/load-rules'>;2
}2
declare module 'eslint/lib/logging.js' {2
  declare module.exports: $Exports<'eslint/lib/logging'>;2
}2
declare module 'eslint/lib/options.js' {2
  declare module.exports: $Exports<'eslint/lib/options'>;2
}2
declare module 'eslint/lib/rule-context.js' {2
  declare module.exports: $Exports<'eslint/lib/rule-context'>;2
}2
declare module 'eslint/lib/rules.js' {2
  declare module.exports: $Exports<'eslint/lib/rules'>;2
}2
declare module 'eslint/lib/rules/accessor-pairs.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/accessor-pairs'>;2
}2
declare module 'eslint/lib/rules/array-bracket-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/array-bracket-spacing'>;2
}2
declare module 'eslint/lib/rules/array-callback-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/array-callback-return'>;2
}2
declare module 'eslint/lib/rules/arrow-body-style.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/arrow-body-style'>;2
}2
declare module 'eslint/lib/rules/arrow-parens.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/arrow-parens'>;2
}2
declare module 'eslint/lib/rules/arrow-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/arrow-spacing'>;2
}2
declare module 'eslint/lib/rules/block-scoped-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/block-scoped-var'>;2
}2
declare module 'eslint/lib/rules/block-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/block-spacing'>;2
}2
declare module 'eslint/lib/rules/brace-style.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/brace-style'>;2
}2
declare module 'eslint/lib/rules/callback-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/callback-return'>;2
}2
declare module 'eslint/lib/rules/camelcase.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/camelcase'>;2
}2
declare module 'eslint/lib/rules/capitalized-comments.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/capitalized-comments'>;2
}2
declare module 'eslint/lib/rules/class-methods-use-this.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/class-methods-use-this'>;2
}2
declare module 'eslint/lib/rules/comma-dangle.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/comma-dangle'>;2
}2
declare module 'eslint/lib/rules/comma-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/comma-spacing'>;2
}2
declare module 'eslint/lib/rules/comma-style.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/comma-style'>;2
}2
declare module 'eslint/lib/rules/complexity.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/complexity'>;2
}2
declare module 'eslint/lib/rules/computed-property-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/computed-property-spacing'>;2
}2
declare module 'eslint/lib/rules/consistent-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/consistent-return'>;2
}2
declare module 'eslint/lib/rules/consistent-this.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/consistent-this'>;2
}2
declare module 'eslint/lib/rules/constructor-super.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/constructor-super'>;2
}2
declare module 'eslint/lib/rules/curly.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/curly'>;2
}2
declare module 'eslint/lib/rules/default-case.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/default-case'>;2
}2
declare module 'eslint/lib/rules/dot-location.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/dot-location'>;2
}2
declare module 'eslint/lib/rules/dot-notation.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/dot-notation'>;2
}2
declare module 'eslint/lib/rules/eol-last.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/eol-last'>;2
}2
declare module 'eslint/lib/rules/eqeqeq.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/eqeqeq'>;2
}2
declare module 'eslint/lib/rules/func-call-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/func-call-spacing'>;2
}2
declare module 'eslint/lib/rules/func-name-matching.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/func-name-matching'>;2
}2
declare module 'eslint/lib/rules/func-names.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/func-names'>;2
}2
declare module 'eslint/lib/rules/func-style.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/func-style'>;2
}2
declare module 'eslint/lib/rules/generator-star-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/generator-star-spacing'>;2
}2
declare module 'eslint/lib/rules/global-require.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/global-require'>;2
}2
declare module 'eslint/lib/rules/guard-for-in.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/guard-for-in'>;2
}2
declare module 'eslint/lib/rules/handle-callback-err.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/handle-callback-err'>;2
}2
declare module 'eslint/lib/rules/id-blacklist.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/id-blacklist'>;2
}2
declare module 'eslint/lib/rules/id-length.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/id-length'>;2
}2
declare module 'eslint/lib/rules/id-match.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/id-match'>;2
}2
declare module 'eslint/lib/rules/indent.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/indent'>;2
}2
declare module 'eslint/lib/rules/init-declarations.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/init-declarations'>;2
}2
declare module 'eslint/lib/rules/jsx-quotes.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/jsx-quotes'>;2
}2
declare module 'eslint/lib/rules/key-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/key-spacing'>;2
}2
declare module 'eslint/lib/rules/keyword-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/keyword-spacing'>;2
}2
declare module 'eslint/lib/rules/line-comment-position.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/line-comment-position'>;2
}2
declare module 'eslint/lib/rules/linebreak-style.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/linebreak-style'>;2
}2
declare module 'eslint/lib/rules/lines-around-comment.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/lines-around-comment'>;2
}2
declare module 'eslint/lib/rules/lines-around-directive.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/lines-around-directive'>;2
}2
declare module 'eslint/lib/rules/max-depth.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-depth'>;2
}2
declare module 'eslint/lib/rules/max-len.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-len'>;2
}2
declare module 'eslint/lib/rules/max-lines.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-lines'>;2
}2
declare module 'eslint/lib/rules/max-nested-callbacks.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-nested-callbacks'>;2
}2
declare module 'eslint/lib/rules/max-params.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-params'>;2
}2
declare module 'eslint/lib/rules/max-statements-per-line.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-statements-per-line'>;2
}2
declare module 'eslint/lib/rules/max-statements.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/max-statements'>;2
}2
declare module 'eslint/lib/rules/multiline-ternary.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/multiline-ternary'>;2
}2
declare module 'eslint/lib/rules/new-cap.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/new-cap'>;2
}2
declare module 'eslint/lib/rules/new-parens.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/new-parens'>;2
}2
declare module 'eslint/lib/rules/newline-after-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/newline-after-var'>;2
}2
declare module 'eslint/lib/rules/newline-before-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/newline-before-return'>;2
}2
declare module 'eslint/lib/rules/newline-per-chained-call.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/newline-per-chained-call'>;2
}2
declare module 'eslint/lib/rules/no-alert.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-alert'>;2
}2
declare module 'eslint/lib/rules/no-array-constructor.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-array-constructor'>;2
}2
declare module 'eslint/lib/rules/no-await-in-loop.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-await-in-loop'>;2
}2
declare module 'eslint/lib/rules/no-bitwise.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-bitwise'>;2
}2
declare module 'eslint/lib/rules/no-caller.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-caller'>;2
}2
declare module 'eslint/lib/rules/no-case-declarations.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-case-declarations'>;2
}2
declare module 'eslint/lib/rules/no-catch-shadow.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-catch-shadow'>;2
}2
declare module 'eslint/lib/rules/no-class-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-class-assign'>;2
}2
declare module 'eslint/lib/rules/no-compare-neg-zero.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-compare-neg-zero'>;2
}2
declare module 'eslint/lib/rules/no-cond-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-cond-assign'>;2
}2
declare module 'eslint/lib/rules/no-confusing-arrow.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-confusing-arrow'>;2
}2
declare module 'eslint/lib/rules/no-console.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-console'>;2
}2
declare module 'eslint/lib/rules/no-const-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-const-assign'>;2
}2
declare module 'eslint/lib/rules/no-constant-condition.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-constant-condition'>;2
}2
declare module 'eslint/lib/rules/no-continue.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-continue'>;2
}2
declare module 'eslint/lib/rules/no-control-regex.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-control-regex'>;2
}2
declare module 'eslint/lib/rules/no-debugger.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-debugger'>;2
}2
declare module 'eslint/lib/rules/no-delete-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-delete-var'>;2
}2
declare module 'eslint/lib/rules/no-div-regex.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-div-regex'>;2
}2
declare module 'eslint/lib/rules/no-dupe-args.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-args'>;2
}2
declare module 'eslint/lib/rules/no-dupe-class-members.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-class-members'>;2
}2
declare module 'eslint/lib/rules/no-dupe-keys.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-keys'>;2
}2
declare module 'eslint/lib/rules/no-duplicate-case.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-duplicate-case'>;2
}2
declare module 'eslint/lib/rules/no-duplicate-imports.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-duplicate-imports'>;2
}2
declare module 'eslint/lib/rules/no-else-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-else-return'>;2
}2
declare module 'eslint/lib/rules/no-empty-character-class.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-character-class'>;2
}2
declare module 'eslint/lib/rules/no-empty-function.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-function'>;2
}2
declare module 'eslint/lib/rules/no-empty-pattern.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-pattern'>;2
}2
declare module 'eslint/lib/rules/no-empty.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-empty'>;2
}2
declare module 'eslint/lib/rules/no-eq-null.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-eq-null'>;2
}2
declare module 'eslint/lib/rules/no-eval.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-eval'>;2
}2
declare module 'eslint/lib/rules/no-ex-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-ex-assign'>;2
}2
declare module 'eslint/lib/rules/no-extend-native.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extend-native'>;2
}2
declare module 'eslint/lib/rules/no-extra-bind.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-bind'>;2
}2
declare module 'eslint/lib/rules/no-extra-boolean-cast.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-boolean-cast'>;2
}2
declare module 'eslint/lib/rules/no-extra-label.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-label'>;2
}2
declare module 'eslint/lib/rules/no-extra-parens.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-parens'>;2
}2
declare module 'eslint/lib/rules/no-extra-semi.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-semi'>;2
}2
declare module 'eslint/lib/rules/no-fallthrough.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-fallthrough'>;2
}2
declare module 'eslint/lib/rules/no-floating-decimal.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-floating-decimal'>;2
}2
declare module 'eslint/lib/rules/no-func-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-func-assign'>;2
}2
declare module 'eslint/lib/rules/no-global-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-global-assign'>;2
}2
declare module 'eslint/lib/rules/no-implicit-coercion.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-implicit-coercion'>;2
}2
declare module 'eslint/lib/rules/no-implicit-globals.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-implicit-globals'>;2
}2
declare module 'eslint/lib/rules/no-implied-eval.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-implied-eval'>;2
}2
declare module 'eslint/lib/rules/no-inline-comments.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-inline-comments'>;2
}2
declare module 'eslint/lib/rules/no-inner-declarations.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-inner-declarations'>;2
}2
declare module 'eslint/lib/rules/no-invalid-regexp.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-invalid-regexp'>;2
}2
declare module 'eslint/lib/rules/no-invalid-this.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-invalid-this'>;2
}2
declare module 'eslint/lib/rules/no-irregular-whitespace.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-irregular-whitespace'>;2
}2
declare module 'eslint/lib/rules/no-iterator.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-iterator'>;2
}2
declare module 'eslint/lib/rules/no-label-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-label-var'>;2
}2
declare module 'eslint/lib/rules/no-labels.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-labels'>;2
}2
declare module 'eslint/lib/rules/no-lone-blocks.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-lone-blocks'>;2
}2
declare module 'eslint/lib/rules/no-lonely-if.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-lonely-if'>;2
}2
declare module 'eslint/lib/rules/no-loop-func.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-loop-func'>;2
}2
declare module 'eslint/lib/rules/no-magic-numbers.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-magic-numbers'>;2
}2
declare module 'eslint/lib/rules/no-mixed-operators.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-operators'>;2
}2
declare module 'eslint/lib/rules/no-mixed-requires.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-requires'>;2
}2
declare module 'eslint/lib/rules/no-mixed-spaces-and-tabs.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-spaces-and-tabs'>;2
}2
declare module 'eslint/lib/rules/no-multi-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-assign'>;2
}2
declare module 'eslint/lib/rules/no-multi-spaces.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-spaces'>;2
}2
declare module 'eslint/lib/rules/no-multi-str.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-str'>;2
}2
declare module 'eslint/lib/rules/no-multiple-empty-lines.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-multiple-empty-lines'>;2
}2
declare module 'eslint/lib/rules/no-native-reassign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-native-reassign'>;2
}2
declare module 'eslint/lib/rules/no-negated-condition.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-negated-condition'>;2
}2
declare module 'eslint/lib/rules/no-negated-in-lhs.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-negated-in-lhs'>;2
}2
declare module 'eslint/lib/rules/no-nested-ternary.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-nested-ternary'>;2
}2
declare module 'eslint/lib/rules/no-new-func.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new-func'>;2
}2
declare module 'eslint/lib/rules/no-new-object.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new-object'>;2
}2
declare module 'eslint/lib/rules/no-new-require.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new-require'>;2
}2
declare module 'eslint/lib/rules/no-new-symbol.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new-symbol'>;2
}2
declare module 'eslint/lib/rules/no-new-wrappers.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new-wrappers'>;2
}2
declare module 'eslint/lib/rules/no-new.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-new'>;2
}2
declare module 'eslint/lib/rules/no-obj-calls.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-obj-calls'>;2
}2
declare module 'eslint/lib/rules/no-octal-escape.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-octal-escape'>;2
}2
declare module 'eslint/lib/rules/no-octal.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-octal'>;2
}2
declare module 'eslint/lib/rules/no-param-reassign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-param-reassign'>;2
}2
declare module 'eslint/lib/rules/no-path-concat.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-path-concat'>;2
}2
declare module 'eslint/lib/rules/no-plusplus.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-plusplus'>;2
}2
declare module 'eslint/lib/rules/no-process-env.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-process-env'>;2
}2
declare module 'eslint/lib/rules/no-process-exit.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-process-exit'>;2
}2
declare module 'eslint/lib/rules/no-proto.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-proto'>;2
}2
declare module 'eslint/lib/rules/no-prototype-builtins.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-prototype-builtins'>;2
}2
declare module 'eslint/lib/rules/no-redeclare.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-redeclare'>;2
}2
declare module 'eslint/lib/rules/no-regex-spaces.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-regex-spaces'>;2
}2
declare module 'eslint/lib/rules/no-restricted-globals.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-globals'>;2
}2
declare module 'eslint/lib/rules/no-restricted-imports.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-imports'>;2
}2
declare module 'eslint/lib/rules/no-restricted-modules.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-modules'>;2
}2
declare module 'eslint/lib/rules/no-restricted-properties.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-properties'>;2
}2
declare module 'eslint/lib/rules/no-restricted-syntax.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-syntax'>;2
}2
declare module 'eslint/lib/rules/no-return-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-return-assign'>;2
}2
declare module 'eslint/lib/rules/no-return-await.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-return-await'>;2
}2
declare module 'eslint/lib/rules/no-script-url.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-script-url'>;2
}2
declare module 'eslint/lib/rules/no-self-assign.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-self-assign'>;2
}2
declare module 'eslint/lib/rules/no-self-compare.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-self-compare'>;2
}2
declare module 'eslint/lib/rules/no-sequences.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-sequences'>;2
}2
declare module 'eslint/lib/rules/no-shadow-restricted-names.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-shadow-restricted-names'>;2
}2
declare module 'eslint/lib/rules/no-shadow.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-shadow'>;2
}2
declare module 'eslint/lib/rules/no-spaced-func.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-spaced-func'>;2
}2
declare module 'eslint/lib/rules/no-sparse-arrays.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-sparse-arrays'>;2
}2
declare module 'eslint/lib/rules/no-sync.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-sync'>;2
}2
declare module 'eslint/lib/rules/no-tabs.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-tabs'>;2
}2
declare module 'eslint/lib/rules/no-template-curly-in-string.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-template-curly-in-string'>;2
}2
declare module 'eslint/lib/rules/no-ternary.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-ternary'>;2
}2
declare module 'eslint/lib/rules/no-this-before-super.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-this-before-super'>;2
}2
declare module 'eslint/lib/rules/no-throw-literal.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-throw-literal'>;2
}2
declare module 'eslint/lib/rules/no-trailing-spaces.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-trailing-spaces'>;2
}2
declare module 'eslint/lib/rules/no-undef-init.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-undef-init'>;2
}2
declare module 'eslint/lib/rules/no-undef.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-undef'>;2
}2
declare module 'eslint/lib/rules/no-undefined.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-undefined'>;2
}2
declare module 'eslint/lib/rules/no-underscore-dangle.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-underscore-dangle'>;2
}2
declare module 'eslint/lib/rules/no-unexpected-multiline.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unexpected-multiline'>;2
}2
declare module 'eslint/lib/rules/no-unmodified-loop-condition.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unmodified-loop-condition'>;2
}2
declare module 'eslint/lib/rules/no-unneeded-ternary.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unneeded-ternary'>;2
}2
declare module 'eslint/lib/rules/no-unreachable.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unreachable'>;2
}2
declare module 'eslint/lib/rules/no-unsafe-finally.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unsafe-finally'>;2
}2
declare module 'eslint/lib/rules/no-unsafe-negation.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unsafe-negation'>;2
}2
declare module 'eslint/lib/rules/no-unused-expressions.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-expressions'>;2
}2
declare module 'eslint/lib/rules/no-unused-labels.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-labels'>;2
}2
declare module 'eslint/lib/rules/no-unused-vars.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-vars'>;2
}2
declare module 'eslint/lib/rules/no-use-before-define.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-use-before-define'>;2
}2
declare module 'eslint/lib/rules/no-useless-call.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-call'>;2
}2
declare module 'eslint/lib/rules/no-useless-computed-key.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-computed-key'>;2
}2
declare module 'eslint/lib/rules/no-useless-concat.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-concat'>;2
}2
declare module 'eslint/lib/rules/no-useless-constructor.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-constructor'>;2
}2
declare module 'eslint/lib/rules/no-useless-escape.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-escape'>;2
}2
declare module 'eslint/lib/rules/no-useless-rename.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-rename'>;2
}2
declare module 'eslint/lib/rules/no-useless-return.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-return'>;2
}2
declare module 'eslint/lib/rules/no-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-var'>;2
}2
declare module 'eslint/lib/rules/no-void.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-void'>;2
}2
declare module 'eslint/lib/rules/no-warning-comments.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-warning-comments'>;2
}2
declare module 'eslint/lib/rules/no-whitespace-before-property.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-whitespace-before-property'>;2
}2
declare module 'eslint/lib/rules/no-with.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/no-with'>;2
}2
declare module 'eslint/lib/rules/nonblock-statement-body-position.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/nonblock-statement-body-position'>;2
}2
declare module 'eslint/lib/rules/object-curly-newline.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/object-curly-newline'>;2
}2
declare module 'eslint/lib/rules/object-curly-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/object-curly-spacing'>;2
}2
declare module 'eslint/lib/rules/object-property-newline.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/object-property-newline'>;2
}2
declare module 'eslint/lib/rules/object-shorthand.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/object-shorthand'>;2
}2
declare module 'eslint/lib/rules/one-var-declaration-per-line.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/one-var-declaration-per-line'>;2
}2
declare module 'eslint/lib/rules/one-var.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/one-var'>;2
}2
declare module 'eslint/lib/rules/operator-assignment.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/operator-assignment'>;2
}2
declare module 'eslint/lib/rules/operator-linebreak.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/operator-linebreak'>;2
}2
declare module 'eslint/lib/rules/padded-blocks.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/padded-blocks'>;2
}2
declare module 'eslint/lib/rules/prefer-arrow-callback.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-arrow-callback'>;2
}2
declare module 'eslint/lib/rules/prefer-const.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-const'>;2
}2
declare module 'eslint/lib/rules/prefer-destructuring.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-destructuring'>;2
}2
declare module 'eslint/lib/rules/prefer-numeric-literals.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-numeric-literals'>;2
}2
declare module 'eslint/lib/rules/prefer-promise-reject-errors.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-promise-reject-errors'>;2
}2
declare module 'eslint/lib/rules/prefer-reflect.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-reflect'>;2
}2
declare module 'eslint/lib/rules/prefer-rest-params.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-rest-params'>;2
}2
declare module 'eslint/lib/rules/prefer-spread.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-spread'>;2
}2
declare module 'eslint/lib/rules/prefer-template.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/prefer-template'>;2
}2
declare module 'eslint/lib/rules/quote-props.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/quote-props'>;2
}2
declare module 'eslint/lib/rules/quotes.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/quotes'>;2
}2
declare module 'eslint/lib/rules/radix.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/radix'>;2
}2
declare module 'eslint/lib/rules/require-await.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/require-await'>;2
}2
declare module 'eslint/lib/rules/require-jsdoc.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/require-jsdoc'>;2
}2
declare module 'eslint/lib/rules/require-yield.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/require-yield'>;2
}2
declare module 'eslint/lib/rules/rest-spread-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/rest-spread-spacing'>;2
}2
declare module 'eslint/lib/rules/semi-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/semi-spacing'>;2
}2
declare module 'eslint/lib/rules/semi.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/semi'>;2
}2
declare module 'eslint/lib/rules/sort-imports.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/sort-imports'>;2
}2
declare module 'eslint/lib/rules/sort-keys.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/sort-keys'>;2
}2
declare module 'eslint/lib/rules/sort-vars.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/sort-vars'>;2
}2
declare module 'eslint/lib/rules/space-before-blocks.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/space-before-blocks'>;2
}2
declare module 'eslint/lib/rules/space-before-function-paren.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/space-before-function-paren'>;2
}2
declare module 'eslint/lib/rules/space-in-parens.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/space-in-parens'>;2
}2
declare module 'eslint/lib/rules/space-infix-ops.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/space-infix-ops'>;2
}2
declare module 'eslint/lib/rules/space-unary-ops.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/space-unary-ops'>;2
}2
declare module 'eslint/lib/rules/spaced-comment.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/spaced-comment'>;2
}2
declare module 'eslint/lib/rules/strict.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/strict'>;2
}2
declare module 'eslint/lib/rules/symbol-description.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/symbol-description'>;2
}2
declare module 'eslint/lib/rules/template-curly-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/template-curly-spacing'>;2
}2
declare module 'eslint/lib/rules/template-tag-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/template-tag-spacing'>;2
}2
declare module 'eslint/lib/rules/unicode-bom.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/unicode-bom'>;2
}2
declare module 'eslint/lib/rules/use-isnan.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/use-isnan'>;2
}2
declare module 'eslint/lib/rules/valid-jsdoc.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/valid-jsdoc'>;2
}2
declare module 'eslint/lib/rules/valid-typeof.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/valid-typeof'>;2
}2
declare module 'eslint/lib/rules/vars-on-top.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/vars-on-top'>;2
}2
declare module 'eslint/lib/rules/wrap-iife.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/wrap-iife'>;2
}2
declare module 'eslint/lib/rules/wrap-regex.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/wrap-regex'>;2
}2
declare module 'eslint/lib/rules/yield-star-spacing.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/yield-star-spacing'>;2
}2
declare module 'eslint/lib/rules/yoda.js' {2
  declare module.exports: $Exports<'eslint/lib/rules/yoda'>;2
}2
declare module 'eslint/lib/testers/event-generator-tester.js' {2
  declare module.exports: $Exports<'eslint/lib/testers/event-generator-tester'>;2
}2
declare module 'eslint/lib/testers/rule-tester.js' {2
  declare module.exports: $Exports<'eslint/lib/testers/rule-tester'>;2
}2
declare module 'eslint/lib/timing.js' {2
  declare module.exports: $Exports<'eslint/lib/timing'>;2
}2
declare module 'eslint/lib/token-store/backward-token-comment-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/backward-token-comment-cursor'>;2
}2
declare module 'eslint/lib/token-store/backward-token-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/backward-token-cursor'>;2
}2
declare module 'eslint/lib/token-store/cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/cursor'>;2
}2
declare module 'eslint/lib/token-store/cursors.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/cursors'>;2
}2
declare module 'eslint/lib/token-store/decorative-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/decorative-cursor'>;2
}2
declare module 'eslint/lib/token-store/filter-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/filter-cursor'>;2
}2
declare module 'eslint/lib/token-store/forward-token-comment-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/forward-token-comment-cursor'>;2
}2
declare module 'eslint/lib/token-store/forward-token-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/forward-token-cursor'>;2
}2
declare module 'eslint/lib/token-store/index.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/index'>;2
}2
declare module 'eslint/lib/token-store/limit-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/limit-cursor'>;2
}2
declare module 'eslint/lib/token-store/padded-token-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/padded-token-cursor'>;2
}2
declare module 'eslint/lib/token-store/skip-cursor.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/skip-cursor'>;2
}2
declare module 'eslint/lib/token-store/utils.js' {2
  declare module.exports: $Exports<'eslint/lib/token-store/utils'>;2
}2
declare module 'eslint/lib/util/comment-event-generator.js' {2
  declare module.exports: $Exports<'eslint/lib/util/comment-event-generator'>;2
}2
declare module 'eslint/lib/util/fix-tracker.js' {2
  declare module.exports: $Exports<'eslint/lib/util/fix-tracker'>;2
}2
declare module 'eslint/lib/util/glob-util.js' {2
  declare module.exports: $Exports<'eslint/lib/util/glob-util'>;2
}2
declare module 'eslint/lib/util/glob.js' {2
  declare module.exports: $Exports<'eslint/lib/util/glob'>;2
}2
declare module 'eslint/lib/util/hash.js' {2
  declare module.exports: $Exports<'eslint/lib/util/hash'>;2
}2
declare module 'eslint/lib/util/keywords.js' {2
  declare module.exports: $Exports<'eslint/lib/util/keywords'>;2
}2
declare module 'eslint/lib/util/module-resolver.js' {2
  declare module.exports: $Exports<'eslint/lib/util/module-resolver'>;2
}2
declare module 'eslint/lib/util/node-event-generator.js' {2
  declare module.exports: $Exports<'eslint/lib/util/node-event-generator'>;2
}2
declare module 'eslint/lib/util/npm-util.js' {2
  declare module.exports: $Exports<'eslint/lib/util/npm-util'>;2
}2
declare module 'eslint/lib/util/path-util.js' {2
  declare module.exports: $Exports<'eslint/lib/util/path-util'>;2
}2
declare module 'eslint/lib/util/patterns/letters.js' {2
  declare module.exports: $Exports<'eslint/lib/util/patterns/letters'>;2
}2
declare module 'eslint/lib/util/rule-fixer.js' {2
  declare module.exports: $Exports<'eslint/lib/util/rule-fixer'>;2
}2
declare module 'eslint/lib/util/source-code-fixer.js' {2
  declare module.exports: $Exports<'eslint/lib/util/source-code-fixer'>;2
}2
declare module 'eslint/lib/util/source-code-util.js' {2
  declare module.exports: $Exports<'eslint/lib/util/source-code-util'>;2
}2
declare module 'eslint/lib/util/source-code.js' {2
  declare module.exports: $Exports<'eslint/lib/util/source-code'>;2
}2
declare module 'eslint/lib/util/traverser.js' {2
  declare module.exports: $Exports<'eslint/lib/util/traverser'>;2
}2
declare module 'eslint/lib/util/xml-escape.js' {2
  declare module.exports: $Exports<'eslint/lib/util/xml-escape'>;2
}2
// flow-typed signature: f0e399a136d6e8dc8b1fbdc078e2850c2
// flow-typed version: ed397013d1/express_v4.x.x/flow_>=v0.32.x2
2
import type { Server } from 'http';2
import type { Socket } from 'net';2
2
declare type express$RouterOptions = {2
  caseSensitive?: boolean,2
  mergeParams?: boolean,2
  strict?: boolean2
};2
2
declare class express$RequestResponseBase {2
  app: express$Application;2
  get(field: string): string | void;2
}2
2
declare type express$RequestParams = {2
  [param: string]: string2
}2
2
declare class express$Request extends http$IncomingMessage mixins express$RequestResponseBase {2
  baseUrl: string;2
  body: any;2
  cookies: {[cookie: string]: string};2
  connection: Socket;2
  fresh: boolean;2
  hostname: string;2
  ip: string;2
  ips: Array<string>;2
  method: string;2
  originalUrl: string;2
  params: express$RequestParams;2
  path: string;2
  protocol: 'https' | 'http';2
  query: {[name: string]: string | Array<string>};2
  route: string;2
  secure: boolean;2
  signedCookies: {[signedCookie: string]: string};2
  stale: boolean;2
  subdomains: Array<string>;2
  xhr: boolean;2
  accepts(types: string): string | false;2
  accepts(types: Array<string>): string | false;2
  acceptsCharsets(...charsets: Array<string>): string | false;2
  acceptsEncodings(...encoding: Array<string>): string | false;2
  acceptsLanguages(...lang: Array<string>): string | false;2
  header(field: string): string | void;2
  is(type: string): boolean;2
  param(name: string, defaultValue?: string): string | void;2
}2
2
declare type express$CookieOptions = {2
  domain?: string,2
  encode?: (value: string) => string,2
  expires?: Date,2
  httpOnly?: boolean,2
  maxAge?: number,2
  path?: string,2
  secure?: boolean,2
  signed?: boolean2
};2
2
declare type express$Path = string | RegExp;2
2
declare type express$RenderCallback = (err: Error | null, html?: string) => mixed;2
2
declare type express$SendFileOptions = {2
  maxAge?: number,2
  root?: string,2
  lastModified?: boolean,2
  headers?: {[name: string]: string},2
  dotfiles?: 'allow' | 'deny' | 'ignore'2
};2
2
declare class express$Response extends http$ServerResponse mixins express$RequestResponseBase {2
  headersSent: boolean;2
  locals: {[name: string]: mixed};2
  append(field: string, value?: string): this;2
  attachment(filename?: string): this;2
  cookie(name: string, value: string, options?: express$CookieOptions): this;2
  clearCookie(name: string, options?: express$CookieOptions): this;2
  download(path: string, filename?: string, callback?: (err?: ?Error) => void): this;2
  format(typesObject: {[type: string]: Function}): this;2
  json(body?: mixed): this;2
  jsonp(body?: mixed): this;2
  links(links: {[name: string]: string}): this;2
  location(path: string): this;2
  redirect(url: string, ...args: Array<void>): this;2
  redirect(status: number, url: string, ...args: Array<void>): this;2
  render(view: string, locals?: {[name: string]: mixed}, callback?: express$RenderCallback): this;2
  send(body?: mixed): this;2
  sendFile(path: string, options?: express$SendFileOptions, callback?: (err?: ?Error) => mixed): this;2
  sendStatus(statusCode: number): this;2
  header(field: string, value?: string): this;2
  header(headers: {[name: string]: string}): this;2
  set(field: string, value?: string|string[]): this;2
  set(headers: {[name: string]: string}): this;2
  status(statusCode: number): this;2
  type(type: string): this;2
  vary(field: string): this;2
  req: express$Request;2
}2
2
declare type express$NextFunction = (err?: ?Error | 'route') => mixed;2
declare type express$Middleware =2
  ((req: $Subtype<express$Request>, res: express$Response, next: express$NextFunction) => mixed) |2
  ((error: Error, req: $Subtype<express$Request>, res: express$Response, next: express$NextFunction) => mixed);2
declare interface express$RouteMethodType<T> {2
  (middleware: express$Middleware): T;2
  (...middleware: Array<express$Middleware>): T;2
  (path: express$Path|express$Path[], ...middleware: Array<express$Middleware>): T;2
}2
declare class express$Route {2
  all: express$RouteMethodType<this>;2
  get: express$RouteMethodType<this>;2
  post: express$RouteMethodType<this>;2
  put: express$RouteMethodType<this>;2
  head: express$RouteMethodType<this>;2
  delete: express$RouteMethodType<this>;2
  options: express$RouteMethodType<this>;2
  trace: express$RouteMethodType<this>;2
  copy: express$RouteMethodType<this>;2
  lock: express$RouteMethodType<this>;2
  mkcol: express$RouteMethodType<this>;2
  move: express$RouteMethodType<this>;2
  purge: express$RouteMethodType<this>;2
  propfind: express$RouteMethodType<this>;2
  proppatch: express$RouteMethodType<this>;2
  unlock: express$RouteMethodType<this>;2
  report: express$RouteMethodType<this>;2
  mkactivity: express$RouteMethodType<this>;2
  checkout: express$RouteMethodType<this>;2
  merge: express$RouteMethodType<this>;2
2
  // @TODO Missing 'm-search' but get flow illegal name error.2
2
  notify: express$RouteMethodType<this>;2
  subscribe: express$RouteMethodType<this>;2
  unsubscribe: express$RouteMethodType<this>;2
  patch: express$RouteMethodType<this>;2
  search: express$RouteMethodType<this>;2
  connect: express$RouteMethodType<this>;2
}2
2
declare class express$Router extends express$Route {2
  constructor(options?: express$RouterOptions): void;2
  route(path: string): express$Route;2
  static (options?: express$RouterOptions): express$Router;2
  use(middleware: express$Middleware): this;2
  use(...middleware: Array<express$Middleware>): this;2
  use(path: express$Path|express$Path[], ...middleware: Array<express$Middleware>): this;2
  use(path: string, router: express$Router): this;2
  handle(req: http$IncomingMessage, res: http$ServerResponse, next: express$NextFunction): void;2
  param(2
    param: string,2
    callback: (2
      req: $Subtype<express$Request>,2
      res: express$Response,2
      next: express$NextFunction,2
      id: string2
    ) => mixed2
  ): void;2
2
  // Can't use regular callable signature syntax due to https://github.com/facebook/flow/issues/30842
  $call: (req: http$IncomingMessage, res: http$ServerResponse, next?: ?express$NextFunction) => void;2
}2
2
declare class express$Application extends express$Router mixins events$EventEmitter {2
  constructor(): void;2
  locals: {[name: string]: mixed};2
  mountpath: string;2
  listen(port: number, hostname?: string, backlog?: number, callback?: (err?: ?Error) => mixed): Server;2
  listen(port: number, hostname?: string, callback?: (err?: ?Error) => mixed): Server;2
  listen(port: number, callback?: (err?: ?Error) => mixed): Server;2
  listen(path: string, callback?: (err?: ?Error) => mixed): Server;2
  listen(handle: Object, callback?: (err?: ?Error) => mixed): Server;2
  disable(name: string): void;2
  disabled(name: string): boolean;2
  enable(name: string): express$Application;2
  enabled(name: string): boolean;2
  engine(name: string, callback: Function): void;2
  /**2
   * Mixed will not be taken as a value option. Issue around using the GET http method name and the get for settings.2
   */2
  //   get(name: string): mixed;2
  set(name: string, value: mixed): mixed;2
  render(name: string, optionsOrFunction: {[name: string]: mixed}, callback: express$RenderCallback): void;2
  handle(req: http$IncomingMessage, res: http$ServerResponse, next?: ?express$NextFunction): void;2
}2
2
declare module 'express' {2
  declare export type RouterOptions = express$RouterOptions;2
  declare export type CookieOptions = express$CookieOptions;2
  declare export type Middleware = express$Middleware;2
  declare export type NextFunction = express$NextFunction;2
  declare export type RequestParams = express$RequestParams;2
  declare export type $Response = express$Response;2
  declare export type $Request = express$Request;2
  declare export type $Application = express$Application;2
2
  declare module.exports: {2
    (): express$Application, // If you try to call like a function, it will use this signature2
    static: (root: string, options?: Object) => express$Middleware, // `static` property on the function2
    Router: typeof express$Router, // `Router` property on the function2
  };2
}2
// flow-typed signature: 6a5610678d4b01e13bbfbbc62bdaf5832
// flow-typed version: 3817bc6980/flow-bin_v0.x.x/flow_>=v0.25.x2
2
declare module "flow-bin" {2
  declare module.exports: string;2
}2
// flow-typed signature: 334664ea61c80495e1e70186a29a5fa72
// flow-typed version: <<STUB>>/fs-extra_v5.x.x/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'fs-extra'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'fs-extra' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'fs-extra/lib/copy-sync/copy-sync' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/copy-sync/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/copy/copy' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/copy/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/empty/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/file' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/link' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/symlink-paths' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/symlink-type' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/ensure/symlink' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/fs/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/json/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/json/jsonfile' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/json/output-json-sync' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/json/output-json' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/mkdirs/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/mkdirs/mkdirs-sync' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/mkdirs/mkdirs' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/mkdirs/win32' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/move-sync/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/move/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/output/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/path-exists/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/remove/index' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/remove/rimraf' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/util/assign' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/util/buffer' {2
  declare module.exports: any;2
}2
2
declare module 'fs-extra/lib/util/utimes' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'fs-extra/lib/copy-sync/copy-sync.js' {2
  declare module.exports: $Exports<'fs-extra/lib/copy-sync/copy-sync'>;2
}2
declare module 'fs-extra/lib/copy-sync/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/copy-sync/index'>;2
}2
declare module 'fs-extra/lib/copy/copy.js' {2
  declare module.exports: $Exports<'fs-extra/lib/copy/copy'>;2
}2
declare module 'fs-extra/lib/copy/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/copy/index'>;2
}2
declare module 'fs-extra/lib/empty/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/empty/index'>;2
}2
declare module 'fs-extra/lib/ensure/file.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/file'>;2
}2
declare module 'fs-extra/lib/ensure/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/index'>;2
}2
declare module 'fs-extra/lib/ensure/link.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/link'>;2
}2
declare module 'fs-extra/lib/ensure/symlink-paths.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/symlink-paths'>;2
}2
declare module 'fs-extra/lib/ensure/symlink-type.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/symlink-type'>;2
}2
declare module 'fs-extra/lib/ensure/symlink.js' {2
  declare module.exports: $Exports<'fs-extra/lib/ensure/symlink'>;2
}2
declare module 'fs-extra/lib/fs/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/fs/index'>;2
}2
declare module 'fs-extra/lib/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/index'>;2
}2
declare module 'fs-extra/lib/json/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/json/index'>;2
}2
declare module 'fs-extra/lib/json/jsonfile.js' {2
  declare module.exports: $Exports<'fs-extra/lib/json/jsonfile'>;2
}2
declare module 'fs-extra/lib/json/output-json-sync.js' {2
  declare module.exports: $Exports<'fs-extra/lib/json/output-json-sync'>;2
}2
declare module 'fs-extra/lib/json/output-json.js' {2
  declare module.exports: $Exports<'fs-extra/lib/json/output-json'>;2
}2
declare module 'fs-extra/lib/mkdirs/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/mkdirs/index'>;2
}2
declare module 'fs-extra/lib/mkdirs/mkdirs-sync.js' {2
  declare module.exports: $Exports<'fs-extra/lib/mkdirs/mkdirs-sync'>;2
}2
declare module 'fs-extra/lib/mkdirs/mkdirs.js' {2
  declare module.exports: $Exports<'fs-extra/lib/mkdirs/mkdirs'>;2
}2
declare module 'fs-extra/lib/mkdirs/win32.js' {2
  declare module.exports: $Exports<'fs-extra/lib/mkdirs/win32'>;2
}2
declare module 'fs-extra/lib/move-sync/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/move-sync/index'>;2
}2
declare module 'fs-extra/lib/move/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/move/index'>;2
}2
declare module 'fs-extra/lib/output/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/output/index'>;2
}2
declare module 'fs-extra/lib/path-exists/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/path-exists/index'>;2
}2
declare module 'fs-extra/lib/remove/index.js' {2
  declare module.exports: $Exports<'fs-extra/lib/remove/index'>;2
}2
declare module 'fs-extra/lib/remove/rimraf.js' {2
  declare module.exports: $Exports<'fs-extra/lib/remove/rimraf'>;2
}2
declare module 'fs-extra/lib/util/assign.js' {2
  declare module.exports: $Exports<'fs-extra/lib/util/assign'>;2
}2
declare module 'fs-extra/lib/util/buffer.js' {2
  declare module.exports: $Exports<'fs-extra/lib/util/buffer'>;2
}2
declare module 'fs-extra/lib/util/utimes.js' {2
  declare module.exports: $Exports<'fs-extra/lib/util/utimes'>;2
}2
// flow-typed signature: 69ddad32e70eb9e1eb79e7ce2017117b2
// flow-typed version: <<STUB>>/graphiql_v0.11.10/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'graphiql'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'graphiql' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'graphiql/dist/components/DocExplorer' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/Argument' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/DefaultValue' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/FieldDoc' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/MarkdownContent' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/SchemaDoc' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/SearchBox' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/SearchResults' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/TypeDoc' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/DocExplorer/TypeLink' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ExecuteButton' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/GraphiQL' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/HistoryQuery' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/QueryEditor' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/QueryHistory' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ResultViewer' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ToolbarButton' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ToolbarGroup' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ToolbarMenu' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/ToolbarSelect' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/components/VariableEditor' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/CodeMirrorSizer' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/debounce' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/elementPosition' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/fillLeafs' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/find' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/getQueryFacts' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/getSelectedOperationName' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/introspectionQueries' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/normalizeWhitespace' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/onHasCompletion' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/QueryStore' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/dist/utility/StorageAPI' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/graphiql' {2
  declare module.exports: any;2
}2
2
declare module 'graphiql/graphiql.min' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'graphiql/dist/components/DocExplorer.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/Argument.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/Argument'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/DefaultValue.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/DefaultValue'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/FieldDoc.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/FieldDoc'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/MarkdownContent.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/MarkdownContent'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/SchemaDoc.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/SchemaDoc'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/SearchBox.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/SearchBox'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/SearchResults.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/SearchResults'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/TypeDoc.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/TypeDoc'>;2
}2
declare module 'graphiql/dist/components/DocExplorer/TypeLink.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/DocExplorer/TypeLink'>;2
}2
declare module 'graphiql/dist/components/ExecuteButton.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ExecuteButton'>;2
}2
declare module 'graphiql/dist/components/GraphiQL.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/GraphiQL'>;2
}2
declare module 'graphiql/dist/components/HistoryQuery.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/HistoryQuery'>;2
}2
declare module 'graphiql/dist/components/QueryEditor.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/QueryEditor'>;2
}2
declare module 'graphiql/dist/components/QueryHistory.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/QueryHistory'>;2
}2
declare module 'graphiql/dist/components/ResultViewer.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ResultViewer'>;2
}2
declare module 'graphiql/dist/components/ToolbarButton.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ToolbarButton'>;2
}2
declare module 'graphiql/dist/components/ToolbarGroup.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ToolbarGroup'>;2
}2
declare module 'graphiql/dist/components/ToolbarMenu.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ToolbarMenu'>;2
}2
declare module 'graphiql/dist/components/ToolbarSelect.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/ToolbarSelect'>;2
}2
declare module 'graphiql/dist/components/VariableEditor.js' {2
  declare module.exports: $Exports<'graphiql/dist/components/VariableEditor'>;2
}2
declare module 'graphiql/dist/index.js' {2
  declare module.exports: $Exports<'graphiql/dist/index'>;2
}2
declare module 'graphiql/dist/utility/CodeMirrorSizer.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/CodeMirrorSizer'>;2
}2
declare module 'graphiql/dist/utility/debounce.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/debounce'>;2
}2
declare module 'graphiql/dist/utility/elementPosition.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/elementPosition'>;2
}2
declare module 'graphiql/dist/utility/fillLeafs.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/fillLeafs'>;2
}2
declare module 'graphiql/dist/utility/find.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/find'>;2
}2
declare module 'graphiql/dist/utility/getQueryFacts.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/getQueryFacts'>;2
}2
declare module 'graphiql/dist/utility/getSelectedOperationName.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/getSelectedOperationName'>;2
}2
declare module 'graphiql/dist/utility/introspectionQueries.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/introspectionQueries'>;2
}2
declare module 'graphiql/dist/utility/normalizeWhitespace.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/normalizeWhitespace'>;2
}2
declare module 'graphiql/dist/utility/onHasCompletion.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/onHasCompletion'>;2
}2
declare module 'graphiql/dist/utility/QueryStore.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/QueryStore'>;2
}2
declare module 'graphiql/dist/utility/StorageAPI.js' {2
  declare module.exports: $Exports<'graphiql/dist/utility/StorageAPI'>;2
}2
declare module 'graphiql/graphiql.js' {2
  declare module.exports: $Exports<'graphiql/graphiql'>;2
}2
declare module 'graphiql/graphiql.min.js' {2
  declare module.exports: $Exports<'graphiql/graphiql.min'>;2
}2
// flow-typed signature: 78a3b0630930ae254dcef08544af115d2
// flow-typed version: <<STUB>>/graphql_v^0.11.7/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'graphql'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'graphql' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'graphql/error/formatError' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/error/GraphQLError' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/error/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/error/locatedError' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/error/syntaxError' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/execution/execute' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/execution/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/execution/values' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/graphql' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/dedent' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/find' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/invariant' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/isInvalid' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/isNullish' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/keyMap' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/keyValMap' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/ObjMap' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/quotedOrList' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/jsutils/suggestionList' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/ast' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/kinds' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/lexer' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/location' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/parser' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/printer' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/source' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/language/visitor' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/subscription/asyncIteratorReject' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/subscription/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/subscription/mapAsyncIterator' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/subscription/subscribe' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/definition' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/directives' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/introspection' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/scalars' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/type/schema' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/assertValidName' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/astFromValue' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/buildASTSchema' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/buildClientSchema' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/concatAST' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/extendSchema' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/findBreakingChanges' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/findDeprecatedUsages' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/getOperationAST' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/introspectionQuery' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/isValidJSValue' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/isValidLiteralValue' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/schemaPrinter' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/separateOperations' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/typeComparators' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/typeFromAST' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/TypeInfo' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/utilities/valueFromAST' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/index' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/ArgumentsOfCorrectType' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/DefaultValuesOfCorrectType' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/FieldsOnCorrectType' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/FragmentsOnCompositeTypes' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/KnownArgumentNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/KnownDirectives' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/KnownFragmentNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/KnownTypeNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/LoneAnonymousOperation' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/NoFragmentCycles' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/NoUndefinedVariables' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/NoUnusedFragments' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/NoUnusedVariables' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/OverlappingFieldsCanBeMerged' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/PossibleFragmentSpreads' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/ProvidedNonNullArguments' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/ScalarLeafs' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/SingleFieldSubscriptions' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueArgumentNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueDirectivesPerLocation' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueFragmentNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueInputFieldNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueOperationNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/UniqueVariableNames' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/VariablesAreInputTypes' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/rules/VariablesInAllowedPosition' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/specifiedRules' {2
  declare module.exports: any;2
}2
2
declare module 'graphql/validation/validate' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'graphql/error/formatError.js' {2
  declare module.exports: $Exports<'graphql/error/formatError'>;2
}2
declare module 'graphql/error/GraphQLError.js' {2
  declare module.exports: $Exports<'graphql/error/GraphQLError'>;2
}2
declare module 'graphql/error/index.js' {2
  declare module.exports: $Exports<'graphql/error/index'>;2
}2
declare module 'graphql/error/locatedError.js' {2
  declare module.exports: $Exports<'graphql/error/locatedError'>;2
}2
declare module 'graphql/error/syntaxError.js' {2
  declare module.exports: $Exports<'graphql/error/syntaxError'>;2
}2
declare module 'graphql/execution/execute.js' {2
  declare module.exports: $Exports<'graphql/execution/execute'>;2
}2
declare module 'graphql/execution/index.js' {2
  declare module.exports: $Exports<'graphql/execution/index'>;2
}2
declare module 'graphql/execution/values.js' {2
  declare module.exports: $Exports<'graphql/execution/values'>;2
}2
declare module 'graphql/graphql.js' {2
  declare module.exports: $Exports<'graphql/graphql'>;2
}2
declare module 'graphql/index' {2
  declare module.exports: $Exports<'graphql'>;2
}2
declare module 'graphql/index.js' {2
  declare module.exports: $Exports<'graphql'>;2
}2
declare module 'graphql/jsutils/dedent.js' {2
  declare module.exports: $Exports<'graphql/jsutils/dedent'>;2
}2
declare module 'graphql/jsutils/find.js' {2
  declare module.exports: $Exports<'graphql/jsutils/find'>;2
}2
declare module 'graphql/jsutils/invariant.js' {2
  declare module.exports: $Exports<'graphql/jsutils/invariant'>;2
}2
declare module 'graphql/jsutils/isInvalid.js' {2
  declare module.exports: $Exports<'graphql/jsutils/isInvalid'>;2
}2
declare module 'graphql/jsutils/isNullish.js' {2
  declare module.exports: $Exports<'graphql/jsutils/isNullish'>;2
}2
declare module 'graphql/jsutils/keyMap.js' {2
  declare module.exports: $Exports<'graphql/jsutils/keyMap'>;2
}2
declare module 'graphql/jsutils/keyValMap.js' {2
  declare module.exports: $Exports<'graphql/jsutils/keyValMap'>;2
}2
declare module 'graphql/jsutils/ObjMap.js' {2
  declare module.exports: $Exports<'graphql/jsutils/ObjMap'>;2
}2
declare module 'graphql/jsutils/quotedOrList.js' {2
  declare module.exports: $Exports<'graphql/jsutils/quotedOrList'>;2
}2
declare module 'graphql/jsutils/suggestionList.js' {2
  declare module.exports: $Exports<'graphql/jsutils/suggestionList'>;2
}2
declare module 'graphql/language/ast.js' {2
  declare module.exports: $Exports<'graphql/language/ast'>;2
}2
declare module 'graphql/language/index.js' {2
  declare module.exports: $Exports<'graphql/language/index'>;2
}2
declare module 'graphql/language/kinds.js' {2
  declare module.exports: $Exports<'graphql/language/kinds'>;2
}2
declare module 'graphql/language/lexer.js' {2
  declare module.exports: $Exports<'graphql/language/lexer'>;2
}2
declare module 'graphql/language/location.js' {2
  declare module.exports: $Exports<'graphql/language/location'>;2
}2
declare module 'graphql/language/parser.js' {2
  declare module.exports: $Exports<'graphql/language/parser'>;2
}2
declare module 'graphql/language/printer.js' {2
  declare module.exports: $Exports<'graphql/language/printer'>;2
}2
declare module 'graphql/language/source.js' {2
  declare module.exports: $Exports<'graphql/language/source'>;2
}2
declare module 'graphql/language/visitor.js' {2
  declare module.exports: $Exports<'graphql/language/visitor'>;2
}2
declare module 'graphql/subscription/asyncIteratorReject.js' {2
  declare module.exports: $Exports<'graphql/subscription/asyncIteratorReject'>;2
}2
declare module 'graphql/subscription/index.js' {2
  declare module.exports: $Exports<'graphql/subscription/index'>;2
}2
declare module 'graphql/subscription/mapAsyncIterator.js' {2
  declare module.exports: $Exports<'graphql/subscription/mapAsyncIterator'>;2
}2
declare module 'graphql/subscription/subscribe.js' {2
  declare module.exports: $Exports<'graphql/subscription/subscribe'>;2
}2
declare module 'graphql/type/definition.js' {2
  declare module.exports: $Exports<'graphql/type/definition'>;2
}2
declare module 'graphql/type/directives.js' {2
  declare module.exports: $Exports<'graphql/type/directives'>;2
}2
declare module 'graphql/type/index.js' {2
  declare module.exports: $Exports<'graphql/type/index'>;2
}2
declare module 'graphql/type/introspection.js' {2
  declare module.exports: $Exports<'graphql/type/introspection'>;2
}2
declare module 'graphql/type/scalars.js' {2
  declare module.exports: $Exports<'graphql/type/scalars'>;2
}2
declare module 'graphql/type/schema.js' {2
  declare module.exports: $Exports<'graphql/type/schema'>;2
}2
declare module 'graphql/utilities/assertValidName.js' {2
  declare module.exports: $Exports<'graphql/utilities/assertValidName'>;2
}2
declare module 'graphql/utilities/astFromValue.js' {2
  declare module.exports: $Exports<'graphql/utilities/astFromValue'>;2
}2
declare module 'graphql/utilities/buildASTSchema.js' {2
  declare module.exports: $Exports<'graphql/utilities/buildASTSchema'>;2
}2
declare module 'graphql/utilities/buildClientSchema.js' {2
  declare module.exports: $Exports<'graphql/utilities/buildClientSchema'>;2
}2
declare module 'graphql/utilities/concatAST.js' {2
  declare module.exports: $Exports<'graphql/utilities/concatAST'>;2
}2
declare module 'graphql/utilities/extendSchema.js' {2
  declare module.exports: $Exports<'graphql/utilities/extendSchema'>;2
}2
declare module 'graphql/utilities/findBreakingChanges.js' {2
  declare module.exports: $Exports<'graphql/utilities/findBreakingChanges'>;2
}2
declare module 'graphql/utilities/findDeprecatedUsages.js' {2
  declare module.exports: $Exports<'graphql/utilities/findDeprecatedUsages'>;2
}2
declare module 'graphql/utilities/getOperationAST.js' {2
  declare module.exports: $Exports<'graphql/utilities/getOperationAST'>;2
}2
declare module 'graphql/utilities/index.js' {2
  declare module.exports: $Exports<'graphql/utilities/index'>;2
}2
declare module 'graphql/utilities/introspectionQuery.js' {2
  declare module.exports: $Exports<'graphql/utilities/introspectionQuery'>;2
}2
declare module 'graphql/utilities/isValidJSValue.js' {2
  declare module.exports: $Exports<'graphql/utilities/isValidJSValue'>;2
}2
declare module 'graphql/utilities/isValidLiteralValue.js' {2
  declare module.exports: $Exports<'graphql/utilities/isValidLiteralValue'>;2
}2
declare module 'graphql/utilities/schemaPrinter.js' {2
  declare module.exports: $Exports<'graphql/utilities/schemaPrinter'>;2
}2
declare module 'graphql/utilities/separateOperations.js' {2
  declare module.exports: $Exports<'graphql/utilities/separateOperations'>;2
}2
declare module 'graphql/utilities/typeComparators.js' {2
  declare module.exports: $Exports<'graphql/utilities/typeComparators'>;2
}2
declare module 'graphql/utilities/typeFromAST.js' {2
  declare module.exports: $Exports<'graphql/utilities/typeFromAST'>;2
}2
declare module 'graphql/utilities/TypeInfo.js' {2
  declare module.exports: $Exports<'graphql/utilities/TypeInfo'>;2
}2
declare module 'graphql/utilities/valueFromAST.js' {2
  declare module.exports: $Exports<'graphql/utilities/valueFromAST'>;2
}2
declare module 'graphql/validation/index.js' {2
  declare module.exports: $Exports<'graphql/validation/index'>;2
}2
declare module 'graphql/validation/rules/ArgumentsOfCorrectType.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/ArgumentsOfCorrectType'>;2
}2
declare module 'graphql/validation/rules/DefaultValuesOfCorrectType.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/DefaultValuesOfCorrectType'>;2
}2
declare module 'graphql/validation/rules/FieldsOnCorrectType.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/FieldsOnCorrectType'>;2
}2
declare module 'graphql/validation/rules/FragmentsOnCompositeTypes.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/FragmentsOnCompositeTypes'>;2
}2
declare module 'graphql/validation/rules/KnownArgumentNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/KnownArgumentNames'>;2
}2
declare module 'graphql/validation/rules/KnownDirectives.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/KnownDirectives'>;2
}2
declare module 'graphql/validation/rules/KnownFragmentNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/KnownFragmentNames'>;2
}2
declare module 'graphql/validation/rules/KnownTypeNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/KnownTypeNames'>;2
}2
declare module 'graphql/validation/rules/LoneAnonymousOperation.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/LoneAnonymousOperation'>;2
}2
declare module 'graphql/validation/rules/NoFragmentCycles.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/NoFragmentCycles'>;2
}2
declare module 'graphql/validation/rules/NoUndefinedVariables.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/NoUndefinedVariables'>;2
}2
declare module 'graphql/validation/rules/NoUnusedFragments.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/NoUnusedFragments'>;2
}2
declare module 'graphql/validation/rules/NoUnusedVariables.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/NoUnusedVariables'>;2
}2
declare module 'graphql/validation/rules/OverlappingFieldsCanBeMerged.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/OverlappingFieldsCanBeMerged'>;2
}2
declare module 'graphql/validation/rules/PossibleFragmentSpreads.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/PossibleFragmentSpreads'>;2
}2
declare module 'graphql/validation/rules/ProvidedNonNullArguments.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/ProvidedNonNullArguments'>;2
}2
declare module 'graphql/validation/rules/ScalarLeafs.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/ScalarLeafs'>;2
}2
declare module 'graphql/validation/rules/SingleFieldSubscriptions.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/SingleFieldSubscriptions'>;2
}2
declare module 'graphql/validation/rules/UniqueArgumentNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueArgumentNames'>;2
}2
declare module 'graphql/validation/rules/UniqueDirectivesPerLocation.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueDirectivesPerLocation'>;2
}2
declare module 'graphql/validation/rules/UniqueFragmentNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueFragmentNames'>;2
}2
declare module 'graphql/validation/rules/UniqueInputFieldNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueInputFieldNames'>;2
}2
declare module 'graphql/validation/rules/UniqueOperationNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueOperationNames'>;2
}2
declare module 'graphql/validation/rules/UniqueVariableNames.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/UniqueVariableNames'>;2
}2
declare module 'graphql/validation/rules/VariablesAreInputTypes.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/VariablesAreInputTypes'>;2
}2
declare module 'graphql/validation/rules/VariablesInAllowedPosition.js' {2
  declare module.exports: $Exports<'graphql/validation/rules/VariablesInAllowedPosition'>;2
}2
declare module 'graphql/validation/specifiedRules.js' {2
  declare module.exports: $Exports<'graphql/validation/specifiedRules'>;2
}2
declare module 'graphql/validation/validate.js' {2
  declare module.exports: $Exports<'graphql/validation/validate'>;2
}2
// flow-typed signature: 41a21b97ad4a7c01c4caf3a8b93823542
// flow-typed version: b43dff3e0e/invariant_v2.x.x/flow_>=v0.33.x2
2
declare module invariant {2
  declare var exports: (condition: boolean, message: string) => void;2
}2
// flow-typed signature: 107cf7068b8835594e97f938e88482442
// flow-typed version: 8b4dd96654/jest_v21.x.x/flow_>=v0.39.x2
2
type JestMockFn<TArguments: $ReadOnlyArray<*>, TReturn> = {2
  (...args: TArguments): TReturn,2
  /**2
   * An object for introspecting mock calls2
   */2
  mock: {2
    /**2
     * An array that represents all calls that have been made into this mock2
     * function. Each call is represented by an array of arguments that were2
     * passed during the call.2
     */2
    calls: Array<TArguments>,2
    /**2
     * An array that contains all the object instances that have been2
     * instantiated from this mock function.2
     */2
    instances: Array<TReturn>2
  },2
  /**2
   * Resets all information stored in the mockFn.mock.calls and2
   * mockFn.mock.instances arrays. Often this is useful when you want to clean2
   * up a mock's usage data between two assertions.2
   */2
  mockClear(): void,2
  /**2
   * Resets all information stored in the mock. This is useful when you want to2
   * completely restore a mock back to its initial state.2
   */2
  mockReset(): void,2
  /**2
   * Removes the mock and restores the initial implementation. This is useful2
   * when you want to mock functions in certain test cases and restore the2
   * original implementation in others. Beware that mockFn.mockRestore only2
   * works when mock was created with jest.spyOn. Thus you have to take care of2
   * restoration yourself when manually assigning jest.fn().2
   */2
  mockRestore(): void,2
  /**2
   * Accepts a function that should be used as the implementation of the mock.2
   * The mock itself will still record all calls that go into and instances2
   * that come from itself -- the only difference is that the implementation2
   * will also be executed when the mock is called.2
   */2
  mockImplementation(2
    fn: (...args: TArguments) => TReturn2
  ): JestMockFn<TArguments, TReturn>,2
  /**2
   * Accepts a function that will be used as an implementation of the mock for2
   * one call to the mocked function. Can be chained so that multiple function2
   * calls produce different results.2
   */2
  mockImplementationOnce(2
    fn: (...args: TArguments) => TReturn2
  ): JestMockFn<TArguments, TReturn>,2
  /**2
   * Just a simple sugar function for returning `this`2
   */2
  mockReturnThis(): void,2
  /**2
   * Deprecated: use jest.fn(() => value) instead2
   */2
  mockReturnValue(value: TReturn): JestMockFn<TArguments, TReturn>,2
  /**2
   * Sugar for only returning a value once inside your mock2
   */2
  mockReturnValueOnce(value: TReturn): JestMockFn<TArguments, TReturn>2
};2
2
type JestAsymmetricEqualityType = {2
  /**2
   * A custom Jasmine equality tester2
   */2
  asymmetricMatch(value: mixed): boolean2
};2
2
type JestCallsType = {2
  allArgs(): mixed,2
  all(): mixed,2
  any(): boolean,2
  count(): number,2
  first(): mixed,2
  mostRecent(): mixed,2
  reset(): void2
};2
2
type JestClockType = {2
  install(): void,2
  mockDate(date: Date): void,2
  tick(milliseconds?: number): void,2
  uninstall(): void2
};2
2
type JestMatcherResult = {2
  message?: string | (() => string),2
  pass: boolean2
};2
2
type JestMatcher = (actual: any, expected: any) => JestMatcherResult;2
2
type JestPromiseType = {2
  /**2
   * Use rejects to unwrap the reason of a rejected promise so any other2
   * matcher can be chained. If the promise is fulfilled the assertion fails.2
   */2
  rejects: JestExpectType,2
  /**2
   * Use resolves to unwrap the value of a fulfilled promise so any other2
   * matcher can be chained. If the promise is rejected the assertion fails.2
   */2
  resolves: JestExpectType2
};2
2
/**2
 *  Plugin: jest-enzyme2
 */2
type EnzymeMatchersType = {2
  toBeChecked(): void,2
  toBeDisabled(): void,2
  toBeEmpty(): void,2
  toBePresent(): void,2
  toContainReact(element: React$Element<any>): void,2
  toHaveClassName(className: string): void,2
  toHaveHTML(html: string): void,2
  toHaveProp(propKey: string, propValue?: any): void,2
  toHaveRef(refName: string): void,2
  toHaveState(stateKey: string, stateValue?: any): void,2
  toHaveStyle(styleKey: string, styleValue?: any): void,2
  toHaveTagName(tagName: string): void,2
  toHaveText(text: string): void,2
  toIncludeText(text: string): void,2
  toHaveValue(value: any): void,2
  toMatchElement(element: React$Element<any>): void,2
  toMatchSelector(selector: string): void2
};2
2
type JestExpectType = {2
  not: JestExpectType & EnzymeMatchersType,2
  /**2
   * If you have a mock function, you can use .lastCalledWith to test what2
   * arguments it was last called with.2
   */2
  lastCalledWith(...args: Array<any>): void,2
  /**2
   * toBe just checks that a value is what you expect. It uses === to check2
   * strict equality.2
   */2
  toBe(value: any): void,2
  /**2
   * Use .toHaveBeenCalled to ensure that a mock function got called.2
   */2
  toBeCalled(): void,2
  /**2
   * Use .toBeCalledWith to ensure that a mock function was called with2
   * specific arguments.2
   */2
  toBeCalledWith(...args: Array<any>): void,2
  /**2
   * Using exact equality with floating point numbers is a bad idea. Rounding2
   * means that intuitive things fail.2
   */2
  toBeCloseTo(num: number, delta: any): void,2
  /**2
   * Use .toBeDefined to check that a variable is not undefined.2
   */2
  toBeDefined(): void,2
  /**2
   * Use .toBeFalsy when you don't care what a value is, you just want to2
   * ensure a value is false in a boolean context.2
   */2
  toBeFalsy(): void,2
  /**2
   * To compare floating point numbers, you can use toBeGreaterThan.2
   */2
  toBeGreaterThan(number: number): void,2
  /**2
   * To compare floating point numbers, you can use toBeGreaterThanOrEqual.2
   */2
  toBeGreaterThanOrEqual(number: number): void,2
  /**2
   * To compare floating point numbers, you can use toBeLessThan.2
   */2
  toBeLessThan(number: number): void,2
  /**2
   * To compare floating point numbers, you can use toBeLessThanOrEqual.2
   */2
  toBeLessThanOrEqual(number: number): void,2
  /**2
   * Use .toBeInstanceOf(Class) to check that an object is an instance of a2
   * class.2
   */2
  toBeInstanceOf(cls: Class<*>): void,2
  /**2
   * .toBeNull() is the same as .toBe(null) but the error messages are a bit2
   * nicer.2
   */2
  toBeNull(): void,2
  /**2
   * Use .toBeTruthy when you don't care what a value is, you just want to2
   * ensure a value is true in a boolean context.2
   */2
  toBeTruthy(): void,2
  /**2
   * Use .toBeUndefined to check that a variable is undefined.2
   */2
  toBeUndefined(): void,2
  /**2
   * Use .toContain when you want to check that an item is in a list. For2
   * testing the items in the list, this uses ===, a strict equality check.2
   */2
  toContain(item: any): void,2
  /**2
   * Use .toContainEqual when you want to check that an item is in a list. For2
   * testing the items in the list, this matcher recursively checks the2
   * equality of all fields, rather than checking for object identity.2
   */2
  toContainEqual(item: any): void,2
  /**2
   * Use .toEqual when you want to check that two objects have the same value.2
   * This matcher recursively checks the equality of all fields, rather than2
   * checking for object identity.2
   */2
  toEqual(value: any): void,2
  /**2
   * Use .toHaveBeenCalled to ensure that a mock function got called.2
   */2
  toHaveBeenCalled(): void,2
  /**2
   * Use .toHaveBeenCalledTimes to ensure that a mock function got called exact2
   * number of times.2
   */2
  toHaveBeenCalledTimes(number: number): void,2
  /**2
   * Use .toHaveBeenCalledWith to ensure that a mock function was called with2
   * specific arguments.2
   */2
  toHaveBeenCalledWith(...args: Array<any>): void,2
  /**2
   * Use .toHaveBeenLastCalledWith to ensure that a mock function was last called2
   * with specific arguments.2
   */2
  toHaveBeenLastCalledWith(...args: Array<any>): void,2
  /**2
   * Check that an object has a .length property and it is set to a certain2
   * numeric value.2
   */2
  toHaveLength(number: number): void,2
  /**2
   *2
   */2
  toHaveProperty(propPath: string, value?: any): void,2
  /**2
   * Use .toMatch to check that a string matches a regular expression or string.2
   */2
  toMatch(regexpOrString: RegExp | string): void,2
  /**2
   * Use .toMatchObject to check that a javascript object matches a subset of the properties of an object.2
   */2
  toMatchObject(object: Object | Array<Object>): void,2
  /**2
   * This ensures that a React component matches the most recent snapshot.2
   */2
  toMatchSnapshot(name?: string): void,2
  /**2
   * Use .toThrow to test that a function throws when it is called.2
   * If you want to test that a specific error gets thrown, you can provide an2
   * argument to toThrow. The argument can be a string for the error message,2
   * a class for the error, or a regex that should match the error.2
   *2
   * Alias: .toThrowError2
   */2
  toThrow(message?: string | Error | Class<Error> | RegExp): void,2
  toThrowError(message?: string | Error | Class<Error> | RegExp): void,2
  /**2
   * Use .toThrowErrorMatchingSnapshot to test that a function throws a error2
   * matching the most recent snapshot when it is called.2
   */2
  toThrowErrorMatchingSnapshot(): void2
};2
2
type JestObjectType = {2
  /**2
   *  Disables automatic mocking in the module loader.2
   *2
   *  After this method is called, all `require()`s will return the real2
   *  versions of each module (rather than a mocked version).2
   */2
  disableAutomock(): JestObjectType,2
  /**2
   * An un-hoisted version of disableAutomock2
   */2
  autoMockOff(): JestObjectType,2
  /**2
   * Enables automatic mocking in the module loader.2
   */2
  enableAutomock(): JestObjectType,2
  /**2
   * An un-hoisted version of enableAutomock2
   */2
  autoMockOn(): JestObjectType,2
  /**2
   * Clears the mock.calls and mock.instances properties of all mocks.2
   * Equivalent to calling .mockClear() on every mocked function.2
   */2
  clearAllMocks(): JestObjectType,2
  /**2
   * Resets the state of all mocks. Equivalent to calling .mockReset() on every2
   * mocked function.2
   */2
  resetAllMocks(): JestObjectType,2
  /**2
   * Removes any pending timers from the timer system.2
   */2
  clearAllTimers(): void,2
  /**2
   * The same as `mock` but not moved to the top of the expectation by2
   * babel-jest.2
   */2
  doMock(moduleName: string, moduleFactory?: any): JestObjectType,2
  /**2
   * The same as `unmock` but not moved to the top of the expectation by2
   * babel-jest.2
   */2
  dontMock(moduleName: string): JestObjectType,2
  /**2
   * Returns a new, unused mock function. Optionally takes a mock2
   * implementation.2
   */2
  fn<TArguments: $ReadOnlyArray<*>, TReturn>(2
    implementation?: (...args: TArguments) => TReturn2
  ): JestMockFn<TArguments, TReturn>,2
  /**2
   * Determines if the given function is a mocked function.2
   */2
  isMockFunction(fn: Function): boolean,2
  /**2
   * Given the name of a module, use the automatic mocking system to generate a2
   * mocked version of the module for you.2
   */2
  genMockFromModule(moduleName: string): any,2
  /**2
   * Mocks a module with an auto-mocked version when it is being required.2
   *2
   * The second argument can be used to specify an explicit module factory that2
   * is being run instead of using Jest's automocking feature.2
   *2
   * The third argument can be used to create virtual mocks -- mocks of modules2
   * that don't exist anywhere in the system.2
   */2
  mock(2
    moduleName: string,2
    moduleFactory?: any,2
    options?: Object2
  ): JestObjectType,2
  /**2
   * Returns the actual module instead of a mock, bypassing all checks on2
   * whether the module should receive a mock implementation or not.2
   */2
  requireActual(moduleName: string): any,2
  /**2
   * Returns a mock module instead of the actual module, bypassing all checks2
   * on whether the module should be required normally or not.2
   */2
  requireMock(moduleName: string): any,2
  /**2
   * Resets the module registry - the cache of all required modules. This is2
   * useful to isolate modules where local state might conflict between tests.2
   */2
  resetModules(): JestObjectType,2
  /**2
   * Exhausts the micro-task queue (usually interfaced in node via2
   * process.nextTick).2
   */2
  runAllTicks(): void,2
  /**2
   * Exhausts the macro-task queue (i.e., all tasks queued by setTimeout(),2
   * setInterval(), and setImmediate()).2
   */2
  runAllTimers(): void,2
  /**2
   * Exhausts all tasks queued by setImmediate().2
   */2
  runAllImmediates(): void,2
  /**2
   * Executes only the macro task queue (i.e. all tasks queued by setTimeout()2
   * or setInterval() and setImmediate()).2
   */2
  runTimersToTime(msToRun: number): void,2
  /**2
   * Executes only the macro-tasks that are currently pending (i.e., only the2
   * tasks that have been queued by setTimeout() or setInterval() up to this2
   * point)2
   */2
  runOnlyPendingTimers(): void,2
  /**2
   * Explicitly supplies the mock object that the module system should return2
   * for the specified module. Note: It is recommended to use jest.mock()2
   * instead.2
   */2
  setMock(moduleName: string, moduleExports: any): JestObjectType,2
  /**2
   * Indicates that the module system should never return a mocked version of2
   * the specified module from require() (e.g. that it should always return the2
   * real module).2
   */2
  unmock(moduleName: string): JestObjectType,2
  /**2
   * Instructs Jest to use fake versions of the standard timer functions2
   * (setTimeout, setInterval, clearTimeout, clearInterval, nextTick,2
   * setImmediate and clearImmediate).2
   */2
  useFakeTimers(): JestObjectType,2
  /**2
   * Instructs Jest to use the real versions of the standard timer functions.2
   */2
  useRealTimers(): JestObjectType,2
  /**2
   * Creates a mock function similar to jest.fn but also tracks calls to2
   * object[methodName].2
   */2
  spyOn(object: Object, methodName: string): JestMockFn<any, any>,2
  /**2
   * Set the default timeout interval for tests and before/after hooks in milliseconds.2
   * Note: The default timeout interval is 5 seconds if this method is not called.2
   */2
  setTimeout(timeout: number): JestObjectType2
};2
2
type JestSpyType = {2
  calls: JestCallsType2
};2
2
/** Runs this function after every test inside this context */2
declare function afterEach(2
  fn: (done: () => void) => ?Promise<mixed>,2
  timeout?: number2
): void;2
/** Runs this function before every test inside this context */2
declare function beforeEach(2
  fn: (done: () => void) => ?Promise<mixed>,2
  timeout?: number2
): void;2
/** Runs this function after all tests have finished inside this context */2
declare function afterAll(2
  fn: (done: () => void) => ?Promise<mixed>,2
  timeout?: number2
): void;2
/** Runs this function before any tests have started inside this context */2
declare function beforeAll(2
  fn: (done: () => void) => ?Promise<mixed>,2
  timeout?: number2
): void;2
2
/** A context for grouping tests together */2
declare var describe: {2
  /**2
   * Creates a block that groups together several related tests in one "test suite"2
   */2
  (name: string, fn: () => void): void,2
2
  /**2
   * Only run this describe block2
   */2
  only(name: string, fn: () => void): void,2
2
  /**2
   * Skip running this describe block2
   */2
  skip(name: string, fn: () => void): void2
};2
2
/** An individual test unit */2
declare var it: {2
  /**2
   * An individual test unit2
   *2
   * @param {string} Name of Test2
   * @param {Function} Test2
   * @param {number} Timeout for the test, in milliseconds.2
   */2
  (2
    name: string,2
    fn?: (done: () => void) => ?Promise<mixed>,2
    timeout?: number2
  ): void,2
  /**2
   * Only run this test2
   *2
   * @param {string} Name of Test2
   * @param {Function} Test2
   * @param {number} Timeout for the test, in milliseconds.2
   */2
  only(2
    name: string,2
    fn?: (done: () => void) => ?Promise<mixed>,2
    timeout?: number2
  ): void,2
  /**2
   * Skip running this test2
   *2
   * @param {string} Name of Test2
   * @param {Function} Test2
   * @param {number} Timeout for the test, in milliseconds.2
   */2
  skip(2
    name: string,2
    fn?: (done: () => void) => ?Promise<mixed>,2
    timeout?: number2
  ): void,2
  /**2
   * Run the test concurrently2
   *2
   * @param {string} Name of Test2
   * @param {Function} Test2
   * @param {number} Timeout for the test, in milliseconds.2
   */2
  concurrent(2
    name: string,2
    fn?: (done: () => void) => ?Promise<mixed>,2
    timeout?: number2
  ): void2
};2
declare function fit(2
  name: string,2
  fn: (done: () => void) => ?Promise<mixed>,2
  timeout?: number2
): void;2
/** An individual test unit */2
declare var test: typeof it;2
/** A disabled group of tests */2
declare var xdescribe: typeof describe;2
/** A focused group of tests */2
declare var fdescribe: typeof describe;2
/** A disabled individual test */2
declare var xit: typeof it;2
/** A disabled individual test */2
declare var xtest: typeof it;2
2
/** The expect function is used every time you want to test a value */2
declare var expect: {2
  /** The object that you want to make assertions against */2
  (value: any): JestExpectType & JestPromiseType & EnzymeMatchersType,2
  /** Add additional Jasmine matchers to Jest's roster */2
  extend(matchers: { [name: string]: JestMatcher }): void,2
  /** Add a module that formats application-specific data structures. */2
  addSnapshotSerializer(serializer: (input: Object) => string): void,2
  assertions(expectedAssertions: number): void,2
  hasAssertions(): void,2
  any(value: mixed): JestAsymmetricEqualityType,2
  anything(): void,2
  arrayContaining(value: Array<mixed>): void,2
  objectContaining(value: Object): void,2
  /** Matches any received string that contains the exact expected string. */2
  stringContaining(value: string): void,2
  stringMatching(value: string | RegExp): void2
};2
2
// TODO handle return type2
// http://jasmine.github.io/2.4/introduction.html#section-Spies2
declare function spyOn(value: mixed, method: string): Object;2
2
/** Holds all functions related to manipulating test runner */2
declare var jest: JestObjectType;2
2
/**2
 * The global Jasmine object, this is generally not exposed as the public API,2
 * using features inside here could break in later versions of Jest.2
 */2
declare var jasmine: {2
  DEFAULT_TIMEOUT_INTERVAL: number,2
  any(value: mixed): JestAsymmetricEqualityType,2
  anything(): void,2
  arrayContaining(value: Array<mixed>): void,2
  clock(): JestClockType,2
  createSpy(name: string): JestSpyType,2
  createSpyObj(2
    baseName: string,2
    methodNames: Array<string>2
  ): { [methodName: string]: JestSpyType },2
  objectContaining(value: Object): void,2
  stringMatching(value: string): void2
};2
// flow-typed signature: 2e82c8be2483588f05be3476cd2af9002
// flow-typed version: <<STUB>>/JSONStream_v^1.3.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'JSONStream'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'JSONStream' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'JSONStream/examples/all_docs' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/bool' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/browser' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/destroy_missing' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/disabled/doubledot1' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/disabled/doubledot2' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/empty' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/error_contents' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/fn' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/gen' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/header_footer' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/issues' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/keys' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/map' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/multiple_objects_error' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/multiple_objects' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/null' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/parsejson' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/stringify_object' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/stringify' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/test' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/test2' {2
  declare module.exports: any;2
}2
2
declare module 'JSONStream/test/two-ways' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'JSONStream/examples/all_docs.js' {2
  declare module.exports: $Exports<'JSONStream/examples/all_docs'>;2
}2
declare module 'JSONStream/index' {2
  declare module.exports: $Exports<'JSONStream'>;2
}2
declare module 'JSONStream/index.js' {2
  declare module.exports: $Exports<'JSONStream'>;2
}2
declare module 'JSONStream/test/bool.js' {2
  declare module.exports: $Exports<'JSONStream/test/bool'>;2
}2
declare module 'JSONStream/test/browser.js' {2
  declare module.exports: $Exports<'JSONStream/test/browser'>;2
}2
declare module 'JSONStream/test/destroy_missing.js' {2
  declare module.exports: $Exports<'JSONStream/test/destroy_missing'>;2
}2
declare module 'JSONStream/test/disabled/doubledot1.js' {2
  declare module.exports: $Exports<'JSONStream/test/disabled/doubledot1'>;2
}2
declare module 'JSONStream/test/disabled/doubledot2.js' {2
  declare module.exports: $Exports<'JSONStream/test/disabled/doubledot2'>;2
}2
declare module 'JSONStream/test/empty.js' {2
  declare module.exports: $Exports<'JSONStream/test/empty'>;2
}2
declare module 'JSONStream/test/error_contents.js' {2
  declare module.exports: $Exports<'JSONStream/test/error_contents'>;2
}2
declare module 'JSONStream/test/fn.js' {2
  declare module.exports: $Exports<'JSONStream/test/fn'>;2
}2
declare module 'JSONStream/test/gen.js' {2
  declare module.exports: $Exports<'JSONStream/test/gen'>;2
}2
declare module 'JSONStream/test/header_footer.js' {2
  declare module.exports: $Exports<'JSONStream/test/header_footer'>;2
}2
declare module 'JSONStream/test/issues.js' {2
  declare module.exports: $Exports<'JSONStream/test/issues'>;2
}2
declare module 'JSONStream/test/keys.js' {2
  declare module.exports: $Exports<'JSONStream/test/keys'>;2
}2
declare module 'JSONStream/test/map.js' {2
  declare module.exports: $Exports<'JSONStream/test/map'>;2
}2
declare module 'JSONStream/test/multiple_objects_error.js' {2
  declare module.exports: $Exports<'JSONStream/test/multiple_objects_error'>;2
}2
declare module 'JSONStream/test/multiple_objects.js' {2
  declare module.exports: $Exports<'JSONStream/test/multiple_objects'>;2
}2
declare module 'JSONStream/test/null.js' {2
  declare module.exports: $Exports<'JSONStream/test/null'>;2
}2
declare module 'JSONStream/test/parsejson.js' {2
  declare module.exports: $Exports<'JSONStream/test/parsejson'>;2
}2
declare module 'JSONStream/test/stringify_object.js' {2
  declare module.exports: $Exports<'JSONStream/test/stringify_object'>;2
}2
declare module 'JSONStream/test/stringify.js' {2
  declare module.exports: $Exports<'JSONStream/test/stringify'>;2
}2
declare module 'JSONStream/test/test.js' {2
  declare module.exports: $Exports<'JSONStream/test/test'>;2
}2
declare module 'JSONStream/test/test2.js' {2
  declare module.exports: $Exports<'JSONStream/test/test2'>;2
}2
declare module 'JSONStream/test/two-ways.js' {2
  declare module.exports: $Exports<'JSONStream/test/two-ways'>;2
}2
// flow-typed signature: fcbc2c8209ca21df4e50468c1f1cf2cf2
// flow-typed version: 9dc62314fe/lodash_v4.x.x/flow_>=v0.55.x2
2
declare module "lodash" {2
  declare type __CurriedFunction1<A, R, AA: A> = (...r: [AA]) => R;2
  declare type CurriedFunction1<A, R> = __CurriedFunction1<A, R, *>;2
2
  declare type __CurriedFunction2<A, B, R, AA: A, BB: B> = ((2
    ...r: [AA]2
  ) => CurriedFunction1<BB, R>) &2
    ((...r: [AA, BB]) => R);2
  declare type CurriedFunction2<A, B, R> = __CurriedFunction2<A, B, R, *, *>;2
2
  declare type __CurriedFunction3<A, B, C, R, AA: A, BB: B, CC: C> = ((2
    ...r: [AA]2
  ) => CurriedFunction2<BB, CC, R>) &2
    ((...r: [AA, BB]) => CurriedFunction1<CC, R>) &2
    ((...r: [AA, BB, CC]) => R);2
  declare type CurriedFunction3<A, B, C, R> = __CurriedFunction3<2
    A,2
    B,2
    C,2
    R,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction4<2
    A,2
    B,2
    C,2
    D,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D2
  > = ((...r: [AA]) => CurriedFunction3<BB, CC, DD, R>) &2
    ((...r: [AA, BB]) => CurriedFunction2<CC, DD, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction1<DD, R>) &2
    ((...r: [AA, BB, CC, DD]) => R);2
  declare type CurriedFunction4<A, B, C, D, R> = __CurriedFunction4<2
    A,2
    B,2
    C,2
    D,2
    R,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction5<2
    A,2
    B,2
    C,2
    D,2
    E,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D,2
    EE: E2
  > = ((...r: [AA]) => CurriedFunction4<BB, CC, DD, EE, R>) &2
    ((...r: [AA, BB]) => CurriedFunction3<CC, DD, EE, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction2<DD, EE, R>) &2
    ((...r: [AA, BB, CC, DD]) => CurriedFunction1<EE, R>) &2
    ((...r: [AA, BB, CC, DD, EE]) => R);2
  declare type CurriedFunction5<A, B, C, D, E, R> = __CurriedFunction5<2
    A,2
    B,2
    C,2
    D,2
    E,2
    R,2
    *,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction6<2
    A,2
    B,2
    C,2
    D,2
    E,2
    F,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D,2
    EE: E,2
    FF: F2
  > = ((...r: [AA]) => CurriedFunction5<BB, CC, DD, EE, FF, R>) &2
    ((...r: [AA, BB]) => CurriedFunction4<CC, DD, EE, FF, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction3<DD, EE, FF, R>) &2
    ((...r: [AA, BB, CC, DD]) => CurriedFunction2<EE, FF, R>) &2
    ((...r: [AA, BB, CC, DD, EE]) => CurriedFunction1<FF, R>) &2
    ((...r: [AA, BB, CC, DD, EE, FF]) => R);2
  declare type CurriedFunction6<A, B, C, D, E, F, R> = __CurriedFunction6<2
    A,2
    B,2
    C,2
    D,2
    E,2
    F,2
    R,2
    *,2
    *,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type Curry = (<A, R>((...r: [A]) => R) => CurriedFunction1<A, R>) &2
    (<A, B, R>((...r: [A, B]) => R) => CurriedFunction2<A, B, R>) &2
    (<A, B, C, R>((...r: [A, B, C]) => R) => CurriedFunction3<A, B, C, R>) &2
    (<A, B, C, D, R>(2
      (...r: [A, B, C, D]) => R2
    ) => CurriedFunction4<A, B, C, D, R>) &2
    (<A, B, C, D, E, R>(2
      (...r: [A, B, C, D, E]) => R2
    ) => CurriedFunction5<A, B, C, D, E, R>) &2
    (<A, B, C, D, E, F, R>(2
      (...r: [A, B, C, D, E, F]) => R2
    ) => CurriedFunction6<A, B, C, D, E, F, R>);2
2
  declare type UnaryFn<A, R> = (a: A) => R;2
2
  declare type TemplateSettings = {2
    escape?: RegExp,2
    evaluate?: RegExp,2
    imports?: Object,2
    interpolate?: RegExp,2
    variable?: string2
  };2
2
  declare type TruncateOptions = {2
    length?: number,2
    omission?: string,2
    separator?: RegExp | string2
  };2
2
  declare type DebounceOptions = {2
    leading?: boolean,2
    maxWait?: number,2
    trailing?: boolean2
  };2
2
  declare type ThrottleOptions = {2
    leading?: boolean,2
    trailing?: boolean2
  };2
2
  declare type NestedArray<T> = Array<Array<T>>;2
2
  declare type matchesIterateeShorthand = Object;2
  declare type matchesPropertyIterateeShorthand = [string, any];2
  declare type propertyIterateeShorthand = string;2
2
  declare type OPredicate<A, O> =2
    | ((value: A, key: string, object: O) => any)2
    | matchesIterateeShorthand2
    | matchesPropertyIterateeShorthand2
    | propertyIterateeShorthand;2
2
  declare type OIterateeWithResult<V, O, R> =2
    | Object2
    | string2
    | ((value: V, key: string, object: O) => R);2
  declare type OIteratee<O> = OIterateeWithResult<any, O, any>;2
  declare type OFlatMapIteratee<T, U> = OIterateeWithResult<any, T, Array<U>>;2
2
  declare type Predicate<T> =2
    | ((value: T, index: number, array: Array<T>) => any)2
    | matchesIterateeShorthand2
    | matchesPropertyIterateeShorthand2
    | propertyIterateeShorthand;2
2
  declare type _ValueOnlyIteratee<T> = (value: T) => mixed;2
  declare type ValueOnlyIteratee<T> = _ValueOnlyIteratee<T> | string;2
  declare type _Iteratee<T> = (2
    item: T,2
    index: number,2
    array: ?Array<T>2
  ) => mixed;2
  declare type Iteratee<T> = _Iteratee<T> | Object | string;2
  declare type FlatMapIteratee<T, U> =2
    | ((item: T, index: number, array: ?Array<T>) => Array<U>)2
    | Object2
    | string;2
  declare type Comparator<T> = (item: T, item2: T) => boolean;2
2
  declare type MapIterator<T, U> =2
    | ((item: T, index: number, array: Array<T>) => U)2
    | propertyIterateeShorthand;2
2
  declare type OMapIterator<T, O, U> =2
    | ((item: T, key: string, object: O) => U)2
    | propertyIterateeShorthand;2
2
  declare class Lodash {2
    // Array2
    chunk<T>(array: ?Array<T>, size?: number): Array<Array<T>>;2
    compact<T, N: ?T>(array: Array<N>): Array<T>;2
    concat<T>(base: Array<T>, ...elements: Array<any>): Array<T | any>;2
    difference<T>(array: ?Array<T>, values?: Array<T>): Array<T>;2
    differenceBy<T>(2
      array: ?Array<T>,2
      values: Array<T>,2
      iteratee: ValueOnlyIteratee<T>2
    ): T[];2
    differenceWith<T>(array: T[], values: T[], comparator?: Comparator<T>): T[];2
    drop<T>(array: ?Array<T>, n?: number): Array<T>;2
    dropRight<T>(array: ?Array<T>, n?: number): Array<T>;2
    dropRightWhile<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    dropWhile<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    fill<T, U>(2
      array: ?Array<T>,2
      value: U,2
      start?: number,2
      end?: number2
    ): Array<T | U>;2
    findIndex<T>(2
      array: ?$ReadOnlyArray<T>,2
      predicate?: Predicate<T>,2
      fromIndex?: number2
    ): number;2
    findLastIndex<T>(2
      array: ?$ReadOnlyArray<T>,2
      predicate?: Predicate<T>,2
      fromIndex?: number2
    ): number;2
    // alias of _.head2
    first<T>(array: ?Array<T>): T;2
    flatten<T, X>(array: Array<Array<T> | X>): Array<T | X>;2
    flattenDeep<T>(array: any[]): Array<T>;2
    flattenDepth(array: any[], depth?: number): any[];2
    fromPairs<A, B>(pairs: Array<[A, B]>): { [key: A]: B };2
    head<T>(array: ?Array<T>): T;2
    indexOf<T>(array: ?Array<T>, value: T, fromIndex?: number): number;2
    initial<T>(array: ?Array<T>): Array<T>;2
    intersection<T>(...arrays: Array<Array<T>>): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    intersectionBy<T>(a1: Array<T>, iteratee?: ValueOnlyIteratee<T>): Array<T>;2
    intersectionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    intersectionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    intersectionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    intersectionWith<T>(a1: Array<T>, comparator: Comparator<T>): Array<T>;2
    intersectionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      comparator: Comparator<T>2
    ): Array<T>;2
    intersectionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      comparator: Comparator<T>2
    ): Array<T>;2
    intersectionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      comparator: Comparator<T>2
    ): Array<T>;2
    join<T>(array: ?Array<T>, separator?: string): string;2
    last<T>(array: ?Array<T>): T;2
    lastIndexOf<T>(array: ?Array<T>, value: T, fromIndex?: number): number;2
    nth<T>(array: T[], n?: number): T;2
    pull<T>(array: ?Array<T>, ...values?: Array<T>): Array<T>;2
    pullAll<T>(array: ?Array<T>, values: Array<T>): Array<T>;2
    pullAllBy<T>(2
      array: ?Array<T>,2
      values: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    pullAllWith<T>(array?: T[], values: T[], comparator?: Function): T[];2
    pullAt<T>(array: ?Array<T>, ...indexed?: Array<number>): Array<T>;2
    pullAt<T>(array: ?Array<T>, indexed?: Array<number>): Array<T>;2
    remove<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    reverse<T>(array: ?Array<T>): Array<T>;2
    slice<T>(array: ?Array<T>, start?: number, end?: number): Array<T>;2
    sortedIndex<T>(array: ?Array<T>, value: T): number;2
    sortedIndexBy<T>(2
      array: ?Array<T>,2
      value: T,2
      iteratee?: ValueOnlyIteratee<T>2
    ): number;2
    sortedIndexOf<T>(array: ?Array<T>, value: T): number;2
    sortedLastIndex<T>(array: ?Array<T>, value: T): number;2
    sortedLastIndexBy<T>(2
      array: ?Array<T>,2
      value: T,2
      iteratee?: ValueOnlyIteratee<T>2
    ): number;2
    sortedLastIndexOf<T>(array: ?Array<T>, value: T): number;2
    sortedUniq<T>(array: ?Array<T>): Array<T>;2
    sortedUniqBy<T>(array: ?Array<T>, iteratee?: (value: T) => mixed): Array<T>;2
    tail<T>(array: ?Array<T>): Array<T>;2
    take<T>(array: ?Array<T>, n?: number): Array<T>;2
    takeRight<T>(array: ?Array<T>, n?: number): Array<T>;2
    takeRightWhile<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    takeWhile<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    union<T>(...arrays?: Array<Array<T>>): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    unionBy<T>(a1: Array<T>, iteratee?: ValueOnlyIteratee<T>): Array<T>;2
    unionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    unionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    unionBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    unionWith<T>(a1: Array<T>, comparator?: Comparator<T>): Array<T>;2
    unionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    unionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    unionWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    uniq<T>(array: ?Array<T>): Array<T>;2
    uniqBy<T>(array: ?Array<T>, iteratee?: ValueOnlyIteratee<T>): Array<T>;2
    uniqWith<T>(array: ?Array<T>, comparator?: Comparator<T>): Array<T>;2
    unzip<T>(array: ?Array<T>): Array<T>;2
    unzipWith<T>(array: ?Array<T>, iteratee?: Iteratee<T>): Array<T>;2
    without<T>(array: ?Array<T>, ...values?: Array<T>): Array<T>;2
    xor<T>(...array: Array<Array<T>>): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    xorBy<T>(a1: Array<T>, iteratee?: ValueOnlyIteratee<T>): Array<T>;2
    xorBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    xorBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    xorBy<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): Array<T>;2
    //Workaround until (...parameter: T, parameter2: U) works2
    xorWith<T>(a1: Array<T>, comparator?: Comparator<T>): Array<T>;2
    xorWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    xorWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    xorWith<T>(2
      a1: Array<T>,2
      a2: Array<T>,2
      a3: Array<T>,2
      a4: Array<T>,2
      comparator?: Comparator<T>2
    ): Array<T>;2
    zip<A, B>(a1: A[], a2: B[]): Array<[A, B]>;2
    zip<A, B, C>(a1: A[], a2: B[], a3: C[]): Array<[A, B, C]>;2
    zip<A, B, C, D>(a1: A[], a2: B[], a3: C[], a4: D[]): Array<[A, B, C, D]>;2
    zip<A, B, C, D, E>(2
      a1: A[],2
      a2: B[],2
      a3: C[],2
      a4: D[],2
      a5: E[]2
    ): Array<[A, B, C, D, E]>;2
2
    zipObject<K, V>(props?: Array<K>, values?: Array<V>): { [key: K]: V };2
    zipObjectDeep(props?: any[], values?: any): Object;2
    //Workaround until (...parameter: T, parameter2: U) works2
    zipWith<T>(a1: NestedArray<T>, iteratee?: Iteratee<T>): Array<T>;2
    zipWith<T>(2
      a1: NestedArray<T>,2
      a2: NestedArray<T>,2
      iteratee?: Iteratee<T>2
    ): Array<T>;2
    zipWith<T>(2
      a1: NestedArray<T>,2
      a2: NestedArray<T>,2
      a3: NestedArray<T>,2
      iteratee?: Iteratee<T>2
    ): Array<T>;2
    zipWith<T>(2
      a1: NestedArray<T>,2
      a2: NestedArray<T>,2
      a3: NestedArray<T>,2
      a4: NestedArray<T>,2
      iteratee?: Iteratee<T>2
    ): Array<T>;2
2
    // Collection2
    countBy<T>(array: ?Array<T>, iteratee?: ValueOnlyIteratee<T>): Object;2
    countBy<T: Object>(object: T, iteratee?: ValueOnlyIteratee<T>): Object;2
    // alias of _.forEach2
    each<T>(array: ?Array<T>, iteratee?: Iteratee<T>): Array<T>;2
    each<T: Object>(object: T, iteratee?: OIteratee<T>): T;2
    // alias of _.forEachRight2
    eachRight<T>(array: ?Array<T>, iteratee?: Iteratee<T>): Array<T>;2
    eachRight<T: Object>(object: T, iteratee?: OIteratee<T>): T;2
    every<T>(array: ?Array<T>, iteratee?: Iteratee<T>): boolean;2
    every<T: Object>(object: T, iteratee?: OIteratee<T>): boolean;2
    filter<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    filter<A, T: { [id: string]: A }>(2
      object: T,2
      predicate?: OPredicate<A, T>2
    ): Array<A>;2
    find<T>(2
      array: ?$ReadOnlyArray<T>,2
      predicate?: Predicate<T>,2
      fromIndex?: number2
    ): T | void;2
    find<V, A, T: { [id: string]: A }>(2
      object: T,2
      predicate?: OPredicate<A, T>,2
      fromIndex?: number2
    ): V;2
    findLast<T>(2
      array: ?$ReadOnlyArray<T>,2
      predicate?: Predicate<T>,2
      fromIndex?: number2
    ): T | void;2
    findLast<V, A, T: { [id: string]: A }>(2
      object: T,2
      predicate?: OPredicate<A, T>2
    ): V;2
    flatMap<T, U>(array: ?Array<T>, iteratee?: FlatMapIteratee<T, U>): Array<U>;2
    flatMap<T: Object, U>(2
      object: T,2
      iteratee?: OFlatMapIteratee<T, U>2
    ): Array<U>;2
    flatMapDeep<T, U>(2
      array: ?Array<T>,2
      iteratee?: FlatMapIteratee<T, U>2
    ): Array<U>;2
    flatMapDeep<T: Object, U>(2
      object: T,2
      iteratee?: OFlatMapIteratee<T, U>2
    ): Array<U>;2
    flatMapDepth<T, U>(2
      array: ?Array<T>,2
      iteratee?: FlatMapIteratee<T, U>,2
      depth?: number2
    ): Array<U>;2
    flatMapDepth<T: Object, U>(2
      object: T,2
      iteratee?: OFlatMapIteratee<T, U>,2
      depth?: number2
    ): Array<U>;2
    forEach<T>(array: ?Array<T>, iteratee?: Iteratee<T>): Array<T>;2
    forEach<T: Object>(object: T, iteratee?: OIteratee<T>): T;2
    forEachRight<T>(array: ?Array<T>, iteratee?: Iteratee<T>): Array<T>;2
    forEachRight<T: Object>(object: T, iteratee?: OIteratee<T>): T;2
    groupBy<V, T>(2
      array: ?Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): { [key: V]: Array<T> };2
    groupBy<V, A, T: { [id: string]: A }>(2
      object: T,2
      iteratee?: ValueOnlyIteratee<A>2
    ): { [key: V]: Array<A> };2
    includes<T>(array: ?Array<T>, value: T, fromIndex?: number): boolean;2
    includes<T: Object>(object: T, value: any, fromIndex?: number): boolean;2
    includes(str: string, value: string, fromIndex?: number): boolean;2
    invokeMap<T>(2
      array: ?Array<T>,2
      path: ((value: T) => Array<string> | string) | Array<string> | string,2
      ...args?: Array<any>2
    ): Array<any>;2
    invokeMap<T: Object>(2
      object: T,2
      path: ((value: any) => Array<string> | string) | Array<string> | string,2
      ...args?: Array<any>2
    ): Array<any>;2
    keyBy<T, V>(2
      array: ?Array<T>,2
      iteratee?: ValueOnlyIteratee<T>2
    ): { [key: V]: ?T };2
    keyBy<V, A, I, T: { [id: I]: A }>(2
      object: T,2
      iteratee?: ValueOnlyIteratee<A>2
    ): { [key: V]: ?A };2
    map<T, U>(array: ?Array<T>, iteratee?: MapIterator<T, U>): Array<U>;2
    map<V, T: Object, U>(2
      object: ?T,2
      iteratee?: OMapIterator<V, T, U>2
    ): Array<U>;2
    map(2
      str: ?string,2
      iteratee?: (char: string, index: number, str: string) => any2
    ): string;2
    orderBy<T>(2
      array: ?Array<T>,2
      iteratees?: Array<Iteratee<T>> | string,2
      orders?: Array<"asc" | "desc"> | string2
    ): Array<T>;2
    orderBy<V, T: Object>(2
      object: T,2
      iteratees?: Array<OIteratee<*>> | string,2
      orders?: Array<"asc" | "desc"> | string2
    ): Array<V>;2
    partition<T>(2
      array: ?Array<T>,2
      predicate?: Predicate<T>2
    ): [Array<T>, Array<T>];2
    partition<V, A, T: { [id: string]: A }>(2
      object: T,2
      predicate?: OPredicate<A, T>2
    ): [Array<V>, Array<V>];2
    reduce<T, U>(2
      array: ?Array<T>,2
      iteratee?: (2
        accumulator: U,2
        value: T,2
        index: number,2
        array: ?Array<T>2
      ) => U,2
      accumulator?: U2
    ): U;2
    reduce<T: Object, U>(2
      object: T,2
      iteratee?: (accumulator: U, value: any, key: string, object: T) => U,2
      accumulator?: U2
    ): U;2
    reduceRight<T, U>(2
      array: ?Array<T>,2
      iteratee?: (2
        accumulator: U,2
        value: T,2
        index: number,2
        array: ?Array<T>2
      ) => U,2
      accumulator?: U2
    ): U;2
    reduceRight<T: Object, U>(2
      object: T,2
      iteratee?: (accumulator: U, value: any, key: string, object: T) => U,2
      accumulator?: U2
    ): U;2
    reject<T>(array: ?Array<T>, predicate?: Predicate<T>): Array<T>;2
    reject<V: Object, A, T: { [id: string]: A }>(2
      object: T,2
      predicate?: OPredicate<A, T>2
    ): Array<V>;2
    sample<T>(array: ?Array<T>): T;2
    sample<V, T: Object>(object: T): V;2
    sampleSize<T>(array: ?Array<T>, n?: number): Array<T>;2
    sampleSize<V, T: Object>(object: T, n?: number): Array<V>;2
    shuffle<T>(array: ?Array<T>): Array<T>;2
    shuffle<V, T: Object>(object: T): Array<V>;2
    size(collection: Array<any> | Object): number;2
    some<T>(array: ?Array<T>, predicate?: Predicate<T>): boolean;2
    some<A, T: { [id: string]: A }>(2
      object?: ?T,2
      predicate?: OPredicate<A, T>2
    ): boolean;2
    sortBy<T>(array: ?Array<T>, ...iteratees?: Array<Iteratee<T>>): Array<T>;2
    sortBy<T>(array: ?Array<T>, iteratees?: Array<Iteratee<T>>): Array<T>;2
    sortBy<V, T: Object>(2
      object: T,2
      ...iteratees?: Array<OIteratee<T>>2
    ): Array<V>;2
    sortBy<V, T: Object>(object: T, iteratees?: Array<OIteratee<T>>): Array<V>;2
2
    // Date2
    now(): number;2
2
    // Function2
    after(n: number, fn: Function): Function;2
    ary(func: Function, n?: number): Function;2
    before(n: number, fn: Function): Function;2
    bind(func: Function, thisArg: any, ...partials: Array<any>): Function;2
    bindKey(obj: Object, key: string, ...partials: Array<any>): Function;2
    curry: Curry;2
    curry(func: Function, arity?: number): Function;2
    curryRight(func: Function, arity?: number): Function;2
    debounce<F: Function>(func: F, wait?: number, options?: DebounceOptions): F;2
    defer(func: Function, ...args?: Array<any>): number;2
    delay(func: Function, wait: number, ...args?: Array<any>): number;2
    flip(func: Function): Function;2
    memoize<F: Function>(func: F, resolver?: Function): F;2
    negate(predicate: Function): Function;2
    once(func: Function): Function;2
    overArgs(func: Function, ...transforms: Array<Function>): Function;2
    overArgs(func: Function, transforms: Array<Function>): Function;2
    partial(func: Function, ...partials: any[]): Function;2
    partialRight(func: Function, ...partials: Array<any>): Function;2
    partialRight(func: Function, partials: Array<any>): Function;2
    rearg(func: Function, ...indexes: Array<number>): Function;2
    rearg(func: Function, indexes: Array<number>): Function;2
    rest(func: Function, start?: number): Function;2
    spread(func: Function): Function;2
    throttle(2
      func: Function,2
      wait?: number,2
      options?: ThrottleOptions2
    ): Function;2
    unary(func: Function): Function;2
    wrap(value: any, wrapper: Function): Function;2
2
    // Lang2
    castArray(value: *): any[];2
    clone<T>(value: T): T;2
    cloneDeep<T>(value: T): T;2
    cloneDeepWith<T, U>(2
      value: T,2
      customizer?: ?(value: T, key: number | string, object: T, stack: any) => U2
    ): U;2
    cloneWith<T, U>(2
      value: T,2
      customizer?: ?(value: T, key: number | string, object: T, stack: any) => U2
    ): U;2
    conformsTo<T: { [key: string]: mixed }>(2
      source: T,2
      predicates: T & { [key: string]: (x: any) => boolean }2
    ): boolean;2
    eq(value: any, other: any): boolean;2
    gt(value: any, other: any): boolean;2
    gte(value: any, other: any): boolean;2
    isArguments(value: any): boolean;2
    isArray(value: any): boolean;2
    isArrayBuffer(value: any): boolean;2
    isArrayLike(value: any): boolean;2
    isArrayLikeObject(value: any): boolean;2
    isBoolean(value: any): boolean;2
    isBuffer(value: any): boolean;2
    isDate(value: any): boolean;2
    isElement(value: any): boolean;2
    isEmpty(value: any): boolean;2
    isEqual(value: any, other: any): boolean;2
    isEqualWith<T, U>(2
      value: T,2
      other: U,2
      customizer?: (2
        objValue: any,2
        otherValue: any,2
        key: number | string,2
        object: T,2
        other: U,2
        stack: any2
      ) => boolean | void2
    ): boolean;2
    isError(value: any): boolean;2
    isFinite(value: any): boolean;2
    isFunction(value: Function): true;2
    isFunction(value: number | string | void | null | Object): false;2
    isInteger(value: any): boolean;2
    isLength(value: any): boolean;2
    isMap(value: any): boolean;2
    isMatch(object?: ?Object, source: Object): boolean;2
    isMatchWith<T: Object, U: Object>(2
      object: T,2
      source: U,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: number | string,2
        object: T,2
        source: U2
      ) => boolean | void2
    ): boolean;2
    isNaN(value: any): boolean;2
    isNative(value: any): boolean;2
    isNil(value: any): boolean;2
    isNull(value: any): boolean;2
    isNumber(value: any): boolean;2
    isObject(value: any): boolean;2
    isObjectLike(value: any): boolean;2
    isPlainObject(value: any): boolean;2
    isRegExp(value: any): boolean;2
    isSafeInteger(value: any): boolean;2
    isSet(value: any): boolean;2
    isString(value: string): true;2
    isString(2
      value: number | boolean | Function | void | null | Object | Array<any>2
    ): false;2
    isSymbol(value: any): boolean;2
    isTypedArray(value: any): boolean;2
    isUndefined(value: any): boolean;2
    isWeakMap(value: any): boolean;2
    isWeakSet(value: any): boolean;2
    lt(value: any, other: any): boolean;2
    lte(value: any, other: any): boolean;2
    toArray(value: any): Array<any>;2
    toFinite(value: any): number;2
    toInteger(value: any): number;2
    toLength(value: any): number;2
    toNumber(value: any): number;2
    toPlainObject(value: any): Object;2
    toSafeInteger(value: any): number;2
    toString(value: any): string;2
2
    // Math2
    add(augend: number, addend: number): number;2
    ceil(number: number, precision?: number): number;2
    divide(dividend: number, divisor: number): number;2
    floor(number: number, precision?: number): number;2
    max<T>(array: ?Array<T>): T;2
    maxBy<T>(array: ?Array<T>, iteratee?: Iteratee<T>): T;2
    mean(array: Array<*>): number;2
    meanBy<T>(array: Array<T>, iteratee?: Iteratee<T>): number;2
    min<T>(array: ?Array<T>): T;2
    minBy<T>(array: ?Array<T>, iteratee?: Iteratee<T>): T;2
    multiply(multiplier: number, multiplicand: number): number;2
    round(number: number, precision?: number): number;2
    subtract(minuend: number, subtrahend: number): number;2
    sum(array: Array<*>): number;2
    sumBy<T>(array: Array<T>, iteratee?: Iteratee<T>): number;2
2
    // number2
    clamp(number: number, lower?: number, upper: number): number;2
    inRange(number: number, start?: number, end: number): boolean;2
    random(lower?: number, upper?: number, floating?: boolean): number;2
2
    // Object2
    assign(object?: ?Object, ...sources?: Array<Object>): Object;2
    assignIn<A, B>(a: A, b: B): A & B;2
    assignIn<A, B, C>(a: A, b: B, c: C): A & B & C;2
    assignIn<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;2
    assignIn<A, B, C, D, E>(a: A, b: B, c: C, d: D, e: E): A & B & C & D & E;2
    assignInWith<T: Object, A: Object>(2
      object: T,2
      s1: A,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): Object;2
    assignInWith<T: Object, A: Object, B: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void2
    ): Object;2
    assignInWith<T: Object, A: Object, B: Object, C: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C2
      ) => any | void2
    ): Object;2
    assignInWith<T: Object, A: Object, B: Object, C: Object, D: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      s4: D,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C | D2
      ) => any | void2
    ): Object;2
    assignWith<T: Object, A: Object>(2
      object: T,2
      s1: A,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): Object;2
    assignWith<T: Object, A: Object, B: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void2
    ): Object;2
    assignWith<T: Object, A: Object, B: Object, C: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C2
      ) => any | void2
    ): Object;2
    assignWith<T: Object, A: Object, B: Object, C: Object, D: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      s4: D,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C | D2
      ) => any | void2
    ): Object;2
    at(object?: ?Object, ...paths: Array<string>): Array<any>;2
    at(object?: ?Object, paths: Array<string>): Array<any>;2
    create<T>(prototype: T, properties?: Object): $Supertype<T>;2
    defaults(object?: ?Object, ...sources?: Array<Object>): Object;2
    defaultsDeep(object?: ?Object, ...sources?: Array<Object>): Object;2
    // alias for _.toPairs2
    entries(object?: ?Object): Array<[string, any]>;2
    // alias for _.toPairsIn2
    entriesIn(object?: ?Object): Array<[string, any]>;2
    // alias for _.assignIn2
    extend<A, B>(a: A, b: B): A & B;2
    extend<A, B, C>(a: A, b: B, c: C): A & B & C;2
    extend<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;2
    extend<A, B, C, D, E>(a: A, b: B, c: C, d: D, e: E): A & B & C & D & E;2
    // alias for _.assignInWith2
    extendWith<T: Object, A: Object>(2
      object: T,2
      s1: A,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): Object;2
    extendWith<T: Object, A: Object, B: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void2
    ): Object;2
    extendWith<T: Object, A: Object, B: Object, C: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C2
      ) => any | void2
    ): Object;2
    extendWith<T: Object, A: Object, B: Object, C: Object, D: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      s4: D,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C | D2
      ) => any | void2
    ): Object;2
    findKey<A, T: { [id: string]: A }>(2
      object?: ?T,2
      predicate?: OPredicate<A, T>2
    ): string | void;2
    findLastKey<A, T: { [id: string]: A }>(2
      object?: ?T,2
      predicate?: OPredicate<A, T>2
    ): string | void;2
    forIn(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    forInRight(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    forOwn(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    forOwnRight(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    functions(object?: ?Object): Array<string>;2
    functionsIn(object?: ?Object): Array<string>;2
    get(2
      object?: ?Object | ?Array<any>,2
      path?: ?Array<string> | string,2
      defaultValue?: any2
    ): any;2
    has(object?: ?Object, path?: ?Array<string> | string): boolean;2
    hasIn(object?: ?Object, path?: ?Array<string> | string): boolean;2
    invert(object?: ?Object, multiVal?: boolean): Object;2
    invertBy(object: ?Object, iteratee?: Function): Object;2
    invoke(2
      object?: ?Object,2
      path?: ?Array<string> | string,2
      ...args?: Array<any>2
    ): any;2
    keys<K>(object?: ?{ [key: K]: any }): Array<K>;2
    keys(object?: ?Object): Array<string>;2
    keysIn(object?: ?Object): Array<string>;2
    mapKeys(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    mapValues(object?: ?Object, iteratee?: OIteratee<*>): Object;2
    merge(object?: ?Object, ...sources?: Array<?Object>): Object;2
    mergeWith<T: Object, A: Object>(2
      object: T,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): Object;2
    mergeWith<T: Object, A: Object, B: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void2
    ): Object;2
    mergeWith<T: Object, A: Object, B: Object, C: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C2
      ) => any | void2
    ): Object;2
    mergeWith<T: Object, A: Object, B: Object, C: Object, D: Object>(2
      object: T,2
      s1: A,2
      s2: B,2
      s3: C,2
      s4: D,2
      customizer?: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B | C | D2
      ) => any | void2
    ): Object;2
    omit(object?: ?Object, ...props: Array<string>): Object;2
    omit(object?: ?Object, props: Array<string>): Object;2
    omitBy<A, T: { [id: string]: A }>(2
      object?: ?T,2
      predicate?: OPredicate<A, T>2
    ): Object;2
    pick(object?: ?Object, ...props: Array<string>): Object;2
    pick(object?: ?Object, props: Array<string>): Object;2
    pickBy<A, T: { [id: string]: A }>(2
      object?: ?T,2
      predicate?: OPredicate<A, T>2
    ): Object;2
    result(2
      object?: ?Object,2
      path?: ?Array<string> | string,2
      defaultValue?: any2
    ): any;2
    set(object?: ?Object, path?: ?Array<string> | string, value: any): Object;2
    setWith<T>(2
      object: T,2
      path?: ?Array<string> | string,2
      value: any,2
      customizer?: (nsValue: any, key: string, nsObject: T) => any2
    ): Object;2
    toPairs(object?: ?Object | Array<*>): Array<[string, any]>;2
    toPairsIn(object?: ?Object): Array<[string, any]>;2
    transform(2
      collection: Object | Array<any>,2
      iteratee?: OIteratee<*>,2
      accumulator?: any2
    ): any;2
    unset(object?: ?Object, path?: ?Array<string> | string): boolean;2
    update(object: Object, path: string[] | string, updater: Function): Object;2
    updateWith(2
      object: Object,2
      path: string[] | string,2
      updater: Function,2
      customizer?: Function2
    ): Object;2
    values(object?: ?Object): Array<any>;2
    valuesIn(object?: ?Object): Array<any>;2
2
    // Seq2
    // harder to read, but this is _()2
    (value: any): any;2
    chain<T>(value: T): any;2
    tap<T>(value: T, interceptor: (value: T) => any): T;2
    thru<T1, T2>(value: T1, interceptor: (value: T1) => T2): T2;2
    // TODO: _.prototype.*2
2
    // String2
    camelCase(string?: ?string): string;2
    capitalize(string?: string): string;2
    deburr(string?: string): string;2
    endsWith(string?: string, target?: string, position?: number): boolean;2
    escape(string?: string): string;2
    escapeRegExp(string?: string): string;2
    kebabCase(string?: string): string;2
    lowerCase(string?: string): string;2
    lowerFirst(string?: string): string;2
    pad(string?: string, length?: number, chars?: string): string;2
    padEnd(string?: string, length?: number, chars?: string): string;2
    padStart(string?: string, length?: number, chars?: string): string;2
    parseInt(string: string, radix?: number): number;2
    repeat(string?: string, n?: number): string;2
    replace(2
      string?: string,2
      pattern: RegExp | string,2
      replacement: ((string: string) => string) | string2
    ): string;2
    snakeCase(string?: string): string;2
    split(2
      string?: string,2
      separator: RegExp | string,2
      limit?: number2
    ): Array<string>;2
    startCase(string?: string): string;2
    startsWith(string?: string, target?: string, position?: number): boolean;2
    template(string?: string, options?: TemplateSettings): Function;2
    toLower(string?: string): string;2
    toUpper(string?: string): string;2
    trim(string?: string, chars?: string): string;2
    trimEnd(string?: string, chars?: string): string;2
    trimStart(string?: string, chars?: string): string;2
    truncate(string?: string, options?: TruncateOptions): string;2
    unescape(string?: string): string;2
    upperCase(string?: string): string;2
    upperFirst(string?: string): string;2
    words(string?: string, pattern?: RegExp | string): Array<string>;2
2
    // Util2
    attempt(func: Function, ...args: Array<any>): any;2
    bindAll(object?: ?Object, methodNames: Array<string>): Object;2
    bindAll(object?: ?Object, ...methodNames: Array<string>): Object;2
    cond(pairs: NestedArray<Function>): Function;2
    conforms(source: Object): Function;2
    constant<T>(value: T): () => T;2
    defaultTo<T1: string | boolean | Object, T2>(2
      value: T1,2
      defaultValue: T22
    ): T1;2
    // NaN is a number instead of its own type, otherwise it would behave like null/void2
    defaultTo<T1: number, T2>(value: T1, defaultValue: T2): T1 | T2;2
    defaultTo<T1: void | null, T2>(value: T1, defaultValue: T2): T2;2
    flow: $ComposeReverse;2
    flow(funcs?: Array<Function>): Function;2
    flowRight: $Compose;2
    flowRight(funcs?: Array<Function>): Function;2
    identity<T>(value: T): T;2
    iteratee(func?: any): Function;2
    matches(source: Object): Function;2
    matchesProperty(path?: ?Array<string> | string, srcValue: any): Function;2
    method(path?: ?Array<string> | string, ...args?: Array<any>): Function;2
    methodOf(object?: ?Object, ...args?: Array<any>): Function;2
    mixin<T: Function | Object>(2
      object?: T,2
      source: Object,2
      options?: { chain: boolean }2
    ): T;2
    noConflict(): Lodash;2
    noop(...args: Array<mixed>): void;2
    nthArg(n?: number): Function;2
    over(...iteratees: Array<Function>): Function;2
    over(iteratees: Array<Function>): Function;2
    overEvery(...predicates: Array<Function>): Function;2
    overEvery(predicates: Array<Function>): Function;2
    overSome(...predicates: Array<Function>): Function;2
    overSome(predicates: Array<Function>): Function;2
    property(path?: ?Array<string> | string): Function;2
    propertyOf(object?: ?Object): Function;2
    range(start: number, end: number, step?: number): Array<number>;2
    range(end: number, step?: number): Array<number>;2
    rangeRight(start: number, end: number, step?: number): Array<number>;2
    rangeRight(end: number, step?: number): Array<number>;2
    runInContext(context?: Object): Function;2
2
    stubArray(): Array<*>;2
    stubFalse(): false;2
    stubObject(): {};2
    stubString(): "";2
    stubTrue(): true;2
    times(n: number, ...rest: Array<void>): Array<number>;2
    times<T>(n: number, iteratee: (i: number) => T): Array<T>;2
    toPath(value: any): Array<string>;2
    uniqueId(prefix?: string): string;2
2
    // Properties2
    VERSION: string;2
    templateSettings: TemplateSettings;2
  }2
2
  declare module.exports: Lodash;2
}2
2
declare module "lodash/fp" {2
  declare type __CurriedFunction1<A, R, AA: A> = (...r: [AA]) => R;2
  declare type CurriedFunction1<A, R> = __CurriedFunction1<A, R, *>;2
2
  declare type __CurriedFunction2<A, B, R, AA: A, BB: B> = ((2
    ...r: [AA]2
  ) => CurriedFunction1<BB, R>) &2
    ((...r: [AA, BB]) => R);2
  declare type CurriedFunction2<A, B, R> = __CurriedFunction2<A, B, R, *, *>;2
2
  declare type __CurriedFunction3<A, B, C, R, AA: A, BB: B, CC: C> = ((2
    ...r: [AA]2
  ) => CurriedFunction2<BB, CC, R>) &2
    ((...r: [AA, BB]) => CurriedFunction1<CC, R>) &2
    ((...r: [AA, BB, CC]) => R);2
  declare type CurriedFunction3<A, B, C, R> = __CurriedFunction3<2
    A,2
    B,2
    C,2
    R,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction4<2
    A,2
    B,2
    C,2
    D,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D2
  > = ((...r: [AA]) => CurriedFunction3<BB, CC, DD, R>) &2
    ((...r: [AA, BB]) => CurriedFunction2<CC, DD, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction1<DD, R>) &2
    ((...r: [AA, BB, CC, DD]) => R);2
  declare type CurriedFunction4<A, B, C, D, R> = __CurriedFunction4<2
    A,2
    B,2
    C,2
    D,2
    R,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction5<2
    A,2
    B,2
    C,2
    D,2
    E,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D,2
    EE: E2
  > = ((...r: [AA]) => CurriedFunction4<BB, CC, DD, EE, R>) &2
    ((...r: [AA, BB]) => CurriedFunction3<CC, DD, EE, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction2<DD, EE, R>) &2
    ((...r: [AA, BB, CC, DD]) => CurriedFunction1<EE, R>) &2
    ((...r: [AA, BB, CC, DD, EE]) => R);2
  declare type CurriedFunction5<A, B, C, D, E, R> = __CurriedFunction5<2
    A,2
    B,2
    C,2
    D,2
    E,2
    R,2
    *,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type __CurriedFunction6<2
    A,2
    B,2
    C,2
    D,2
    E,2
    F,2
    R,2
    AA: A,2
    BB: B,2
    CC: C,2
    DD: D,2
    EE: E,2
    FF: F2
  > = ((...r: [AA]) => CurriedFunction5<BB, CC, DD, EE, FF, R>) &2
    ((...r: [AA, BB]) => CurriedFunction4<CC, DD, EE, FF, R>) &2
    ((...r: [AA, BB, CC]) => CurriedFunction3<DD, EE, FF, R>) &2
    ((...r: [AA, BB, CC, DD]) => CurriedFunction2<EE, FF, R>) &2
    ((...r: [AA, BB, CC, DD, EE]) => CurriedFunction1<FF, R>) &2
    ((...r: [AA, BB, CC, DD, EE, FF]) => R);2
  declare type CurriedFunction6<A, B, C, D, E, F, R> = __CurriedFunction6<2
    A,2
    B,2
    C,2
    D,2
    E,2
    F,2
    R,2
    *,2
    *,2
    *,2
    *,2
    *,2
    *2
  >;2
2
  declare type Curry = (<A, R>((...r: [A]) => R) => CurriedFunction1<A, R>) &2
    (<A, B, R>((...r: [A, B]) => R) => CurriedFunction2<A, B, R>) &2
    (<A, B, C, R>((...r: [A, B, C]) => R) => CurriedFunction3<A, B, C, R>) &2
    (<A, B, C, D, R>(2
      (...r: [A, B, C, D]) => R2
    ) => CurriedFunction4<A, B, C, D, R>) &2
    (<A, B, C, D, E, R>(2
      (...r: [A, B, C, D, E]) => R2
    ) => CurriedFunction5<A, B, C, D, E, R>) &2
    (<A, B, C, D, E, F, R>(2
      (...r: [A, B, C, D, E, F]) => R2
    ) => CurriedFunction6<A, B, C, D, E, F, R>);2
2
  declare type UnaryFn<A, R> = (a: A) => R;2
2
  declare type TemplateSettings = {2
    escape?: RegExp,2
    evaluate?: RegExp,2
    imports?: Object,2
    interpolate?: RegExp,2
    variable?: string2
  };2
2
  declare type TruncateOptions = {2
    length?: number,2
    omission?: string,2
    separator?: RegExp | string2
  };2
2
  declare type DebounceOptions = {2
    leading?: boolean,2
    maxWait?: number,2
    trailing?: boolean2
  };2
2
  declare type ThrottleOptions = {2
    leading?: boolean,2
    trailing?: boolean2
  };2
2
  declare type NestedArray<T> = Array<Array<T>>;2
2
  declare type matchesIterateeShorthand = Object;2
  declare type matchesPropertyIterateeShorthand = [string, any];2
  declare type propertyIterateeShorthand = string;2
2
  declare type OPredicate<A> =2
    | ((value: A) => any)2
    | matchesIterateeShorthand2
    | matchesPropertyIterateeShorthand2
    | propertyIterateeShorthand;2
2
  declare type OIterateeWithResult<V, R> = Object | string | ((value: V) => R);2
  declare type OIteratee<O> = OIterateeWithResult<any, any>;2
  declare type OFlatMapIteratee<T, U> = OIterateeWithResult<any, Array<U>>;2
2
  declare type Predicate<T> =2
    | ((value: T) => any)2
    | matchesIterateeShorthand2
    | matchesPropertyIterateeShorthand2
    | propertyIterateeShorthand;2
2
  declare type _ValueOnlyIteratee<T> = (value: T) => mixed;2
  declare type ValueOnlyIteratee<T> = _ValueOnlyIteratee<T> | string;2
  declare type _Iteratee<T> = (item: T) => mixed;2
  declare type Iteratee<T> = _Iteratee<T> | Object | string;2
  declare type FlatMapIteratee<T, U> =2
    | ((item: T) => Array<U>)2
    | Object2
    | string;2
  declare type Comparator<T> = (item: T, item2: T) => boolean;2
2
  declare type MapIterator<T, U> = ((item: T) => U) | propertyIterateeShorthand;2
2
  declare type OMapIterator<T, U> =2
    | ((item: T) => U)2
    | propertyIterateeShorthand;2
2
  declare class Lodash {2
    // Array2
    chunk<T>(size: number): (array: Array<T>) => Array<Array<T>>;2
    chunk<T>(size: number, array: Array<T>): Array<Array<T>>;2
    compact<T, N: T>(array: Array<N>): Array<T>;2
    concat<T, U, A: Array<T> | T, B: Array<U> | U>(2
      base: A2
    ): (elements: B) => Array<T | U>;2
    concat<T, U, A: Array<T> | T, B: Array<U> | U>(2
      base: A,2
      elements: B2
    ): Array<T | U>;2
    difference<T>(values: Array<T>): (array: Array<T>) => Array<T>;2
    difference<T>(values: Array<T>, array: Array<T>): Array<T>;2
    differenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((values: Array<T>) => (array: Array<T>) => T[]) &2
      ((values: Array<T>, array: Array<T>) => T[]);2
    differenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      values: Array<T>2
    ): (array: Array<T>) => T[];2
    differenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      values: Array<T>,2
      array: Array<T>2
    ): T[];2
    differenceWith<T>(2
      values: T[]2
    ): ((comparator: Comparator<T>) => (array: T[]) => T[]) &2
      ((comparator: Comparator<T>, array: T[]) => T[]);2
    differenceWith<T>(2
      values: T[],2
      comparator: Comparator<T>2
    ): (array: T[]) => T[];2
    differenceWith<T>(values: T[], comparator: Comparator<T>, array: T[]): T[];2
    drop<T>(n: number): (array: Array<T>) => Array<T>;2
    drop<T>(n: number, array: Array<T>): Array<T>;2
    dropLast<T>(n: number): (array: Array<T>) => Array<T>;2
    dropLast<T>(n: number, array: Array<T>): Array<T>;2
    dropRight<T>(n: number): (array: Array<T>) => Array<T>;2
    dropRight<T>(n: number, array: Array<T>): Array<T>;2
    dropRightWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    dropRightWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    dropWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    dropWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    dropLastWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    dropLastWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    fill<T, U>(2
      start: number2
    ): ((2
      end: number2
    ) => ((value: U) => (array: Array<T>) => Array<T | U>) &2
      ((value: U, array: Array<T>) => Array<T | U>)) &2
      ((end: number, value: U) => (array: Array<T>) => Array<T | U>) &2
      ((end: number, value: U, array: Array<T>) => Array<T | U>);2
    fill<T, U>(2
      start: number,2
      end: number2
    ): ((value: U) => (array: Array<T>) => Array<T | U>) &2
      ((value: U, array: Array<T>) => Array<T | U>);2
    fill<T, U>(2
      start: number,2
      end: number,2
      value: U2
    ): (array: Array<T>) => Array<T | U>;2
    fill<T, U>(2
      start: number,2
      end: number,2
      value: U,2
      array: Array<T>2
    ): Array<T | U>;2
    findIndex<T>(predicate: Predicate<T>): (array: $ReadOnlyArray<T>) => number;2
    findIndex<T>(predicate: Predicate<T>, array: $ReadOnlyArray<T>): number;2
    findIndexFrom<T>(2
      predicate: Predicate<T>2
    ): ((fromIndex: number) => (array: $ReadOnlyArray<T>) => number) &2
      ((fromIndex: number, array: $ReadOnlyArray<T>) => number);2
    findIndexFrom<T>(2
      predicate: Predicate<T>,2
      fromIndex: number2
    ): (array: $ReadOnlyArray<T>) => number;2
    findIndexFrom<T>(2
      predicate: Predicate<T>,2
      fromIndex: number,2
      array: $ReadOnlyArray<T>2
    ): number;2
    findLastIndex<T>(2
      predicate: Predicate<T>2
    ): (array: $ReadOnlyArray<T>) => number;2
    findLastIndex<T>(predicate: Predicate<T>, array: $ReadOnlyArray<T>): number;2
    findLastIndexFrom<T>(2
      predicate: Predicate<T>2
    ): ((fromIndex: number) => (array: $ReadOnlyArray<T>) => number) &2
      ((fromIndex: number, array: $ReadOnlyArray<T>) => number);2
    findLastIndexFrom<T>(2
      predicate: Predicate<T>,2
      fromIndex: number2
    ): (array: $ReadOnlyArray<T>) => number;2
    findLastIndexFrom<T>(2
      predicate: Predicate<T>,2
      fromIndex: number,2
      array: $ReadOnlyArray<T>2
    ): number;2
    // alias of _.head2
    first<T>(array: Array<T>): T;2
    flatten<T, X>(array: Array<Array<T> | X>): Array<T | X>;2
    unnest<T, X>(array: Array<Array<T> | X>): Array<T | X>;2
    flattenDeep<T>(array: any[]): Array<T>;2
    flattenDepth(depth: number): (array: any[]) => any[];2
    flattenDepth(depth: number, array: any[]): any[];2
    fromPairs<A, B>(pairs: Array<[A, B]>): { [key: A]: B };2
    head<T>(array: Array<T>): T;2
    indexOf<T>(value: T): (array: Array<T>) => number;2
    indexOf<T>(value: T, array: Array<T>): number;2
    indexOfFrom<T>(2
      value: T2
    ): ((fromIndex: number) => (array: Array<T>) => number) &2
      ((fromIndex: number, array: Array<T>) => number);2
    indexOfFrom<T>(value: T, fromIndex: number): (array: Array<T>) => number;2
    indexOfFrom<T>(value: T, fromIndex: number, array: Array<T>): number;2
    initial<T>(array: Array<T>): Array<T>;2
    init<T>(array: Array<T>): Array<T>;2
    intersection<T>(a1: Array<T>): (a2: Array<T>) => Array<T>;2
    intersection<T>(a1: Array<T>, a2: Array<T>): Array<T>;2
    intersectionBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    intersectionBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    intersectionBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    intersectionWith<T>(2
      comparator: Comparator<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    intersectionWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    intersectionWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    join<T>(separator: string): (array: Array<T>) => string;2
    join<T>(separator: string, array: Array<T>): string;2
    last<T>(array: Array<T>): T;2
    lastIndexOf<T>(value: T): (array: Array<T>) => number;2
    lastIndexOf<T>(value: T, array: Array<T>): number;2
    lastIndexOfFrom<T>(2
      value: T2
    ): ((fromIndex: number) => (array: Array<T>) => number) &2
      ((fromIndex: number, array: Array<T>) => number);2
    lastIndexOfFrom<T>(2
      value: T,2
      fromIndex: number2
    ): (array: Array<T>) => number;2
    lastIndexOfFrom<T>(value: T, fromIndex: number, array: Array<T>): number;2
    nth<T>(n: number): (array: T[]) => T;2
    nth<T>(n: number, array: T[]): T;2
    pull<T>(value: T): (array: Array<T>) => Array<T>;2
    pull<T>(value: T, array: Array<T>): Array<T>;2
    pullAll<T>(values: Array<T>): (array: Array<T>) => Array<T>;2
    pullAll<T>(values: Array<T>, array: Array<T>): Array<T>;2
    pullAllBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((values: Array<T>) => (array: Array<T>) => Array<T>) &2
      ((values: Array<T>, array: Array<T>) => Array<T>);2
    pullAllBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      values: Array<T>2
    ): (array: Array<T>) => Array<T>;2
    pullAllBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      values: Array<T>,2
      array: Array<T>2
    ): Array<T>;2
    pullAllWith<T>(2
      comparator: Function2
    ): ((values: T[]) => (array: T[]) => T[]) &2
      ((values: T[], array: T[]) => T[]);2
    pullAllWith<T>(comparator: Function, values: T[]): (array: T[]) => T[];2
    pullAllWith<T>(comparator: Function, values: T[], array: T[]): T[];2
    pullAt<T>(indexed: Array<number>): (array: Array<T>) => Array<T>;2
    pullAt<T>(indexed: Array<number>, array: Array<T>): Array<T>;2
    remove<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    remove<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    reverse<T>(array: Array<T>): Array<T>;2
    slice<T>(2
      start: number2
    ): ((end: number) => (array: Array<T>) => Array<T>) &2
      ((end: number, array: Array<T>) => Array<T>);2
    slice<T>(start: number, end: number): (array: Array<T>) => Array<T>;2
    slice<T>(start: number, end: number, array: Array<T>): Array<T>;2
    sortedIndex<T>(value: T): (array: Array<T>) => number;2
    sortedIndex<T>(value: T, array: Array<T>): number;2
    sortedIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((value: T) => (array: Array<T>) => number) &2
      ((value: T, array: Array<T>) => number);2
    sortedIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      value: T2
    ): (array: Array<T>) => number;2
    sortedIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      value: T,2
      array: Array<T>2
    ): number;2
    sortedIndexOf<T>(value: T): (array: Array<T>) => number;2
    sortedIndexOf<T>(value: T, array: Array<T>): number;2
    sortedLastIndex<T>(value: T): (array: Array<T>) => number;2
    sortedLastIndex<T>(value: T, array: Array<T>): number;2
    sortedLastIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((value: T) => (array: Array<T>) => number) &2
      ((value: T, array: Array<T>) => number);2
    sortedLastIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      value: T2
    ): (array: Array<T>) => number;2
    sortedLastIndexBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      value: T,2
      array: Array<T>2
    ): number;2
    sortedLastIndexOf<T>(value: T): (array: Array<T>) => number;2
    sortedLastIndexOf<T>(value: T, array: Array<T>): number;2
    sortedUniq<T>(array: Array<T>): Array<T>;2
    sortedUniqBy<T>(2
      iteratee: (value: T) => mixed2
    ): (array: Array<T>) => Array<T>;2
    sortedUniqBy<T>(iteratee: (value: T) => mixed, array: Array<T>): Array<T>;2
    tail<T>(array: Array<T>): Array<T>;2
    take<T>(n: number): (array: Array<T>) => Array<T>;2
    take<T>(n: number, array: Array<T>): Array<T>;2
    takeRight<T>(n: number): (array: Array<T>) => Array<T>;2
    takeRight<T>(n: number, array: Array<T>): Array<T>;2
    takeLast<T>(n: number): (array: Array<T>) => Array<T>;2
    takeLast<T>(n: number, array: Array<T>): Array<T>;2
    takeRightWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    takeRightWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    takeLastWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    takeLastWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    takeWhile<T>(predicate: Predicate<T>): (array: Array<T>) => Array<T>;2
    takeWhile<T>(predicate: Predicate<T>, array: Array<T>): Array<T>;2
    union<T>(a1: Array<T>): (a2: Array<T>) => Array<T>;2
    union<T>(a1: Array<T>, a2: Array<T>): Array<T>;2
    unionBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    unionBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    unionBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    unionWith<T>(2
      comparator: Comparator<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    unionWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    unionWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    uniq<T>(array: Array<T>): Array<T>;2
    uniqBy<T>(iteratee: ValueOnlyIteratee<T>): (array: Array<T>) => Array<T>;2
    uniqBy<T>(iteratee: ValueOnlyIteratee<T>, array: Array<T>): Array<T>;2
    uniqWith<T>(comparator: Comparator<T>): (array: Array<T>) => Array<T>;2
    uniqWith<T>(comparator: Comparator<T>, array: Array<T>): Array<T>;2
    unzip<T>(array: Array<T>): Array<T>;2
    unzipWith<T>(iteratee: Iteratee<T>): (array: Array<T>) => Array<T>;2
    unzipWith<T>(iteratee: Iteratee<T>, array: Array<T>): Array<T>;2
    without<T>(values: Array<T>): (array: Array<T>) => Array<T>;2
    without<T>(values: Array<T>, array: Array<T>): Array<T>;2
    xor<T>(a1: Array<T>): (a2: Array<T>) => Array<T>;2
    xor<T>(a1: Array<T>, a2: Array<T>): Array<T>;2
    symmetricDifference<T>(a1: Array<T>): (a2: Array<T>) => Array<T>;2
    symmetricDifference<T>(a1: Array<T>, a2: Array<T>): Array<T>;2
    xorBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    xorBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    xorBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    symmetricDifferenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    symmetricDifferenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    symmetricDifferenceBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    xorWith<T>(2
      comparator: Comparator<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    xorWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    xorWith<T>(comparator: Comparator<T>, a1: Array<T>, a2: Array<T>): Array<T>;2
    symmetricDifferenceWith<T>(2
      comparator: Comparator<T>2
    ): ((a1: Array<T>) => (a2: Array<T>) => Array<T>) &2
      ((a1: Array<T>, a2: Array<T>) => Array<T>);2
    symmetricDifferenceWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>2
    ): (a2: Array<T>) => Array<T>;2
    symmetricDifferenceWith<T>(2
      comparator: Comparator<T>,2
      a1: Array<T>,2
      a2: Array<T>2
    ): Array<T>;2
    zip<A, B>(a1: A[]): (a2: B[]) => Array<[A, B]>;2
    zip<A, B>(a1: A[], a2: B[]): Array<[A, B]>;2
    zipAll(arrays: Array<Array<any>>): Array<any>;2
    zipObject<K, V>(props?: Array<K>): (values?: Array<V>) => { [key: K]: V };2
    zipObject<K, V>(props?: Array<K>, values?: Array<V>): { [key: K]: V };2
    zipObj(props: Array<any>): (values: Array<any>) => Object;2
    zipObj(props: Array<any>, values: Array<any>): Object;2
    zipObjectDeep(props: any[]): (values: any) => Object;2
    zipObjectDeep(props: any[], values: any): Object;2
    zipWith<T>(2
      iteratee: Iteratee<T>2
    ): ((a1: NestedArray<T>) => (a2: NestedArray<T>) => Array<T>) &2
      ((a1: NestedArray<T>, a2: NestedArray<T>) => Array<T>);2
    zipWith<T>(2
      iteratee: Iteratee<T>,2
      a1: NestedArray<T>2
    ): (a2: NestedArray<T>) => Array<T>;2
    zipWith<T>(2
      iteratee: Iteratee<T>,2
      a1: NestedArray<T>,2
      a2: NestedArray<T>2
    ): Array<T>;2
    // Collection2
    countBy<T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => { [string]: number };2
    countBy<T>(2
      iteratee: ValueOnlyIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): { [string]: number };2
    // alias of _.forEach2
    each<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    each<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    // alias of _.forEachRight2
    eachRight<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    eachRight<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    every<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => boolean;2
    every<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): boolean;2
    all<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => boolean;2
    all<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): boolean;2
    filter<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    filter<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    find<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: $ReadOnlyArray<T> | { [id: any]: T }) => T | void;2
    find<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: $ReadOnlyArray<T> | { [id: any]: T }2
    ): T | void;2
    findFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): ((2
      fromIndex: number2
    ) => (collection: $ReadOnlyArray<T> | { [id: any]: T }) => T | void) &2
      ((2
        fromIndex: number,2
        collection: $ReadOnlyArray<T> | { [id: any]: T }2
      ) => T | void);2
    findFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      fromIndex: number2
    ): (collection: Array<T> | { [id: any]: T }) => T | void;2
    findFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      fromIndex: number,2
      collection: $ReadOnlyArray<T> | { [id: any]: T }2
    ): T | void;2
    findLast<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: $ReadOnlyArray<T> | { [id: any]: T }) => T | void;2
    findLast<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: $ReadOnlyArray<T> | { [id: any]: T }2
    ): T | void;2
    findLastFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): ((2
      fromIndex: number2
    ) => (collection: $ReadOnlyArray<T> | { [id: any]: T }) => T | void) &2
      ((2
        fromIndex: number,2
        collection: $ReadOnlyArray<T> | { [id: any]: T }2
      ) => T | void);2
    findLastFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      fromIndex: number2
    ): (collection: $ReadOnlyArray<T> | { [id: any]: T }) => T | void;2
    findLastFrom<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      fromIndex: number,2
      collection: $ReadOnlyArray<T> | { [id: any]: T }2
    ): T | void;2
    flatMap<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<U>;2
    flatMap<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<U>;2
    flatMapDeep<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<U>;2
    flatMapDeep<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<U>;2
    flatMapDepth<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>2
    ): ((2
      depth: number2
    ) => (collection: Array<T> | { [id: any]: T }) => Array<U>) &2
      ((depth: number, collection: Array<T> | { [id: any]: T }) => Array<U>);2
    flatMapDepth<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>,2
      depth: number2
    ): (collection: Array<T> | { [id: any]: T }) => Array<U>;2
    flatMapDepth<T, U>(2
      iteratee: FlatMapIteratee<T, U> | OFlatMapIteratee<T, U>,2
      depth: number,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<U>;2
    forEach<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    forEach<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    forEachRight<T>(2
      iteratee: Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    forEachRight<T>(2
      iteratee: Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    groupBy<V, T>(2
      iteratee: ValueOnlyIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => { [key: V]: Array<T> };2
    groupBy<V, T>(2
      iteratee: ValueOnlyIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): { [key: V]: Array<T> };2
    includes(value: string): (str: string) => boolean;2
    includes(value: string, str: string): boolean;2
    includes<T>(value: T): (collection: Array<T> | { [id: any]: T }) => boolean;2
    includes<T>(value: T, collection: Array<T> | { [id: any]: T }): boolean;2
    contains(value: string): (str: string) => boolean;2
    contains(value: string, str: string): boolean;2
    contains<T>(value: T): (collection: Array<T> | { [id: any]: T }) => boolean;2
    contains<T>(value: T, collection: Array<T> | { [id: any]: T }): boolean;2
    includesFrom(2
      value: string2
    ): ((fromIndex: number) => (str: string) => boolean) &2
      ((fromIndex: number, str: string) => boolean);2
    includesFrom(value: string, fromIndex: number): (str: string) => boolean;2
    includesFrom(value: string, fromIndex: number, str: string): boolean;2
    includesFrom<T>(2
      value: T2
    ): ((fromIndex: number) => (collection: Array<T>) => boolean) &2
      ((fromIndex: number, collection: Array<T>) => boolean);2
    includesFrom<T>(2
      value: T,2
      fromIndex: number2
    ): (collection: Array<T>) => boolean;2
    includesFrom<T>(value: T, fromIndex: number, collection: Array<T>): boolean;2
    invokeMap<T>(2
      path: ((value: T) => Array<string> | string) | Array<string> | string2
    ): (collection: Array<T> | { [id: any]: T }) => Array<any>;2
    invokeMap<T>(2
      path: ((value: T) => Array<string> | string) | Array<string> | string,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<any>;2
    invokeArgsMap<T>(2
      path: ((value: T) => Array<string> | string) | Array<string> | string2
    ): ((2
      collection: Array<T> | { [id: any]: T }2
    ) => (args: Array<any>) => Array<any>) &2
      ((2
        collection: Array<T> | { [id: any]: T },2
        args: Array<any>2
      ) => Array<any>);2
    invokeArgsMap<T>(2
      path: ((value: T) => Array<string> | string) | Array<string> | string,2
      collection: Array<T> | { [id: any]: T }2
    ): (args: Array<any>) => Array<any>;2
    invokeArgsMap<T>(2
      path: ((value: T) => Array<string> | string) | Array<string> | string,2
      collection: Array<T> | { [id: any]: T },2
      args: Array<any>2
    ): Array<any>;2
    keyBy<T, V>(2
      iteratee: ValueOnlyIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => { [key: V]: T };2
    keyBy<T, V>(2
      iteratee: ValueOnlyIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): { [key: V]: T };2
    indexBy<T, V>(2
      iteratee: ValueOnlyIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => { [key: V]: T };2
    indexBy<T, V>(2
      iteratee: ValueOnlyIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): { [key: V]: T };2
    map<T, U>(2
      iteratee: MapIterator<T, U> | OMapIterator<T, U>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<U>;2
    map<T, U>(2
      iteratee: MapIterator<T, U> | OMapIterator<T, U>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<U>;2
    map(iteratee: (char: string) => any): (str: string) => string;2
    map(iteratee: (char: string) => any, str: string): string;2
    pluck<T, U>(2
      iteratee: MapIterator<T, U> | OMapIterator<T, U>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<U>;2
    pluck<T, U>(2
      iteratee: MapIterator<T, U> | OMapIterator<T, U>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<U>;2
    pluck(iteratee: (char: string) => any): (str: string) => string;2
    pluck(iteratee: (char: string) => any, str: string): string;2
    orderBy<T>(2
      iteratees: Array<Iteratee<T> | OIteratee<*>> | string2
    ): ((2
      orders: Array<"asc" | "desc"> | string2
    ) => (collection: Array<T> | { [id: any]: T }) => Array<T>) &2
      ((2
        orders: Array<"asc" | "desc"> | string,2
        collection: Array<T> | { [id: any]: T }2
      ) => Array<T>);2
    orderBy<T>(2
      iteratees: Array<Iteratee<T> | OIteratee<*>> | string,2
      orders: Array<"asc" | "desc"> | string2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    orderBy<T>(2
      iteratees: Array<Iteratee<T> | OIteratee<*>> | string,2
      orders: Array<"asc" | "desc"> | string,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    partition<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: Array<T> | { [id: any]: T }) => [Array<T>, Array<T>];2
    partition<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): [Array<T>, Array<T>];2
    reduce<T, U>(2
      iteratee: (accumulator: U, value: T) => U2
    ): ((accumulator: U) => (collection: Array<T> | { [id: any]: T }) => U) &2
      ((accumulator: U, collection: Array<T> | { [id: any]: T }) => U);2
    reduce<T, U>(2
      iteratee: (accumulator: U, value: T) => U,2
      accumulator: U2
    ): (collection: Array<T> | { [id: any]: T }) => U;2
    reduce<T, U>(2
      iteratee: (accumulator: U, value: T) => U,2
      accumulator: U,2
      collection: Array<T> | { [id: any]: T }2
    ): U;2
    reduceRight<T, U>(2
      iteratee: (value: T, accumulator: U) => U2
    ): ((accumulator: U) => (collection: Array<T> | { [id: any]: T }) => U) &2
      ((accumulator: U, collection: Array<T> | { [id: any]: T }) => U);2
    reduceRight<T, U>(2
      iteratee: (value: T, accumulator: U) => U,2
      accumulator: U2
    ): (collection: Array<T> | { [id: any]: T }) => U;2
    reduceRight<T, U>(2
      iteratee: (value: T, accumulator: U) => U,2
      accumulator: U,2
      collection: Array<T> | { [id: any]: T }2
    ): U;2
    reject<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    reject<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
    sample<T>(collection: Array<T> | { [id: any]: T }): T;2
    sampleSize<T>(2
      n: number2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    sampleSize<T>(n: number, collection: Array<T> | { [id: any]: T }): Array<T>;2
    shuffle<T>(collection: Array<T> | { [id: any]: T }): Array<T>;2
    size(collection: Array<any> | Object): number;2
    some<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: Array<T> | { [id: any]: T }) => boolean;2
    some<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): boolean;2
    any<T>(2
      predicate: Predicate<T> | OPredicate<T>2
    ): (collection: Array<T> | { [id: any]: T }) => boolean;2
    any<T>(2
      predicate: Predicate<T> | OPredicate<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): boolean;2
    sortBy<T>(2
      iteratees: Array<Iteratee<T> | OIteratee<T>> | Iteratee<T> | OIteratee<T>2
    ): (collection: Array<T> | { [id: any]: T }) => Array<T>;2
    sortBy<T>(2
      iteratees: Array<Iteratee<T> | OIteratee<T>> | Iteratee<T> | OIteratee<T>,2
      collection: Array<T> | { [id: any]: T }2
    ): Array<T>;2
2
    // Date2
    now(): number;2
2
    // Function2
    after(fn: Function): (n: number) => Function;2
    after(fn: Function, n: number): Function;2
    ary(func: Function): Function;2
    nAry(n: number): (func: Function) => Function;2
    nAry(n: number, func: Function): Function;2
    before(fn: Function): (n: number) => Function;2
    before(fn: Function, n: number): Function;2
    bind(func: Function): (thisArg: any) => Function;2
    bind(func: Function, thisArg: any): Function;2
    bindKey(obj: Object): (key: string) => Function;2
    bindKey(obj: Object, key: string): Function;2
    curry: Curry;2
    curryN(arity: number): (func: Function) => Function;2
    curryN(arity: number, func: Function): Function;2
    curryRight(func: Function): Function;2
    curryRightN(arity: number): (func: Function) => Function;2
    curryRightN(arity: number, func: Function): Function;2
    debounce(wait: number): <F: Function>(func: F) => F;2
    debounce<F: Function>(wait: number, func: F): F;2
    defer(func: Function): number;2
    delay(wait: number): (func: Function) => number;2
    delay(wait: number, func: Function): number;2
    flip(func: Function): Function;2
    memoize<F: Function>(func: F): F;2
    negate(predicate: Function): Function;2
    complement(predicate: Function): Function;2
    once(func: Function): Function;2
    overArgs(func: Function): (transforms: Array<Function>) => Function;2
    overArgs(func: Function, transforms: Array<Function>): Function;2
    useWith(func: Function): (transforms: Array<Function>) => Function;2
    useWith(func: Function, transforms: Array<Function>): Function;2
    partial(func: Function): (partials: any[]) => Function;2
    partial(func: Function, partials: any[]): Function;2
    partialRight(func: Function): (partials: Array<any>) => Function;2
    partialRight(func: Function, partials: Array<any>): Function;2
    rearg(indexes: Array<number>): (func: Function) => Function;2
    rearg(indexes: Array<number>, func: Function): Function;2
    rest(func: Function): Function;2
    unapply(func: Function): Function;2
    restFrom(start: number): (func: Function) => Function;2
    restFrom(start: number, func: Function): Function;2
    spread(func: Function): Function;2
    apply(func: Function): Function;2
    spreadFrom(start: number): (func: Function) => Function;2
    spreadFrom(start: number, func: Function): Function;2
    throttle(wait: number): (func: Function) => Function;2
    throttle(wait: number, func: Function): Function;2
    unary(func: Function): Function;2
    wrap(wrapper: Function): (value: any) => Function;2
    wrap(wrapper: Function, value: any): Function;2
2
    // Lang2
    castArray(value: *): any[];2
    clone<T>(value: T): T;2
    cloneDeep<T>(value: T): T;2
    cloneDeepWith<T, U>(2
      customizer: (value: T, key: number | string, object: T, stack: any) => U2
    ): (value: T) => U;2
    cloneDeepWith<T, U>(2
      customizer: (value: T, key: number | string, object: T, stack: any) => U,2
      value: T2
    ): U;2
    cloneWith<T, U>(2
      customizer: (value: T, key: number | string, object: T, stack: any) => U2
    ): (value: T) => U;2
    cloneWith<T, U>(2
      customizer: (value: T, key: number | string, object: T, stack: any) => U,2
      value: T2
    ): U;2
    conformsTo<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean }2
    ): (source: T) => boolean;2
    conformsTo<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean },2
      source: T2
    ): boolean;2
    where<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean }2
    ): (source: T) => boolean;2
    where<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean },2
      source: T2
    ): boolean;2
    conforms<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean }2
    ): (source: T) => boolean;2
    conforms<T: { [key: string]: mixed }>(2
      predicates: T & { [key: string]: (x: any) => boolean },2
      source: T2
    ): boolean;2
    eq(value: any): (other: any) => boolean;2
    eq(value: any, other: any): boolean;2
    identical(value: any): (other: any) => boolean;2
    identical(value: any, other: any): boolean;2
    gt(value: any): (other: any) => boolean;2
    gt(value: any, other: any): boolean;2
    gte(value: any): (other: any) => boolean;2
    gte(value: any, other: any): boolean;2
    isArguments(value: any): boolean;2
    isArray(value: any): boolean;2
    isArrayBuffer(value: any): boolean;2
    isArrayLike(value: any): boolean;2
    isArrayLikeObject(value: any): boolean;2
    isBoolean(value: any): boolean;2
    isBuffer(value: any): boolean;2
    isDate(value: any): boolean;2
    isElement(value: any): boolean;2
    isEmpty(value: any): boolean;2
    isEqual(value: any): (other: any) => boolean;2
    isEqual(value: any, other: any): boolean;2
    equals(value: any): (other: any) => boolean;2
    equals(value: any, other: any): boolean;2
    isEqualWith<T, U>(2
      customizer: (2
        objValue: any,2
        otherValue: any,2
        key: number | string,2
        object: T,2
        other: U,2
        stack: any2
      ) => boolean | void2
    ): ((value: T) => (other: U) => boolean) &2
      ((value: T, other: U) => boolean);2
    isEqualWith<T, U>(2
      customizer: (2
        objValue: any,2
        otherValue: any,2
        key: number | string,2
        object: T,2
        other: U,2
        stack: any2
      ) => boolean | void,2
      value: T2
    ): (other: U) => boolean;2
    isEqualWith<T, U>(2
      customizer: (2
        objValue: any,2
        otherValue: any,2
        key: number | string,2
        object: T,2
        other: U,2
        stack: any2
      ) => boolean | void,2
      value: T,2
      other: U2
    ): boolean;2
    isError(value: any): boolean;2
    isFinite(value: any): boolean;2
    isFunction(value: Function): true;2
    isFunction(value: number | string | void | null | Object): false;2
    isInteger(value: any): boolean;2
    isLength(value: any): boolean;2
    isMap(value: any): boolean;2
    isMatch(source: Object): (object: Object) => boolean;2
    isMatch(source: Object, object: Object): boolean;2
    whereEq(source: Object): (object: Object) => boolean;2
    whereEq(source: Object, object: Object): boolean;2
    isMatchWith<T: Object, U: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: number | string,2
        object: T,2
        source: U2
      ) => boolean | void2
    ): ((source: U) => (object: T) => boolean) &2
      ((source: U, object: T) => boolean);2
    isMatchWith<T: Object, U: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: number | string,2
        object: T,2
        source: U2
      ) => boolean | void,2
      source: U2
    ): (object: T) => boolean;2
    isMatchWith<T: Object, U: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: number | string,2
        object: T,2
        source: U2
      ) => boolean | void,2
      source: U,2
      object: T2
    ): boolean;2
    isNaN(value: any): boolean;2
    isNative(value: any): boolean;2
    isNil(value: any): boolean;2
    isNull(value: any): boolean;2
    isNumber(value: any): boolean;2
    isObject(value: any): boolean;2
    isObjectLike(value: any): boolean;2
    isPlainObject(value: any): boolean;2
    isRegExp(value: any): boolean;2
    isSafeInteger(value: any): boolean;2
    isSet(value: any): boolean;2
    isString(value: string): true;2
    isString(2
      value: number | boolean | Function | void | null | Object | Array<any>2
    ): false;2
    isSymbol(value: any): boolean;2
    isTypedArray(value: any): boolean;2
    isUndefined(value: any): boolean;2
    isWeakMap(value: any): boolean;2
    isWeakSet(value: any): boolean;2
    lt(value: any): (other: any) => boolean;2
    lt(value: any, other: any): boolean;2
    lte(value: any): (other: any) => boolean;2
    lte(value: any, other: any): boolean;2
    toArray(value: any): Array<any>;2
    toFinite(value: any): number;2
    toInteger(value: any): number;2
    toLength(value: any): number;2
    toNumber(value: any): number;2
    toPlainObject(value: any): Object;2
    toSafeInteger(value: any): number;2
    toString(value: any): string;2
2
    // Math2
    add(augend: number): (addend: number) => number;2
    add(augend: number, addend: number): number;2
    ceil(number: number): number;2
    divide(dividend: number): (divisor: number) => number;2
    divide(dividend: number, divisor: number): number;2
    floor(number: number): number;2
    max<T>(array: Array<T>): T;2
    maxBy<T>(iteratee: Iteratee<T>): (array: Array<T>) => T;2
    maxBy<T>(iteratee: Iteratee<T>, array: Array<T>): T;2
    mean(array: Array<*>): number;2
    meanBy<T>(iteratee: Iteratee<T>): (array: Array<T>) => number;2
    meanBy<T>(iteratee: Iteratee<T>, array: Array<T>): number;2
    min<T>(array: Array<T>): T;2
    minBy<T>(iteratee: Iteratee<T>): (array: Array<T>) => T;2
    minBy<T>(iteratee: Iteratee<T>, array: Array<T>): T;2
    multiply(multiplier: number): (multiplicand: number) => number;2
    multiply(multiplier: number, multiplicand: number): number;2
    round(number: number): number;2
    subtract(minuend: number): (subtrahend: number) => number;2
    subtract(minuend: number, subtrahend: number): number;2
    sum(array: Array<*>): number;2
    sumBy<T>(iteratee: Iteratee<T>): (array: Array<T>) => number;2
    sumBy<T>(iteratee: Iteratee<T>, array: Array<T>): number;2
2
    // number2
    clamp(2
      lower: number2
    ): ((upper: number) => (number: number) => number) &2
      ((upper: number, number: number) => number);2
    clamp(lower: number, upper: number): (number: number) => number;2
    clamp(lower: number, upper: number, number: number): number;2
    inRange(2
      start: number2
    ): ((end: number) => (number: number) => boolean) &2
      ((end: number, number: number) => boolean);2
    inRange(start: number, end: number): (number: number) => boolean;2
    inRange(start: number, end: number, number: number): boolean;2
    random(lower: number): (upper: number) => number;2
    random(lower: number, upper: number): number;2
2
    // Object2
    assign(object: Object): (source: Object) => Object;2
    assign(object: Object, source: Object): Object;2
    assignAll(objects: Array<Object>): Object;2
    assignInAll(objects: Array<Object>): Object;2
    extendAll(objects: Array<Object>): Object;2
    assignIn<A, B>(a: A): (b: B) => A & B;2
    assignIn<A, B>(a: A, b: B): A & B;2
    assignInWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): ((object: T) => (s1: A) => Object) & ((object: T, s1: A) => Object);2
    assignInWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T2
    ): (s1: A) => Object;2
    assignInWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T,2
      s1: A2
    ): Object;2
    assignWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): ((object: T) => (s1: A) => Object) & ((object: T, s1: A) => Object);2
    assignWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T2
    ): (s1: A) => Object;2
    assignWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T,2
      s1: A2
    ): Object;2
    assignInAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void2
    ): (objects: Array<Object>) => Object;2
    assignInAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void,2
      objects: Array<Object>2
    ): Object;2
    extendAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void2
    ): (objects: Array<Object>) => Object;2
    extendAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void,2
      objects: Array<Object>2
    ): Object;2
    assignAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void2
    ): (objects: Array<Object>) => Object;2
    assignAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void,2
      objects: Array<Object>2
    ): Object;2
    at(paths: Array<string>): (object: Object) => Array<any>;2
    at(paths: Array<string>, object: Object): Array<any>;2
    props(paths: Array<string>): (object: Object) => Array<any>;2
    props(paths: Array<string>, object: Object): Array<any>;2
    paths(paths: Array<string>): (object: Object) => Array<any>;2
    paths(paths: Array<string>, object: Object): Array<any>;2
    create<T>(prototype: T): $Supertype<T>;2
    defaults(source: Object): (object: Object) => Object;2
    defaults(source: Object, object: Object): Object;2
    defaultsAll(objects: Array<Object>): Object;2
    defaultsDeep(source: Object): (object: Object) => Object;2
    defaultsDeep(source: Object, object: Object): Object;2
    defaultsDeepAll(objects: Array<Object>): Object;2
    // alias for _.toPairs2
    entries(object: Object): Array<[string, any]>;2
    // alias for _.toPairsIn2
    entriesIn(object: Object): Array<[string, any]>;2
    // alias for _.assignIn2
    extend<A, B>(a: A): (b: B) => A & B;2
    extend<A, B>(a: A, b: B): A & B;2
    // alias for _.assignInWith2
    extendWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void2
    ): ((object: T) => (s1: A) => Object) & ((object: T, s1: A) => Object);2
    extendWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T2
    ): (s1: A) => Object;2
    extendWith<T: Object, A: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A2
      ) => any | void,2
      object: T,2
      s1: A2
    ): Object;2
    findKey<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>2
    ): (object: T) => string | void;2
    findKey<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>,2
      object: T2
    ): string | void;2
    findLastKey<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>2
    ): (object: T) => string | void;2
    findLastKey<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>,2
      object: T2
    ): string | void;2
    forIn(iteratee: OIteratee<*>): (object: Object) => Object;2
    forIn(iteratee: OIteratee<*>, object: Object): Object;2
    forInRight(iteratee: OIteratee<*>): (object: Object) => Object;2
    forInRight(iteratee: OIteratee<*>, object: Object): Object;2
    forOwn(iteratee: OIteratee<*>): (object: Object) => Object;2
    forOwn(iteratee: OIteratee<*>, object: Object): Object;2
    forOwnRight(iteratee: OIteratee<*>): (object: Object) => Object;2
    forOwnRight(iteratee: OIteratee<*>, object: Object): Object;2
    functions(object: Object): Array<string>;2
    functionsIn(object: Object): Array<string>;2
    get(path: Array<string> | string): (object: Object | Array<any>) => any;2
    get(path: Array<string> | string, object: Object | Array<any>): any;2
    prop(path: Array<string> | string): (object: Object | Array<any>) => any;2
    prop(path: Array<string> | string, object: Object | Array<any>): any;2
    path(path: Array<string> | string): (object: Object | Array<any>) => any;2
    path(path: Array<string> | string, object: Object | Array<any>): any;2
    getOr(2
      defaultValue: any2
    ): ((2
      path: Array<string> | string2
    ) => (object: Object | Array<any>) => any) &2
      ((path: Array<string> | string, object: Object | Array<any>) => any);2
    getOr(2
      defaultValue: any,2
      path: Array<string> | string2
    ): (object: Object | Array<any>) => any;2
    getOr(2
      defaultValue: any,2
      path: Array<string> | string,2
      object: Object | Array<any>2
    ): any;2
    propOr(2
      defaultValue: any2
    ): ((2
      path: Array<string> | string2
    ) => (object: Object | Array<any>) => any) &2
      ((path: Array<string> | string, object: Object | Array<any>) => any);2
    propOr(2
      defaultValue: any,2
      path: Array<string> | string2
    ): (object: Object | Array<any>) => any;2
    propOr(2
      defaultValue: any,2
      path: Array<string> | string,2
      object: Object | Array<any>2
    ): any;2
    pathOr(2
      defaultValue: any2
    ): ((2
      path: Array<string> | string2
    ) => (object: Object | Array<any>) => any) &2
      ((path: Array<string> | string, object: Object | Array<any>) => any);2
    pathOr(2
      defaultValue: any,2
      path: Array<string> | string2
    ): (object: Object | Array<any>) => any;2
    pathOr(2
      defaultValue: any,2
      path: Array<string> | string,2
      object: Object | Array<any>2
    ): any;2
    has(path: Array<string> | string): (object: Object) => boolean;2
    has(path: Array<string> | string, object: Object): boolean;2
    hasIn(path: Array<string> | string): (object: Object) => boolean;2
    hasIn(path: Array<string> | string, object: Object): boolean;2
    invert(object: Object): Object;2
    invertObj(object: Object): Object;2
    invertBy(iteratee: Function): (object: Object) => Object;2
    invertBy(iteratee: Function, object: Object): Object;2
    invoke(path: Array<string> | string): (object: Object) => any;2
    invoke(path: Array<string> | string, object: Object): any;2
    invokeArgs(2
      path: Array<string> | string2
    ): ((object: Object) => (args: Array<any>) => any) &2
      ((object: Object, args: Array<any>) => any);2
    invokeArgs(2
      path: Array<string> | string,2
      object: Object2
    ): (args: Array<any>) => any;2
    invokeArgs(2
      path: Array<string> | string,2
      object: Object,2
      args: Array<any>2
    ): any;2
    keys<K>(object: { [key: K]: any }): Array<K>;2
    keys(object: Object): Array<string>;2
    keysIn(object: Object): Array<string>;2
    mapKeys(iteratee: OIteratee<*>): (object: Object) => Object;2
    mapKeys(iteratee: OIteratee<*>, object: Object): Object;2
    mapValues(iteratee: OIteratee<*>): (object: Object) => Object;2
    mapValues(iteratee: OIteratee<*>, object: Object): Object;2
    merge(object: Object): (source: Object) => Object;2
    merge(object: Object, source: Object): Object;2
    mergeAll(objects: Array<Object>): Object;2
    mergeWith<T: Object, A: Object, B: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void2
    ): ((object: T) => (s1: A) => Object) & ((object: T, s1: A) => Object);2
    mergeWith<T: Object, A: Object, B: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void,2
      object: T2
    ): (s1: A) => Object;2
    mergeWith<T: Object, A: Object, B: Object>(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: T,2
        source: A | B2
      ) => any | void,2
      object: T,2
      s1: A2
    ): Object;2
    mergeAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void2
    ): (objects: Array<Object>) => Object;2
    mergeAllWith(2
      customizer: (2
        objValue: any,2
        srcValue: any,2
        key: string,2
        object: Object,2
        source: Object2
      ) => any | void,2
      objects: Array<Object>2
    ): Object;2
    omit(props: Array<string>): (object: Object) => Object;2
    omit(props: Array<string>, object: Object): Object;2
    omitAll(props: Array<string>): (object: Object) => Object;2
    omitAll(props: Array<string>, object: Object): Object;2
    omitBy<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>2
    ): (object: T) => Object;2
    omitBy<A, T: { [id: any]: A }>(predicate: OPredicate<A>, object: T): Object;2
    pick(props: Array<string>): (object: Object) => Object;2
    pick(props: Array<string>, object: Object): Object;2
    pickAll(props: Array<string>): (object: Object) => Object;2
    pickAll(props: Array<string>, object: Object): Object;2
    pickBy<A, T: { [id: any]: A }>(2
      predicate: OPredicate<A>2
    ): (object: T) => Object;2
    pickBy<A, T: { [id: any]: A }>(predicate: OPredicate<A>, object: T): Object;2
    result(path: Array<string> | string): (object: Object) => any;2
    result(path: Array<string> | string, object: Object): any;2
    set(2
      path: Array<string> | string2
    ): ((value: any) => (object: Object) => Object) &2
      ((value: any, object: Object) => Object);2
    set(path: Array<string> | string, value: any): (object: Object) => Object;2
    set(path: Array<string> | string, value: any, object: Object): Object;2
    assoc(2
      path: Array<string> | string2
    ): ((value: any) => (object: Object) => Object) &2
      ((value: any, object: Object) => Object);2
    assoc(path: Array<string> | string, value: any): (object: Object) => Object;2
    assoc(path: Array<string> | string, value: any, object: Object): Object;2
    assocPath(2
      path: Array<string> | string2
    ): ((value: any) => (object: Object) => Object) &2
      ((value: any, object: Object) => Object);2
    assocPath(2
      path: Array<string> | string,2
      value: any2
    ): (object: Object) => Object;2
    assocPath(path: Array<string> | string, value: any, object: Object): Object;2
    setWith<T>(2
      customizer: (nsValue: any, key: string, nsObject: T) => any2
    ): ((2
      path: Array<string> | string2
    ) => ((value: any) => (object: T) => Object) &2
      ((value: any, object: T) => Object)) &2
      ((path: Array<string> | string, value: any) => (object: T) => Object) &2
      ((path: Array<string> | string, value: any, object: T) => Object);2
    setWith<T>(2
      customizer: (nsValue: any, key: string, nsObject: T) => any,2
      path: Array<string> | string2
    ): ((value: any) => (object: T) => Object) &2
      ((value: any, object: T) => Object);2
    setWith<T>(2
      customizer: (nsValue: any, key: string, nsObject: T) => any,2
      path: Array<string> | string,2
      value: any2
    ): (object: T) => Object;2
    setWith<T>(2
      customizer: (nsValue: any, key: string, nsObject: T) => any,2
      path: Array<string> | string,2
      value: any,2
      object: T2
    ): Object;2
    toPairs(object: Object | Array<*>): Array<[string, any]>;2
    toPairsIn(object: Object): Array<[string, any]>;2
    transform(2
      iteratee: OIteratee<*>2
    ): ((accumulator: any) => (collection: Object | Array<any>) => any) &2
      ((accumulator: any, collection: Object | Array<any>) => any);2
    transform(2
      iteratee: OIteratee<*>,2
      accumulator: any2
    ): (collection: Object | Array<any>) => any;2
    transform(2
      iteratee: OIteratee<*>,2
      accumulator: any,2
      collection: Object | Array<any>2
    ): any;2
    unset(path: Array<string> | string): (object: Object) => boolean;2
    unset(path: Array<string> | string, object: Object): boolean;2
    dissoc(path: Array<string> | string): (object: Object) => boolean;2
    dissoc(path: Array<string> | string, object: Object): boolean;2
    dissocPath(path: Array<string> | string): (object: Object) => boolean;2
    dissocPath(path: Array<string> | string, object: Object): boolean;2
    update(2
      path: string[] | string2
    ): ((updater: Function) => (object: Object) => Object) &2
      ((updater: Function, object: Object) => Object);2
    update(2
      path: string[] | string,2
      updater: Function2
    ): (object: Object) => Object;2
    update(path: string[] | string, updater: Function, object: Object): Object;2
    updateWith(2
      customizer: Function2
    ): ((2
      path: string[] | string2
    ) => ((updater: Function) => (object: Object) => Object) &2
      ((updater: Function, object: Object) => Object)) &2
      ((2
        path: string[] | string,2
        updater: Function2
      ) => (object: Object) => Object) &2
      ((path: string[] | string, updater: Function, object: Object) => Object);2
    updateWith(2
      customizer: Function,2
      path: string[] | string2
    ): ((updater: Function) => (object: Object) => Object) &2
      ((updater: Function, object: Object) => Object);2
    updateWith(2
      customizer: Function,2
      path: string[] | string,2
      updater: Function2
    ): (object: Object) => Object;2
    updateWith(2
      customizer: Function,2
      path: string[] | string,2
      updater: Function,2
      object: Object2
    ): Object;2
    values(object: Object): Array<any>;2
    valuesIn(object: Object): Array<any>;2
2
    tap<T>(interceptor: (value: T) => any): (value: T) => T;2
    tap<T>(interceptor: (value: T) => any, value: T): T;2
    thru<T1, T2>(interceptor: (value: T1) => T2): (value: T1) => T2;2
    thru<T1, T2>(interceptor: (value: T1) => T2, value: T1): T2;2
2
    // String2
    camelCase(string: string): string;2
    capitalize(string: string): string;2
    deburr(string: string): string;2
    endsWith(target: string): (string: string) => boolean;2
    endsWith(target: string, string: string): boolean;2
    escape(string: string): string;2
    escapeRegExp(string: string): string;2
    kebabCase(string: string): string;2
    lowerCase(string: string): string;2
    lowerFirst(string: string): string;2
    pad(length: number): (string: string) => string;2
    pad(length: number, string: string): string;2
    padChars(2
      chars: string2
    ): ((length: number) => (string: string) => string) &2
      ((length: number, string: string) => string);2
    padChars(chars: string, length: number): (string: string) => string;2
    padChars(chars: string, length: number, string: string): string;2
    padEnd(length: number): (string: string) => string;2
    padEnd(length: number, string: string): string;2
    padCharsEnd(2
      chars: string2
    ): ((length: number) => (string: string) => string) &2
      ((length: number, string: string) => string);2
    padCharsEnd(chars: string, length: number): (string: string) => string;2
    padCharsEnd(chars: string, length: number, string: string): string;2
    padStart(length: number): (string: string) => string;2
    padStart(length: number, string: string): string;2
    padCharsStart(2
      chars: string2
    ): ((length: number) => (string: string) => string) &2
      ((length: number, string: string) => string);2
    padCharsStart(chars: string, length: number): (string: string) => string;2
    padCharsStart(chars: string, length: number, string: string): string;2
    parseInt(radix: number): (string: string) => number;2
    parseInt(radix: number, string: string): number;2
    repeat(n: number): (string: string) => string;2
    repeat(n: number, string: string): string;2
    replace(2
      pattern: RegExp | string2
    ): ((2
      replacement: ((string: string) => string) | string2
    ) => (string: string) => string) &2
      ((2
        replacement: ((string: string) => string) | string,2
        string: string2
      ) => string);2
    replace(2
      pattern: RegExp | string,2
      replacement: ((string: string) => string) | string2
    ): (string: string) => string;2
    replace(2
      pattern: RegExp | string,2
      replacement: ((string: string) => string) | string,2
      string: string2
    ): string;2
    snakeCase(string: string): string;2
    split(separator: RegExp | string): (string: string) => Array<string>;2
    split(separator: RegExp | string, string: string): Array<string>;2
    startCase(string: string): string;2
    startsWith(target: string): (string: string) => boolean;2
    startsWith(target: string, string: string): boolean;2
    template(string: string): Function;2
    toLower(string: string): string;2
    toUpper(string: string): string;2
    trim(string: string): string;2
    trimChars(chars: string): (string: string) => string;2
    trimChars(chars: string, string: string): string;2
    trimEnd(string: string): string;2
    trimCharsEnd(chars: string): (string: string) => string;2
    trimCharsEnd(chars: string, string: string): string;2
    trimStart(string: string): string;2
    trimCharsStart(chars: string): (string: string) => string;2
    trimCharsStart(chars: string, string: string): string;2
    truncate(options: TruncateOptions): (string: string) => string;2
    truncate(options: TruncateOptions, string: string): string;2
    unescape(string: string): string;2
    upperCase(string: string): string;2
    upperFirst(string: string): string;2
    words(string: string): Array<string>;2
2
    // Util2
    attempt(func: Function): any;2
    bindAll(methodNames: Array<string>): (object: Object) => Object;2
    bindAll(methodNames: Array<string>, object: Object): Object;2
    cond(pairs: NestedArray<Function>): Function;2
    constant<T>(value: T): () => T;2
    always<T>(value: T): () => T;2
    defaultTo<T1: string | boolean | Object, T2>(2
      defaultValue: T22
    ): (value: T1) => T1;2
    defaultTo<T1: string | boolean | Object, T2>(2
      defaultValue: T2,2
      value: T12
    ): T1;2
    // NaN is a number instead of its own type, otherwise it would behave like null/void2
    defaultTo<T1: number, T2>(defaultValue: T2): (value: T1) => T1 | T2;2
    defaultTo<T1: number, T2>(defaultValue: T2, value: T1): T1 | T2;2
    defaultTo<T1: void | null, T2>(defaultValue: T2): (value: T1) => T2;2
    defaultTo<T1: void | null, T2>(defaultValue: T2, value: T1): T2;2
    flow: $ComposeReverse;2
    flow(funcs: Array<Function>): Function;2
    pipe: $ComposeReverse;2
    pipe(funcs: Array<Function>): Function;2
    flowRight: $Compose;2
    flowRight(funcs: Array<Function>): Function;2
    compose: $Compose;2
    compose(funcs: Array<Function>): Function;2
    identity<T>(value: T): T;2
    iteratee(func: any): Function;2
    matches(source: Object): (object: Object) => boolean;2
    matches(source: Object, object: Object): boolean;2
    matchesProperty(path: Array<string> | string): (srcValue: any) => Function;2
    matchesProperty(path: Array<string> | string, srcValue: any): Function;2
    propEq(path: Array<string> | string): (srcValue: any) => Function;2
    propEq(path: Array<string> | string, srcValue: any): Function;2
    pathEq(path: Array<string> | string): (srcValue: any) => Function;2
    pathEq(path: Array<string> | string, srcValue: any): Function;2
    method(path: Array<string> | string): Function;2
    methodOf(object: Object): Function;2
    mixin<T: Function | Object>(2
      object: T2
    ): ((source: Object) => (options: { chain: boolean }) => T) &2
      ((source: Object, options: { chain: boolean }) => T);2
    mixin<T: Function | Object>(2
      object: T,2
      source: Object2
    ): (options: { chain: boolean }) => T;2
    mixin<T: Function | Object>(2
      object: T,2
      source: Object,2
      options: { chain: boolean }2
    ): T;2
    noConflict(): Lodash;2
    noop(...args: Array<mixed>): void;2
    nthArg(n: number): Function;2
    over(iteratees: Array<Function>): Function;2
    juxt(iteratees: Array<Function>): Function;2
    overEvery(predicates: Array<Function>): Function;2
    allPass(predicates: Array<Function>): Function;2
    overSome(predicates: Array<Function>): Function;2
    anyPass(predicates: Array<Function>): Function;2
    property(2
      path: Array<string> | string2
    ): (object: Object | Array<any>) => any;2
    property(path: Array<string> | string, object: Object | Array<any>): any;2
    propertyOf(object: Object): (path: Array<string> | string) => Function;2
    propertyOf(object: Object, path: Array<string> | string): Function;2
    range(start: number): (end: number) => Array<number>;2
    range(start: number, end: number): Array<number>;2
    rangeStep(2
      step: number2
    ): ((start: number) => (end: number) => Array<number>) &2
      ((start: number, end: number) => Array<number>);2
    rangeStep(step: number, start: number): (end: number) => Array<number>;2
    rangeStep(step: number, start: number, end: number): Array<number>;2
    rangeRight(start: number): (end: number) => Array<number>;2
    rangeRight(start: number, end: number): Array<number>;2
    rangeStepRight(2
      step: number2
    ): ((start: number) => (end: number) => Array<number>) &2
      ((start: number, end: number) => Array<number>);2
    rangeStepRight(step: number, start: number): (end: number) => Array<number>;2
    rangeStepRight(step: number, start: number, end: number): Array<number>;2
    runInContext(context: Object): Function;2
2
    stubArray(): Array<*>;2
    stubFalse(): false;2
    F(): false;2
    stubObject(): {};2
    stubString(): "";2
    stubTrue(): true;2
    T(): true;2
    times<T>(iteratee: (i: number) => T): (n: number) => Array<T>;2
    times<T>(iteratee: (i: number) => T, n: number): Array<T>;2
    toPath(value: any): Array<string>;2
    uniqueId(prefix: string): string;2
2
    __: any;2
    placeholder: any;2
2
    convert(options: {2
      cap?: boolean,2
      curry?: boolean,2
      fixed?: boolean,2
      immutable?: boolean,2
      rearg?: boolean2
    }): void;2
2
    // Properties2
    VERSION: string;2
    templateSettings: TemplateSettings;2
  }2
2
  declare module.exports: Lodash;2
}2
2
declare module "lodash/chunk" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "chunk">;2
}2
2
declare module "lodash/compact" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "compact">;2
}2
2
declare module "lodash/concat" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "concat">;2
}2
2
declare module "lodash/difference" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "difference">;2
}2
2
declare module "lodash/differenceBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "differenceBy">;2
}2
2
declare module "lodash/differenceWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "differenceWith">;2
}2
2
declare module "lodash/drop" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "drop">;2
}2
2
declare module "lodash/dropRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "dropRight">;2
}2
2
declare module "lodash/dropRightWhile" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "dropRightWhile">;2
}2
2
declare module "lodash/dropWhile" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "dropWhile">;2
}2
2
declare module "lodash/fill" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "fill">;2
}2
2
declare module "lodash/findIndex" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "findIndex">;2
}2
2
declare module "lodash/findLastIndex" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "findLastIndex">;2
}2
2
declare module "lodash/first" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "first">;2
}2
2
declare module "lodash/flatten" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flatten">;2
}2
2
declare module "lodash/flattenDeep" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flattenDeep">;2
}2
2
declare module "lodash/flattenDepth" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flattenDepth">;2
}2
2
declare module "lodash/fromPairs" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "fromPairs">;2
}2
2
declare module "lodash/head" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "head">;2
}2
2
declare module "lodash/indexOf" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "indexOf">;2
}2
2
declare module "lodash/initial" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "initial">;2
}2
2
declare module "lodash/intersection" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "intersection">;2
}2
2
declare module "lodash/intersectionBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "intersectionBy">;2
}2
2
declare module "lodash/intersectionWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "intersectionWith">;2
}2
2
declare module "lodash/join" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "join">;2
}2
2
declare module "lodash/last" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "last">;2
}2
2
declare module "lodash/lastIndexOf" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "lastIndexOf">;2
}2
2
declare module "lodash/nth" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "nth">;2
}2
2
declare module "lodash/pull" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pull">;2
}2
2
declare module "lodash/pullAll" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pullAll">;2
}2
2
declare module "lodash/pullAllBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pullAllBy">;2
}2
2
declare module "lodash/pullAllWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pullAllWith">;2
}2
2
declare module "lodash/pullAt" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pullAt">;2
}2
2
declare module "lodash/remove" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "remove">;2
}2
2
declare module "lodash/reverse" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "reverse">;2
}2
2
declare module "lodash/slice" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "slice">;2
}2
2
declare module "lodash/sortedIndex" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedIndex">;2
}2
2
declare module "lodash/sortedIndexBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedIndexBy">;2
}2
2
declare module "lodash/sortedIndexOf" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedIndexOf">;2
}2
2
declare module "lodash/sortedLastIndex" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedLastIndex">;2
}2
2
declare module "lodash/sortedLastIndexBy" {2
  declare module.exports: $PropertyType<2
    $Exports<"lodash">,2
    "sortedLastIndexBy"2
  >;2
}2
2
declare module "lodash/sortedLastIndexOf" {2
  declare module.exports: $PropertyType<2
    $Exports<"lodash">,2
    "sortedLastIndexOf"2
  >;2
}2
2
declare module "lodash/sortedUniq" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedUniq">;2
}2
2
declare module "lodash/sortedUniqBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortedUniqBy">;2
}2
2
declare module "lodash/tail" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "tail">;2
}2
2
declare module "lodash/take" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "take">;2
}2
2
declare module "lodash/takeRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "takeRight">;2
}2
2
declare module "lodash/takeRightWhile" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "takeRightWhile">;2
}2
2
declare module "lodash/takeWhile" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "takeWhile">;2
}2
2
declare module "lodash/union" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "union">;2
}2
2
declare module "lodash/unionBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unionBy">;2
}2
2
declare module "lodash/unionWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unionWith">;2
}2
2
declare module "lodash/uniq" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "uniq">;2
}2
2
declare module "lodash/uniqBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "uniqBy">;2
}2
2
declare module "lodash/uniqWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "uniqWith">;2
}2
2
declare module "lodash/unzip" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unzip">;2
}2
2
declare module "lodash/unzipWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unzipWith">;2
}2
2
declare module "lodash/without" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "without">;2
}2
2
declare module "lodash/xor" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "xor">;2
}2
2
declare module "lodash/xorBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "xorBy">;2
}2
2
declare module "lodash/xorWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "xorWith">;2
}2
2
declare module "lodash/zip" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "zip">;2
}2
2
declare module "lodash/zipObject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "zipObject">;2
}2
2
declare module "lodash/zipObjectDeep" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "zipObjectDeep">;2
}2
2
declare module "lodash/zipWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "zipWith">;2
}2
2
declare module "lodash/countBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "countBy">;2
}2
2
declare module "lodash/each" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "each">;2
}2
2
declare module "lodash/eachRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "eachRight">;2
}2
2
declare module "lodash/every" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "every">;2
}2
2
declare module "lodash/filter" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "filter">;2
}2
2
declare module "lodash/find" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "find">;2
}2
2
declare module "lodash/findLast" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "findLast">;2
}2
2
declare module "lodash/flatMap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flatMap">;2
}2
2
declare module "lodash/flatMapDeep" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flatMapDeep">;2
}2
2
declare module "lodash/flatMapDepth" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flatMapDepth">;2
}2
2
declare module "lodash/forEach" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forEach">;2
}2
2
declare module "lodash/forEachRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forEachRight">;2
}2
2
declare module "lodash/groupBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "groupBy">;2
}2
2
declare module "lodash/includes" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "includes">;2
}2
2
declare module "lodash/invokeMap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "invokeMap">;2
}2
2
declare module "lodash/keyBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "keyBy">;2
}2
2
declare module "lodash/map" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "map">;2
}2
2
declare module "lodash/orderBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "orderBy">;2
}2
2
declare module "lodash/partition" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "partition">;2
}2
2
declare module "lodash/reduce" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "reduce">;2
}2
2
declare module "lodash/reduceRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "reduceRight">;2
}2
2
declare module "lodash/reject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "reject">;2
}2
2
declare module "lodash/sample" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sample">;2
}2
2
declare module "lodash/sampleSize" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sampleSize">;2
}2
2
declare module "lodash/shuffle" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "shuffle">;2
}2
2
declare module "lodash/size" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "size">;2
}2
2
declare module "lodash/some" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "some">;2
}2
2
declare module "lodash/sortBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sortBy">;2
}2
2
declare module "lodash/now" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "now">;2
}2
2
declare module "lodash/after" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "after">;2
}2
2
declare module "lodash/ary" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "ary">;2
}2
2
declare module "lodash/before" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "before">;2
}2
2
declare module "lodash/bind" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "bind">;2
}2
2
declare module "lodash/bindKey" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "bindKey">;2
}2
2
declare module "lodash/curry" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "curry">;2
}2
2
declare module "lodash/curryRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "curryRight">;2
}2
2
declare module "lodash/debounce" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "debounce">;2
}2
2
declare module "lodash/defer" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "defer">;2
}2
2
declare module "lodash/delay" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "delay">;2
}2
2
declare module "lodash/flip" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flip">;2
}2
2
declare module "lodash/memoize" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "memoize">;2
}2
2
declare module "lodash/negate" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "negate">;2
}2
2
declare module "lodash/once" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "once">;2
}2
2
declare module "lodash/overArgs" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "overArgs">;2
}2
2
declare module "lodash/partial" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "partial">;2
}2
2
declare module "lodash/partialRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "partialRight">;2
}2
2
declare module "lodash/rearg" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "rearg">;2
}2
2
declare module "lodash/rest" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "rest">;2
}2
2
declare module "lodash/spread" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "spread">;2
}2
2
declare module "lodash/throttle" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "throttle">;2
}2
2
declare module "lodash/unary" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unary">;2
}2
2
declare module "lodash/wrap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "wrap">;2
}2
2
declare module "lodash/castArray" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "castArray">;2
}2
2
declare module "lodash/clone" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "clone">;2
}2
2
declare module "lodash/cloneDeep" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "cloneDeep">;2
}2
2
declare module "lodash/cloneDeepWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "cloneDeepWith">;2
}2
2
declare module "lodash/cloneWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "cloneWith">;2
}2
2
declare module "lodash/conformsTo" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "conformsTo">;2
}2
2
declare module "lodash/eq" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "eq">;2
}2
2
declare module "lodash/gt" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "gt">;2
}2
2
declare module "lodash/gte" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "gte">;2
}2
2
declare module "lodash/isArguments" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isArguments">;2
}2
2
declare module "lodash/isArray" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isArray">;2
}2
2
declare module "lodash/isArrayBuffer" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isArrayBuffer">;2
}2
2
declare module "lodash/isArrayLike" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isArrayLike">;2
}2
2
declare module "lodash/isArrayLikeObject" {2
  declare module.exports: $PropertyType<2
    $Exports<"lodash">,2
    "isArrayLikeObject"2
  >;2
}2
2
declare module "lodash/isBoolean" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isBoolean">;2
}2
2
declare module "lodash/isBuffer" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isBuffer">;2
}2
2
declare module "lodash/isDate" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isDate">;2
}2
2
declare module "lodash/isElement" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isElement">;2
}2
2
declare module "lodash/isEmpty" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isEmpty">;2
}2
2
declare module "lodash/isEqual" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isEqual">;2
}2
2
declare module "lodash/isEqualWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isEqualWith">;2
}2
2
declare module "lodash/isError" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isError">;2
}2
2
declare module "lodash/isFinite" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isFinite">;2
}2
2
declare module "lodash/isFunction" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isFunction">;2
}2
2
declare module "lodash/isInteger" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isInteger">;2
}2
2
declare module "lodash/isLength" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isLength">;2
}2
2
declare module "lodash/isMap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isMap">;2
}2
2
declare module "lodash/isMatch" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isMatch">;2
}2
2
declare module "lodash/isMatchWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isMatchWith">;2
}2
2
declare module "lodash/isNaN" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isNaN">;2
}2
2
declare module "lodash/isNative" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isNative">;2
}2
2
declare module "lodash/isNil" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isNil">;2
}2
2
declare module "lodash/isNull" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isNull">;2
}2
2
declare module "lodash/isNumber" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isNumber">;2
}2
2
declare module "lodash/isObject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isObject">;2
}2
2
declare module "lodash/isObjectLike" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isObjectLike">;2
}2
2
declare module "lodash/isPlainObject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isPlainObject">;2
}2
2
declare module "lodash/isRegExp" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isRegExp">;2
}2
2
declare module "lodash/isSafeInteger" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isSafeInteger">;2
}2
2
declare module "lodash/isSet" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isSet">;2
}2
2
declare module "lodash/isString" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isString">;2
}2
2
declare module "lodash/isSymbol" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isSymbol">;2
}2
2
declare module "lodash/isTypedArray" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isTypedArray">;2
}2
2
declare module "lodash/isUndefined" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isUndefined">;2
}2
2
declare module "lodash/isWeakMap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isWeakMap">;2
}2
2
declare module "lodash/isWeakSet" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "isWeakSet">;2
}2
2
declare module "lodash/lt" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "lt">;2
}2
2
declare module "lodash/lte" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "lte">;2
}2
2
declare module "lodash/toArray" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toArray">;2
}2
2
declare module "lodash/toFinite" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toFinite">;2
}2
2
declare module "lodash/toInteger" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toInteger">;2
}2
2
declare module "lodash/toLength" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toLength">;2
}2
2
declare module "lodash/toNumber" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toNumber">;2
}2
2
declare module "lodash/toPlainObject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toPlainObject">;2
}2
2
declare module "lodash/toSafeInteger" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toSafeInteger">;2
}2
2
declare module "lodash/toString" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toString">;2
}2
2
declare module "lodash/add" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "add">;2
}2
2
declare module "lodash/ceil" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "ceil">;2
}2
2
declare module "lodash/divide" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "divide">;2
}2
2
declare module "lodash/floor" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "floor">;2
}2
2
declare module "lodash/max" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "max">;2
}2
2
declare module "lodash/maxBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "maxBy">;2
}2
2
declare module "lodash/mean" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "mean">;2
}2
2
declare module "lodash/meanBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "meanBy">;2
}2
2
declare module "lodash/min" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "min">;2
}2
2
declare module "lodash/minBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "minBy">;2
}2
2
declare module "lodash/multiply" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "multiply">;2
}2
2
declare module "lodash/round" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "round">;2
}2
2
declare module "lodash/subtract" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "subtract">;2
}2
2
declare module "lodash/sum" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sum">;2
}2
2
declare module "lodash/sumBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "sumBy">;2
}2
2
declare module "lodash/clamp" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "clamp">;2
}2
2
declare module "lodash/inRange" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "inRange">;2
}2
2
declare module "lodash/random" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "random">;2
}2
2
declare module "lodash/assign" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "assign">;2
}2
2
declare module "lodash/assignIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "assignIn">;2
}2
2
declare module "lodash/assignInWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "assignInWith">;2
}2
2
declare module "lodash/assignWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "assignWith">;2
}2
2
declare module "lodash/at" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "at">;2
}2
2
declare module "lodash/create" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "create">;2
}2
2
declare module "lodash/defaults" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "defaults">;2
}2
2
declare module "lodash/defaultsDeep" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "defaultsDeep">;2
}2
2
declare module "lodash/entries" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "entries">;2
}2
2
declare module "lodash/entriesIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "entriesIn">;2
}2
2
declare module "lodash/extend" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "extend">;2
}2
2
declare module "lodash/extendWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "extendWith">;2
}2
2
declare module "lodash/findKey" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "findKey">;2
}2
2
declare module "lodash/findLastKey" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "findLastKey">;2
}2
2
declare module "lodash/forIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forIn">;2
}2
2
declare module "lodash/forInRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forInRight">;2
}2
2
declare module "lodash/forOwn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forOwn">;2
}2
2
declare module "lodash/forOwnRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "forOwnRight">;2
}2
2
declare module "lodash/functions" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "functions">;2
}2
2
declare module "lodash/functionsIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "functionsIn">;2
}2
2
declare module "lodash/get" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "get">;2
}2
2
declare module "lodash/has" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "has">;2
}2
2
declare module "lodash/hasIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "hasIn">;2
}2
2
declare module "lodash/invert" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "invert">;2
}2
2
declare module "lodash/invertBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "invertBy">;2
}2
2
declare module "lodash/invoke" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "invoke">;2
}2
2
declare module "lodash/keys" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "keys">;2
}2
2
declare module "lodash/keysIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "keysIn">;2
}2
2
declare module "lodash/mapKeys" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "mapKeys">;2
}2
2
declare module "lodash/mapValues" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "mapValues">;2
}2
2
declare module "lodash/merge" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "merge">;2
}2
2
declare module "lodash/mergeWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "mergeWith">;2
}2
2
declare module "lodash/omit" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "omit">;2
}2
2
declare module "lodash/omitBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "omitBy">;2
}2
2
declare module "lodash/pick" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pick">;2
}2
2
declare module "lodash/pickBy" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pickBy">;2
}2
2
declare module "lodash/result" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "result">;2
}2
2
declare module "lodash/set" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "set">;2
}2
2
declare module "lodash/setWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "setWith">;2
}2
2
declare module "lodash/toPairs" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toPairs">;2
}2
2
declare module "lodash/toPairsIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toPairsIn">;2
}2
2
declare module "lodash/transform" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "transform">;2
}2
2
declare module "lodash/unset" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unset">;2
}2
2
declare module "lodash/update" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "update">;2
}2
2
declare module "lodash/updateWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "updateWith">;2
}2
2
declare module "lodash/values" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "values">;2
}2
2
declare module "lodash/valuesIn" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "valuesIn">;2
}2
2
declare module "lodash/chain" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "chain">;2
}2
2
declare module "lodash/tap" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "tap">;2
}2
2
declare module "lodash/thru" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "thru">;2
}2
2
declare module "lodash/camelCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "camelCase">;2
}2
2
declare module "lodash/capitalize" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "capitalize">;2
}2
2
declare module "lodash/deburr" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "deburr">;2
}2
2
declare module "lodash/endsWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "endsWith">;2
}2
2
declare module "lodash/escape" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "escape">;2
}2
2
declare module "lodash/escapeRegExp" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "escapeRegExp">;2
}2
2
declare module "lodash/kebabCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "kebabCase">;2
}2
2
declare module "lodash/lowerCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "lowerCase">;2
}2
2
declare module "lodash/lowerFirst" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "lowerFirst">;2
}2
2
declare module "lodash/pad" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "pad">;2
}2
2
declare module "lodash/padEnd" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "padEnd">;2
}2
2
declare module "lodash/padStart" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "padStart">;2
}2
2
declare module "lodash/parseInt" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "parseInt">;2
}2
2
declare module "lodash/repeat" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "repeat">;2
}2
2
declare module "lodash/replace" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "replace">;2
}2
2
declare module "lodash/snakeCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "snakeCase">;2
}2
2
declare module "lodash/split" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "split">;2
}2
2
declare module "lodash/startCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "startCase">;2
}2
2
declare module "lodash/startsWith" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "startsWith">;2
}2
2
declare module "lodash/template" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "template">;2
}2
2
declare module "lodash/toLower" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toLower">;2
}2
2
declare module "lodash/toUpper" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toUpper">;2
}2
2
declare module "lodash/trim" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "trim">;2
}2
2
declare module "lodash/trimEnd" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "trimEnd">;2
}2
2
declare module "lodash/trimStart" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "trimStart">;2
}2
2
declare module "lodash/truncate" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "truncate">;2
}2
2
declare module "lodash/unescape" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "unescape">;2
}2
2
declare module "lodash/upperCase" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "upperCase">;2
}2
2
declare module "lodash/upperFirst" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "upperFirst">;2
}2
2
declare module "lodash/words" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "words">;2
}2
2
declare module "lodash/attempt" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "attempt">;2
}2
2
declare module "lodash/bindAll" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "bindAll">;2
}2
2
declare module "lodash/cond" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "cond">;2
}2
2
declare module "lodash/conforms" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "conforms">;2
}2
2
declare module "lodash/constant" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "constant">;2
}2
2
declare module "lodash/defaultTo" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "defaultTo">;2
}2
2
declare module "lodash/flow" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flow">;2
}2
2
declare module "lodash/flowRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "flowRight">;2
}2
2
declare module "lodash/identity" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "identity">;2
}2
2
declare module "lodash/iteratee" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "iteratee">;2
}2
2
declare module "lodash/matches" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "matches">;2
}2
2
declare module "lodash/matchesProperty" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "matchesProperty">;2
}2
2
declare module "lodash/method" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "method">;2
}2
2
declare module "lodash/methodOf" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "methodOf">;2
}2
2
declare module "lodash/mixin" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "mixin">;2
}2
2
declare module "lodash/noConflict" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "noConflict">;2
}2
2
declare module "lodash/noop" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "noop">;2
}2
2
declare module "lodash/nthArg" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "nthArg">;2
}2
2
declare module "lodash/over" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "over">;2
}2
2
declare module "lodash/overEvery" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "overEvery">;2
}2
2
declare module "lodash/overSome" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "overSome">;2
}2
2
declare module "lodash/property" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "property">;2
}2
2
declare module "lodash/propertyOf" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "propertyOf">;2
}2
2
declare module "lodash/range" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "range">;2
}2
2
declare module "lodash/rangeRight" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "rangeRight">;2
}2
2
declare module "lodash/runInContext" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "runInContext">;2
}2
2
declare module "lodash/stubArray" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "stubArray">;2
}2
2
declare module "lodash/stubFalse" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "stubFalse">;2
}2
2
declare module "lodash/stubObject" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "stubObject">;2
}2
2
declare module "lodash/stubString" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "stubString">;2
}2
2
declare module "lodash/stubTrue" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "stubTrue">;2
}2
2
declare module "lodash/times" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "times">;2
}2
2
declare module "lodash/toPath" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "toPath">;2
}2
2
declare module "lodash/uniqueId" {2
  declare module.exports: $PropertyType<$Exports<"lodash">, "uniqueId">;2
}2
// flow-typed signature: de535bf82f2186287df01b1d05ef73552
// flow-typed version: <<STUB>>/openssl-wrapper_v0.3.4/flow_v0.69.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'openssl-wrapper'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'openssl-wrapper' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'openssl-wrapper/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'openssl-wrapper/src/index' {2
  declare module.exports: any;2
}2
2
declare module 'openssl-wrapper/test/index.spec' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'openssl-wrapper/lib/index.js' {2
  declare module.exports: $Exports<'openssl-wrapper/lib/index'>;2
}2
declare module 'openssl-wrapper/src/index.js' {2
  declare module.exports: $Exports<'openssl-wrapper/src/index'>;2
}2
declare module 'openssl-wrapper/test/index.spec.js' {2
  declare module.exports: $Exports<'openssl-wrapper/test/index.spec'>;2
}2
// flow-typed signature: 41ed726d42e8bdc8e940fef3395a96492
// flow-typed version: <<STUB>>/polished_v^1.1.1/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'polished'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'polished' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'polished/dist/polished.es' {2
  declare module.exports: any;2
}2
2
declare module 'polished/dist/polished' {2
  declare module.exports: any;2
}2
2
declare module 'polished/dist/polished.min' {2
  declare module.exports: any;2
}2
2
declare module 'polished/docs/assets/anchor' {2
  declare module.exports: any;2
}2
2
declare module 'polished/docs/assets/docs' {2
  declare module.exports: any;2
}2
2
declare module 'polished/docs/assets/highlight.pack' {2
  declare module.exports: any;2
}2
2
declare module 'polished/docs/assets/polished' {2
  declare module.exports: any;2
}2
2
declare module 'polished/docs/assets/script' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/adjustHue' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/complement' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/darken' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/desaturate' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/grayscale' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/hsl' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/hsla' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/invert' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/lighten' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/mix' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/opacify' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/parseToHsl' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/parseToRgb' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/readableColor' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/rgb' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/rgba' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/saturate' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/setHue' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/setLightness' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/setSaturation' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/shade' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/tint' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/toColorString' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/color/transparentize' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/helpers/directionalProperty' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/helpers/em' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/helpers/modularScale' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/helpers/rem' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/helpers/stripUnit' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_capitalizeString' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_curry' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_endsWith' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_guard' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_hslToHex' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_hslToRgb' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_isValidDimensionValue' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_nameToHex' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_numberToHex' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_polishedLogs' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_pxto' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_reduceHexValue' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_rgbToHsl' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/internalHelpers/_statefulSelectors' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/clearFix' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/ellipsis' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/fontFace' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/hideText' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/hiDPI' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/normalize' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/placeholder' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/radialGradient' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/retinaImage' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/selection' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/timingFunctions' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/triangle' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/mixins/wordWrap' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/animation' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/backgroundImages' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/backgrounds' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/borderColor' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/borderRadius' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/borderStyle' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/borderWidth' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/buttons' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/margin' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/padding' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/position' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/size' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/textInputs' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/shorthands/transitions' {2
  declare module.exports: any;2
}2
2
declare module 'polished/lib/types/color' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'polished/dist/polished.es.js' {2
  declare module.exports: $Exports<'polished/dist/polished.es'>;2
}2
declare module 'polished/dist/polished.js' {2
  declare module.exports: $Exports<'polished/dist/polished'>;2
}2
declare module 'polished/dist/polished.min.js' {2
  declare module.exports: $Exports<'polished/dist/polished.min'>;2
}2
declare module 'polished/docs/assets/anchor.js' {2
  declare module.exports: $Exports<'polished/docs/assets/anchor'>;2
}2
declare module 'polished/docs/assets/docs.js' {2
  declare module.exports: $Exports<'polished/docs/assets/docs'>;2
}2
declare module 'polished/docs/assets/highlight.pack.js' {2
  declare module.exports: $Exports<'polished/docs/assets/highlight.pack'>;2
}2
declare module 'polished/docs/assets/polished.js' {2
  declare module.exports: $Exports<'polished/docs/assets/polished'>;2
}2
declare module 'polished/docs/assets/script.js' {2
  declare module.exports: $Exports<'polished/docs/assets/script'>;2
}2
declare module 'polished/lib/color/adjustHue.js' {2
  declare module.exports: $Exports<'polished/lib/color/adjustHue'>;2
}2
declare module 'polished/lib/color/complement.js' {2
  declare module.exports: $Exports<'polished/lib/color/complement'>;2
}2
declare module 'polished/lib/color/darken.js' {2
  declare module.exports: $Exports<'polished/lib/color/darken'>;2
}2
declare module 'polished/lib/color/desaturate.js' {2
  declare module.exports: $Exports<'polished/lib/color/desaturate'>;2
}2
declare module 'polished/lib/color/grayscale.js' {2
  declare module.exports: $Exports<'polished/lib/color/grayscale'>;2
}2
declare module 'polished/lib/color/hsl.js' {2
  declare module.exports: $Exports<'polished/lib/color/hsl'>;2
}2
declare module 'polished/lib/color/hsla.js' {2
  declare module.exports: $Exports<'polished/lib/color/hsla'>;2
}2
declare module 'polished/lib/color/invert.js' {2
  declare module.exports: $Exports<'polished/lib/color/invert'>;2
}2
declare module 'polished/lib/color/lighten.js' {2
  declare module.exports: $Exports<'polished/lib/color/lighten'>;2
}2
declare module 'polished/lib/color/mix.js' {2
  declare module.exports: $Exports<'polished/lib/color/mix'>;2
}2
declare module 'polished/lib/color/opacify.js' {2
  declare module.exports: $Exports<'polished/lib/color/opacify'>;2
}2
declare module 'polished/lib/color/parseToHsl.js' {2
  declare module.exports: $Exports<'polished/lib/color/parseToHsl'>;2
}2
declare module 'polished/lib/color/parseToRgb.js' {2
  declare module.exports: $Exports<'polished/lib/color/parseToRgb'>;2
}2
declare module 'polished/lib/color/readableColor.js' {2
  declare module.exports: $Exports<'polished/lib/color/readableColor'>;2
}2
declare module 'polished/lib/color/rgb.js' {2
  declare module.exports: $Exports<'polished/lib/color/rgb'>;2
}2
declare module 'polished/lib/color/rgba.js' {2
  declare module.exports: $Exports<'polished/lib/color/rgba'>;2
}2
declare module 'polished/lib/color/saturate.js' {2
  declare module.exports: $Exports<'polished/lib/color/saturate'>;2
}2
declare module 'polished/lib/color/setHue.js' {2
  declare module.exports: $Exports<'polished/lib/color/setHue'>;2
}2
declare module 'polished/lib/color/setLightness.js' {2
  declare module.exports: $Exports<'polished/lib/color/setLightness'>;2
}2
declare module 'polished/lib/color/setSaturation.js' {2
  declare module.exports: $Exports<'polished/lib/color/setSaturation'>;2
}2
declare module 'polished/lib/color/shade.js' {2
  declare module.exports: $Exports<'polished/lib/color/shade'>;2
}2
declare module 'polished/lib/color/tint.js' {2
  declare module.exports: $Exports<'polished/lib/color/tint'>;2
}2
declare module 'polished/lib/color/toColorString.js' {2
  declare module.exports: $Exports<'polished/lib/color/toColorString'>;2
}2
declare module 'polished/lib/color/transparentize.js' {2
  declare module.exports: $Exports<'polished/lib/color/transparentize'>;2
}2
declare module 'polished/lib/helpers/directionalProperty.js' {2
  declare module.exports: $Exports<'polished/lib/helpers/directionalProperty'>;2
}2
declare module 'polished/lib/helpers/em.js' {2
  declare module.exports: $Exports<'polished/lib/helpers/em'>;2
}2
declare module 'polished/lib/helpers/modularScale.js' {2
  declare module.exports: $Exports<'polished/lib/helpers/modularScale'>;2
}2
declare module 'polished/lib/helpers/rem.js' {2
  declare module.exports: $Exports<'polished/lib/helpers/rem'>;2
}2
declare module 'polished/lib/helpers/stripUnit.js' {2
  declare module.exports: $Exports<'polished/lib/helpers/stripUnit'>;2
}2
declare module 'polished/lib/index.js' {2
  declare module.exports: $Exports<'polished/lib/index'>;2
}2
declare module 'polished/lib/internalHelpers/_capitalizeString.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_capitalizeString'>;2
}2
declare module 'polished/lib/internalHelpers/_curry.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_curry'>;2
}2
declare module 'polished/lib/internalHelpers/_endsWith.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_endsWith'>;2
}2
declare module 'polished/lib/internalHelpers/_guard.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_guard'>;2
}2
declare module 'polished/lib/internalHelpers/_hslToHex.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_hslToHex'>;2
}2
declare module 'polished/lib/internalHelpers/_hslToRgb.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_hslToRgb'>;2
}2
declare module 'polished/lib/internalHelpers/_isValidDimensionValue.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_isValidDimensionValue'>;2
}2
declare module 'polished/lib/internalHelpers/_nameToHex.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_nameToHex'>;2
}2
declare module 'polished/lib/internalHelpers/_numberToHex.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_numberToHex'>;2
}2
declare module 'polished/lib/internalHelpers/_polishedLogs.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_polishedLogs'>;2
}2
declare module 'polished/lib/internalHelpers/_pxto.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_pxto'>;2
}2
declare module 'polished/lib/internalHelpers/_reduceHexValue.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_reduceHexValue'>;2
}2
declare module 'polished/lib/internalHelpers/_rgbToHsl.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_rgbToHsl'>;2
}2
declare module 'polished/lib/internalHelpers/_statefulSelectors.js' {2
  declare module.exports: $Exports<'polished/lib/internalHelpers/_statefulSelectors'>;2
}2
declare module 'polished/lib/mixins/clearFix.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/clearFix'>;2
}2
declare module 'polished/lib/mixins/ellipsis.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/ellipsis'>;2
}2
declare module 'polished/lib/mixins/fontFace.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/fontFace'>;2
}2
declare module 'polished/lib/mixins/hideText.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/hideText'>;2
}2
declare module 'polished/lib/mixins/hiDPI.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/hiDPI'>;2
}2
declare module 'polished/lib/mixins/normalize.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/normalize'>;2
}2
declare module 'polished/lib/mixins/placeholder.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/placeholder'>;2
}2
declare module 'polished/lib/mixins/radialGradient.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/radialGradient'>;2
}2
declare module 'polished/lib/mixins/retinaImage.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/retinaImage'>;2
}2
declare module 'polished/lib/mixins/selection.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/selection'>;2
}2
declare module 'polished/lib/mixins/timingFunctions.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/timingFunctions'>;2
}2
declare module 'polished/lib/mixins/triangle.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/triangle'>;2
}2
declare module 'polished/lib/mixins/wordWrap.js' {2
  declare module.exports: $Exports<'polished/lib/mixins/wordWrap'>;2
}2
declare module 'polished/lib/shorthands/animation.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/animation'>;2
}2
declare module 'polished/lib/shorthands/backgroundImages.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/backgroundImages'>;2
}2
declare module 'polished/lib/shorthands/backgrounds.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/backgrounds'>;2
}2
declare module 'polished/lib/shorthands/borderColor.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/borderColor'>;2
}2
declare module 'polished/lib/shorthands/borderRadius.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/borderRadius'>;2
}2
declare module 'polished/lib/shorthands/borderStyle.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/borderStyle'>;2
}2
declare module 'polished/lib/shorthands/borderWidth.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/borderWidth'>;2
}2
declare module 'polished/lib/shorthands/buttons.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/buttons'>;2
}2
declare module 'polished/lib/shorthands/margin.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/margin'>;2
}2
declare module 'polished/lib/shorthands/padding.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/padding'>;2
}2
declare module 'polished/lib/shorthands/position.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/position'>;2
}2
declare module 'polished/lib/shorthands/size.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/size'>;2
}2
declare module 'polished/lib/shorthands/textInputs.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/textInputs'>;2
}2
declare module 'polished/lib/shorthands/transitions.js' {2
  declare module.exports: $Exports<'polished/lib/shorthands/transitions'>;2
}2
declare module 'polished/lib/types/color.js' {2
  declare module.exports: $Exports<'polished/lib/types/color'>;2
}2
// flow-typed signature: 8bbe6221bd08557b01d489734074fd022
// flow-typed version: <<STUB>>/prettier_v1.5.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'prettier'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'prettier' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'prettier/bin/prettier' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-babylon' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-flow' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-graphql' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-json' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-parse5' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-postcss' {2
  declare module.exports: any;2
}2
2
declare module 'prettier/parser-typescript' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'prettier/bin/prettier.js' {2
  declare module.exports: $Exports<'prettier/bin/prettier'>;2
}2
declare module 'prettier/index' {2
  declare module.exports: $Exports<'prettier'>;2
}2
declare module 'prettier/index.js' {2
  declare module.exports: $Exports<'prettier'>;2
}2
declare module 'prettier/parser-babylon.js' {2
  declare module.exports: $Exports<'prettier/parser-babylon'>;2
}2
declare module 'prettier/parser-flow.js' {2
  declare module.exports: $Exports<'prettier/parser-flow'>;2
}2
declare module 'prettier/parser-graphql.js' {2
  declare module.exports: $Exports<'prettier/parser-graphql'>;2
}2
declare module 'prettier/parser-json.js' {2
  declare module.exports: $Exports<'prettier/parser-json'>;2
}2
declare module 'prettier/parser-parse5.js' {2
  declare module.exports: $Exports<'prettier/parser-parse5'>;2
}2
declare module 'prettier/parser-postcss.js' {2
  declare module.exports: $Exports<'prettier/parser-postcss'>;2
}2
declare module 'prettier/parser-typescript.js' {2
  declare module.exports: $Exports<'prettier/parser-typescript'>;2
}2
// flow-typed signature: 3eaa1f24c7397b78a7481992d2cddcb22
// flow-typed version: a1a20d4928/prop-types_v15.x.x/flow_>=v0.41.x2
2
type $npm$propTypes$ReactPropsCheckType = (2
  props: any,2
  propName: string,2
  componentName: string,2
  href?: string) => ?Error;2
2
declare module 'prop-types' {2
  declare var array: React$PropType$Primitive<Array<any>>;2
  declare var bool: React$PropType$Primitive<boolean>;2
  declare var func: React$PropType$Primitive<Function>;2
  declare var number: React$PropType$Primitive<number>;2
  declare var object: React$PropType$Primitive<Object>;2
  declare var string: React$PropType$Primitive<string>;2
  declare var any: React$PropType$Primitive<any>;2
  declare var arrayOf: React$PropType$ArrayOf;2
  declare var element: React$PropType$Primitive<any>; /* TODO */2
  declare var instanceOf: React$PropType$InstanceOf;2
  declare var node: React$PropType$Primitive<any>; /* TODO */2
  declare var objectOf: React$PropType$ObjectOf;2
  declare var oneOf: React$PropType$OneOf;2
  declare var oneOfType: React$PropType$OneOfType;2
  declare var shape: React$PropType$Shape;2
2
  declare function checkPropTypes<V>(2
    propTypes: $Subtype<{[_: $Keys<V>]: $npm$propTypes$ReactPropsCheckType}>,2
    values: V,2
    location: string,2
    componentName: string,2
    getStack: ?(() => ?string)2
  ) : void;2
}2
// flow-typed signature: d3fd33836d3ae586d973d7728260a3112
// flow-typed version: <<STUB>>/react-color_v^2.11.7/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'react-color'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'react-color' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'react-color/examples/Button' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/examples/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/examples/Sketch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/alpha/Alpha' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/alpha/AlphaPointer' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/alpha/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/block/Block' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/block/BlockSwatches' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/block/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/chrome/Chrome' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/chrome/ChromeFields' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/chrome/ChromePointer' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/chrome/ChromePointerCircle' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/chrome/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/circle/Circle' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/circle/CircleSwatch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/circle/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/Alpha' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/Checkboard' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/ColorWrap' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/EditableInput' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/Hue' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/Saturation' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/common/Swatch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/compact/Compact' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/compact/CompactColor' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/compact/CompactFields' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/compact/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/github/Github' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/github/GithubSwatch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/github/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/hue/Hue' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/hue/HuePointer' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/hue/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/material/Material' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/material/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/Photoshop' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/PhotoshopButton' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/PhotoshopFields' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/PhotoshopPointer' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/PhotoshopPointerCircle' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/PhotoshopPreviews' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/photoshop/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/sketch/Sketch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/sketch/SketchFields' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/sketch/SketchPresetColors' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/sketch/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/slider/Slider' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/slider/SliderPointer' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/slider/SliderSwatch' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/slider/SliderSwatches' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/slider/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/swatches/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/swatches/Swatches' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/swatches/SwatchesColor' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/swatches/SwatchesGroup' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/twitter/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/components/twitter/Twitter' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/alpha' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/checkboard' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/color' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/hue' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/interaction' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/saturation' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/helpers/spec' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/lib/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/highlight' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/highlight.js/highlight' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/highlight.js/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/highlight.js/languages/javascript' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-basic-layout/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-basic-layout/lib/components/Container' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-basic-layout/lib/components/Grid' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/Code' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/Docs' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/Markdown' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/MarkdownTitle' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/Sidebar' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/components/SidebarItem' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-docs/lib/helpers/markdown' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/lib/components/Link' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/lib/components/Raised' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/lib/components/Tab' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/lib/components/Tabs' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-material-design/lib/components/Tile' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-move/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/react-move/lib/components/Move' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/remarkable/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/tinycolor2/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/modules/webpack-react-static/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/scripts/docs-dist' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/scripts/docs-server' {2
  declare module.exports: any;2
}2
2
declare module 'react-color/webpack.config' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'react-color/examples/Button.js' {2
  declare module.exports: $Exports<'react-color/examples/Button'>;2
}2
declare module 'react-color/examples/index.js' {2
  declare module.exports: $Exports<'react-color/examples/index'>;2
}2
declare module 'react-color/examples/Sketch.js' {2
  declare module.exports: $Exports<'react-color/examples/Sketch'>;2
}2
declare module 'react-color/lib/components/alpha/Alpha.js' {2
  declare module.exports: $Exports<'react-color/lib/components/alpha/Alpha'>;2
}2
declare module 'react-color/lib/components/alpha/AlphaPointer.js' {2
  declare module.exports: $Exports<'react-color/lib/components/alpha/AlphaPointer'>;2
}2
declare module 'react-color/lib/components/alpha/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/alpha/spec'>;2
}2
declare module 'react-color/lib/components/block/Block.js' {2
  declare module.exports: $Exports<'react-color/lib/components/block/Block'>;2
}2
declare module 'react-color/lib/components/block/BlockSwatches.js' {2
  declare module.exports: $Exports<'react-color/lib/components/block/BlockSwatches'>;2
}2
declare module 'react-color/lib/components/block/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/block/spec'>;2
}2
declare module 'react-color/lib/components/chrome/Chrome.js' {2
  declare module.exports: $Exports<'react-color/lib/components/chrome/Chrome'>;2
}2
declare module 'react-color/lib/components/chrome/ChromeFields.js' {2
  declare module.exports: $Exports<'react-color/lib/components/chrome/ChromeFields'>;2
}2
declare module 'react-color/lib/components/chrome/ChromePointer.js' {2
  declare module.exports: $Exports<'react-color/lib/components/chrome/ChromePointer'>;2
}2
declare module 'react-color/lib/components/chrome/ChromePointerCircle.js' {2
  declare module.exports: $Exports<'react-color/lib/components/chrome/ChromePointerCircle'>;2
}2
declare module 'react-color/lib/components/chrome/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/chrome/spec'>;2
}2
declare module 'react-color/lib/components/circle/Circle.js' {2
  declare module.exports: $Exports<'react-color/lib/components/circle/Circle'>;2
}2
declare module 'react-color/lib/components/circle/CircleSwatch.js' {2
  declare module.exports: $Exports<'react-color/lib/components/circle/CircleSwatch'>;2
}2
declare module 'react-color/lib/components/circle/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/circle/spec'>;2
}2
declare module 'react-color/lib/components/common/Alpha.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/Alpha'>;2
}2
declare module 'react-color/lib/components/common/Checkboard.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/Checkboard'>;2
}2
declare module 'react-color/lib/components/common/ColorWrap.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/ColorWrap'>;2
}2
declare module 'react-color/lib/components/common/EditableInput.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/EditableInput'>;2
}2
declare module 'react-color/lib/components/common/Hue.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/Hue'>;2
}2
declare module 'react-color/lib/components/common/index.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/index'>;2
}2
declare module 'react-color/lib/components/common/Saturation.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/Saturation'>;2
}2
declare module 'react-color/lib/components/common/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/spec'>;2
}2
declare module 'react-color/lib/components/common/Swatch.js' {2
  declare module.exports: $Exports<'react-color/lib/components/common/Swatch'>;2
}2
declare module 'react-color/lib/components/compact/Compact.js' {2
  declare module.exports: $Exports<'react-color/lib/components/compact/Compact'>;2
}2
declare module 'react-color/lib/components/compact/CompactColor.js' {2
  declare module.exports: $Exports<'react-color/lib/components/compact/CompactColor'>;2
}2
declare module 'react-color/lib/components/compact/CompactFields.js' {2
  declare module.exports: $Exports<'react-color/lib/components/compact/CompactFields'>;2
}2
declare module 'react-color/lib/components/compact/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/compact/spec'>;2
}2
declare module 'react-color/lib/components/github/Github.js' {2
  declare module.exports: $Exports<'react-color/lib/components/github/Github'>;2
}2
declare module 'react-color/lib/components/github/GithubSwatch.js' {2
  declare module.exports: $Exports<'react-color/lib/components/github/GithubSwatch'>;2
}2
declare module 'react-color/lib/components/github/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/github/spec'>;2
}2
declare module 'react-color/lib/components/hue/Hue.js' {2
  declare module.exports: $Exports<'react-color/lib/components/hue/Hue'>;2
}2
declare module 'react-color/lib/components/hue/HuePointer.js' {2
  declare module.exports: $Exports<'react-color/lib/components/hue/HuePointer'>;2
}2
declare module 'react-color/lib/components/hue/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/hue/spec'>;2
}2
declare module 'react-color/lib/components/material/Material.js' {2
  declare module.exports: $Exports<'react-color/lib/components/material/Material'>;2
}2
declare module 'react-color/lib/components/material/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/material/spec'>;2
}2
declare module 'react-color/lib/components/photoshop/Photoshop.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/Photoshop'>;2
}2
declare module 'react-color/lib/components/photoshop/PhotoshopButton.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/PhotoshopButton'>;2
}2
declare module 'react-color/lib/components/photoshop/PhotoshopFields.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/PhotoshopFields'>;2
}2
declare module 'react-color/lib/components/photoshop/PhotoshopPointer.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/PhotoshopPointer'>;2
}2
declare module 'react-color/lib/components/photoshop/PhotoshopPointerCircle.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/PhotoshopPointerCircle'>;2
}2
declare module 'react-color/lib/components/photoshop/PhotoshopPreviews.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/PhotoshopPreviews'>;2
}2
declare module 'react-color/lib/components/photoshop/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/photoshop/spec'>;2
}2
declare module 'react-color/lib/components/sketch/Sketch.js' {2
  declare module.exports: $Exports<'react-color/lib/components/sketch/Sketch'>;2
}2
declare module 'react-color/lib/components/sketch/SketchFields.js' {2
  declare module.exports: $Exports<'react-color/lib/components/sketch/SketchFields'>;2
}2
declare module 'react-color/lib/components/sketch/SketchPresetColors.js' {2
  declare module.exports: $Exports<'react-color/lib/components/sketch/SketchPresetColors'>;2
}2
declare module 'react-color/lib/components/sketch/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/sketch/spec'>;2
}2
declare module 'react-color/lib/components/slider/Slider.js' {2
  declare module.exports: $Exports<'react-color/lib/components/slider/Slider'>;2
}2
declare module 'react-color/lib/components/slider/SliderPointer.js' {2
  declare module.exports: $Exports<'react-color/lib/components/slider/SliderPointer'>;2
}2
declare module 'react-color/lib/components/slider/SliderSwatch.js' {2
  declare module.exports: $Exports<'react-color/lib/components/slider/SliderSwatch'>;2
}2
declare module 'react-color/lib/components/slider/SliderSwatches.js' {2
  declare module.exports: $Exports<'react-color/lib/components/slider/SliderSwatches'>;2
}2
declare module 'react-color/lib/components/slider/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/slider/spec'>;2
}2
declare module 'react-color/lib/components/swatches/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/swatches/spec'>;2
}2
declare module 'react-color/lib/components/swatches/Swatches.js' {2
  declare module.exports: $Exports<'react-color/lib/components/swatches/Swatches'>;2
}2
declare module 'react-color/lib/components/swatches/SwatchesColor.js' {2
  declare module.exports: $Exports<'react-color/lib/components/swatches/SwatchesColor'>;2
}2
declare module 'react-color/lib/components/swatches/SwatchesGroup.js' {2
  declare module.exports: $Exports<'react-color/lib/components/swatches/SwatchesGroup'>;2
}2
declare module 'react-color/lib/components/twitter/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/components/twitter/spec'>;2
}2
declare module 'react-color/lib/components/twitter/Twitter.js' {2
  declare module.exports: $Exports<'react-color/lib/components/twitter/Twitter'>;2
}2
declare module 'react-color/lib/helpers/alpha.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/alpha'>;2
}2
declare module 'react-color/lib/helpers/checkboard.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/checkboard'>;2
}2
declare module 'react-color/lib/helpers/color.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/color'>;2
}2
declare module 'react-color/lib/helpers/hue.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/hue'>;2
}2
declare module 'react-color/lib/helpers/interaction.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/interaction'>;2
}2
declare module 'react-color/lib/helpers/saturation.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/saturation'>;2
}2
declare module 'react-color/lib/helpers/spec.js' {2
  declare module.exports: $Exports<'react-color/lib/helpers/spec'>;2
}2
declare module 'react-color/lib/index.js' {2
  declare module.exports: $Exports<'react-color/lib/index'>;2
}2
declare module 'react-color/modules/highlight.js' {2
  declare module.exports: $Exports<'react-color/modules/highlight'>;2
}2
declare module 'react-color/modules/highlight.js/highlight.js' {2
  declare module.exports: $Exports<'react-color/modules/highlight.js/highlight'>;2
}2
declare module 'react-color/modules/highlight.js/index.js' {2
  declare module.exports: $Exports<'react-color/modules/highlight.js/index'>;2
}2
declare module 'react-color/modules/highlight.js/languages/javascript.js' {2
  declare module.exports: $Exports<'react-color/modules/highlight.js/languages/javascript'>;2
}2
declare module 'react-color/modules/react-basic-layout/index.js' {2
  declare module.exports: $Exports<'react-color/modules/react-basic-layout/index'>;2
}2
declare module 'react-color/modules/react-basic-layout/lib/components/Container.js' {2
  declare module.exports: $Exports<'react-color/modules/react-basic-layout/lib/components/Container'>;2
}2
declare module 'react-color/modules/react-basic-layout/lib/components/Grid.js' {2
  declare module.exports: $Exports<'react-color/modules/react-basic-layout/lib/components/Grid'>;2
}2
declare module 'react-color/modules/react-docs/index.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/index'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/Code.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/Code'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/Docs.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/Docs'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/Markdown.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/Markdown'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/MarkdownTitle.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/MarkdownTitle'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/Sidebar.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/Sidebar'>;2
}2
declare module 'react-color/modules/react-docs/lib/components/SidebarItem.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/components/SidebarItem'>;2
}2
declare module 'react-color/modules/react-docs/lib/helpers/markdown.js' {2
  declare module.exports: $Exports<'react-color/modules/react-docs/lib/helpers/markdown'>;2
}2
declare module 'react-color/modules/react-material-design/index.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/index'>;2
}2
declare module 'react-color/modules/react-material-design/lib/components/Link.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/lib/components/Link'>;2
}2
declare module 'react-color/modules/react-material-design/lib/components/Raised.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/lib/components/Raised'>;2
}2
declare module 'react-color/modules/react-material-design/lib/components/Tab.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/lib/components/Tab'>;2
}2
declare module 'react-color/modules/react-material-design/lib/components/Tabs.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/lib/components/Tabs'>;2
}2
declare module 'react-color/modules/react-material-design/lib/components/Tile.js' {2
  declare module.exports: $Exports<'react-color/modules/react-material-design/lib/components/Tile'>;2
}2
declare module 'react-color/modules/react-move/index.js' {2
  declare module.exports: $Exports<'react-color/modules/react-move/index'>;2
}2
declare module 'react-color/modules/react-move/lib/components/Move.js' {2
  declare module.exports: $Exports<'react-color/modules/react-move/lib/components/Move'>;2
}2
declare module 'react-color/modules/remarkable/index.js' {2
  declare module.exports: $Exports<'react-color/modules/remarkable/index'>;2
}2
declare module 'react-color/modules/tinycolor2/index.js' {2
  declare module.exports: $Exports<'react-color/modules/tinycolor2/index'>;2
}2
declare module 'react-color/modules/webpack-react-static/index.js' {2
  declare module.exports: $Exports<'react-color/modules/webpack-react-static/index'>;2
}2
declare module 'react-color/scripts/docs-dist.js' {2
  declare module.exports: $Exports<'react-color/scripts/docs-dist'>;2
}2
declare module 'react-color/scripts/docs-server.js' {2
  declare module.exports: $Exports<'react-color/scripts/docs-server'>;2
}2
declare module 'react-color/webpack.config.js' {2
  declare module.exports: $Exports<'react-color/webpack.config'>;2
}2
// flow-typed signature: fd664fcf7a2fc39e3ce5d7776ec7ae242
// flow-typed version: <<STUB>>/react-devtools-core_v3.0.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'react-devtools-core'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'react-devtools-core' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'react-devtools-core/build/backend' {2
  declare module.exports: any;2
}2
2
declare module 'react-devtools-core/build/standalone' {2
  declare module.exports: any;2
}2
2
declare module 'react-devtools-core/standalone' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'react-devtools-core/build/backend.js' {2
  declare module.exports: $Exports<'react-devtools-core/build/backend'>;2
}2
declare module 'react-devtools-core/build/standalone.js' {2
  declare module.exports: $Exports<'react-devtools-core/build/standalone'>;2
}2
declare module 'react-devtools-core/index' {2
  declare module.exports: $Exports<'react-devtools-core'>;2
}2
declare module 'react-devtools-core/index.js' {2
  declare module.exports: $Exports<'react-devtools-core'>;2
}2
declare module 'react-devtools-core/standalone.js' {2
  declare module.exports: $Exports<'react-devtools-core/standalone'>;2
}2
// flow-typed signature: 16b40ff613d36712444ef20fb107de7c2
// flow-typed version: be6cfc6753/react-redux_v5.x.x/flow_>=v0.62.02
2
import type { Dispatch, Store } from "redux";2
2
declare module "react-redux" {2
  import type { ComponentType, ElementConfig } from 'react';2
2
  declare export class Provider<S, A> extends React$Component<{2
    store: Store<S, A>,2
    children?: any2
  }> {}2
2
  declare export function createProvider(2
    storeKey?: string,2
    subKey?: string2
  ): Provider<*, *>;2
2
  /*2
2
  S = State2
  A = Action2
  OP = OwnProps2
  SP = StateProps2
  DP = DispatchProps2
  MP = Merge props2
  MDP = Map dispatch to props object2
  RSP = Returned state props2
  RDP = Returned dispatch props2
  RMP = Returned merge props2
  CP = Props for returned component2
  Com = React Component2
  */2
2
  declare type MapStateToProps<S: Object, SP: Object, RSP: Object> = (state: S, props: SP) => RSP;2
2
  declare type MapDispatchToProps<A, OP: Object, RDP: Object> = (dispatch: Dispatch<A>, ownProps: OP) => RDP;2
2
  declare type MergeProps<SP: Object, DP: Object, MP: Object, RMP: Object> = (2
    stateProps: SP,2
    dispatchProps: DP,2
    ownProps: MP2
  ) => RMP;2
2
  declare type ConnectOptions<S: Object, OP: Object, RSP: Object, RMP: Object> = {|2
    pure?: boolean,2
    withRef?: boolean,2
    areStatesEqual?: (next: S, prev: S) => boolean,2
    areOwnPropsEqual?: (next: OP, prev: OP) => boolean,2
    areStatePropsEqual?: (next: RSP, prev: RSP) => boolean,2
    areMergedPropsEqual?: (next: RMP, prev: RMP) => boolean,2
    storeKey?: string2
  |};2
2
  declare type OmitDispatch<Component> = $Diff<Component, {dispatch: Dispatch<*>}>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    S: Object,2
    DP: Object,2
    RSP: Object,2
    CP: $Diff<OmitDispatch<ElementConfig<Com>>, RSP>2
    >(2
    mapStateToProps: MapStateToProps<S, DP, RSP>,2
    mapDispatchToProps?: null2
  ): (component: Com) => ComponentType<CP & DP>;2
2
  declare export function connect<Com: ComponentType<*>>(2
    mapStateToProps?: null,2
    mapDispatchToProps?: null2
  ): (component: Com) => ComponentType<OmitDispatch<ElementConfig<Com>>>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    A,2
    S: Object,2
    DP: Object,2
    SP: Object,2
    RSP: Object,2
    RDP: Object,2
    CP: $Diff<$Diff<ElementConfig<Com>, RSP>, RDP>2
    >(2
    mapStateToProps: MapStateToProps<S, SP, RSP>,2
    mapDispatchToProps: MapDispatchToProps<A, DP, RDP>2
  ): (component: Com) => ComponentType<CP & SP & DP>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    A,2
    OP: Object,2
    DP: Object,2
    PR: Object,2
    CP: $Diff<ElementConfig<Com>, DP>2
    >(2
    mapStateToProps?: null,2
    mapDispatchToProps: MapDispatchToProps<A, OP, DP>2
  ): (Com) => ComponentType<CP & OP>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    MDP: Object2
    >(2
    mapStateToProps?: null,2
    mapDispatchToProps: MDP2
  ): (component: Com) => ComponentType<$Diff<ElementConfig<Com>, MDP>>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    S: Object,2
    SP: Object,2
    RSP: Object,2
    MDP: Object,2
    CP: $Diff<ElementConfig<Com>, RSP>2
    >(2
    mapStateToProps: MapStateToProps<S, SP, RSP>,2
    mapDispatchToPRops: MDP2
  ): (component: Com) => ComponentType<$Diff<CP, MDP> & SP>;2
2
  declare export function connect<2
    Com: ComponentType<*>,2
    A,2
    S: Object,2
    DP: Object,2
    SP: Object,2
    RSP: Object,2
    RDP: Object,2
    MP: Object,2
    RMP: Object,2
    CP: $Diff<ElementConfig<Com>, RMP>2
    >(2
    mapStateToProps: MapStateToProps<S, SP, RSP>,2
    mapDispatchToProps: ?MapDispatchToProps<A, DP, RDP>,2
    mergeProps: MergeProps<RSP, RDP, MP, RMP>2
  ): (component: Com) => ComponentType<CP & SP & DP & MP>;2
2
  declare export function connect<Com: ComponentType<*>,2
    A,2
    S: Object,2
    DP: Object,2
    SP: Object,2
    RSP: Object,2
    RDP: Object,2
    MP: Object,2
    RMP: Object2
    >(2
    mapStateToProps: ?MapStateToProps<S, SP, RSP>,2
    mapDispatchToProps: ?MapDispatchToProps<A, DP, RDP>,2
    mergeProps: ?MergeProps<RSP, RDP, MP, RMP>,2
    options: ConnectOptions<S, SP & DP & MP, RSP, RMP>2
  ): (component: Com) => ComponentType<$Diff<ElementConfig<Com>, RMP> & SP & DP & MP>;2
2
  declare export default {2
    Provider: typeof Provider,2
    createProvider: typeof createProvider,2
    connect: typeof connect,2
  };2
}2
// flow-typed signature: d75e9be7ed16f88e288f787e982584b82
// flow-typed version: <<STUB>>/react-test-renderer_v^16/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'react-test-renderer'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'react-test-renderer' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'react-test-renderer/cjs/react-test-renderer-shallow.development' {2
  declare module.exports: any;2
}2
2
declare module 'react-test-renderer/cjs/react-test-renderer-shallow.production.min' {2
  declare module.exports: any;2
}2
2
declare module 'react-test-renderer/cjs/react-test-renderer.development' {2
  declare module.exports: any;2
}2
2
declare module 'react-test-renderer/cjs/react-test-renderer.production.min' {2
  declare module.exports: any;2
}2
2
declare module 'react-test-renderer/shallow' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'react-test-renderer/cjs/react-test-renderer-shallow.development.js' {2
  declare module.exports: $Exports<'react-test-renderer/cjs/react-test-renderer-shallow.development'>;2
}2
declare module 'react-test-renderer/cjs/react-test-renderer-shallow.production.min.js' {2
  declare module.exports: $Exports<'react-test-renderer/cjs/react-test-renderer-shallow.production.min'>;2
}2
declare module 'react-test-renderer/cjs/react-test-renderer.development.js' {2
  declare module.exports: $Exports<'react-test-renderer/cjs/react-test-renderer.development'>;2
}2
declare module 'react-test-renderer/cjs/react-test-renderer.production.min.js' {2
  declare module.exports: $Exports<'react-test-renderer/cjs/react-test-renderer.production.min'>;2
}2
declare module 'react-test-renderer/index' {2
  declare module.exports: $Exports<'react-test-renderer'>;2
}2
declare module 'react-test-renderer/index.js' {2
  declare module.exports: $Exports<'react-test-renderer'>;2
}2
declare module 'react-test-renderer/shallow.js' {2
  declare module.exports: $Exports<'react-test-renderer/shallow'>;2
}2
// flow-typed signature: 7ad3746a26284155ba00efee65b4be9b2
// flow-typed version: <<STUB>>/react-virtualized_v^9.13.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'react-virtualized'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'react-virtualized' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/AutoSizer/AutoSizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/AutoSizer/AutoSizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/AutoSizer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/AutoSizer/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/Collection.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/Collection' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/CollectionView' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/Section.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/Section' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/SectionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/SectionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/TestData' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/Grid.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/Grid' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/jest-setup' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/List/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/List/List.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/List/List' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/List/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Masonry/createCellPositioner' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Masonry/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Masonry/Masonry.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Masonry/Masonry' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Masonry/PositionCache' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/MultiGrid/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/MultiGrid/MultiGrid.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/MultiGrid/MultiGrid' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ScrollSync/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ScrollSync/ScrollSync.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/ScrollSync/ScrollSync' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/Column.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/Column' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/defaultCellDataGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/defaultCellRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/defaultHeaderRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/defaultHeaderRowRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/defaultRowRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/SortDirection' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/SortIndicator' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/Table.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/Table' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/Table/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/TestUtils' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/animationFrame' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/createCallbackMemoizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/createCallbackMemoizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/initCellMetadata' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/requestAnimationTimeout' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/utils/TestHelper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/vendor/binarySearchBounds' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/vendor/detectElementResize' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/vendor/intervalTree' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/WindowScroller/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/WindowScroller/utils/dimensions' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/WindowScroller/utils/onScroll' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/WindowScroller/WindowScroller.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/commonjs/WindowScroller/WindowScroller' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/AutoSizer/AutoSizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/AutoSizer/AutoSizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/AutoSizer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/AutoSizer/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/CellMeasurer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/Collection.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/Collection' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/CollectionView' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/Section.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/Section' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/SectionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/SectionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/TestData' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ColumnSizer/ColumnSizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ColumnSizer/ColumnSizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ColumnSizer/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/defaultCellRangeRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/Grid.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/Grid' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/InfiniteLoader/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/jest-setup' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/List/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/List/List.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/List/List' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/List/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Masonry/createCellPositioner' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Masonry/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Masonry/Masonry.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Masonry/Masonry' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Masonry/PositionCache' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/MultiGrid/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/MultiGrid/MultiGrid.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/MultiGrid/MultiGrid' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ScrollSync/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ScrollSync/ScrollSync.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/ScrollSync/ScrollSync' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/Column.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/Column' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/defaultCellDataGetter' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/defaultCellRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/defaultHeaderRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/defaultHeaderRowRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/defaultRowRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/SortDirection' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/SortIndicator' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/Table.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/Table' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/Table/types' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/TestUtils' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/animationFrame' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/createCallbackMemoizer.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/createCallbackMemoizer' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/initCellMetadata' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/requestAnimationTimeout' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/utils/TestHelper' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/vendor/binarySearchBounds' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/vendor/detectElementResize' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/vendor/intervalTree' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/WindowScroller/index' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/WindowScroller/utils/dimensions' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/WindowScroller/utils/onScroll' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/WindowScroller/WindowScroller.jest' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/es/WindowScroller/WindowScroller' {2
  declare module.exports: any;2
}2
2
declare module 'react-virtualized/dist/umd/react-virtualized' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ArrowKeyStepper/ArrowKeyStepper'>;2
}2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ArrowKeyStepper/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/ArrowKeyStepper/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ArrowKeyStepper/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/AutoSizer/AutoSizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/AutoSizer/AutoSizer.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/AutoSizer/AutoSizer'>;2
}2
declare module 'react-virtualized/dist/commonjs/AutoSizer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/AutoSizer/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/AutoSizer/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/AutoSizer/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer'>;2
}2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache'>;2
}2
declare module 'react-virtualized/dist/commonjs/CellMeasurer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/CellMeasurer/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/Collection.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/Collection.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/Collection.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/Collection'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/CollectionView.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/CollectionView'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/Section.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/Section.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/Section.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/Section'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/SectionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/SectionManager.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/SectionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/SectionManager'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/TestData.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/TestData'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData'>;2
}2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ColumnSizer/ColumnSizer'>;2
}2
declare module 'react-virtualized/dist/commonjs/ColumnSizer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ColumnSizer/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/Grid.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/Grid.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/Grid.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/Grid'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper'>;2
}2
declare module 'react-virtualized/dist/commonjs/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/InfiniteLoader/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader'>;2
}2
declare module 'react-virtualized/dist/commonjs/jest-setup.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/jest-setup'>;2
}2
declare module 'react-virtualized/dist/commonjs/List/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/List/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/List/List.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/List/List.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/List/List.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/List/List'>;2
}2
declare module 'react-virtualized/dist/commonjs/List/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/List/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/Masonry/createCellPositioner.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Masonry/createCellPositioner'>;2
}2
declare module 'react-virtualized/dist/commonjs/Masonry/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Masonry/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Masonry/Masonry.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Masonry/Masonry.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Masonry/Masonry.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Masonry/Masonry'>;2
}2
declare module 'react-virtualized/dist/commonjs/Masonry/PositionCache.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Masonry/PositionCache'>;2
}2
declare module 'react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator'>;2
}2
declare module 'react-virtualized/dist/commonjs/MultiGrid/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/MultiGrid/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/MultiGrid/MultiGrid.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/MultiGrid/MultiGrid.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/MultiGrid/MultiGrid'>;2
}2
declare module 'react-virtualized/dist/commonjs/ScrollSync/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ScrollSync/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/ScrollSync/ScrollSync.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ScrollSync/ScrollSync.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/ScrollSync/ScrollSync.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/ScrollSync/ScrollSync'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/Column.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/Column.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/Column.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/Column'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/defaultCellDataGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/defaultCellDataGetter'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/defaultCellRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/defaultCellRenderer'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/defaultHeaderRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/defaultHeaderRenderer'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/defaultHeaderRowRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/defaultHeaderRowRenderer'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/defaultRowRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/defaultRowRenderer'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/SortDirection.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/SortDirection'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/SortIndicator.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/SortIndicator'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/Table.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/Table.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/Table.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/Table'>;2
}2
declare module 'react-virtualized/dist/commonjs/Table/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/Table/types'>;2
}2
declare module 'react-virtualized/dist/commonjs/TestUtils.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/TestUtils'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/animationFrame.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/animationFrame'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/createCallbackMemoizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/createCallbackMemoizer.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/createCallbackMemoizer'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/getUpdatedOffsetForIndex'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/initCellMetadata.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/initCellMetadata'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/requestAnimationTimeout'>;2
}2
declare module 'react-virtualized/dist/commonjs/utils/TestHelper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/utils/TestHelper'>;2
}2
declare module 'react-virtualized/dist/commonjs/vendor/binarySearchBounds.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/vendor/binarySearchBounds'>;2
}2
declare module 'react-virtualized/dist/commonjs/vendor/detectElementResize.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/vendor/detectElementResize'>;2
}2
declare module 'react-virtualized/dist/commonjs/vendor/intervalTree.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/vendor/intervalTree'>;2
}2
declare module 'react-virtualized/dist/commonjs/WindowScroller/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/WindowScroller/index'>;2
}2
declare module 'react-virtualized/dist/commonjs/WindowScroller/utils/dimensions.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/WindowScroller/utils/dimensions'>;2
}2
declare module 'react-virtualized/dist/commonjs/WindowScroller/utils/onScroll.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/WindowScroller/utils/onScroll'>;2
}2
declare module 'react-virtualized/dist/commonjs/WindowScroller/WindowScroller.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/WindowScroller/WindowScroller.jest'>;2
}2
declare module 'react-virtualized/dist/commonjs/WindowScroller/WindowScroller.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/commonjs/WindowScroller/WindowScroller'>;2
}2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.jest'>;2
}2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper'>;2
}2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ArrowKeyStepper/index'>;2
}2
declare module 'react-virtualized/dist/es/ArrowKeyStepper/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ArrowKeyStepper/types'>;2
}2
declare module 'react-virtualized/dist/es/AutoSizer/AutoSizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/AutoSizer/AutoSizer.jest'>;2
}2
declare module 'react-virtualized/dist/es/AutoSizer/AutoSizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/AutoSizer/AutoSizer'>;2
}2
declare module 'react-virtualized/dist/es/AutoSizer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/AutoSizer/index'>;2
}2
declare module 'react-virtualized/dist/es/AutoSizer/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/AutoSizer/types'>;2
}2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/CellMeasurer/CellMeasurer.jest'>;2
}2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/CellMeasurer/CellMeasurer'>;2
}2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.jest'>;2
}2
declare module 'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/CellMeasurer/CellMeasurerCache'>;2
}2
declare module 'react-virtualized/dist/es/CellMeasurer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/CellMeasurer/index'>;2
}2
declare module 'react-virtualized/dist/es/Collection/Collection.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/Collection.jest'>;2
}2
declare module 'react-virtualized/dist/es/Collection/Collection.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/Collection'>;2
}2
declare module 'react-virtualized/dist/es/Collection/CollectionView.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/CollectionView'>;2
}2
declare module 'react-virtualized/dist/es/Collection/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/index'>;2
}2
declare module 'react-virtualized/dist/es/Collection/Section.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/Section.jest'>;2
}2
declare module 'react-virtualized/dist/es/Collection/Section.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/Section'>;2
}2
declare module 'react-virtualized/dist/es/Collection/SectionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/SectionManager.jest'>;2
}2
declare module 'react-virtualized/dist/es/Collection/SectionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/SectionManager'>;2
}2
declare module 'react-virtualized/dist/es/Collection/TestData.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/TestData'>;2
}2
declare module 'react-virtualized/dist/es/Collection/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/types'>;2
}2
declare module 'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.jest'>;2
}2
declare module 'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData'>;2
}2
declare module 'react-virtualized/dist/es/ColumnSizer/ColumnSizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ColumnSizer/ColumnSizer.jest'>;2
}2
declare module 'react-virtualized/dist/es/ColumnSizer/ColumnSizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ColumnSizer/ColumnSizer'>;2
}2
declare module 'react-virtualized/dist/es/ColumnSizer/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ColumnSizer/index'>;2
}2
declare module 'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter'>;2
}2
declare module 'react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/defaultCellRangeRenderer'>;2
}2
declare module 'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter'>;2
}2
declare module 'react-virtualized/dist/es/Grid/Grid.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/Grid.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/Grid.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/Grid'>;2
}2
declare module 'react-virtualized/dist/es/Grid/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/index'>;2
}2
declare module 'react-virtualized/dist/es/Grid/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/types'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.jest'>;2
}2
declare module 'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper'>;2
}2
declare module 'react-virtualized/dist/es/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/index'>;2
}2
declare module 'react-virtualized/dist/es/InfiniteLoader/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/InfiniteLoader/index'>;2
}2
declare module 'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.jest'>;2
}2
declare module 'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/InfiniteLoader/InfiniteLoader'>;2
}2
declare module 'react-virtualized/dist/es/jest-setup.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/jest-setup'>;2
}2
declare module 'react-virtualized/dist/es/List/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/List/index'>;2
}2
declare module 'react-virtualized/dist/es/List/List.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/List/List.jest'>;2
}2
declare module 'react-virtualized/dist/es/List/List.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/List/List'>;2
}2
declare module 'react-virtualized/dist/es/List/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/List/types'>;2
}2
declare module 'react-virtualized/dist/es/Masonry/createCellPositioner.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Masonry/createCellPositioner'>;2
}2
declare module 'react-virtualized/dist/es/Masonry/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Masonry/index'>;2
}2
declare module 'react-virtualized/dist/es/Masonry/Masonry.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Masonry/Masonry.jest'>;2
}2
declare module 'react-virtualized/dist/es/Masonry/Masonry.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Masonry/Masonry'>;2
}2
declare module 'react-virtualized/dist/es/Masonry/PositionCache.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Masonry/PositionCache'>;2
}2
declare module 'react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator'>;2
}2
declare module 'react-virtualized/dist/es/MultiGrid/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/MultiGrid/index'>;2
}2
declare module 'react-virtualized/dist/es/MultiGrid/MultiGrid.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/MultiGrid/MultiGrid.jest'>;2
}2
declare module 'react-virtualized/dist/es/MultiGrid/MultiGrid.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/MultiGrid/MultiGrid'>;2
}2
declare module 'react-virtualized/dist/es/ScrollSync/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ScrollSync/index'>;2
}2
declare module 'react-virtualized/dist/es/ScrollSync/ScrollSync.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ScrollSync/ScrollSync.jest'>;2
}2
declare module 'react-virtualized/dist/es/ScrollSync/ScrollSync.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/ScrollSync/ScrollSync'>;2
}2
declare module 'react-virtualized/dist/es/Table/Column.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/Column.jest'>;2
}2
declare module 'react-virtualized/dist/es/Table/Column.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/Column'>;2
}2
declare module 'react-virtualized/dist/es/Table/defaultCellDataGetter.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/defaultCellDataGetter'>;2
}2
declare module 'react-virtualized/dist/es/Table/defaultCellRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/defaultCellRenderer'>;2
}2
declare module 'react-virtualized/dist/es/Table/defaultHeaderRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/defaultHeaderRenderer'>;2
}2
declare module 'react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/defaultHeaderRowRenderer'>;2
}2
declare module 'react-virtualized/dist/es/Table/defaultRowRenderer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/defaultRowRenderer'>;2
}2
declare module 'react-virtualized/dist/es/Table/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/index'>;2
}2
declare module 'react-virtualized/dist/es/Table/SortDirection.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/SortDirection'>;2
}2
declare module 'react-virtualized/dist/es/Table/SortIndicator.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/SortIndicator'>;2
}2
declare module 'react-virtualized/dist/es/Table/Table.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/Table.jest'>;2
}2
declare module 'react-virtualized/dist/es/Table/Table.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/Table'>;2
}2
declare module 'react-virtualized/dist/es/Table/types.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/Table/types'>;2
}2
declare module 'react-virtualized/dist/es/TestUtils.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/TestUtils'>;2
}2
declare module 'react-virtualized/dist/es/utils/animationFrame.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/animationFrame'>;2
}2
declare module 'react-virtualized/dist/es/utils/createCallbackMemoizer.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/createCallbackMemoizer.jest'>;2
}2
declare module 'react-virtualized/dist/es/utils/createCallbackMemoizer.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/createCallbackMemoizer'>;2
}2
declare module 'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.jest'>;2
}2
declare module 'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/getUpdatedOffsetForIndex'>;2
}2
declare module 'react-virtualized/dist/es/utils/initCellMetadata.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/initCellMetadata'>;2
}2
declare module 'react-virtualized/dist/es/utils/requestAnimationTimeout.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/requestAnimationTimeout'>;2
}2
declare module 'react-virtualized/dist/es/utils/TestHelper.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/utils/TestHelper'>;2
}2
declare module 'react-virtualized/dist/es/vendor/binarySearchBounds.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/vendor/binarySearchBounds'>;2
}2
declare module 'react-virtualized/dist/es/vendor/detectElementResize.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/vendor/detectElementResize'>;2
}2
declare module 'react-virtualized/dist/es/vendor/intervalTree.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/vendor/intervalTree'>;2
}2
declare module 'react-virtualized/dist/es/WindowScroller/index.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/WindowScroller/index'>;2
}2
declare module 'react-virtualized/dist/es/WindowScroller/utils/dimensions.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/WindowScroller/utils/dimensions'>;2
}2
declare module 'react-virtualized/dist/es/WindowScroller/utils/onScroll.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/WindowScroller/utils/onScroll'>;2
}2
declare module 'react-virtualized/dist/es/WindowScroller/WindowScroller.jest.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/WindowScroller/WindowScroller.jest'>;2
}2
declare module 'react-virtualized/dist/es/WindowScroller/WindowScroller.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/es/WindowScroller/WindowScroller'>;2
}2
declare module 'react-virtualized/dist/umd/react-virtualized.js' {2
  declare module.exports: $Exports<'react-virtualized/dist/umd/react-virtualized'>;2
}2
// flow-typed signature: cca4916b0213065533df8335c3285a4a2
// flow-typed version: cab04034e7/redux_v3.x.x/flow_>=v0.55.x2
2
declare module 'redux' {2
2
  /*2
2
    S = State2
    A = Action2
    D = Dispatch2
2
  */2
2
  declare export type DispatchAPI<A> = (action: A) => A;2
  declare export type Dispatch<A: { type: $Subtype<string> }> = DispatchAPI<A>;2
2
  declare export type MiddlewareAPI<S, A, D = Dispatch<A>> = {2
    dispatch: D;2
    getState(): S;2
  };2
2
  declare export type Store<S, A, D = Dispatch<A>> = {2
    // rewrite MiddlewareAPI members in order to get nicer error messages (intersections produce long messages)2
    dispatch: D;2
    getState(): S;2
    subscribe(listener: () => void): () => void;2
    replaceReducer(nextReducer: Reducer<S, A>): void2
  };2
2
  declare export type Reducer<S, A> = (state: S | void, action: A) => S;2
2
  declare export type CombinedReducer<S, A> = (state: $Shape<S> & {} | void, action: A) => S;2
2
  declare export type Middleware<S, A, D = Dispatch<A>> =2
    (api: MiddlewareAPI<S, A, D>) =>2
      (next: D) => D;2
2
  declare export type StoreCreator<S, A, D = Dispatch<A>> = {2
    (reducer: Reducer<S, A>, enhancer?: StoreEnhancer<S, A, D>): Store<S, A, D>;2
    (reducer: Reducer<S, A>, preloadedState: S, enhancer?: StoreEnhancer<S, A, D>): Store<S, A, D>;2
  };2
2
  declare export type StoreEnhancer<S, A, D = Dispatch<A>> = (next: StoreCreator<S, A, D>) => StoreCreator<S, A, D>;2
2
  declare export function createStore<S, A, D>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<S, A, D>): Store<S, A, D>;2
  declare export function createStore<S, A, D>(reducer: Reducer<S, A>, preloadedState?: S, enhancer?: StoreEnhancer<S, A, D>): Store<S, A, D>;2
2
  declare export function applyMiddleware<S, A, D>(...middlewares: Array<Middleware<S, A, D>>): StoreEnhancer<S, A, D>;2
2
  declare export type ActionCreator<A, B> = (...args: Array<B>) => A;2
  declare export type ActionCreators<K, A> = { [key: K]: ActionCreator<A, any> };2
2
  declare export function bindActionCreators<A, C: ActionCreator<A, any>, D: DispatchAPI<A>>(actionCreator: C, dispatch: D): C;2
  declare export function bindActionCreators<A, K, C: ActionCreators<K, A>, D: DispatchAPI<A>>(actionCreators: C, dispatch: D): C;2
2
  declare export function combineReducers<O: Object, A>(reducers: O): CombinedReducer<$ObjMap<O, <S>(r: Reducer<S, any>) => S>, A>;2
2
  declare export var compose: $Compose;2
}2
2
declare module 'rsocket-core' {2
  declare module.exports: $Exports<'rsocket-core'>;2
}2
2
declare module 'rsocket-tcp-server' {2
  declare module.exports: $Exports<'rsocket-tcp-server'>;2
}2
// flow-typed signature: 843db49f208e061075c2c057f6db5c4d2
// flow-typed version: <<STUB>>/string-natural-compare_v^2.0.2/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'string-natural-compare'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'string-natural-compare' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'string-natural-compare/natural-compare' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'string-natural-compare/natural-compare.js' {2
  declare module.exports: $Exports<'string-natural-compare/natural-compare'>;2
}2
// flow-typed signature: ab12cb0bb6ca55414cab3e4d58ebf17e2
// flow-typed version: <<STUB>>/vis_v4.21.0/flow_v0.69.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'vis'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'vis' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'vis/dist/vis-graph3d.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/dist/vis-network.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/dist/vis-timeline-graph2d.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/dist/vis' {2
  declare module.exports: any;2
}2
2
declare module 'vis/dist/vis.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/bootstrap' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/bootstrap.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/docs.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/googleAnalytics' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/ie-emulation-modes-warning' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/ie10-viewport-bug-workaround' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/jquery.highlight' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/jquery.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/jquery.url.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/main' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-apollo' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-css' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-hs' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-lisp' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-lua' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-ml' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-proto' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-scala' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-sql' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-vb' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-vhdl' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-wiki' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/lang-yaml' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/prettify/prettify' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/smooth-scroll.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/tipuesearch.config' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/tipuesearch' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/tipuesearch.min' {2
  declare module.exports: any;2
}2
2
declare module 'vis/docs/js/toggleTable' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/csv2array' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/playground' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-apollo' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-css' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-hs' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-lisp' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-lua' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-ml' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-proto' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-scala' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-sql' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-vb' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-vhdl' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-wiki' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/lang-yaml' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/graph3d/playground/prettify/prettify' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/network/datasources/largeHierarchicalDataset' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/network/datasources/WorldCup2014' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/network/exampleApplications/disassemblerExample' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/network/exampleUtil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/timeline/other/requirejs/scripts/main' {2
  declare module.exports: any;2
}2
2
declare module 'vis/examples/timeline/other/requirejs/scripts/require' {2
  declare module.exports: any;2
}2
2
declare module 'vis/gulpfile' {2
  declare module.exports: any;2
}2
2
declare module 'vis/index-graph3d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/index-network' {2
  declare module.exports: any;2
}2
2
declare module 'vis/index-timeline-graph2d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/DataSet' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/DataView' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/DOMutil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Camera' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/DataGroup' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Filter' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Graph3d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/options' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Point2d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Point3d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Range' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Settings' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/Slider' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/graph3d/StepNumber' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/hammerUtil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/header' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/module/hammer' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/module/moment' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/module/uuid' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/CachedImage' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/dotparser' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/gephiParser' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/Images' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/locales' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/Canvas' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/CanvasRenderer' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/Clustering' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/algorithms/FloydWarshall' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/DirectionStrategy' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/Edge' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/BezierEdgeDynamic' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/BezierEdgeStatic' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/CubicBezierEdge' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/StraightEdge' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/util/BezierEdgeBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/util/CubicBezierEdgeBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/util/EdgeBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/edges/util/EndPoints' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/NavigationHandler' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/Node' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/Cluster' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Box' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Circle' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/CircularImage' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Database' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Diamond' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Dot' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Ellipse' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Hexagon' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Icon' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Image' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Square' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Star' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Text' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/Triangle' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/shapes/TriangleDown' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/util/CircleImageBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/util/NodeBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/nodes/util/ShapeBase' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/BarnesHutSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/CentralGravitySolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/FA2BasedCentralGravitySolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/FA2BasedRepulsionSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/HierarchicalRepulsionSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/HierarchicalSpringSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/RepulsionSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/physics/SpringSolver' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/shared/ComponentUtil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/shared/Label' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/shared/LabelAccumulator' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/components/shared/LabelSplitter' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/EdgesHandler' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/Groups' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/InteractionHandler' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/KamadaKawai' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/LayoutEngine' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/ManipulationSystem' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/NodesHandler' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/PhysicsEngine' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/SelectionHandler' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/modules/View' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/Network' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/NetworkUtil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/options' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/network/shapes' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/Queue' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/shared/Activator' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/shared/ColorPicker' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/shared/Configurator' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/shared/Popup' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/shared/Validator' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/BackgroundGroup' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/Component' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/CurrentTime' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/CustomTime' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/DataAxis' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/DataScale' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/graph2d_types/bar' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/graph2d_types/line' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/graph2d_types/points' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/GraphGroup' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/Group' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/item/BackgroundItem' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/item/BoxItem' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/item/Item' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/item/PointItem' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/item/RangeItem' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/ItemSet' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/Legend' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/LineGraph' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/component/TimeAxis' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/Core' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/DateUtil' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/Graph2d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/locales' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/optionsGraph2d' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/optionsTimeline' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/Range' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/Stack' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/Timeline' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/timeline/TimeStep' {2
  declare module.exports: any;2
}2
2
declare module 'vis/lib/util' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'vis/dist/vis-graph3d.min.js' {2
  declare module.exports: $Exports<'vis/dist/vis-graph3d.min'>;2
}2
declare module 'vis/dist/vis-network.min.js' {2
  declare module.exports: $Exports<'vis/dist/vis-network.min'>;2
}2
declare module 'vis/dist/vis-timeline-graph2d.min.js' {2
  declare module.exports: $Exports<'vis/dist/vis-timeline-graph2d.min'>;2
}2
declare module 'vis/dist/vis.js' {2
  declare module.exports: $Exports<'vis/dist/vis'>;2
}2
declare module 'vis/dist/vis.min.js' {2
  declare module.exports: $Exports<'vis/dist/vis.min'>;2
}2
declare module 'vis/docs/js/bootstrap.js' {2
  declare module.exports: $Exports<'vis/docs/js/bootstrap'>;2
}2
declare module 'vis/docs/js/bootstrap.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/bootstrap.min'>;2
}2
declare module 'vis/docs/js/docs.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/docs.min'>;2
}2
declare module 'vis/docs/js/googleAnalytics.js' {2
  declare module.exports: $Exports<'vis/docs/js/googleAnalytics'>;2
}2
declare module 'vis/docs/js/ie-emulation-modes-warning.js' {2
  declare module.exports: $Exports<'vis/docs/js/ie-emulation-modes-warning'>;2
}2
declare module 'vis/docs/js/ie10-viewport-bug-workaround.js' {2
  declare module.exports: $Exports<'vis/docs/js/ie10-viewport-bug-workaround'>;2
}2
declare module 'vis/docs/js/jquery.highlight.js' {2
  declare module.exports: $Exports<'vis/docs/js/jquery.highlight'>;2
}2
declare module 'vis/docs/js/jquery.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/jquery.min'>;2
}2
declare module 'vis/docs/js/jquery.url.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/jquery.url.min'>;2
}2
declare module 'vis/docs/js/main.js' {2
  declare module.exports: $Exports<'vis/docs/js/main'>;2
}2
declare module 'vis/docs/js/prettify/lang-apollo.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-apollo'>;2
}2
declare module 'vis/docs/js/prettify/lang-css.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-css'>;2
}2
declare module 'vis/docs/js/prettify/lang-hs.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-hs'>;2
}2
declare module 'vis/docs/js/prettify/lang-lisp.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-lisp'>;2
}2
declare module 'vis/docs/js/prettify/lang-lua.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-lua'>;2
}2
declare module 'vis/docs/js/prettify/lang-ml.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-ml'>;2
}2
declare module 'vis/docs/js/prettify/lang-proto.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-proto'>;2
}2
declare module 'vis/docs/js/prettify/lang-scala.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-scala'>;2
}2
declare module 'vis/docs/js/prettify/lang-sql.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-sql'>;2
}2
declare module 'vis/docs/js/prettify/lang-vb.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-vb'>;2
}2
declare module 'vis/docs/js/prettify/lang-vhdl.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-vhdl'>;2
}2
declare module 'vis/docs/js/prettify/lang-wiki.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-wiki'>;2
}2
declare module 'vis/docs/js/prettify/lang-yaml.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/lang-yaml'>;2
}2
declare module 'vis/docs/js/prettify/prettify.js' {2
  declare module.exports: $Exports<'vis/docs/js/prettify/prettify'>;2
}2
declare module 'vis/docs/js/smooth-scroll.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/smooth-scroll.min'>;2
}2
declare module 'vis/docs/js/tipuesearch.config.js' {2
  declare module.exports: $Exports<'vis/docs/js/tipuesearch.config'>;2
}2
declare module 'vis/docs/js/tipuesearch.js' {2
  declare module.exports: $Exports<'vis/docs/js/tipuesearch'>;2
}2
declare module 'vis/docs/js/tipuesearch.min.js' {2
  declare module.exports: $Exports<'vis/docs/js/tipuesearch.min'>;2
}2
declare module 'vis/docs/js/toggleTable.js' {2
  declare module.exports: $Exports<'vis/docs/js/toggleTable'>;2
}2
declare module 'vis/examples/graph3d/playground/csv2array.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/csv2array'>;2
}2
declare module 'vis/examples/graph3d/playground/playground.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/playground'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-apollo.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-apollo'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-css.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-css'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-hs.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-hs'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-lisp.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-lisp'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-lua.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-lua'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-ml.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-ml'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-proto.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-proto'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-scala.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-scala'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-sql.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-sql'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-vb.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-vb'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-vhdl.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-vhdl'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-wiki.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-wiki'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/lang-yaml.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/lang-yaml'>;2
}2
declare module 'vis/examples/graph3d/playground/prettify/prettify.js' {2
  declare module.exports: $Exports<'vis/examples/graph3d/playground/prettify/prettify'>;2
}2
declare module 'vis/examples/network/datasources/largeHierarchicalDataset.js' {2
  declare module.exports: $Exports<'vis/examples/network/datasources/largeHierarchicalDataset'>;2
}2
declare module 'vis/examples/network/datasources/WorldCup2014.js' {2
  declare module.exports: $Exports<'vis/examples/network/datasources/WorldCup2014'>;2
}2
declare module 'vis/examples/network/exampleApplications/disassemblerExample.js' {2
  declare module.exports: $Exports<'vis/examples/network/exampleApplications/disassemblerExample'>;2
}2
declare module 'vis/examples/network/exampleUtil.js' {2
  declare module.exports: $Exports<'vis/examples/network/exampleUtil'>;2
}2
declare module 'vis/examples/timeline/other/requirejs/scripts/main.js' {2
  declare module.exports: $Exports<'vis/examples/timeline/other/requirejs/scripts/main'>;2
}2
declare module 'vis/examples/timeline/other/requirejs/scripts/require.js' {2
  declare module.exports: $Exports<'vis/examples/timeline/other/requirejs/scripts/require'>;2
}2
declare module 'vis/gulpfile.js' {2
  declare module.exports: $Exports<'vis/gulpfile'>;2
}2
declare module 'vis/index-graph3d.js' {2
  declare module.exports: $Exports<'vis/index-graph3d'>;2
}2
declare module 'vis/index-network.js' {2
  declare module.exports: $Exports<'vis/index-network'>;2
}2
declare module 'vis/index-timeline-graph2d.js' {2
  declare module.exports: $Exports<'vis/index-timeline-graph2d'>;2
}2
declare module 'vis/index' {2
  declare module.exports: $Exports<'vis'>;2
}2
declare module 'vis/index.js' {2
  declare module.exports: $Exports<'vis'>;2
}2
declare module 'vis/lib/DataSet.js' {2
  declare module.exports: $Exports<'vis/lib/DataSet'>;2
}2
declare module 'vis/lib/DataView.js' {2
  declare module.exports: $Exports<'vis/lib/DataView'>;2
}2
declare module 'vis/lib/DOMutil.js' {2
  declare module.exports: $Exports<'vis/lib/DOMutil'>;2
}2
declare module 'vis/lib/graph3d/Camera.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Camera'>;2
}2
declare module 'vis/lib/graph3d/DataGroup.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/DataGroup'>;2
}2
declare module 'vis/lib/graph3d/Filter.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Filter'>;2
}2
declare module 'vis/lib/graph3d/Graph3d.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Graph3d'>;2
}2
declare module 'vis/lib/graph3d/options.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/options'>;2
}2
declare module 'vis/lib/graph3d/Point2d.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Point2d'>;2
}2
declare module 'vis/lib/graph3d/Point3d.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Point3d'>;2
}2
declare module 'vis/lib/graph3d/Range.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Range'>;2
}2
declare module 'vis/lib/graph3d/Settings.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Settings'>;2
}2
declare module 'vis/lib/graph3d/Slider.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/Slider'>;2
}2
declare module 'vis/lib/graph3d/StepNumber.js' {2
  declare module.exports: $Exports<'vis/lib/graph3d/StepNumber'>;2
}2
declare module 'vis/lib/hammerUtil.js' {2
  declare module.exports: $Exports<'vis/lib/hammerUtil'>;2
}2
declare module 'vis/lib/header.js' {2
  declare module.exports: $Exports<'vis/lib/header'>;2
}2
declare module 'vis/lib/module/hammer.js' {2
  declare module.exports: $Exports<'vis/lib/module/hammer'>;2
}2
declare module 'vis/lib/module/moment.js' {2
  declare module.exports: $Exports<'vis/lib/module/moment'>;2
}2
declare module 'vis/lib/module/uuid.js' {2
  declare module.exports: $Exports<'vis/lib/module/uuid'>;2
}2
declare module 'vis/lib/network/CachedImage.js' {2
  declare module.exports: $Exports<'vis/lib/network/CachedImage'>;2
}2
declare module 'vis/lib/network/dotparser.js' {2
  declare module.exports: $Exports<'vis/lib/network/dotparser'>;2
}2
declare module 'vis/lib/network/gephiParser.js' {2
  declare module.exports: $Exports<'vis/lib/network/gephiParser'>;2
}2
declare module 'vis/lib/network/Images.js' {2
  declare module.exports: $Exports<'vis/lib/network/Images'>;2
}2
declare module 'vis/lib/network/locales.js' {2
  declare module.exports: $Exports<'vis/lib/network/locales'>;2
}2
declare module 'vis/lib/network/modules/Canvas.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/Canvas'>;2
}2
declare module 'vis/lib/network/modules/CanvasRenderer.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/CanvasRenderer'>;2
}2
declare module 'vis/lib/network/modules/Clustering.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/Clustering'>;2
}2
declare module 'vis/lib/network/modules/components/algorithms/FloydWarshall.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/algorithms/FloydWarshall'>;2
}2
declare module 'vis/lib/network/modules/components/DirectionStrategy.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/DirectionStrategy'>;2
}2
declare module 'vis/lib/network/modules/components/Edge.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/Edge'>;2
}2
declare module 'vis/lib/network/modules/components/edges/BezierEdgeDynamic.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/BezierEdgeDynamic'>;2
}2
declare module 'vis/lib/network/modules/components/edges/BezierEdgeStatic.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/BezierEdgeStatic'>;2
}2
declare module 'vis/lib/network/modules/components/edges/CubicBezierEdge.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/CubicBezierEdge'>;2
}2
declare module 'vis/lib/network/modules/components/edges/StraightEdge.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/StraightEdge'>;2
}2
declare module 'vis/lib/network/modules/components/edges/util/BezierEdgeBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/util/BezierEdgeBase'>;2
}2
declare module 'vis/lib/network/modules/components/edges/util/CubicBezierEdgeBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/util/CubicBezierEdgeBase'>;2
}2
declare module 'vis/lib/network/modules/components/edges/util/EdgeBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/util/EdgeBase'>;2
}2
declare module 'vis/lib/network/modules/components/edges/util/EndPoints.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/edges/util/EndPoints'>;2
}2
declare module 'vis/lib/network/modules/components/NavigationHandler.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/NavigationHandler'>;2
}2
declare module 'vis/lib/network/modules/components/Node.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/Node'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/Cluster.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/Cluster'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Box.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Box'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Circle.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Circle'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/CircularImage.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/CircularImage'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Database.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Database'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Diamond.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Diamond'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Dot.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Dot'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Ellipse.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Ellipse'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Hexagon.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Hexagon'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Icon.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Icon'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Image.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Image'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Square.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Square'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Star.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Star'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Text.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Text'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/Triangle.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/Triangle'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/shapes/TriangleDown.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/shapes/TriangleDown'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/util/CircleImageBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/util/CircleImageBase'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/util/NodeBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/util/NodeBase'>;2
}2
declare module 'vis/lib/network/modules/components/nodes/util/ShapeBase.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/nodes/util/ShapeBase'>;2
}2
declare module 'vis/lib/network/modules/components/physics/BarnesHutSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/BarnesHutSolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/CentralGravitySolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/CentralGravitySolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/FA2BasedCentralGravitySolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/FA2BasedCentralGravitySolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/FA2BasedRepulsionSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/FA2BasedRepulsionSolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/HierarchicalRepulsionSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/HierarchicalRepulsionSolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/HierarchicalSpringSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/HierarchicalSpringSolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/RepulsionSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/RepulsionSolver'>;2
}2
declare module 'vis/lib/network/modules/components/physics/SpringSolver.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/physics/SpringSolver'>;2
}2
declare module 'vis/lib/network/modules/components/shared/ComponentUtil.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/shared/ComponentUtil'>;2
}2
declare module 'vis/lib/network/modules/components/shared/Label.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/shared/Label'>;2
}2
declare module 'vis/lib/network/modules/components/shared/LabelAccumulator.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/shared/LabelAccumulator'>;2
}2
declare module 'vis/lib/network/modules/components/shared/LabelSplitter.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/components/shared/LabelSplitter'>;2
}2
declare module 'vis/lib/network/modules/EdgesHandler.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/EdgesHandler'>;2
}2
declare module 'vis/lib/network/modules/Groups.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/Groups'>;2
}2
declare module 'vis/lib/network/modules/InteractionHandler.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/InteractionHandler'>;2
}2
declare module 'vis/lib/network/modules/KamadaKawai.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/KamadaKawai'>;2
}2
declare module 'vis/lib/network/modules/LayoutEngine.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/LayoutEngine'>;2
}2
declare module 'vis/lib/network/modules/ManipulationSystem.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/ManipulationSystem'>;2
}2
declare module 'vis/lib/network/modules/NodesHandler.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/NodesHandler'>;2
}2
declare module 'vis/lib/network/modules/PhysicsEngine.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/PhysicsEngine'>;2
}2
declare module 'vis/lib/network/modules/SelectionHandler.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/SelectionHandler'>;2
}2
declare module 'vis/lib/network/modules/View.js' {2
  declare module.exports: $Exports<'vis/lib/network/modules/View'>;2
}2
declare module 'vis/lib/network/Network.js' {2
  declare module.exports: $Exports<'vis/lib/network/Network'>;2
}2
declare module 'vis/lib/network/NetworkUtil.js' {2
  declare module.exports: $Exports<'vis/lib/network/NetworkUtil'>;2
}2
declare module 'vis/lib/network/options.js' {2
  declare module.exports: $Exports<'vis/lib/network/options'>;2
}2
declare module 'vis/lib/network/shapes.js' {2
  declare module.exports: $Exports<'vis/lib/network/shapes'>;2
}2
declare module 'vis/lib/Queue.js' {2
  declare module.exports: $Exports<'vis/lib/Queue'>;2
}2
declare module 'vis/lib/shared/Activator.js' {2
  declare module.exports: $Exports<'vis/lib/shared/Activator'>;2
}2
declare module 'vis/lib/shared/ColorPicker.js' {2
  declare module.exports: $Exports<'vis/lib/shared/ColorPicker'>;2
}2
declare module 'vis/lib/shared/Configurator.js' {2
  declare module.exports: $Exports<'vis/lib/shared/Configurator'>;2
}2
declare module 'vis/lib/shared/Popup.js' {2
  declare module.exports: $Exports<'vis/lib/shared/Popup'>;2
}2
declare module 'vis/lib/shared/Validator.js' {2
  declare module.exports: $Exports<'vis/lib/shared/Validator'>;2
}2
declare module 'vis/lib/timeline/component/BackgroundGroup.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/BackgroundGroup'>;2
}2
declare module 'vis/lib/timeline/component/Component.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/Component'>;2
}2
declare module 'vis/lib/timeline/component/CurrentTime.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/CurrentTime'>;2
}2
declare module 'vis/lib/timeline/component/CustomTime.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/CustomTime'>;2
}2
declare module 'vis/lib/timeline/component/DataAxis.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/DataAxis'>;2
}2
declare module 'vis/lib/timeline/component/DataScale.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/DataScale'>;2
}2
declare module 'vis/lib/timeline/component/graph2d_types/bar.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/graph2d_types/bar'>;2
}2
declare module 'vis/lib/timeline/component/graph2d_types/line.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/graph2d_types/line'>;2
}2
declare module 'vis/lib/timeline/component/graph2d_types/points.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/graph2d_types/points'>;2
}2
declare module 'vis/lib/timeline/component/GraphGroup.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/GraphGroup'>;2
}2
declare module 'vis/lib/timeline/component/Group.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/Group'>;2
}2
declare module 'vis/lib/timeline/component/item/BackgroundItem.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/item/BackgroundItem'>;2
}2
declare module 'vis/lib/timeline/component/item/BoxItem.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/item/BoxItem'>;2
}2
declare module 'vis/lib/timeline/component/item/Item.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/item/Item'>;2
}2
declare module 'vis/lib/timeline/component/item/PointItem.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/item/PointItem'>;2
}2
declare module 'vis/lib/timeline/component/item/RangeItem.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/item/RangeItem'>;2
}2
declare module 'vis/lib/timeline/component/ItemSet.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/ItemSet'>;2
}2
declare module 'vis/lib/timeline/component/Legend.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/Legend'>;2
}2
declare module 'vis/lib/timeline/component/LineGraph.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/LineGraph'>;2
}2
declare module 'vis/lib/timeline/component/TimeAxis.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/component/TimeAxis'>;2
}2
declare module 'vis/lib/timeline/Core.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/Core'>;2
}2
declare module 'vis/lib/timeline/DateUtil.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/DateUtil'>;2
}2
declare module 'vis/lib/timeline/Graph2d.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/Graph2d'>;2
}2
declare module 'vis/lib/timeline/locales.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/locales'>;2
}2
declare module 'vis/lib/timeline/optionsGraph2d.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/optionsGraph2d'>;2
}2
declare module 'vis/lib/timeline/optionsTimeline.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/optionsTimeline'>;2
}2
declare module 'vis/lib/timeline/Range.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/Range'>;2
}2
declare module 'vis/lib/timeline/Stack.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/Stack'>;2
}2
declare module 'vis/lib/timeline/Timeline.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/Timeline'>;2
}2
declare module 'vis/lib/timeline/TimeStep.js' {2
  declare module.exports: $Exports<'vis/lib/timeline/TimeStep'>;2
}2
declare module 'vis/lib/util.js' {2
  declare module.exports: $Exports<'vis/lib/util'>;2
}2
// flow-typed signature: a099122576a24c7a78325271cdd0048f2
// flow-typed version: <<STUB>>/websocket_v^1.0.24/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'websocket'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'websocket' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'websocket/gulpfile' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/browser' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/BufferUtil.fallback' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/BufferUtil' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/Deprecation' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/utils' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/Validation.fallback' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/Validation' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/version' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/W3CWebSocket' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/websocket' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketClient' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketConnection' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketFrame' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketRequest' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketRouter' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketRouterRequest' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/lib/WebSocketServer' {2
  declare module.exports: any;2
}2
2
declare module 'websocket/vendor/FastBufferList' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'websocket/gulpfile.js' {2
  declare module.exports: $Exports<'websocket/gulpfile'>;2
}2
declare module 'websocket/index' {2
  declare module.exports: $Exports<'websocket'>;2
}2
declare module 'websocket/index.js' {2
  declare module.exports: $Exports<'websocket'>;2
}2
declare module 'websocket/lib/browser.js' {2
  declare module.exports: $Exports<'websocket/lib/browser'>;2
}2
declare module 'websocket/lib/BufferUtil.fallback.js' {2
  declare module.exports: $Exports<'websocket/lib/BufferUtil.fallback'>;2
}2
declare module 'websocket/lib/BufferUtil.js' {2
  declare module.exports: $Exports<'websocket/lib/BufferUtil'>;2
}2
declare module 'websocket/lib/Deprecation.js' {2
  declare module.exports: $Exports<'websocket/lib/Deprecation'>;2
}2
declare module 'websocket/lib/utils.js' {2
  declare module.exports: $Exports<'websocket/lib/utils'>;2
}2
declare module 'websocket/lib/Validation.fallback.js' {2
  declare module.exports: $Exports<'websocket/lib/Validation.fallback'>;2
}2
declare module 'websocket/lib/Validation.js' {2
  declare module.exports: $Exports<'websocket/lib/Validation'>;2
}2
declare module 'websocket/lib/version.js' {2
  declare module.exports: $Exports<'websocket/lib/version'>;2
}2
declare module 'websocket/lib/W3CWebSocket.js' {2
  declare module.exports: $Exports<'websocket/lib/W3CWebSocket'>;2
}2
declare module 'websocket/lib/websocket.js' {2
  declare module.exports: $Exports<'websocket/lib/websocket'>;2
}2
declare module 'websocket/lib/WebSocketClient.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketClient'>;2
}2
declare module 'websocket/lib/WebSocketConnection.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketConnection'>;2
}2
declare module 'websocket/lib/WebSocketFrame.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketFrame'>;2
}2
declare module 'websocket/lib/WebSocketRequest.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketRequest'>;2
}2
declare module 'websocket/lib/WebSocketRouter.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketRouter'>;2
}2
declare module 'websocket/lib/WebSocketRouterRequest.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketRouterRequest'>;2
}2
declare module 'websocket/lib/WebSocketServer.js' {2
  declare module.exports: $Exports<'websocket/lib/WebSocketServer'>;2
}2
declare module 'websocket/vendor/FastBufferList.js' {2
  declare module.exports: $Exports<'websocket/vendor/FastBufferList'>;2
}2
// flow-typed signature: efc8a980cb830128a9eaa7f9ee01567b2
// flow-typed version: <<STUB>>/ws_v^3.0.0/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'ws'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'ws' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'ws/lib/BufferUtil' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/Constants' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/ErrorCodes' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/EventTarget' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/Extensions' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/PerMessageDeflate' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/Receiver' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/Sender' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/Validation' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/WebSocket' {2
  declare module.exports: any;2
}2
2
declare module 'ws/lib/WebSocketServer' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'ws/index' {2
  declare module.exports: $Exports<'ws'>;2
}2
declare module 'ws/index.js' {2
  declare module.exports: $Exports<'ws'>;2
}2
declare module 'ws/lib/BufferUtil.js' {2
  declare module.exports: $Exports<'ws/lib/BufferUtil'>;2
}2
declare module 'ws/lib/Constants.js' {2
  declare module.exports: $Exports<'ws/lib/Constants'>;2
}2
declare module 'ws/lib/ErrorCodes.js' {2
  declare module.exports: $Exports<'ws/lib/ErrorCodes'>;2
}2
declare module 'ws/lib/EventTarget.js' {2
  declare module.exports: $Exports<'ws/lib/EventTarget'>;2
}2
declare module 'ws/lib/Extensions.js' {2
  declare module.exports: $Exports<'ws/lib/Extensions'>;2
}2
declare module 'ws/lib/PerMessageDeflate.js' {2
  declare module.exports: $Exports<'ws/lib/PerMessageDeflate'>;2
}2
declare module 'ws/lib/Receiver.js' {2
  declare module.exports: $Exports<'ws/lib/Receiver'>;2
}2
declare module 'ws/lib/Sender.js' {2
  declare module.exports: $Exports<'ws/lib/Sender'>;2
}2
declare module 'ws/lib/Validation.js' {2
  declare module.exports: $Exports<'ws/lib/Validation'>;2
}2
declare module 'ws/lib/WebSocket.js' {2
  declare module.exports: $Exports<'ws/lib/WebSocket'>;2
}2
declare module 'ws/lib/WebSocketServer.js' {2
  declare module.exports: $Exports<'ws/lib/WebSocketServer'>;2
}2
// flow-typed signature: 3efe3623a87ff36c0bcfb0fbcdbdf7292
// flow-typed version: <<STUB>>/yargs_v^10.0.3/flow_v0.59.02
2
/**2
 * This is an autogenerated libdef stub for:2
 *2
 *   'yargs'2
 *2
 * Fill this stub out by replacing all the `any` types.2
 *2
 * Once filled out, we encourage you to share your work with the2
 * community by sending a pull request to:2
 * https://github.com/flowtype/flow-typed2
 */2
2
declare module 'yargs' {2
  declare module.exports: any;2
}2
2
/**2
 * We include stubs for each file inside this npm package in case you need to2
 * require those files directly. Feel free to delete any files that aren't2
 * needed.2
 */2
declare module 'yargs/lib/apply-extends' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/argsert' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/command' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/completion' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/levenshtein' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/obj-filter' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/usage' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/validation' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/lib/yerror' {2
  declare module.exports: any;2
}2
2
declare module 'yargs/yargs' {2
  declare module.exports: any;2
}2
2
// Filename aliases2
declare module 'yargs/index' {2
  declare module.exports: $Exports<'yargs'>;2
}2
declare module 'yargs/index.js' {2
  declare module.exports: $Exports<'yargs'>;2
}2
declare module 'yargs/lib/apply-extends.js' {2
  declare module.exports: $Exports<'yargs/lib/apply-extends'>;2
}2
declare module 'yargs/lib/argsert.js' {2
  declare module.exports: $Exports<'yargs/lib/argsert'>;2
}2
declare module 'yargs/lib/command.js' {2
  declare module.exports: $Exports<'yargs/lib/command'>;2
}2
declare module 'yargs/lib/completion.js' {2
  declare module.exports: $Exports<'yargs/lib/completion'>;2
}2
declare module 'yargs/lib/levenshtein.js' {2
  declare module.exports: $Exports<'yargs/lib/levenshtein'>;2
}2
declare module 'yargs/lib/obj-filter.js' {2
  declare module.exports: $Exports<'yargs/lib/obj-filter'>;2
}2
declare module 'yargs/lib/usage.js' {2
  declare module.exports: $Exports<'yargs/lib/usage'>;2
}2
declare module 'yargs/lib/validation.js' {2
  declare module.exports: $Exports<'yargs/lib/validation'>;2
}2
declare module 'yargs/lib/yerror.js' {2
  declare module.exports: $Exports<'yargs/lib/yerror'>;2
}2
declare module 'yargs/yargs.js' {2
  declare module.exports: $Exports<'yargs/yargs'>;2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <ComponentKit/CKComponent.h>2
#import <SonarKit/SKMacros.h>2
#import <SonarKitLayoutPlugin/SKNamed.h>2
#import <SonarKitLayoutPlugin/SKNodeDescriptor.h>2
2
FB_LINK_REQUIRE(CKComponent_Sonar)2
@interface CKComponent (Sonar)2
2
- (NSArray<SKNamed<NSDictionary<NSString *, NSObject *> *> *> *)sonar_getData;2
- (NSDictionary<NSString *, SKNodeUpdateData> *)sonar_getDataMutations;2
- (NSString *)sonar_getName;2
- (NSString *)sonar_getDecoration;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <ComponentKit/CKFlexboxComponent.h>2
#import <SonarKit/SKMacros.h>2
2
FB_LINK_REQUIRE(CKFlexboxComponent_Sonar)2
@interface CKFlexboxComponent (Sonar)2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <ComponentKit/CKInsetComponent.h>2
#import <SonarKit/SKMacros.h>2
2
FB_LINK_REQUIRE(CKInsetComponent_Sonar)2
@interface CKInsetComponent (Sonar)2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKitLayoutPlugin/SKNodeDescriptor.h>2
2
@class CKComponentHostingView;2
2
@interface SKComponentHostingViewDescriptor : SKNodeDescriptor<CKComponentHostingView *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKitLayoutPlugin/SKNodeDescriptor.h>2
2
@class SKComponentLayoutWrapper;2
2
@interface SKComponentLayoutDescriptor: SKNodeDescriptor<SKComponentLayoutWrapper *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import <ComponentKit/CKComponentLayout.h>2
#import <ComponentKit/CKFlexboxComponent.h>2
2
@protocol CKInspectableView;2
2
@interface SKComponentLayoutWrapper : NSObject2
2
@property (nonatomic, weak, readonly) CKComponent *component;2
@property (nonatomic, readonly) NSString *identifier;2
@property (nonatomic, readonly) CGSize size;2
@property (nonatomic, readonly) CGPoint position;2
@property (nonatomic, readonly) std::vector<SKComponentLayoutWrapper *> children;2
2
// Null for layouts which are not direct children of a CKFlexboxComponent2
@property (nonatomic, readonly) BOOL isFlexboxChild;2
@property (nonatomic, readonly) CKFlexboxComponentChild flexboxChild;2
2
+ (instancetype)newFromRoot:(id<CKInspectableView>)root;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKitLayoutPlugin/SKNodeDescriptor.h>2
2
@class CKComponentRootView;2
2
@interface SKComponentRootViewDescriptor : SKNodeDescriptor<CKComponentRootView *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import <SonarKitLayoutPlugin/SKDescriptorMapper.h>2
2
@interface SonarKitLayoutComponentKitSupport : NSObject2
2
+ (void)setUpWithDescriptorMapper:(SKDescriptorMapper *)mapper;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <ComponentKit/CKComponent.h>2
#import <ComponentKit/CKFlexboxComponent.h>2
2
NSString *relativeDimension(CKRelativeDimension dimension);2
NSDictionary<NSString *, NSString *> *flexboxRect(CKFlexboxSpacing spacing);2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
@class SKNodeDescriptor;2
2
@interface SKDescriptorMapper : NSObject2
2
- (instancetype)initWithDefaults;2
2
- (SKNodeDescriptor *)descriptorForClass:(Class)cls;2
2
- (void)registerDescriptor:(SKNodeDescriptor *)descriptor forClass:(Class)cls;2
2
- (NSArray<SKNodeDescriptor *> *)allDescriptors;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface SKHighlightOverlay : NSObject2
2
+ (instancetype)sharedInstance;2
+ (UIColor*)overlayColor;2
2
- (void)mountInView:(UIView *)view withFrame:(CGRect)frame;2
- (void)unmount;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
@protocol SKInvalidationDelegate2
2
- (void)invalidateNode:(id<NSObject>)node;2
2
- (void)updateNodeReference:(id<NSObject>)node;2
2
@end2
2
@interface SKInvalidation : NSObject2
2
+ (instancetype)sharedInstance;2
2
+ (void)enableInvalidations;2
2
@property (nonatomic, weak) id<SKInvalidationDelegate> delegate;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
@interface SKNamed<__covariant T> : NSObject2
2
+ (instancetype)newWithName:(NSString *)name withValue:(T)value;2
2
@property (nonatomic, readonly) NSString *name;2
@property (nonatomic, readonly) T value;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKDescriptorMapper.h"2
#import "SKNamed.h"2
#import "SKTouch.h"2
2
typedef void (^SKNodeUpdateData)(id value);2
2
/**2
 A SKNodeDescriptor is an object which know how to expose an Object of type T2
 to SonarKitLayoutPlugin. This class is the extension point for SonarKitLayoutPlugin and2
 is how custom objects or data can be exposed to Sonar.2
 */2
@interface SKNodeDescriptor<__covariant T> : NSObject2
2
/**2
 If the descriptor class is dependent on some set-up, use this.2
 This is invoked once Sonar connects.2
 */2
- (void)setUp;2
2
/**2
 Initializes the node-descriptor with a SKDescriptorMapper which contains mappings2
 between Class -> SKNodeDescriptor<Class>.2
 */2
- (instancetype)initWithDescriptorMapper:(SKDescriptorMapper *)mapper;2
2
/**2
 Gets the node-descriptor registered for a specific class.2
 */2
- (SKNodeDescriptor *)descriptorForClass:(Class)cls;2
2
/**2
  A globally unique ID used to identify a node in the hierarchy. This is used2
  in the communication between SonarKitLayoutPlugin and the Sonar desktop application2
  in order to identify nodes.2
 */2
- (NSString *)identifierForNode:(T)node;2
2
/**2
  The name used to identify this node in the Sonar desktop application. This is what2
  will be visible in the hierarchy.2
 */2
- (NSString *)nameForNode:(T)node;2
2
/**2
  The number of children this node exposes in the layout hierarchy.2
 */2
- (NSUInteger)childCountForNode:(T)node;2
2
/**2
  Get the child for a specific node at a specified index.2
 */2
- (id)childForNode:(T)node atIndex:(NSUInteger)index;2
2
/**2
 Get the data to show for this node in the sidebar of the Sonar application. The objects2
 will be shown in order by SKNamed.name as their header.2
 */2
- (NSArray<SKNamed<NSDictionary *> *> *)dataForNode:(T)node;2
2
/**2
 Get the attributes for this node. Attributes will be showed in the Sonar application right2
 next to the name of the node.2
 */2
- (NSArray<SKNamed<NSString *> *> *)attributesForNode:(T)node;2
2
/**2
 A mapping of the path for a specific value, and a block responsible for updating2
 its corresponding value for a specific node.2
2
 The paths (string) is dependent on what `dataForNode` returns (e.g "SKNodeDescriptor.name").2
 */2
- (NSDictionary<NSString *, SKNodeUpdateData> *)dataMutationsForNode:(T)node;2
2
/**2
 This is used in order to highlight any specific node which is currently2
 selected in the Sonar application. The plugin automatically takes care of de-selecting2
 the previously highlighted node.2
 */2
- (void)setHighlighted:(BOOL)highlighted forNode:(T)node;2
2
/**2
 Perform hit testing on the given node. Either continue the search in2
 one of the children of the node, or finish the hit testing on this2
 node.2
 */2
- (void)hitTest:(SKTouch *)point forNode:(T)node;2
2
/**2
 Invalidate a specific node. This is called once a node is removed or added2
 from or to the layout hierarchy.2
 */2
- (void)invalidateNode:(T)node;2
2
/**2
 The decoration for this node. Valid values are defined in the Sonar2
 applictation.2
 */2
- (NSString *)decorationForNode:(T)node;2
2
/**2
 Whether the node matches the given query.2
 Used for layout search.2
 */2
- (BOOL)matchesQuery:(NSString *)query forNode:(T)node;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@protocol SKSonarValueCoder2
2
+ (instancetype)fromSonarValue:(id)sonarValue;2
2
- (NSDictionary<NSString *, id<NSObject>> *)sonarValue;2
2
@end2
2
class SKObject {2
public:2
  SKObject(CGRect rect);2
  SKObject(CGSize size);2
  SKObject(CGPoint point);2
  SKObject(UIEdgeInsets insets);2
  SKObject(CGAffineTransform transform);2
  SKObject(id<SKSonarValueCoder> value);2
  SKObject(id value);2
2
  operator id<NSObject> () const noexcept {2
    return _actual ?: [NSNull null];2
  }2
protected:2
  id<NSObject> _actual;2
};2
2
class SKMutableObject : public SKObject {2
public:2
  SKMutableObject(CGRect rect) : SKObject(rect) { }2
  SKMutableObject(CGSize size) : SKObject(size) { };2
  SKMutableObject(CGPoint point) : SKObject(point) { };2
  SKMutableObject(UIEdgeInsets insets) : SKObject(insets) { };2
  SKMutableObject(CGAffineTransform transform) : SKObject(transform) { };2
  SKMutableObject(id<SKSonarValueCoder> value) : SKObject(value) { };2
  SKMutableObject(id value) : SKObject(value) { };2
2
  operator id<NSObject> () {2
    convertToMutable();2
    return _actual;2
  }2
protected:2
  BOOL _convertedToMutable = NO;2
  void convertToMutable();2
};2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef SKSearchResultNode_h2
#define SKSearchResultNode_h2
2
#import <Foundation/Foundation.h>2
2
@interface SKSearchResultNode : NSObject2
2
@property (nonatomic, copy, readonly) NSString *nodeId;2
2
- (instancetype)initWithNode:(NSString *)nodeId2
                     asMatch:(BOOL)isMatch2
                 withElement:(NSDictionary *)element2
                 andChildren:(NSArray<SKSearchResultNode *> *)children;2
2
- (NSDictionary *)toNSDictionary;2
2
@end2
#endif /* SKSearchResultNode_h */2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
typedef void (^SKTapReceiver)(CGPoint touchPoint);2
2
@protocol SKTapListener2
2
@property (nonatomic, readonly) BOOL isMounted;2
2
- (void)mountWithFrame:(CGRect)frame;2
2
- (void)unmount;2
2
- (void)listenForTapWithBlock:(SKTapReceiver)receiver;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import "SKTapListener.h"2
2
@interface SKTapListenerImpl : NSObject<SKTapListener, UIGestureRecognizerDelegate>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKDescriptorMapper.h"2
2
typedef void (^SKTouchFinishDelegate)(NSArray<NSString *> *path);2
2
@interface SKTouch : NSObject2
2
- (instancetype)initWithTouchPoint:(CGPoint)touchPoint2
                       withRootNode:(id<NSObject>)node2
              withDescriptorMapper:(SKDescriptorMapper *)mapper2
                    finishWithBlock:(SKTouchFinishDelegate)d;2
2
- (void)continueWithChildIndex:(NSUInteger)childIndex2
                     withOffset:(CGPoint)offset;2
2
- (void)finish;2
2
- (BOOL)containedIn:(CGRect)bounds;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarPlugin.h>2
2
#import "SKTapListener.h"2
#import "SKInvalidation.h"2
#import "SKDescriptorMapper.h"2
2
@interface SonarKitLayoutPlugin : NSObject<SonarPlugin, SKInvalidationDelegate>2
2
- (instancetype)initWithRootNode:(id<NSObject>)rootNode2
            withDescriptorMapper:(SKDescriptorMapper *)mapper;2
2
- (instancetype)initWithRootNode:(id<NSObject>)rootNode2
                 withTapListener:(id<SKTapListener>)tapListener2
            withDescriptorMapper:(SKDescriptorMapper *)mapper;2
2
@property (nonatomic, readonly, strong) SKDescriptorMapper *descriptorMapper;2
2
@end2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import <SonarKit/SKMacros.h>2
2
FB_LINK_REQUIRE(UICollectionView_SKInvalidation)2
@interface UICollectionView (SKInvalidation)2
2
+ (void)enableInvalidations;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import <SonarKit/SKMacros.h>2
2
#import "SKObject.h"2
2
FB_LINK_REQUIRE(UIColor_SonarValueCoder)2
@interface UIColor (SonarValueCoder) <SKSonarValueCoder>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKit/SKMacros.h>2
2
FB_LINK_REQUIRE(UIView_SKInvalidation)2
@interface UIView (SKInvalidation)2
2
+ (void)enableInvalidation;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKNodeDescriptor.h"2
2
@interface SKApplicationDescriptor : SKNodeDescriptor<UIApplication *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKNodeDescriptor.h"2
2
@class UIButton;2
2
@interface SKButtonDescriptor : SKNodeDescriptor<UIButton *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKNodeDescriptor.h"2
2
@interface SKScrollViewDescriptor : SKNodeDescriptor<UIScrollView *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
#import "SKNodeDescriptor.h"2
2
@interface SKViewControllerDescriptor : SKNodeDescriptor<UIViewController *>2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
2
#import <UIKit/UIKit.h>2
2
#import "SKNodeDescriptor.h"2
2
@interface SKViewDescriptor : SKNodeDescriptor<UIView *>2
2
@end2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface SKHiddenWindow : UIWindow2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
/*2
 A hash function is needed in order to use NSObject classes2
 as keys in C++ STL2
 */2
class SKObjectHash {2
public:2
  size_t operator()(const NSObject *x) const {2
    return (size_t)[x hash];2
  }2
};2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
void swizzleMethods(Class cls, SEL original, SEL swissled);2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#define APPLY_ENUM_TO_YOGA_PROPERTY(varName, enumName) \2
^(NSString *newValue) { \2
NSNumber *varName = [[enumName##EnumMap allKeysForObject:newValue] lastObject]; \2
if (varName == nil) { return; } \2
node.yoga.varName = (enumName)[varName unsignedIntegerValue]; \2
}2
2
#define APPLY_VALUE_TO_YGVALUE(varName) \2
^(NSNumber *value) { \2
YGValue newValue = node.yoga.varName; \2
newValue.value = [value floatValue]; \2
node.yoga.varName = newValue; \2
}2
2
#define APPLY_UNIT_TO_YGVALUE(varName, enumName) \2
^(NSString *value) { \2
NSNumber *varName = [[enumName##EnumMap allKeysForObject:value] lastObject]; \2
if (varName == nil) { return; } \2
YGValue newValue = node.yoga.varName; \2
newValue.unit = (enumName)[varName unsignedIntegerValue]; \2
node.yoga.varName = newValue; \2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKitLayoutPlugin/SKTapListener.h>2
2
@interface SKTapListenerMock : NSObject<SKTapListener>2
2
- (void)tapAt:(CGPoint)point;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface TestNode : NSObject2
2
@property (nonatomic, copy) NSString *nodeName;2
@property (nonatomic, copy) NSArray<TestNode *> *children;2
2
@property (nonatomic, assign) BOOL highlighted;2
@property (nonatomic, assign) CGRect frame;2
2
- (instancetype)initWithName:(NSString *)name;2
- (instancetype)initWithName:(NSString *)name withFrame:(CGRect)frame;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <SonarKitLayoutPlugin/SKNodeDescriptor.h>2
2
#import "TestNode.h"2
2
@interface TestNodeDescriptor : SKNodeDescriptor<TestNode *>2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
2
#import <Foundation/Foundation.h>2
#import <SonarKitNetworkPlugin/SKNetworkReporter.h>2
2
@interface SKIOSNetworkAdapter : NSObject<SKNetworkAdapterDelegate>2
- (instancetype)init NS_DESIGNATED_INITIALIZER;2
@property (weak, nonatomic) id<SKNetworkReporterDelegate> delegate;2
2
@end2
2
#endif2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
//2
//  FLEXNetworkObserver.h2
//  Derived from:2
//2
//  PDAFNetworkDomainController.h2
//  PonyDebugger2
//2
//  Created by Mike Lewis on 2/27/12.2
//2
//  Licensed to Square, Inc. under one or more contributor license agreements.2
//  See the LICENSE file distributed with this work for the terms under2
//  which Square, Inc. licenses this file to you.2
//2
2
#import <Foundation/Foundation.h>2
2
FOUNDATION_EXTERN NSString *const kFLEXNetworkObserverEnabledStateChangedNotification;2
2
/// This class swizzles NSURLConnection and NSURLSession delegate methods to observe events in the URL loading system.2
/// High level network events are sent to the default FLEXNetworkRecorder instance which maintains the request history and caches response bodies.2
@interface FLEXNetworkObserver : NSObject2
2
+ (void)start;2
2
@end2
//2
//  FLEXNetworkRecorder.h2
//  Flipboard2
//2
//  Created by Ryan Olson on 2/4/15.2
//  Copyright 2004-present Facebook. All Rights Reserved.2
//2
2
#import <Foundation/Foundation.h>2
2
#import <SonarKitNetworkPlugin/SKNetworkReporter.h>2
2
// Notifications posted when the record is updated2
extern NSString *const kFLEXNetworkRecorderNewTransactionNotification;2
extern NSString *const kFLEXNetworkRecorderTransactionUpdatedNotification;2
extern NSString *const kFLEXNetworkRecorderUserInfoTransactionKey;2
extern NSString *const kFLEXNetworkRecorderTransactionsClearedNotification;2
2
@class FLEXNetworkTransaction;2
2
@interface FLEXNetworkRecorder : NSObject2
2
/// In general, it only makes sense to have one recorder for the entire application.2
+ (instancetype)defaultRecorder;2
2
@property (nonatomic, weak) id<SKNetworkReporterDelegate> delegate;2
2
/// Defaults to 25 MB if never set. Values set here are presisted across launches of the app.2
@property (nonatomic, assign) NSUInteger responseCacheByteLimit;2
2
/// If NO, the recorder not cache will not cache response for content types with an "image", "video", or "audio" prefix.2
@property (nonatomic, assign) BOOL shouldCacheMediaResponses;2
2
@property (nonatomic, copy) NSArray<NSString *> *hostBlacklist;2
2
2
// Accessing recorded network activity2
2
/// Array of FLEXNetworkTransaction objects ordered by start time with the newest first.2
- (NSArray<FLEXNetworkTransaction *> *)networkTransactions;2
2
/// The full response data IFF it hasn't been purged due to memory pressure.2
- (NSData *)cachedResponseBodyForTransaction:(FLEXNetworkTransaction *)transaction;2
2
/// Dumps all network transactions and cached response bodies.2
- (void)clearRecordedActivity;2
2
2
// Recording network activity2
2
/// Call when app is about to send HTTP request.2
- (void)recordRequestWillBeSentWithRequestID:(NSString *)requestID request:(NSURLRequest *)request redirectResponse:(NSURLResponse *)redirectResponse;2
2
/// Call when HTTP response is available.2
- (void)recordResponseReceivedWithRequestID:(NSString *)requestID response:(NSURLResponse *)response;2
2
/// Call when data chunk is received over the network.2
- (void)recordDataReceivedWithRequestID:(NSString *)requestID dataLength:(int64_t)dataLength;2
2
/// Call when HTTP request has finished loading.2
- (void)recordLoadingFinishedWithRequestID:(NSString *)requestID responseBody:(NSData *)responseBody;2
2
/// Call when HTTP request has failed to load.2
- (void)recordLoadingFailedWithRequestID:(NSString *)requestID error:(NSError *)error;2
2
/// Call to set the request mechanism anytime after recordRequestWillBeSent... has been called.2
/// This string can be set to anything useful about the API used to make the request.2
- (void)recordMechanism:(NSString *)mechanism forRequestID:(NSString *)requestID;2
2
@end2
//2
//  FLEXNetworkTransaction.h2
//  Flipboard2
//2
//  Created by Ryan Olson on 2/8/15.2
//  Copyright 2004-present Facebook. All Rights Reserved.2
//2
2
#import <Foundation/Foundation.h>2
2
#import "UIKit/UIKit.h"2
2
typedef NS_ENUM(NSInteger, FLEXNetworkTransactionState) {2
    FLEXNetworkTransactionStateUnstarted,2
    FLEXNetworkTransactionStateAwaitingResponse,2
    FLEXNetworkTransactionStateReceivingData,2
    FLEXNetworkTransactionStateFinished,2
    FLEXNetworkTransactionStateFailed2
};2
2
@interface FLEXNetworkTransaction : NSObject2
2
@property (nonatomic, copy) NSString *requestID;2
2
@property (nonatomic, strong) NSURLRequest *request;2
@property (nonatomic, strong) NSURLResponse *response;2
@property (nonatomic, copy) NSString *requestMechanism;2
@property (nonatomic, assign) FLEXNetworkTransactionState transactionState;2
@property (nonatomic, strong) NSError *error;2
2
@property (nonatomic, strong) NSDate *startTime;2
@property (nonatomic, assign) NSTimeInterval latency;2
@property (nonatomic, assign) NSTimeInterval duration;2
2
@property (nonatomic, assign) int64_t receivedDataLength;2
2
/// Only applicable for image downloads. A small thumbnail to preview the full response.2
@property (nonatomic, strong) UIImage *responseThumbnail;2
2
/// Populated lazily. Handles both normal HTTPBody data and HTTPBodyStreams.2
@property (nonatomic, strong, readonly) NSData *cachedRequestBody;2
2
+ (NSString *)readableStringFromTransactionState:(FLEXNetworkTransactionState)state;2
2
@end2
// Copyright 2004-present Facebook. All Rights Reserved.2
2
#import <Availability.h>2
#import <AvailabilityInternal.h>2
#import <objc/runtime.h>2
2
#import <Foundation/Foundation.h>2
#import <UIKit/UIKit.h>2
2
#define FLEXFloor(x) (floor([[UIScreen mainScreen] scale] * (x)) / [[UIScreen mainScreen] scale])2
2
#define FLEX_AT_LEAST_IOS11_SDK defined(__IPHONE_11_0) && (__IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_11_0)2
2
@interface NSNumber (SonarUtility)2
2
+ (NSNumber *)random;2
2
@end2
2
@interface NSDate (SonarUtility)2
2
+ (uint64_t)timestamp;2
@end2
2
@interface FLEXUtility : NSObject2
2
// Swizzling utilities2
2
+ (SEL)swizzledSelectorForSelector:(SEL)selector;2
+ (BOOL)instanceRespondsButDoesNotImplementSelector:(SEL)selector class:(Class)cls;2
+ (void)replaceImplementationOfKnownSelector:(SEL)originalSelector onClass:(Class)className withBlock:(id)block swizzledSelector:(SEL)swizzledSelector;2
+ (void)replaceImplementationOfSelector:(SEL)selector withSelector:(SEL)swizzledSelector forClass:(Class)cls withMethodDescription:(struct objc_method_description)methodDescription implementationBlock:(id)implementationBlock undefinedBlock:(id)undefinedBlock;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarPlugin.h>2
2
#import <memory>2
2
#import "SKDispatchQueue.h"2
2
@interface SKBufferingPlugin : NSObject<SonarPlugin>2
2
- (instancetype)initWithQueue:(const std::shared_ptr<facebook::sonar::DispatchQueue> &)queue NS_DESIGNATED_INITIALIZER;2
2
- (void)send:(NSString *)method sonarObject:(NSDictionary<NSString *, id> *)sonarObject;2
2
@end2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
2
#pragma once2
2
#import <dispatch/dispatch.h>2
2
namespace facebook {2
  namespace sonar {2
    class DispatchQueue2
    {2
    public:2
      virtual void async(dispatch_block_t block) = 0;2
    };2
2
    class GCDQueue: public DispatchQueue2
    {2
    public:2
      GCDQueue(dispatch_queue_t underlyingQueue)2
      :_underlyingQueue(underlyingQueue) { }2
2
      void async(dispatch_block_t block) override2
      {2
        dispatch_async(_underlyingQueue, block);2
      }2
2
    private:2
      dispatch_queue_t _underlyingQueue;2
    };2
  }2
}2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
struct RequestInfo {2
  int64_t identifier;2
  uint64_t timestamp;2
  NSURLRequest *request;2
  NSString *body;2
2
  void setBody(NSData *data) {2
    body = data ? [data base64EncodedStringWithOptions: 0]2
    : [request.HTTPBody base64EncodedStringWithOptions: 0];2
  }2
};2
2
struct ResponseInfo {2
  int64_t identifier;2
  uint64_t timestamp;2
  NSURLResponse *response;2
  NSString *body;2
2
  bool shouldStripReponseBody() {2
    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse*)response;2
    NSString *contentType = httpResponse.allHeaderFields[@"content-type"];2
    if (!contentType) {2
      return NO;2
    }2
2
    return [contentType containsString:@"image/"] ||2
    [contentType containsString:@"video/"] ||2
    [contentType containsString:@"application/zip"];2
  }2
2
  void setBody(NSData *data) {2
    body = shouldStripReponseBody() ? nil : [data base64EncodedStringWithOptions: 0];2
  }2
2
};2
2
@protocol SKNetworkReporterDelegate2
2
- (void)didObserveRequest:(RequestInfo)request;2
- (void)didObserveResponse:(ResponseInfo)response;2
2
@end2
2
@protocol SKNetworkAdapterDelegate2
2
@property (weak, nonatomic) id<SKNetworkReporterDelegate> delegate;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#if FB_SONARKIT_ENABLED2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarPlugin.h>2
2
#import "SKBufferingPlugin.h"2
#import "SKNetworkReporter.h"2
#import "SKDispatchQueue.h"2
2
@interface SonarKitNetworkPlugin : SKBufferingPlugin <SKNetworkReporterDelegate>2
2
- (instancetype)initWithNetworkAdapter:(id<SKNetworkAdapterDelegate>)adapter NS_DESIGNATED_INITIALIZER;2
- (instancetype)initWithNetworkAdapter:(id<SKNetworkAdapterDelegate>)adapter queue:(const std::shared_ptr<facebook::sonar::DispatchQueue> &)queue; //For test purposes2
2
@property (strong, nonatomic) id<SKNetworkAdapterDelegate> adapter;2
2
@end2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface AppDelegate : UIResponder <UIApplicationDelegate>2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface MainViewController : UIViewController2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#import <UIKit/UIKit.h>2
2
@interface NetworkViewController : UIViewController2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <UIKit/UIKit.h>2
2
@interface RootViewController : UIViewController2
2
@end2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
 #ifndef SKMACROS_H2
 #define SKMACROS_H2
2
 #import <FBDefines/FBMacros.h>2
2
 #ifdef __cplusplus2
 # define SK_EXTERN_C_BEGIN extern "C" {2
 # define SK_EXTERN_C_END   }2
 # define SK_EXTERN_C extern "C"2
 #else2
 # define SK_EXTERN_C_BEGIN2
 # define SK_EXTERN_C_END2
 # define SK_EXTERN_C extern2
 #endif2
2
 #define SKLog(...) NSLog(__VA_ARGS__)2
 #define SKTrace(...) /*NSLog(__VA_ARGS__)*/2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import "SonarPlugin.h"2
2
/**2
Represents a connection between the Sonar desktop och client side. Manages the lifecycle of attached2
plugin instances.2
*/2
@interface SonarClient : NSObject2
2
/**2
The shared singleton SonarClient instance. It is an error to call this on non-debug builds to avoid leaking data.2
*/2
+ (instancetype)sharedClient;2
2
/**2
Register a plugin with the client.2
*/2
- (void)addPlugin:(NSObject<SonarPlugin> *)plugin;2
2
/**2
Unregister a plugin with the client.2
*/2
- (void)removePlugin:(NSObject<SonarPlugin> *)plugin;2
2
/**2
Retrieve the plugin with a given identifier which was previously registered with this client.2
*/2
- (NSObject<SonarPlugin> *)pluginWithIdentifier:(NSString *)identifier;2
2
/**2
Establish a connection to the Sonar desktop.2
*/2
- (void)start;2
2
/**2
Stop the connection to the Sonar desktop.2
*/2
- (void)stop;2
2
// initializers are disabled. You must use `+[SonarClient sharedClient]` instance.2
- (instancetype)init NS_UNAVAILABLE;2
+ (instancetype)new NS_UNAVAILABLE;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
@protocol SonarResponder;2
@protocol SonarWebSocket;2
2
typedef void (^SonarReceiver)(NSDictionary*, id<SonarResponder>);2
2
/**2
Represents a connection between the Desktop and mobile plugins with corresponding identifiers.2
*/2
@protocol SonarConnection2
2
/**2
Invoke a method on the Sonar desktop plugin with with a matching identifier.2
*/2
- (void)send:(NSString *)method withParams:(NSDictionary *)params;2
2
/**2
Register a receiver to be notified of incoming calls of the given method from the Sonar desktop2
plugin with a matching identifier.2
*/2
- (void)receive:(NSString *)method withBlock:(SonarReceiver)receiver;2
2
@end2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#import <Foundation/Foundation.h>2
#import "SKMacros.h"2
2
SK_EXTERN_C_BEGIN2
void SonarPerformBlockOnMainThread(void(^block)());2
SK_EXTERN_C_END2
2
@protocol SonarConnection;2
2
@protocol SonarPlugin2
2
/**2
The plugin's identifier. This should map to a javascript plugin with the same identifier to ensure2
messages are sent correctly.2
*/2
- (NSString *)identifier;2
2
/**2
Called when a connection has been established between this plugin and the corresponding plugin on2
the Sonar desktop app. The provided connection can be used to register method receivers as well2
as send messages back to the desktop app.2
*/2
- (void)didConnect:(id<SonarConnection>)connection;2
2
/**2
Called when a plugin has been disconnected and the SonarConnection provided in didConnect is no2
longer valid to use.2
*/2
- (void)didDisconnect;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
/**2
Acts as a hook for providing return values to remote called from Sonar desktop plugins.2
*/2
@protocol SonarResponder2
2
/**2
Respond with a successful return value.2
*/2
- (void)success:(NSDictionary *)response;2
2
/**2
Respond with an error.2
*/2
- (void)error:(NSDictionary *)response;2
2
@end2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Sonar/SonarConnection.h>2
#import <SonarKit/SonarConnection.h>2
2
/**2
SonarCppBridgingConnection is a simple ObjC wrapper around SonarConnection2
that forwards messages to the underlying C++ connection. This class allows2
pure Objective-C plugins to send messages to the underlying connection.2
*/2
@interface SonarCppBridgingConnection : NSObject <SonarConnection>2
- (instancetype)initWithCppConnection:(std::shared_ptr<facebook::sonar::SonarConnection>)conn;2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Sonar/SonarResponder.h>2
#import <SonarKit/SonarResponder.h>2
2
/**2
SonarCppBridgingResponder is a simple ObjC wrapper around SonarResponder2
that forwards messages to the underlying C++ responder. This class allows2
pure Objective-C plugins to send messages to the underlying responder.2
*/2
@interface SonarCppBridgingResponder : NSObject <SonarResponder>2
- (instancetype)initWithCppResponder:(std::unique_ptr<facebook::sonar::SonarResponder>)responder;2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef __OBJC__2
#error This header can only be included in .mm (ObjC++) files2
#endif2
2
#import <Sonar/SonarPlugin.h>2
#import <SonarKit/SonarCppBridgingConnection.h>2
#import <SonarKit/SonarPlugin.h>2
2
namespace facebook {2
namespace sonar {2
2
using ObjCPlugin = NSObject<SonarPlugin> *;2
2
/**2
SonarCppWrapperPlugin is a simple C++ wrapper around Objective-C Sonar plugins2
that can be passed to SonarClient. This class allows developers to write pure2
Objective-C plugins if they want.2
*/2
class SonarCppWrapperPlugin final : public facebook::sonar::SonarPlugin {2
public:2
  // Under ARC copying objCPlugin *does* increment its retain count2
  SonarCppWrapperPlugin(ObjCPlugin objCPlugin) : _objCPlugin(objCPlugin) {}2
2
  std::string identifier() const override { return [[_objCPlugin identifier] UTF8String]; }2
2
  void didConnect(std::shared_ptr<facebook::sonar::SonarConnection> conn) override2
  {2
    SonarCppBridgingConnection *const bridgingConn = [[SonarCppBridgingConnection alloc] initWithCppConnection:conn];2
    [_objCPlugin didConnect:bridgingConn];2
  }2
2
  void didDisconnect() override { [_objCPlugin didDisconnect]; }2
2
  ObjCPlugin getObjCPlugin() { return _objCPlugin; }2
2
private:2
  ObjCPlugin _objCPlugin;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#import <Foundation/Foundation.h>2
2
#include <folly/dynamic.h>2
2
namespace facebook {2
namespace cxxutils {2
2
folly::dynamic convertIdToFollyDynamic(id json);2
id convertFollyDynamicToId(const folly::dynamic &dyn);2
2
} }2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef FB_SK_MACROS_H2
 #define FB_SK_MACROS_H2
2
    #define FB_LINK_REQUIRE_(NAME, UNIQUE)2
    #define FB_LINKABLE(NAME)2
    #define FB_LINK_REQUIRE(NAME)2
    #define FB_LINK_REQUIRE_EXT(NAME)2
2
#endif2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
enum {2
  SKPortForwardingFrameTypeOpenPipe = 201,2
  SKPortForwardingFrameTypeWriteToPipe = 202,2
  SKPortForwardingFrameTypeClosePipe = 203,2
};2
2
static dispatch_data_t NSDataToGCDData(NSData *data) {2
  __block NSData *retainedData = data;2
  return dispatch_data_create(data.bytes, data.length, nil, ^{2
    retainedData = nil;2
  });2
}2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
@interface SKPortForwardingServer : NSObject2
2
- (instancetype)init;2
2
- (void)listenForMultiplexingChannelOnPort:(NSUInteger)port;2
- (void)forwardConnectionsFromPort:(NSUInteger)port;2
- (void)close;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarPlugin.h>2
2
@protocol SonarConnection;2
2
typedef void (^ConnectBlock)(id<SonarConnection>);2
typedef void (^DisconnectBlock)();2
2
@interface BlockBasedSonarPlugin : NSObject<SonarPlugin>2
2
- (instancetype)initIdentifier:(NSString *)identifier connect:(ConnectBlock)connect disconnect:(DisconnectBlock)disconnect;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef __cplusplus2
#error This header can only be included in .mm (ObjC++) files2
#endif2
2
#import <Foundation/Foundation.h>2
2
#import <Sonar/SonarClient.h>2
#import <SonarKit/SonarClient.h>2
2
@interface SonarClient (Testing)2
2
- (instancetype)initWithCppClient:(facebook::sonar::SonarClient *)cppClient;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarConnection.h>2
2
@interface SonarConnectionMock : NSObject<SonarConnection>2
2
@property (nonatomic, assign, getter=isConnected) BOOL connected;2
@property (nonatomic, readonly) NSDictionary<NSString *, SonarReceiver> *receivers;2
@property (nonatomic, readonly) NSDictionary<NSString *, NSArray<NSDictionary *> *> *sent;2
2
@end2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#import <Foundation/Foundation.h>2
2
#import <SonarKit/SonarResponder.h>2
2
@interface SonarResponderMock : NSObject<SonarResponder>2
2
@property (nonatomic, readonly) NSArray<NSDictionary *> *successes;2
@property (nonatomic, readonly) NSArray<NSDictionary *> *errors;2
2
@end2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/** @file ALog.h2
 *2
 *  Very simple android only logging. Define LOG_TAG to enable the macros.2
 */2
2
#pragma once2
2
#ifdef __ANDROID__2
2
#include <android/log.h>2
2
namespace facebook {2
namespace alog {2
2
template<typename... ARGS>2
inline void log(int level, const char* tag, const char* msg, ARGS... args) noexcept {2
  __android_log_print(level, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void log(int level, const char* tag, const char* msg) noexcept {2
  __android_log_write(level, tag, msg);2
}2
2
template<typename... ARGS>2
inline void logv(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_VERBOSE, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void logd(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_DEBUG, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void logi(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_INFO, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void logw(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_WARN, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void loge(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_ERROR, tag, msg, args...);2
}2
2
template<typename... ARGS>2
inline void logf(const char* tag, const char* msg, ARGS... args) noexcept {2
  log(ANDROID_LOG_FATAL, tag, msg, args...);2
}2
2
2
#ifdef LOG_TAG2
# define ALOGV(...) ::facebook::alog::logv(LOG_TAG, __VA_ARGS__)2
# define ALOGD(...) ::facebook::alog::logd(LOG_TAG, __VA_ARGS__)2
# define ALOGI(...) ::facebook::alog::logi(LOG_TAG, __VA_ARGS__)2
# define ALOGW(...) ::facebook::alog::logw(LOG_TAG, __VA_ARGS__)2
# define ALOGE(...) ::facebook::alog::loge(LOG_TAG, __VA_ARGS__)2
# define ALOGF(...) ::facebook::alog::logf(LOG_TAG, __VA_ARGS__)2
#endif2
2
}}2
2
#else2
# define ALOGV(...) ((void)0)2
# define ALOGD(...) ((void)0)2
# define ALOGI(...) ((void)0)2
# define ALOGW(...) ((void)0)2
# define ALOGE(...) ((void)0)2
# define ALOGF(...) ((void)0)2
#endif2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef FBASSERT_H2
#define FBASSERT_H2
2
#include <fb/visibility.h>2
2
namespace facebook {2
#define ENABLE_FBASSERT 12
2
#if ENABLE_FBASSERT2
#define FBASSERTMSGF(expr, msg, ...) !(expr) ? facebook::assertInternal("Assert (%s:%d): " msg, __FILE__, __LINE__, ##__VA_ARGS__) : (void) 02
#else2
#define FBASSERTMSGF(expr, msg, ...)2
#endif // ENABLE_FBASSERT2
2
#define FBASSERT(expr) FBASSERTMSGF(expr, "%s", #expr)2
2
#define FBCRASH(msg, ...) facebook::assertInternal("Fatal error (%s:%d): " msg, __FILE__, __LINE__, ##__VA_ARGS__)2
#define FBUNREACHABLE() facebook::assertInternal("This code should be unreachable (%s:%d)", __FILE__, __LINE__)2
2
FBEXPORT void assertInternal(const char* formatstr, ...) __attribute__((noreturn));2
2
// This allows storing the assert message before the current process terminates due to a crash2
typedef void (*AssertHandler)(const char* message);2
void setAssertHandler(AssertHandler assertHandler);2
2
} // namespace facebook2
#endif // FBASSERT_H2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <atomic>2
#include <fb/assert.h>2
#include <fb/noncopyable.h>2
#include <fb/nonmovable.h>2
#include <fb/RefPtr.h>2
2
namespace facebook {2
2
class Countable : public noncopyable, public nonmovable {2
public:2
  // RefPtr expects refcount to start at 02
  Countable() : m_refcount(0) {}2
  virtual ~Countable()2
  {2
    FBASSERT(m_refcount == 0);2
  }2
2
private:2
  void ref() {2
    ++m_refcount;2
  }2
2
  void unref() {2
    if (0 == --m_refcount) {2
      delete this;2
    }2
  }2
2
  bool hasOnlyOneRef() const {2
    return m_refcount == 1;2
  }2
2
  template <typename T> friend class RefPtr;2
  std::atomic<int> m_refcount;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <functional>2
#include <string>2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
namespace facebook {2
namespace jni {2
2
// Keeps a thread-local reference to the current thread's JNIEnv.2
struct Environment {2
  // May be null if this thread isn't attached to the JVM2
  FBEXPORT static JNIEnv* current();2
  static void initialize(JavaVM* vm);2
2
  // There are subtle issues with calling the next functions directly. It is2
  // much better to always use a ThreadScope to manage attaching/detaching for2
  // you.2
  FBEXPORT static JNIEnv* ensureCurrentThreadIsAttached();2
  FBEXPORT static void detachCurrentThread();2
};2
2
/**2
 * RAII Object that attaches a thread to the JVM. Failing to detach from a thread before it2
 * exits will cause a crash, as will calling Detach an extra time, and this guard class helps2
 * keep that straight. In addition, it remembers whether it performed the attach or not, so it2
 * is safe to nest it with itself or with non-fbjni code that manages the attachment correctly.2
 *2
 * Potential concerns:2
 *  - Attaching to the JVM is fast (~100us on MotoG), but ideally you would attach while the2
 *    app is not busy.2
 *  - Having a thread detach at arbitrary points is not safe in Dalvik; you need to be sure that2
 *    there is no Java code on the current stack or you run the risk of a crash like:2
 *      ERROR: detaching thread with interp frames (count=18)2
 *    (More detail at https://groups.google.com/forum/#!topic/android-ndk/2H8z5grNqjo)2
 *    ThreadScope won't do a detach if the thread was already attached before the guard is2
 *    instantiated, but there's probably some usage that could trip this up.2
 *  - Newly attached C++ threads only get the bootstrap class loader -- i.e. java language2
 *    classes, not any of our application's classes. This will be different behavior than threads2
 *    that were initiated on the Java side. A workaround is to pass a global reference for a2
 *    class or instance to the new thread; this bypasses the need for the class loader.2
 *    (See http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/invocation.html#attach_current_thread)2
 *    If you need access to the application's classes, you can use ThreadScope::WithClassLoader.2
 */2
class FBEXPORT ThreadScope {2
 public:2
  ThreadScope();2
  ThreadScope(ThreadScope&) = delete;2
  ThreadScope(ThreadScope&&) = default;2
  ThreadScope& operator=(ThreadScope&) = delete;2
  ThreadScope& operator=(ThreadScope&&) = delete;2
  ~ThreadScope();2
2
  /**2
   * This runs the closure in a scope with fbjni's classloader. This should be2
   * the same classloader as the rest of the application and thus anything2
   * running in the closure will have access to the same classes as in a normal2
   * java-create thread.2
   */2
  static void WithClassLoader(std::function<void()>&& runnable);2
2
  static void OnLoad();2
 private:2
  bool attachedWithThisScope_;2
};2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
2
#include <fb/Environment.h>2
#include <fb/ALog.h>2
#include <fb/fbjni/Common.h>2
#include <fb/fbjni/Exceptions.h>2
#include <fb/fbjni/JThrowable.h>2
#include <fb/fbjni/ReferenceAllocators.h>2
#include <fb/fbjni/References.h>2
#include <fb/fbjni/Meta.h>2
#include <fb/fbjni/CoreClasses.h>2
#include <fb/fbjni/Iterator.h>2
#include <fb/fbjni/Hybrid.h>2
#include <fb/fbjni/Registration.h>2
/*2
 *  Copyright (c) 2005-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/*2
 * FB Wrapper for logging functions.2
 *2
 * The android logging API uses the macro "LOG()" for its logic, which means2
 * that it conflicts with random other places that use LOG for their own2
 * purposes and doesn't work right half the places you include it2
 *2
 * FBLOG uses exactly the same semantics (FBLOGD for debug etc) but because of2
 * the FB prefix it's strictly better. FBLOGV also gets stripped out based on2
 * whether NDEBUG is set, but can be overridden by FBLOG_NDEBUG2
 *2
 * Most of the rest is a copy of <cutils/log.h> with minor changes.2
 */2
2
//2
// C/C++ logging functions.  See the logging documentation for API details.2
//2
// We'd like these to be available from C code (in case we import some from2
// somewhere), so this has a C interface.2
//2
// The output will be correct when the log file is shared between multiple2
// threads and/or multiple processes so long as the operating system2
// supports O_APPEND.  These calls have mutex-protected data structures2
// and so are NOT reentrant.  Do not use LOG in a signal handler.2
//2
#pragma once2
2
#include <fb/visibility.h>2
2
#ifdef __cplusplus2
extern "C" {2
#endif2
2
#ifdef ANDROID2
#include <android/log.h>2
#else2
// These declarations are needed for our internal use even on non-Android2
// builds.2
// (they are borrowed from <android/log.h>)2
2
/*2
 * Android log priority values, in ascending priority order.2
 */2
typedef enum android_LogPriority {2
  ANDROID_LOG_UNKNOWN = 0,2
  ANDROID_LOG_DEFAULT, /* only for SetMinPriority() */2
  ANDROID_LOG_VERBOSE,2
  ANDROID_LOG_DEBUG,2
  ANDROID_LOG_INFO,2
  ANDROID_LOG_WARN,2
  ANDROID_LOG_ERROR,2
  ANDROID_LOG_FATAL,2
  ANDROID_LOG_SILENT, /* only for SetMinPriority(); must be last */2
} android_LogPriority;2
2
/*2
 * Send a simple string to the log.2
 */2
int __android_log_write(int prio, const char *tag, const char *text);2
2
/*2
 * Send a formatted string to the log, used like printf(fmt,...)2
 */2
int __android_log_print(int prio, const char *tag, const char *fmt, ...)2
#if defined(__GNUC__)2
    __attribute__((format(printf, 3, 4)))2
#endif2
    ;2
2
#endif2
2
// ---------------------------------------------------------------------2
2
/*2
 * Normally we strip FBLOGV (VERBOSE messages) from release builds.2
 * You can modify this (for example with "#define FBLOG_NDEBUG 0"2
 * at the top of your source file) to change that behavior.2
 */2
#ifndef FBLOG_NDEBUG2
#ifdef NDEBUG2
#define FBLOG_NDEBUG 12
#else2
#define FBLOG_NDEBUG 02
#endif2
#endif2
2
/*2
 * This is the local tag used for the following simplified2
 * logging macros.  You can change this preprocessor definition2
 * before using the other macros to change the tag.2
 */2
#ifndef LOG_TAG2
#define LOG_TAG NULL2
#endif2
2
// ---------------------------------------------------------------------2
2
/*2
 * Simplified macro to send a verbose log message using the current LOG_TAG.2
 */2
#ifndef FBLOGV2
#if FBLOG_NDEBUG2
#define FBLOGV(...) ((void)0)2
#else2
#define FBLOGV(...) ((void)FBLOG(LOG_VERBOSE, LOG_TAG, __VA_ARGS__))2
#endif2
#endif2
2
#define CONDITION(cond) (__builtin_expect((cond) != 0, 0))2
2
#ifndef FBLOGV_IF2
#if FBLOG_NDEBUG2
#define FBLOGV_IF(cond, ...) ((void)0)2
#else2
#define FBLOGV_IF(cond, ...)                                            \2
  ((CONDITION(cond)) ? ((void)FBLOG(LOG_VERBOSE, LOG_TAG, __VA_ARGS__)) \2
                     : (void)0)2
#endif2
#endif2
2
/*2
 * Simplified macro to send a debug log message using the current LOG_TAG.2
 */2
#ifndef FBLOGD2
#define FBLOGD(...) ((void)FBLOG(LOG_DEBUG, LOG_TAG, __VA_ARGS__))2
#endif2
2
#ifndef FBLOGD_IF2
#define FBLOGD_IF(cond, ...) \2
  ((CONDITION(cond)) ? ((void)FBLOG(LOG_DEBUG, LOG_TAG, __VA_ARGS__)) : (void)0)2
#endif2
2
/*2
 * Simplified macro to send an info log message using the current LOG_TAG.2
 */2
#ifndef FBLOGI2
#define FBLOGI(...) ((void)FBLOG(LOG_INFO, LOG_TAG, __VA_ARGS__))2
#endif2
2
#ifndef FBLOGI_IF2
#define FBLOGI_IF(cond, ...) \2
  ((CONDITION(cond)) ? ((void)FBLOG(LOG_INFO, LOG_TAG, __VA_ARGS__)) : (void)0)2
#endif2
2
/*2
 * Simplified macro to send a warning log message using the current LOG_TAG.2
 */2
#ifndef FBLOGW2
#define FBLOGW(...) ((void)FBLOG(LOG_WARN, LOG_TAG, __VA_ARGS__))2
#endif2
2
#ifndef FBLOGW_IF2
#define FBLOGW_IF(cond, ...) \2
  ((CONDITION(cond)) ? ((void)FBLOG(LOG_WARN, LOG_TAG, __VA_ARGS__)) : (void)0)2
#endif2
2
/*2
 * Simplified macro to send an error log message using the current LOG_TAG.2
 */2
#ifndef FBLOGE2
#define FBLOGE(...) ((void)FBLOG(LOG_ERROR, LOG_TAG, __VA_ARGS__))2
#endif2
2
#ifndef FBLOGE_IF2
#define FBLOGE_IF(cond, ...) \2
  ((CONDITION(cond)) ? ((void)FBLOG(LOG_ERROR, LOG_TAG, __VA_ARGS__)) : (void)0)2
#endif2
2
// ---------------------------------------------------------------------2
2
/*2
 * Conditional based on whether the current LOG_TAG is enabled at2
 * verbose priority.2
 */2
#ifndef IF_FBLOGV2
#if FBLOG_NDEBUG2
#define IF_FBLOGV() if (false)2
#else2
#define IF_FBLOGV() IF_FBLOG(LOG_VERBOSE, LOG_TAG)2
#endif2
#endif2
2
/*2
 * Conditional based on whether the current LOG_TAG is enabled at2
 * debug priority.2
 */2
#ifndef IF_FBLOGD2
#define IF_FBLOGD() IF_FBLOG(LOG_DEBUG, LOG_TAG)2
#endif2
2
/*2
 * Conditional based on whether the current LOG_TAG is enabled at2
 * info priority.2
 */2
#ifndef IF_FBLOGI2
#define IF_FBLOGI() IF_FBLOG(LOG_INFO, LOG_TAG)2
#endif2
2
/*2
 * Conditional based on whether the current LOG_TAG is enabled at2
 * warn priority.2
 */2
#ifndef IF_FBLOGW2
#define IF_FBLOGW() IF_FBLOG(LOG_WARN, LOG_TAG)2
#endif2
2
/*2
 * Conditional based on whether the current LOG_TAG is enabled at2
 * error priority.2
 */2
#ifndef IF_FBLOGE2
#define IF_FBLOGE() IF_FBLOG(LOG_ERROR, LOG_TAG)2
#endif2
2
// ---------------------------------------------------------------------2
2
/*2
 * Log a fatal error.  If the given condition fails, this stops program2
 * execution like a normal assertion, but also generating the given message.2
 * It is NOT stripped from release builds.  Note that the condition test2
 * is -inverted- from the normal assert() semantics.2
 */2
#define FBLOG_ALWAYS_FATAL_IF(cond, ...)                                   \2
  ((CONDITION(cond)) ? ((void)fb_printAssert(#cond, LOG_TAG, __VA_ARGS__)) \2
                     : (void)0)2
2
#define FBLOG_ALWAYS_FATAL(...) \2
  (((void)fb_printAssert(NULL, LOG_TAG, __VA_ARGS__)))2
2
/*2
 * Versions of LOG_ALWAYS_FATAL_IF and LOG_ALWAYS_FATAL that2
 * are stripped out of release builds.2
 */2
#if FBLOG_NDEBUG2
2
#define FBLOG_FATAL_IF(cond, ...) ((void)0)2
#define FBLOG_FATAL(...) ((void)0)2
2
#else2
2
#define FBLOG_FATAL_IF(cond, ...) FBLOG_ALWAYS_FATAL_IF(cond, __VA_ARGS__)2
#define FBLOG_FATAL(...) FBLOG_ALWAYS_FATAL(__VA_ARGS__)2
2
#endif2
2
/*2
 * Assertion that generates a log message when the assertion fails.2
 * Stripped out of release builds.  Uses the current LOG_TAG.2
 */2
#define FBLOG_ASSERT(cond, ...) FBLOG_FATAL_IF(!(cond), __VA_ARGS__)2
//#define LOG_ASSERT(cond) LOG_FATAL_IF(!(cond), "Assertion failed: " #cond)2
2
// ---------------------------------------------------------------------2
2
/*2
 * Basic log message macro.2
 *2
 * Example:2
 *  FBLOG(LOG_WARN, NULL, "Failed with error %d", errno);2
 *2
 * The second argument may be NULL or "" to indicate the "global" tag.2
 */2
#ifndef FBLOG2
#define FBLOG(priority, tag, ...) \2
  FBLOG_PRI(ANDROID_##priority, tag, __VA_ARGS__)2
#endif2
2
#ifndef FBLOG_BY_DELIMS2
#define FBLOG_BY_DELIMS(priority, tag, delims, msg, ...) \2
  logPrintByDelims(ANDROID_##priority, tag, delims, msg, ##__VA_ARGS__)2
#endif2
2
/*2
 * Log macro that allows you to specify a number for the priority.2
 */2
#ifndef FBLOG_PRI2
#define FBLOG_PRI(priority, tag, ...) fb_printLog(priority, tag, __VA_ARGS__)2
#endif2
2
/*2
 * Log macro that allows you to pass in a varargs ("args" is a va_list).2
 */2
#ifndef FBLOG_PRI_VA2
#define FBLOG_PRI_VA(priority, tag, fmt, args) \2
  fb_vprintLog(priority, NULL, tag, fmt, args)2
#endif2
2
/*2
 * Conditional given a desired logging priority and tag.2
 */2
#ifndef IF_FBLOG2
#define IF_FBLOG(priority, tag) if (fb_testLog(ANDROID_##priority, tag))2
#endif2
2
typedef void (*LogHandler)(int priority, const char* tag, const char* message);2
FBEXPORT void setLogHandler(LogHandler logHandler);2
2
/*2
 * ===========================================================================2
 *2
 * The stuff in the rest of this file should not be used directly.2
 */2
FBEXPORT int fb_printLog(int prio, const char* tag, const char* fmt, ...)2
#if defined(__GNUC__)2
    __attribute__((format(printf, 3, 4)))2
#endif2
    ;2
2
#define fb_vprintLog(prio, cond, tag, fmt...) \2
  __android_log_vprint(prio, tag, fmt)2
2
#define fb_printAssert(cond, tag, fmt...) __android_log_assert(cond, tag, fmt)2
2
#define fb_writeLog(prio, tag, text) __android_log_write(prio, tag, text)2
2
#define fb_bWriteLog(tag, payload, len) __android_log_bwrite(tag, payload, len)2
#define fb_btWriteLog(tag, type, payload, len) \2
  __android_log_btwrite(tag, type, payload, len)2
2
#define fb_testLog(prio, tag) (1)2
2
/*2
 * FB extensions2
 */2
void logPrintByDelims(int priority, const char* tag, const char* delims,2
                      const char* msg, ...);2
2
#ifdef __cplusplus2
}2
#endif2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <iomanip>2
#include <iostream>2
#include <string>2
#include <vector>2
2
#include <fb/visibility.h>2
2
namespace facebook {2
namespace lyra {2
2
constexpr size_t kDefaultLimit = 64;2
2
using InstructionPointer = const void*;2
2
class FBEXPORT StackTraceElement {2
 public:2
  StackTraceElement(InstructionPointer absoluteProgramCounter,2
                    InstructionPointer libraryBase,2
                    InstructionPointer functionAddress, std::string libraryName,2
                    std::string functionName)2
      : absoluteProgramCounter_{absoluteProgramCounter},2
        libraryBase_{libraryBase},2
        functionAddress_{functionAddress},2
        libraryName_{std::move(libraryName)},2
        functionName_{std::move(functionName)} {}2
2
  InstructionPointer libraryBase() const noexcept { return libraryBase_; }2
2
  InstructionPointer functionAddress() const noexcept {2
    return functionAddress_;2
  }2
2
  InstructionPointer absoluteProgramCounter() const noexcept {2
    return absoluteProgramCounter_;2
  }2
2
  const std::string& libraryName() const noexcept { return libraryName_; }2
2
  const std::string& functionName() const noexcept { return functionName_; }2
2
  /**2
   * The offset of the program counter to the base of the library (i.e. the2
   * address that addr2line takes as input>2
   */2
  std::ptrdiff_t libraryOffset() const noexcept {2
    auto absoluteLibrary = static_cast<const char*>(libraryBase_);2
    auto absoluteabsoluteProgramCounter =2
        static_cast<const char*>(absoluteProgramCounter_);2
    return absoluteabsoluteProgramCounter - absoluteLibrary;2
  }2
2
  /**2
   * The offset within the current function2
   */2
  int functionOffset() const noexcept {2
    auto absoluteSymbol = static_cast<const char*>(functionAddress_);2
    auto absoluteabsoluteProgramCounter =2
        static_cast<const char*>(absoluteProgramCounter_);2
    return absoluteabsoluteProgramCounter - absoluteSymbol;2
  }2
2
 private:2
  const InstructionPointer absoluteProgramCounter_;2
  const InstructionPointer libraryBase_;2
  const InstructionPointer functionAddress_;2
  const std::string libraryName_;2
  const std::string functionName_;2
};2
2
/**2
 * Populate the vector with the current stack trace2
 *2
 * Note that this trace needs to be symbolicated to get the library offset even2
 * if it is to be symbolicated off-line.2
 *2
 * Beware of a bug on some platforms, which makes the trace loop until the2
 * buffer is full when it reaches a noexpr function. It seems to be fixed in2
 * newer versions of gcc. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=568462
 *2
 * @param stackTrace The vector that will receive the stack trace. Before2
 * filling the vector it will be cleared. The vector will never grow so the2
 * number of frames captured is limited by the capacity of it.2
 *2
 * @param skip The number of frames to skip before capturing the trace2
 */2
FBEXPORT void getStackTrace(std::vector<InstructionPointer>& stackTrace,2
                            size_t skip = 0);2
2
/**2
 * Creates a vector and populates it with the current stack trace2
 *2
 * Note that this trace needs to be symbolicated to get the library offset even2
 * if it is to be symbolicated off-line.2
 *2
 * Beware of a bug on some platforms, which makes the trace loop until the2
 * buffer is full when it reaches a noexpr function. It seems to be fixed in2
 * newer versions of gcc. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=568462
 *2
 * @param skip The number of frames to skip before capturing the trace2
 *2
 * @limit The maximum number of frames captured2
 */2
FBEXPORT inline std::vector<InstructionPointer> getStackTrace(2
    size_t skip = 0,2
    size_t limit = kDefaultLimit) {2
  auto stackTrace = std::vector<InstructionPointer>{};2
  stackTrace.reserve(limit);2
  getStackTrace(stackTrace, skip + 1);2
  return stackTrace;2
}2
2
/**2
 * Symbolicates a stack trace into a given vector2
 *2
 * @param symbols The vector to receive the output. The vector is cleared and2
 * enough room to keep the frames are reserved.2
 *2
 * @param stackTrace The input stack trace2
 */2
FBEXPORT void getStackTraceSymbols(std::vector<StackTraceElement>& symbols,2
                                   const std::vector<InstructionPointer>& trace);2
2
/**2
 * Symbolicates a stack trace into a new vector2
 *2
 * @param stackTrace The input stack trace2
 */2
FBEXPORT inline std::vector<StackTraceElement> getStackTraceSymbols(2
    const std::vector<InstructionPointer>& trace) {2
  auto symbols = std::vector<StackTraceElement>{};2
  getStackTraceSymbols(symbols, trace);2
  return symbols;2
}2
2
2
/**2
 * Captures and symbolicates a stack trace2
 *2
 * Beware of a bug on some platforms, which makes the trace loop until the2
 * buffer is full when it reaches a noexpr function. It seems to be fixed in2
 * newer versions of gcc. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=568462
 *2
 * @param skip The number of frames before capturing the trace2
 *2
 * @param limit The maximum number of frames captured2
 */2
FBEXPORT inline std::vector<StackTraceElement> getStackTraceSymbols(2
    size_t skip = 0,2
    size_t limit = kDefaultLimit) {2
  return getStackTraceSymbols(getStackTrace(skip + 1, limit));2
}2
2
/**2
 * Formatting a stack trace element2
 */2
FBEXPORT std::ostream& operator<<(std::ostream& out, const StackTraceElement& elm);2
2
/**2
 * Formatting a stack trace2
 */2
FBEXPORT std::ostream& operator<<(std::ostream& out,2
                                  const std::vector<StackTraceElement>& trace);2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
namespace facebook {2
2
struct noncopyable {2
  noncopyable(const noncopyable&) = delete;2
  noncopyable& operator=(const noncopyable&) = delete;2
protected:2
  noncopyable() = default;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
namespace facebook {2
2
struct nonmovable {2
  nonmovable(nonmovable&&) = delete;2
  nonmovable& operator=(nonmovable&&) = delete;2
protected:2
  nonmovable() = default;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <cstring>2
#include <string>2
#include <sstream>2
2
namespace facebook {2
2
#define FROM_HERE facebook::ProgramLocation(__FUNCTION__, __FILE__, __LINE__)2
2
class ProgramLocation {2
public:2
  ProgramLocation() : m_functionName("Unspecified"), m_fileName("Unspecified"), m_lineNumber(0) {}2
2
  ProgramLocation(const char* functionName, const char* fileName, int line) :2
      m_functionName(functionName),2
      m_fileName(fileName),2
      m_lineNumber(line)2
    {}2
2
  const char* functionName() const { return m_functionName; }2
  const char* fileName() const { return m_fileName; }2
  int lineNumber() const { return m_lineNumber; }2
2
  std::string asFormattedString() const {2
    std::stringstream str;2
    str << "Function " << m_functionName << " in file " << m_fileName << ":" << m_lineNumber;2
    return str.str();2
  }2
2
  bool operator==(const ProgramLocation& other) const {2
    // Assumes that the strings are static2
    return (m_functionName == other.m_functionName) && (m_fileName == other.m_fileName) && m_lineNumber == other.m_lineNumber;2
  }2
2
private:2
  const char* m_functionName;2
  const char* m_fileName;2
  int m_lineNumber;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <utility>2
#include <fb/assert.h>2
2
namespace facebook {2
2
// Reference counting smart pointer. This is designed to work with the2
// Countable class or other implementations in the future. It is designed in a2
// way to be both efficient and difficult to misuse. Typical usage is very2
// simple once you learn the patterns (and the compiler will help!):2
//2
// By default, the internal pointer is null.2
//   RefPtr<Foo> ref;2
//2
// Object creation requires explicit construction:2
//   RefPtr<Foo> ref = createNew<Foo>(...);2
//2
// Or if the constructor is not public:2
//   RefPtr<Foo> ref = adoptRef(new Foo(...));2
//2
// But you can implicitly create from nullptr:2
//   RefPtr<Foo> maybeRef = cond ? ref : nullptr;2
//2
// Move/Copy Construction/Assignment are straightforward:2
//   RefPtr<Foo> ref2 = ref;2
//   ref = std::move(ref2);2
//2
// Destruction automatically drops the RefPtr's reference as expected.2
//2
// Upcasting is implicit but downcasting requires an explicit cast:2
//   struct Bar : public Foo {};2
//   RefPtr<Bar> barRef = static_cast<RefPtr<Bar>>(ref);2
//   ref = barRef;2
//2
template <class T>2
class RefPtr {2
public:2
  constexpr RefPtr() :2
    m_ptr(nullptr)2
  {}2
2
  // Allow implicit construction from a pointer only from nullptr2
  constexpr RefPtr(std::nullptr_t ptr) :2
    m_ptr(nullptr)2
  {}2
2
  RefPtr(const RefPtr<T>& ref) :2
    m_ptr(ref.m_ptr)2
  {2
    refIfNecessary(m_ptr);2
  }2
2
  // Only allow implicit upcasts. A downcast will result in a compile error2
  // unless you use static_cast (which will end up invoking the explicit2
  // operator below).2
  template <typename U>2
  RefPtr(const RefPtr<U>& ref, typename std::enable_if<std::is_base_of<T,U>::value, U>::type* = nullptr) :2
    m_ptr(ref.get())2
  {2
    refIfNecessary(m_ptr);2
  }2
2
  RefPtr(RefPtr<T>&& ref) :2
    m_ptr(nullptr)2
  {2
    *this = std::move(ref);2
  }2
2
  // Only allow implicit upcasts. A downcast will result in a compile error2
  // unless you use static_cast (which will end up invoking the explicit2
  // operator below).2
  template <typename U>2
  RefPtr(RefPtr<U>&& ref, typename std::enable_if<std::is_base_of<T,U>::value, U>::type* = nullptr) :2
    m_ptr(nullptr)2
  {2
    *this = std::move(ref);2
  }2
2
  ~RefPtr() {2
    unrefIfNecessary(m_ptr);2
    m_ptr = nullptr;2
  }2
2
  RefPtr<T>& operator=(const RefPtr<T>& ref) {2
    if (m_ptr != ref.m_ptr) {2
      unrefIfNecessary(m_ptr);2
      m_ptr = ref.m_ptr;2
      refIfNecessary(m_ptr);2
    }2
    return *this;2
  }2
2
  // The STL assumes rvalue references are unique and for simplicity's sake, we2
  // make the same assumption here, that &ref != this.2
  RefPtr<T>& operator=(RefPtr<T>&& ref) {2
    unrefIfNecessary(m_ptr);2
    m_ptr = ref.m_ptr;2
    ref.m_ptr = nullptr;2
    return *this;2
  }2
2
  template <typename U>2
  RefPtr<T>& operator=(RefPtr<U>&& ref) {2
    unrefIfNecessary(m_ptr);2
    m_ptr = ref.m_ptr;2
    ref.m_ptr = nullptr;2
    return *this;2
  }2
2
  void reset() {2
    unrefIfNecessary(m_ptr);2
    m_ptr = nullptr;2
  }2
2
  T* get() const {2
    return m_ptr;2
  }2
2
  T* operator->() const {2
    return m_ptr;2
  }2
2
  T& operator*() const {2
    return *m_ptr;2
  }2
2
  template <typename U>2
  explicit operator RefPtr<U> () const;2
2
  explicit operator bool() const {2
    return m_ptr ? true : false;2
  }2
2
  bool isTheLastRef() const {2
    FBASSERT(m_ptr);2
    return m_ptr->hasOnlyOneRef();2
  }2
2
  // Creates a strong reference from a raw pointer, assuming that is already2
  // referenced from some other RefPtr. This should be used sparingly.2
  static inline RefPtr<T> assumeAlreadyReffed(T* ptr) {2
    return RefPtr<T>(ptr, ConstructionMode::External);2
  }2
2
  // Creates a strong reference from a raw pointer, assuming that it points to a2
  // freshly-created object. See the documentation for RefPtr for usage.2
  static inline RefPtr<T> adoptRef(T* ptr) {2
    return RefPtr<T>(ptr, ConstructionMode::Adopted);2
  }2
2
private:2
  enum class ConstructionMode {2
    Adopted,2
    External2
  };2
2
  RefPtr(T* ptr, ConstructionMode mode) :2
    m_ptr(ptr)2
  {2
    FBASSERTMSGF(ptr, "Got null pointer in %s construction mode", mode == ConstructionMode::Adopted ? "adopted" : "external");2
    ptr->ref();2
    if (mode == ConstructionMode::Adopted) {2
      FBASSERT(ptr->hasOnlyOneRef());2
    }2
  }2
2
  static inline void refIfNecessary(T* ptr) {2
    if (ptr) {2
      ptr->ref();2
    }2
  }2
  static inline void unrefIfNecessary(T* ptr) {2
    if (ptr) {2
      ptr->unref();2
    }2
  }2
2
  template <typename U> friend class RefPtr;2
2
  T* m_ptr;2
};2
2
// Creates a strong reference from a raw pointer, assuming that is already2
// referenced from some other RefPtr and that it is non-null. This should be2
// used sparingly.2
template <typename T>2
static inline RefPtr<T> assumeAlreadyReffed(T* ptr) {2
  return RefPtr<T>::assumeAlreadyReffed(ptr);2
}2
2
// As above, but tolerant of nullptr.2
template <typename T>2
static inline RefPtr<T> assumeAlreadyReffedOrNull(T* ptr) {2
  return ptr ? RefPtr<T>::assumeAlreadyReffed(ptr) : nullptr;2
}2
2
// Creates a strong reference from a raw pointer, assuming that it points to a2
// freshly-created object. See the documentation for RefPtr for usage.2
template <typename T>2
static inline RefPtr<T> adoptRef(T* ptr) {2
  return RefPtr<T>::adoptRef(ptr);2
}2
2
template <typename T, typename ...Args>2
static inline RefPtr<T> createNew(Args&&... arguments) {2
  return RefPtr<T>::adoptRef(new T(std::forward<Args>(arguments)...));2
}2
2
template <typename T> template <typename U>2
RefPtr<T>::operator RefPtr<U>() const {2
  static_assert(std::is_base_of<T, U>::value, "Invalid static cast");2
  return assumeAlreadyReffedOrNull<U>(static_cast<U*>(m_ptr));2
}2
2
template <typename T, typename U>2
inline bool operator==(const RefPtr<T>& a, const RefPtr<U>& b) {2
  return a.get() == b.get();2
}2
2
template <typename T, typename U>2
inline bool operator!=(const RefPtr<T>& a, const RefPtr<U>& b) {2
  return a.get() != b.get();2
}2
2
template <typename T, typename U>2
inline bool operator==(const RefPtr<T>& ref, U* ptr) {2
  return ref.get() == ptr;2
}2
2
template <typename T, typename U>2
inline bool operator!=(const RefPtr<T>& ref, U* ptr) {2
  return ref.get() != ptr;2
}2
2
template <typename T, typename U>2
inline bool operator==(U* ptr, const RefPtr<T>& ref) {2
  return ref.get() == ptr;2
}2
2
template <typename T, typename U>2
inline bool operator!=(U* ptr, const RefPtr<T>& ref) {2
  return ref.get() != ptr;2
}2
2
template <typename T>2
inline bool operator==(const RefPtr<T>& ref, std::nullptr_t ptr) {2
  return ref.get() == ptr;2
}2
2
template <typename T>2
inline bool operator!=(const RefPtr<T>& ref, std::nullptr_t ptr) {2
  return ref.get() != ptr;2
}2
2
template <typename T>2
inline bool operator==(std::nullptr_t ptr, const RefPtr<T>& ref) {2
  return ref.get() == ptr;2
}2
2
template <typename T>2
inline bool operator!=(std::nullptr_t ptr, const RefPtr<T>& ref) {2
  return ref.get() != ptr;2
}2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <fb/assert.h>2
#include <utility>2
2
namespace facebook {2
2
// Class that lets you declare a global but does not add a static constructor2
// to the binary. Eventually I'd like to have this auto-initialize in a2
// multithreaded environment but for now it's easiest just to use manual2
// initialization.2
template <typename T>2
class StaticInitialized {2
public:2
  constexpr StaticInitialized() :2
    m_instance(nullptr)2
  {}2
2
  template <typename ...Args>2
  void initialize(Args&&... arguments) {2
    FBASSERT(!m_instance);2
    m_instance = new T(std::forward<Args>(arguments)...);2
  }2
2
  T* operator->() const {2
    return m_instance;2
  }2
private:2
  T* m_instance;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <pthread.h>2
#include <errno.h>2
2
#include <fb/assert.h>2
2
namespace facebook {2
2
///////////////////////////////////////////////////////////////////////////////2
2
/**2
 * A thread-local object is a "global" object within a thread. This is useful2
 * for writing apartment-threaded code, where nothing is actullay shared2
 * between different threads (hence no locking) but those variables are not2
 * on stack in local scope. To use it, just do something like this,2
 *2
 *   ThreadLocal<MyClass> static_object;2
 *     static_object->data_ = ...;2
 *     static_object->doSomething();2
 *2
 *   ThreadLocal<int> static_number;2
 *     int value = *static_number;2
 *2
 * So, syntax-wise it's similar to pointers. T can be primitive types, and if2
 * it's a class, there has to be a default constructor.2
 */2
template<typename T>2
class ThreadLocal {2
public:2
  /**2
   * Constructor that has to be called from a thread-neutral place.2
   */2
  ThreadLocal() :2
    m_key(0),2
    m_cleanup(OnThreadExit) {2
    initialize();2
  }2
2
  /**2
   * As above but with a custom cleanup function2
   */2
  typedef void (*CleanupFunction)(void* obj);2
  explicit ThreadLocal(CleanupFunction cleanup) :2
    m_key(0),2
    m_cleanup(cleanup) {2
    FBASSERT(cleanup);2
    initialize();2
  }2
2
  /**2
   * Access object's member or method through this operator overload.2
   */2
  T *operator->() const {2
    return get();2
  }2
2
  T &operator*() const {2
    return *get();2
  }2
2
  T *get() const {2
    return (T*)pthread_getspecific(m_key);2
  }2
2
  T* release() {2
    T* obj = get();2
    pthread_setspecific(m_key, NULL);2
    return obj;2
  }2
2
  void reset(T* other = NULL) {2
    T* old = (T*)pthread_getspecific(m_key);2
    if (old != other) {2
      FBASSERT(m_cleanup);2
      m_cleanup(old);2
      pthread_setspecific(m_key, other);2
    }2
  }2
2
private:2
  void initialize() {2
    int ret = pthread_key_create(&m_key, m_cleanup);2
    if (ret != 0) {2
      const char *msg = "(unknown error)";2
      switch (ret) {2
      case EAGAIN:2
        msg = "PTHREAD_KEYS_MAX (1024) is exceeded";2
        break;2
      case ENOMEM:2
        msg = "Out-of-memory";2
        break;2
      }2
      (void) msg;2
      FBASSERTMSGF(0, "pthread_key_create failed: %d %s", ret, msg);2
    }2
  }2
2
  static void OnThreadExit(void *obj) {2
    if (NULL != obj) {2
      delete (T*)obj;2
    }2
  }2
2
  pthread_key_t m_key;2
  CleanupFunction m_cleanup;2
};2
2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#define FBEXPORT __attribute__((visibility("default")))2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
template <typename T, typename jprim>2
struct JPrimitive : JavaClass<T> {2
  using typename JavaClass<T>::javaobject;2
  using JavaClass<T>::javaClassStatic;2
  static local_ref<javaobject> valueOf(jprim val) {2
    static auto cls = javaClassStatic();2
    static auto method =2
      cls->template getStaticMethod<javaobject(jprim)>("valueOf");2
    return method(cls, val);2
  }2
  jprim value() const {2
    static auto method =2
      javaClassStatic()->template getMethod<jprim()>(T::kValueMethod);2
    return method(this->self());2
  }2
};2
2
} // namespace detail2
2
2
#define DEFINE_BOXED_PRIMITIVE(LITTLE, BIG)                          \2
  struct J ## BIG : detail::JPrimitive<J ## BIG, j ## LITTLE> {      \2
    static auto constexpr kJavaDescriptor = "Ljava/lang/" #BIG ";";  \2
    static auto constexpr kValueMethod = #LITTLE "Value";            \2
    j ## LITTLE LITTLE ## Value() const {                            \2
      return value();                                                \2
    }                                                                \2
  };                                                                 \2
  inline local_ref<jobject> autobox(j ## LITTLE val) {               \2
    return J ## BIG::valueOf(val);                                   \2
  }2
2
DEFINE_BOXED_PRIMITIVE(boolean, Boolean)2
DEFINE_BOXED_PRIMITIVE(byte, Byte)2
DEFINE_BOXED_PRIMITIVE(char, Character)2
DEFINE_BOXED_PRIMITIVE(short, Short)2
DEFINE_BOXED_PRIMITIVE(int, Integer)2
DEFINE_BOXED_PRIMITIVE(long, Long)2
DEFINE_BOXED_PRIMITIVE(float, Float)2
DEFINE_BOXED_PRIMITIVE(double, Double)2
2
#undef DEFINE_BOXED_PRIMITIVE2
2
inline local_ref<jobject> autobox(alias_ref<jobject> val) {2
  return make_local(val);2
}2
2
}}2
/*2
 *  Copyright (c) 2016-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <fb/visibility.h>2
2
#include "CoreClasses.h"2
#include "References-forward.h"2
2
namespace facebook {2
namespace jni {2
2
// JNI's NIO support has some awkward preconditions and error reporting. This2
// class provides much more user-friendly access.2
class FBEXPORT JByteBuffer : public JavaClass<JByteBuffer> {2
 public:2
  static constexpr const char* kJavaDescriptor = "Ljava/nio/ByteBuffer;";2
2
  static local_ref<JByteBuffer> wrapBytes(uint8_t* data, size_t size);2
2
  bool isDirect() const;2
2
  uint8_t* getDirectBytes() const;2
  size_t getDirectSize() const;2
};2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/** @file Common.h2
 *2
 * Defining the stuff that don't deserve headers of their own...2
 */2
2
#pragma once2
2
#include <functional>2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
#include <fb/Environment.h>2
2
#ifdef FBJNI_DEBUG_REFS2
# ifdef __ANDROID__2
#  include <android/log.h>2
# else2
#  include <cstdio>2
# endif2
#endif2
2
// If a pending JNI Java exception is found, wraps it in a JniException object and throws it as2
// a C++ exception.2
#define FACEBOOK_JNI_THROW_PENDING_EXCEPTION() \2
  ::facebook::jni::throwPendingJniExceptionAsCppException()2
2
// If the condition is true, throws a JniException object, which wraps the pending JNI Java2
// exception if any. If no pending exception is found, throws a JniException object that wraps a2
// RuntimeException throwable. 2
#define FACEBOOK_JNI_THROW_EXCEPTION_IF(CONDITION) \2
  ::facebook::jni::throwCppExceptionIf(CONDITION)2
2
/// @cond INTERNAL2
2
namespace facebook {2
namespace jni {2
2
FBEXPORT void throwPendingJniExceptionAsCppException();2
FBEXPORT void throwCppExceptionIf(bool condition);2
2
[[noreturn]] FBEXPORT void throwNewJavaException(jthrowable);2
[[noreturn]] FBEXPORT void throwNewJavaException(const char* throwableName, const char* msg);2
template<typename... Args>2
[[noreturn]] void throwNewJavaException(const char* throwableName, const char* fmt, Args... args);2
2
2
/**2
 * This needs to be called at library load time, typically in your JNI_OnLoad method.2
 *2
 * The intended use is to return the result of initialize() directly2
 * from JNI_OnLoad and to do nothing else there. Library specific2
 * initialization code should go in the function passed to initialize2
 * (which can be, and probably should be, a C++ lambda). This approach2
 * provides correct error handling and translation errors during2
 * initialization into Java exceptions when appropriate.2
 *2
 * Failure to call this will cause your code to crash in a remarkably2
 * unhelpful way (typically a segfault) while trying to handle an exception2
 * which occurs later.2
 */2
FBEXPORT jint initialize(JavaVM*, std::function<void()>&&) noexcept;2
2
namespace internal {2
2
/**2
 * Retrieve a pointer the JNI environment of the current thread.2
 *2
 * @pre The current thread must be attached to the VM2
 */2
inline JNIEnv* getEnv() noexcept {2
  // TODO(T6594868) Benchmark against raw JNI access2
  return Environment::current();2
}2
2
// Define to get extremely verbose logging of references and to enable reference stats2
#ifdef FBJNI_DEBUG_REFS2
template<typename... Args>2
inline void dbglog(const char* msg, Args... args) {2
# ifdef __ANDROID__2
  __android_log_print(ANDROID_LOG_VERBOSE, "fbjni_dbg", msg, args...);2
# else2
  std::fprintf(stderr, msg, args...);2
# endif2
}2
2
#else2
2
template<typename... Args>2
inline void dbglog(const char*, Args...) {2
}2
2
#endif2
2
}}}2
2
/// @endcond2
/*2
 *  Copyright (c) 2016-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
#include "File.h"2
2
namespace facebook {2
namespace jni {2
2
class AContext : public JavaClass<AContext> {2
 public:2
  static constexpr const char* kJavaDescriptor = "Landroid/content/Context;";2
2
  // Define a method that calls into the represented Java class2
  local_ref<JFile::javaobject> getCacheDir() {2
    static auto method = getClass()->getMethod<JFile::javaobject()>("getCacheDir");2
    return method(self());2
  }2
2
  local_ref<JFile::javaobject> getFilesDir() {2
    static auto method = getClass()->getMethod<JFile::javaobject()>("getFilesDir");2
    return method(self());2
  }2
};2
2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <string.h>2
#include <type_traits>2
#include <stdlib.h>2
2
#include "Common.h"2
#include "Exceptions.h"2
#include "Meta.h"2
#include "MetaConvert.h"2
2
namespace facebook {2
namespace jni {2
2
// jobject /////////////////////////////////////////////////////////////////////////////////////////2
2
inline bool isSameObject(alias_ref<JObject> lhs, alias_ref<JObject> rhs) noexcept {2
  return internal::getEnv()->IsSameObject(lhs.get(), rhs.get()) != JNI_FALSE;2
}2
2
inline local_ref<JClass> JObject::getClass() const noexcept {2
  return adopt_local(internal::getEnv()->GetObjectClass(self()));2
}2
2
inline bool JObject::isInstanceOf(alias_ref<JClass> cls) const noexcept {2
  return internal::getEnv()->IsInstanceOf(self(), cls.get()) != JNI_FALSE;2
}2
2
template<typename T>2
inline T JObject::getFieldValue(JField<T> field) const noexcept {2
  return field.get(self());2
}2
2
template<typename T>2
inline local_ref<T*> JObject::getFieldValue(JField<T*> field) const noexcept {2
  return adopt_local(field.get(self()));2
}2
2
template<typename T>2
inline void JObject::setFieldValue(JField<T> field, T value) noexcept {2
  field.set(self(), value);2
}2
2
inline std::string JObject::toString() const {2
  static auto method = findClassLocal("java/lang/Object")->getMethod<jstring()>("toString");2
2
  return method(self())->toStdString();2
}2
2
2
// Class is here instead of CoreClasses.h because we need2
// alias_ref to be complete.2
class MonitorLock {2
 public:2
  inline MonitorLock() noexcept;2
  inline MonitorLock(alias_ref<JObject> object) noexcept;2
  inline ~MonitorLock() noexcept;2
2
  inline MonitorLock(MonitorLock&& other) noexcept;2
  inline MonitorLock& operator=(MonitorLock&& other) noexcept;2
2
  inline MonitorLock(const MonitorLock&) = delete;2
  inline MonitorLock& operator=(const MonitorLock&) = delete;2
2
 private:2
  inline void reset() noexcept;2
  alias_ref<JObject> owned_;2
};2
2
MonitorLock::MonitorLock() noexcept : owned_(nullptr) {}2
2
MonitorLock::MonitorLock(alias_ref<JObject> object) noexcept2
    : owned_(object) {2
  internal::getEnv()->MonitorEnter(object.get());2
}2
2
void MonitorLock::reset() noexcept {2
  if (owned_) {2
    internal::getEnv()->MonitorExit(owned_.get());2
    if (internal::getEnv()->ExceptionCheck()) {2
      abort(); // Lock mismatch2
    }2
    owned_ = nullptr;2
  }2
}2
2
MonitorLock::~MonitorLock() noexcept {2
  reset();2
}2
2
MonitorLock::MonitorLock(MonitorLock&& other) noexcept2
    : owned_(other.owned_)2
{2
  other.owned_ = nullptr;2
}2
2
MonitorLock& MonitorLock::operator=(MonitorLock&& other) noexcept {2
  reset();2
  owned_ = other.owned_;2
  other.owned_ = nullptr;2
  return *this;2
}2
2
inline MonitorLock JObject::lock() const noexcept {2
  return MonitorLock(this_);2
}2
2
inline jobject JObject::self() const noexcept {2
  return this_;2
}2
2
inline void swap(JObject& a, JObject& b) noexcept {2
  using std::swap;2
  swap(a.this_, b.this_);2
}2
2
// JavaClass ///////////////////////////////////////////////////////////////////////////////////////2
2
namespace detail {2
template<typename JC, typename... Args>2
static local_ref<JC> newInstance(Args... args) {2
  static auto cls = JC::javaClassStatic();2
  static auto constructor = cls->template getConstructor<typename JC::javaobject(Args...)>();2
  return cls->newObject(constructor, args...);2
}2
}2
2
2
template <typename T, typename B, typename J>2
auto JavaClass<T, B, J>::self() const noexcept -> javaobject {2
  return static_cast<javaobject>(JObject::self());2
}2
2
// jclass //////////////////////////////////////////////////////////////////////////////////////////2
2
namespace detail {2
2
// This is not a real type.  It is used so people won't accidentally2
// use a void* to initialize a NativeMethod.2
struct NativeMethodWrapper;2
2
}2
2
struct NativeMethod {2
  const char* name;2
  std::string descriptor;2
  detail::NativeMethodWrapper* wrapper;2
};2
2
inline local_ref<JClass> JClass::getSuperclass() const noexcept {2
  return adopt_local(internal::getEnv()->GetSuperclass(self()));2
}2
2
inline void JClass::registerNatives(std::initializer_list<NativeMethod> methods) {2
  const auto env = internal::getEnv();2
2
  JNINativeMethod jnimethods[methods.size()];2
  size_t i = 0;2
  for (auto it = methods.begin(); it < methods.end(); ++it, ++i) {2
    jnimethods[i].name = it->name;2
    jnimethods[i].signature = it->descriptor.c_str();2
    jnimethods[i].fnPtr = reinterpret_cast<void*>(it->wrapper);2
  }2
2
  auto result = env->RegisterNatives(self(), jnimethods, methods.size());2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(result != JNI_OK);2
}2
2
inline bool JClass::isAssignableFrom(alias_ref<JClass> other) const noexcept {2
  const auto env = internal::getEnv();2
  const auto result = env->IsAssignableFrom(self(), other.get());2
  return result;2
}2
2
template<typename F>2
inline JConstructor<F> JClass::getConstructor() const {2
  return getConstructor<F>(jmethod_traits_from_cxx<F>::constructor_descriptor().c_str());2
}2
2
template<typename F>2
inline JConstructor<F> JClass::getConstructor(const char* descriptor) const {2
  constexpr auto constructor_method_name = "<init>";2
  return getMethod<F>(constructor_method_name, descriptor);2
}2
2
template<typename F>2
inline JMethod<F> JClass::getMethod(const char* name) const {2
  return getMethod<F>(name, jmethod_traits_from_cxx<F>::descriptor().c_str());2
}2
2
template<typename F>2
inline JMethod<F> JClass::getMethod(2
    const char* name,2
    const char* descriptor) const {2
  const auto env = internal::getEnv();2
  const auto method = env->GetMethodID(self(), name, descriptor);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!method);2
  return JMethod<F>{method};2
}2
2
template<typename F>2
inline JStaticMethod<F> JClass::getStaticMethod(const char* name) const {2
  return getStaticMethod<F>(name, jmethod_traits_from_cxx<F>::descriptor().c_str());2
}2
2
template<typename F>2
inline JStaticMethod<F> JClass::getStaticMethod(2
    const char* name,2
    const char* descriptor) const {2
  const auto env = internal::getEnv();2
  const auto method = env->GetStaticMethodID(self(), name, descriptor);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!method);2
  return JStaticMethod<F>{method};2
}2
2
template<typename F>2
inline JNonvirtualMethod<F> JClass::getNonvirtualMethod(const char* name) const {2
  return getNonvirtualMethod<F>(name, jmethod_traits_from_cxx<F>::descriptor().c_str());2
}2
2
template<typename F>2
inline JNonvirtualMethod<F> JClass::getNonvirtualMethod(2
    const char* name,2
    const char* descriptor) const {2
  const auto env = internal::getEnv();2
  const auto method = env->GetMethodID(self(), name, descriptor);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!method);2
  return JNonvirtualMethod<F>{method};2
}2
2
template<typename T>2
inline JField<enable_if_t<IsJniScalar<T>(), T>>2
JClass::getField(const char* name) const {2
  return getField<T>(name, jtype_traits<T>::descriptor().c_str());2
}2
2
template<typename T>2
inline JField<enable_if_t<IsJniScalar<T>(), T>> JClass::getField(2
    const char* name,2
    const char* descriptor) const {2
  const auto env = internal::getEnv();2
  auto field = env->GetFieldID(self(), name, descriptor);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!field);2
  return JField<T>{field};2
}2
2
template<typename T>2
inline JStaticField<enable_if_t<IsJniScalar<T>(), T>> JClass::getStaticField(2
    const char* name) const {2
  return getStaticField<T>(name, jtype_traits<T>::descriptor().c_str());2
}2
2
template<typename T>2
inline JStaticField<enable_if_t<IsJniScalar<T>(), T>> JClass::getStaticField(2
    const char* name,2
    const char* descriptor) const {2
  const auto env = internal::getEnv();2
  auto field = env->GetStaticFieldID(self(), name, descriptor);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!field);2
  return JStaticField<T>{field};2
}2
2
template<typename T>2
inline T JClass::getStaticFieldValue(JStaticField<T> field) const noexcept {2
  return field.get(self());2
}2
2
template<typename T>2
inline local_ref<T*> JClass::getStaticFieldValue(JStaticField<T*> field) noexcept {2
  return adopt_local(field.get(self()));2
}2
2
template<typename T>2
inline void JClass::setStaticFieldValue(JStaticField<T> field, T value) noexcept {2
  field.set(self(), value);2
}2
2
template<typename R, typename... Args>2
inline local_ref<R> JClass::newObject(2
    JConstructor<R(Args...)> constructor,2
    Args... args) const {2
  const auto env = internal::getEnv();2
  auto object = env->NewObject(self(), constructor.getId(),2
      detail::callToJni(2
        detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!object);2
  return adopt_local(static_cast<R>(object));2
}2
2
inline jclass JClass::self() const noexcept {2
  return static_cast<jclass>(JObject::self());2
}2
2
inline void registerNatives(const char* name, std::initializer_list<NativeMethod> methods) {2
  findClassLocal(name)->registerNatives(methods);2
}2
2
2
// jstring /////////////////////////////////////////////////////////////////////////////////////////2
2
inline local_ref<JString> make_jstring(const std::string& modifiedUtf8) {2
  return make_jstring(modifiedUtf8.c_str());2
}2
2
namespace detail {2
// convert to std::string from jstring2
template <>2
struct Convert<std::string> {2
  typedef jstring jniType;2
  static std::string fromJni(jniType t) {2
    return wrap_alias(t)->toStdString();2
  }2
  static jniType toJniRet(const std::string& t) {2
    return make_jstring(t).release();2
  }2
  static local_ref<JString> toCall(const std::string& t) {2
    return make_jstring(t);2
  }2
};2
2
// convert return from const char*2
template <>2
struct Convert<const char*> {2
  typedef jstring jniType;2
  // no automatic synthesis of const char*.  (It can't be freed.)2
  static jniType toJniRet(const char* t) {2
    return make_jstring(t).release();2
  }2
  static local_ref<JString> toCall(const char* t) {2
    return make_jstring(t);2
  }2
};2
}2
2
// JStackTrace //////////////////////////////////////////////////////////////////////////////////////2
2
inline auto JStackTraceElement::create(2
    const std::string& declaringClass, const std::string& methodName, const std::string& file, int line)2
    -> local_ref<javaobject> {2
  return newInstance(declaringClass, methodName, file, line);2
}2
2
inline std::string JStackTraceElement::getClassName() const {2
  static auto meth = javaClassStatic()->getMethod<local_ref<JString>()>("getClassName");2
  return meth(self())->toStdString();2
}2
2
inline std::string JStackTraceElement::getMethodName() const {2
  static auto meth = javaClassStatic()->getMethod<local_ref<JString>()>("getMethodName");2
  return meth(self())->toStdString();2
}2
2
inline std::string JStackTraceElement::getFileName() const {2
  static auto meth = javaClassStatic()->getMethod<local_ref<JString>()>("getFileName");2
  return meth(self())->toStdString();2
}2
2
inline int JStackTraceElement::getLineNumber() const {2
  static auto meth = javaClassStatic()->getMethod<jint()>("getLineNumber");2
  return meth(self());2
}2
2
// jthrowable //////////////////////////////////////////////////////////////////////////////////////2
2
inline local_ref<JThrowable> JThrowable::initCause(alias_ref<JThrowable> cause) {2
  static auto meth = javaClassStatic()->getMethod<javaobject(javaobject)>("initCause");2
  return meth(self(), cause.get());2
}2
2
// jtypeArray //////////////////////////////////////////////////////////////////////////////////////2
2
namespace detail {2
inline size_t JArray::size() const noexcept {2
  const auto env = internal::getEnv();2
  return env->GetArrayLength(self());2
}2
}2
2
namespace detail {2
template<typename Target>2
inline ElementProxy<Target>::ElementProxy(2
    Target* target,2
    size_t idx)2
    : target_{target}, idx_{idx} {}2
2
template<typename Target>2
inline ElementProxy<Target>& ElementProxy<Target>::operator=(const T& o) {2
  target_->setElement(idx_, o);2
  return *this;2
}2
2
template<typename Target>2
inline ElementProxy<Target>& ElementProxy<Target>::operator=(alias_ref<T>& o) {2
  target_->setElement(idx_, o.get());2
  return *this;2
}2
2
template<typename Target>2
inline ElementProxy<Target>& ElementProxy<Target>::operator=(alias_ref<T>&& o) {2
  target_->setElement(idx_, o.get());2
  return *this;2
}2
2
template<typename Target>2
inline ElementProxy<Target>& ElementProxy<Target>::operator=(const ElementProxy<Target>& o) {2
  auto src = o.target_->getElement(o.idx_);2
  target_->setElement(idx_, src.get());2
  return *this;2
}2
2
template<typename Target>2
inline ElementProxy<Target>::ElementProxy::operator const local_ref<T> () const {2
  return target_->getElement(idx_);2
}2
2
template<typename Target>2
inline ElementProxy<Target>::ElementProxy::operator local_ref<T> () {2
  return target_->getElement(idx_);2
}2
}2
2
template <typename T>2
std::string JArrayClass<T>::get_instantiated_java_descriptor() {2
  return "[" + jtype_traits<T>::descriptor();2
};2
2
template <typename T>2
std::string JArrayClass<T>::get_instantiated_base_name() {2
  return get_instantiated_java_descriptor();2
};2
2
template<typename T>2
auto JArrayClass<T>::newArray(size_t size) -> local_ref<javaobject> {2
  static auto elementClass = findClassStatic(jtype_traits<T>::base_name().c_str());2
  const auto env = internal::getEnv();2
  auto rawArray = env->NewObjectArray(size, elementClass.get(), nullptr);2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(!rawArray);2
  return adopt_local(static_cast<javaobject>(rawArray));2
}2
2
template<typename T>2
inline void JArrayClass<T>::setElement(size_t idx, const T& value) {2
  const auto env = internal::getEnv();2
  env->SetObjectArrayElement(this->self(), idx, value);2
}2
2
template<typename T>2
inline local_ref<T> JArrayClass<T>::getElement(size_t idx) {2
  const auto env = internal::getEnv();2
  auto rawElement = env->GetObjectArrayElement(this->self(), idx);2
  return adopt_local(static_cast<T>(rawElement));2
}2
2
template<typename T>2
inline detail::ElementProxy<JArrayClass<T>> JArrayClass<T>::operator[](size_t index) {2
  return detail::ElementProxy<JArrayClass<T>>(this, index);2
}2
2
// jarray /////////////////////////////////////////////////////////////////////////////////////////2
2
template <typename JArrayType>2
auto JPrimitiveArray<JArrayType>::getRegion(jsize start, jsize length)2
    -> std::unique_ptr<T[]> {2
  using T = typename jtype_traits<JArrayType>::entry_type;2
  auto buf = std::unique_ptr<T[]>{new T[length]};2
  getRegion(start, length, buf.get());2
  return buf;2
}2
2
template <typename JArrayType>2
std::string JPrimitiveArray<JArrayType>::get_instantiated_java_descriptor() {2
  return jtype_traits<JArrayType>::descriptor();2
}2
template <typename JArrayType>2
std::string JPrimitiveArray<JArrayType>::get_instantiated_base_name() {2
  return JPrimitiveArray::get_instantiated_java_descriptor();2
}2
2
template <typename JArrayType>2
auto JPrimitiveArray<JArrayType>::pin() -> PinnedPrimitiveArray<T, PinnedArrayAlloc<T>> {2
  return PinnedPrimitiveArray<T, PinnedArrayAlloc<T>>{this->self(), 0, 0};2
}2
2
template <typename JArrayType>2
auto JPrimitiveArray<JArrayType>::pinRegion(jsize start, jsize length)2
    -> PinnedPrimitiveArray<T, PinnedRegionAlloc<T>> {2
  return PinnedPrimitiveArray<T, PinnedRegionAlloc<T>>{this->self(), start, length};2
}2
2
template <typename JArrayType>2
auto JPrimitiveArray<JArrayType>::pinCritical()2
    -> PinnedPrimitiveArray<T, PinnedCriticalAlloc<T>> {2
  return PinnedPrimitiveArray<T, PinnedCriticalAlloc<T>>{this->self(), 0, 0};2
}2
2
template <typename T>2
class PinnedArrayAlloc {2
 public:2
  static void allocate(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      jsize start,2
      jsize length,2
      T** elements,2
      size_t* size,2
      jboolean* isCopy) {2
    (void) start;2
    (void) length;2
    *elements = array->getElements(isCopy);2
    *size = array->size();2
  }2
  static void release(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      T* elements,2
      jint start,2
      jint size,2
      jint mode) {2
    (void) start;2
    (void) size;2
    array->releaseElements(elements, mode);2
  }2
};2
2
template <typename T>2
class PinnedCriticalAlloc {2
 public:2
  static void allocate(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      jsize start,2
      jsize length,2
      T** elements,2
      size_t* size,2
      jboolean* isCopy) {2
    const auto env = internal::getEnv();2
    *elements = static_cast<T*>(env->GetPrimitiveArrayCritical(array.get(), isCopy));2
    FACEBOOK_JNI_THROW_EXCEPTION_IF(!elements);2
    *size = array->size();2
  }2
  static void release(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      T* elements,2
      jint start,2
      jint size,2
      jint mode) {2
    const auto env = internal::getEnv();2
    env->ReleasePrimitiveArrayCritical(array.get(), elements, mode);2
  }2
};2
2
template <typename T>2
class PinnedRegionAlloc {2
 public:2
  static void allocate(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      jsize start,2
      jsize length,2
      T** elements,2
      size_t* size,2
      jboolean* isCopy) {2
    auto buf = array->getRegion(start, length);2
    FACEBOOK_JNI_THROW_EXCEPTION_IF(!buf);2
    *elements = buf.release();2
    *size = length;2
    *isCopy = true;2
  }2
  static void release(2
      alias_ref<typename jtype_traits<T>::array_type> array,2
      T* elements,2
      jint start,2
      jint size,2
      jint mode) {2
    std::unique_ptr<T[]> holder;2
    if (mode == 0 || mode == JNI_ABORT) {2
      holder.reset(elements);2
    }2
    if (mode == 0 || mode == JNI_COMMIT) {2
      array->setRegion(start, size, elements);2
    }2
  }2
};2
2
// PinnedPrimitiveArray ///////////////////////////////////////////////////////////////////////////2
2
template<typename T, typename Alloc>2
PinnedPrimitiveArray<T, Alloc>::PinnedPrimitiveArray(PinnedPrimitiveArray&& o) {2
  *this = std::move(o);2
}2
2
template<typename T, typename Alloc>2
PinnedPrimitiveArray<T, Alloc>&2
PinnedPrimitiveArray<T, Alloc>::operator=(PinnedPrimitiveArray&& o) {2
  if (array_) {2
    release();2
  }2
  array_ = std::move(o.array_);2
  elements_ = o.elements_;2
  isCopy_ = o.isCopy_;2
  size_ = o.size_;2
  start_ = o.start_;2
  o.clear();2
  return *this;2
}2
2
template<typename T, typename Alloc>2
T* PinnedPrimitiveArray<T, Alloc>::get() {2
  return elements_;2
}2
2
template<typename T, typename Alloc>2
inline void PinnedPrimitiveArray<T, Alloc>::release() {2
  releaseImpl(0);2
  clear();2
}2
2
template<typename T, typename Alloc>2
inline void PinnedPrimitiveArray<T, Alloc>::commit() {2
  releaseImpl(JNI_COMMIT);2
}2
2
template<typename T, typename Alloc>2
inline void PinnedPrimitiveArray<T, Alloc>::abort() {2
  releaseImpl(JNI_ABORT);2
  clear();2
}2
2
template <typename T, typename Alloc>2
inline void PinnedPrimitiveArray<T, Alloc>::releaseImpl(jint mode) {2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(array_.get() == nullptr);2
  Alloc::release(array_, elements_, start_, size_, mode);2
}2
2
template<typename T, typename Alloc>2
inline void PinnedPrimitiveArray<T, Alloc>::clear() noexcept {2
  array_ = nullptr;2
  elements_ = nullptr;2
  isCopy_ = false;2
  start_ = 0;2
  size_ = 0;2
}2
2
template<typename T, typename Alloc>2
inline T& PinnedPrimitiveArray<T, Alloc>::operator[](size_t index) {2
  FACEBOOK_JNI_THROW_EXCEPTION_IF(elements_ == nullptr);2
  return elements_[index];2
}2
2
template<typename T, typename Alloc>2
inline bool PinnedPrimitiveArray<T, Alloc>::isCopy() const noexcept {2
  return isCopy_ == JNI_TRUE;2
}2
2
template<typename T, typename Alloc>2
inline size_t PinnedPrimitiveArray<T, Alloc>::size() const noexcept {2
  return size_;2
}2
2
template<typename T, typename Alloc>2
inline PinnedPrimitiveArray<T, Alloc>::~PinnedPrimitiveArray() noexcept {2
  if (elements_) {2
    release();2
  }2
}2
2
template<typename T, typename Alloc>2
inline PinnedPrimitiveArray<T, Alloc>::PinnedPrimitiveArray(alias_ref<typename jtype_traits<T>::array_type> array, jint start, jint length) {2
  array_ = array;2
  start_ = start;2
  Alloc::allocate(array, start, length, &elements_, &size_, &isCopy_);2
}2
2
template<typename T, typename Base, typename JType>2
inline alias_ref<JClass> JavaClass<T, Base, JType>::javaClassStatic() {2
  static auto cls = findClassStatic(jtype_traits<typename T::javaobject>::base_name().c_str());2
  return cls;2
}2
2
template<typename T, typename Base, typename JType>2
inline local_ref<JClass> JavaClass<T, Base, JType>::javaClassLocal() {2
  std::string className(jtype_traits<typename T::javaobject>::base_name().c_str());2
  return findClassLocal(className.c_str());2
}2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
/** @file CoreClasses.h2
 *2
 * In CoreClasses.h wrappers for the core classes (jobject, jclass, and jstring) is defined2
 * to provide access to corresponding JNI functions + some conveniance.2
 */2
2
#include "References-forward.h"2
#include "Meta-forward.h"2
#include "TypeTraits.h"2
#include <sstream>2
2
#include <memory>2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
namespace facebook {2
namespace jni {2
2
class JClass;2
class JObject;2
2
/// Lookup a class by name. Note this functions returns an alias_ref that2
/// points to a leaked global reference.  This is appropriate for classes2
/// that are never unloaded (which is any class in an Android app and most2
/// Java programs).2
///2
/// The most common use case for this is storing the result2
/// in a "static auto" variable, or a static global.2
///2
/// @return Returns a leaked global reference to the class2
FBEXPORT alias_ref<JClass> findClassStatic(const char* name);2
2
/// Lookup a class by name. Note this functions returns a local reference,2
/// which means that it must not be stored in a static variable.2
///2
/// The most common use case for this is one-time initialization2
/// (like caching method ids).2
///2
/// @return Returns a global reference to the class2
FBEXPORT local_ref<JClass> findClassLocal(const char* name);2
2
/// Check to see if two references refer to the same object. Comparison with nullptr2
/// returns true if and only if compared to another nullptr. A weak reference that2
/// refers to a reclaimed object count as nullptr.2
FBEXPORT bool isSameObject(alias_ref<JObject> lhs, alias_ref<JObject> rhs) noexcept;2
2
// Together, these classes allow convenient use of any class with the fbjni2
// helpers.  To use:2
//2
// struct MyClass : public JavaClass<MyClass> {2
//   constexpr static auto kJavaDescriptor = "Lcom/example/package/MyClass;";2
// };2
//2
// Then, an alias_ref<MyClass::javaobject> will be backed by an instance of2
// MyClass. JavaClass provides a convenient way to add functionality to these2
// smart references.2
//2
// For example:2
//2
// struct MyClass : public JavaClass<MyClass> {2
//   constexpr static auto kJavaDescriptor = "Lcom/example/package/MyClass;";2
//2
//   void foo() {2
//     static auto method = javaClassStatic()->getMethod<void()>("foo");2
//     method(self());2
//   }2
//2
//   static local_ref<javaobject> create(int i) {2
//     return newInstance(i);2
//   }2
// };2
//2
// auto obj = MyClass::create(10);2
// obj->foo();2
//2
// While users of a JavaClass-type can lookup methods and fields through the2
// underlying JClass, those calls can only be checked at runtime. It is recommended2
// that the JavaClass-type instead explicitly expose it's methods as in the example2
// above.2
2
namespace detail {2
template<typename JC, typename... Args>2
static local_ref<JC> newInstance(Args... args);2
}2
2
class MonitorLock;2
2
class FBEXPORT JObject : detail::JObjectBase {2
public:2
  static constexpr auto kJavaDescriptor = "Ljava/lang/Object;";2
2
  static constexpr const char* get_instantiated_java_descriptor() { return nullptr; }2
  static constexpr const char* get_instantiated_base_name() { return nullptr; }2
2
  /// Get a @ref local_ref of the object's class2
  local_ref<JClass> getClass() const noexcept;2
2
  /// Checks if the object is an instance of a class2
  bool isInstanceOf(alias_ref<JClass> cls) const noexcept;2
2
  /// Get the primitive value of a field2
  template<typename T>2
  T getFieldValue(JField<T> field) const noexcept;2
2
  /// Get and wrap the value of a field in a @ref local_ref2
  template<typename T>2
  local_ref<T*> getFieldValue(JField<T*> field) const noexcept;2
2
  /// Set the value of field. Any Java type is accepted, including the primitive types2
  /// and raw reference types.2
  template<typename T>2
  void setFieldValue(JField<T> field, T value) noexcept;2
2
  /// Convenience method to create a std::string representing the object2
  std::string toString() const;2
2
  // Take this object's monitor lock2
  MonitorLock lock() const noexcept;2
2
  typedef _jobject _javaobject;2
  typedef _javaobject* javaobject;2
2
protected:2
  jobject self() const noexcept;2
private:2
  friend void swap(JObject& a, JObject& b) noexcept;2
  template<typename>2
  friend struct detail::ReprAccess;2
  template<typename, typename, typename>2
  friend class JavaClass;2
2
  template <typename, typename>2
  friend class JObjectWrapper;2
};2
2
// This is only to maintain backwards compatibility with things that are2
// already providing a specialization of JObjectWrapper. Any such instances2
// should be updated to use a JavaClass.2
template<>2
class JObjectWrapper<jobject> : public JObject {2
};2
2
2
namespace detail {2
template <typename, typename Base, typename JType>2
struct JTypeFor {2
  static_assert(2
      std::is_base_of<2
        std::remove_pointer<jobject>::type,2
        typename std::remove_pointer<JType>::type2
      >::value, "");2
  using _javaobject = typename std::remove_pointer<JType>::type;2
  using javaobject = JType;2
};2
2
template <typename T, typename Base>2
struct JTypeFor<T, Base, void> {2
  // JNI pattern for jobject assignable pointer2
  struct _javaobject :  Base::_javaobject {2
    // This allows us to map back to the defining type (in ReprType, for2
    // example).2
    typedef T JniRefRepr;2
  };2
  using javaobject = _javaobject*;2
};2
}2
2
// JavaClass provides a method to inform fbjni about user-defined Java types.2
// Given a class:2
// struct Foo : JavaClass<Foo> {2
//   static constexpr auto kJavaDescriptor = "Lcom/example/package/Foo;";2
// };2
// fbjni can determine the java type/method signatures for Foo::javaobject and2
// smart refs (like alias_ref<Foo::javaobject>) will hold an instance of Foo2
// and provide access to it through the -> and * operators.2
//2
// The "Base" template argument can be used to specify the JavaClass superclass2
// of this type (for instance, JString's Base is JObject).2
//2
// The "JType" template argument is used to provide a jni type (like jstring,2
// jthrowable) to be used as javaobject. This should only be necessary for2
// built-in jni types and not user-defined ones.2
template <typename T, typename Base = JObject, typename JType = void>2
class FBEXPORT JavaClass : public Base {2
  using JObjType = typename detail::JTypeFor<T, Base, JType>;2
public:2
  using _javaobject = typename JObjType::_javaobject;2
  using javaobject = typename JObjType::javaobject;2
2
  using JavaBase = JavaClass;2
2
  static alias_ref<JClass> javaClassStatic();2
  static local_ref<JClass> javaClassLocal();2
protected:2
  /// Allocates a new object and invokes the specified constructor2
  /// Like JClass's getConstructor, this function can only check at runtime if2
  /// the class actually has a constructor that accepts the corresponding types.2
  /// While a JavaClass-type can expose this function directly, it is recommended2
  /// to instead to use this to explicitly only expose those constructors that2
  /// the Java class actually has (i.e. with static create() functions).2
  template<typename... Args>2
  static local_ref<T> newInstance(Args... args) {2
    return detail::newInstance<T>(args...);2
  }2
2
  javaobject self() const noexcept;2
};2
2
/// Wrapper to provide functionality to jclass references2
struct NativeMethod;2
2
class FBEXPORT JClass : public JavaClass<JClass, JObject, jclass> {2
 public:2
  /// Java type descriptor2
  static constexpr const char* kJavaDescriptor = "Ljava/lang/Class;";2
2
  /// Get a @local_ref to the super class of this class2
  local_ref<JClass> getSuperclass() const noexcept;2
2
  /// Register native methods for the class.  Usage looks like this:2
  ///2
  /// classRef->registerNatives({2
  ///     makeNativeMethod("nativeMethodWithAutomaticDescriptor",2
  ///                      methodWithAutomaticDescriptor),2
  ///     makeNativeMethod("nativeMethodWithExplicitDescriptor",2
  ///                      "(Lcom/facebook/example/MyClass;)V",2
  ///                      methodWithExplicitDescriptor),2
  ///  });2
  ///2
  /// By default, C++ exceptions raised will be converted to Java exceptions.2
  /// To avoid this and get the "standard" JNI behavior of a crash when a C++2
  /// exception is crashing out of the JNI method, declare the method noexcept.2
  void registerNatives(std::initializer_list<NativeMethod> methods);2
2
  /// Check to see if the class is assignable from another class2
  /// @pre cls != nullptr2
  bool isAssignableFrom(alias_ref<JClass> cls) const noexcept;2
2
  /// Convenience method to lookup the constructor with descriptor as specified by the2
  /// type arguments2
  template<typename F>2
  JConstructor<F> getConstructor() const;2
2
  /// Convenience method to lookup the constructor with specified descriptor2
  template<typename F>2
  JConstructor<F> getConstructor(const char* descriptor) const;2
2
  /// Look up the method with given name and descriptor as specified with the type arguments2
  template<typename F>2
  JMethod<F> getMethod(const char* name) const;2
2
  /// Look up the method with given name and descriptor2
  template<typename F>2
  JMethod<F> getMethod(const char* name, const char* descriptor) const;2
2
  /// Lookup the field with the given name and deduced descriptor2
  template<typename T>2
  JField<enable_if_t<IsJniScalar<T>(), T>> getField(const char* name) const;2
2
  /// Lookup the field with the given name and descriptor2
  template<typename T>2
  JField<enable_if_t<IsJniScalar<T>(), T>> getField(const char* name, const char* descriptor) const;2
2
  /// Lookup the static field with the given name and deduced descriptor2
  template<typename T>2
  JStaticField<enable_if_t<IsJniScalar<T>(), T>> getStaticField(const char* name) const;2
2
  /// Lookup the static field with the given name and descriptor2
  template<typename T>2
  JStaticField<enable_if_t<IsJniScalar<T>(), T>> getStaticField(2
      const char* name,2
      const char* descriptor) const;2
2
  /// Get the primitive value of a static field2
  template<typename T>2
  T getStaticFieldValue(JStaticField<T> field) const noexcept;2
2
  /// Get and wrap the value of a field in a @ref local_ref2
  template<typename T>2
  local_ref<T*> getStaticFieldValue(JStaticField<T*> field) noexcept;2
2
  /// Set the value of field. Any Java type is accepted, including the primitive types2
  /// and raw reference types.2
  template<typename T>2
  void setStaticFieldValue(JStaticField<T> field, T value) noexcept;2
2
  /// Allocates a new object and invokes the specified constructor2
  template<typename R, typename... Args>2
  local_ref<R> newObject(JConstructor<R(Args...)> constructor, Args... args) const;2
2
  /// Look up the static method with given name and descriptor as specified with the type arguments2
  template<typename F>2
  JStaticMethod<F> getStaticMethod(const char* name) const;2
2
  /// Look up the static method with given name and descriptor2
  template<typename F>2
  JStaticMethod<F> getStaticMethod(const char* name, const char* descriptor) const;2
2
  /// Look up the non virtual method with given name and descriptor as specified with the2
  /// type arguments2
  template<typename F>2
  JNonvirtualMethod<F> getNonvirtualMethod(const char* name) const;2
2
  /// Look up the non virtual method with given name and descriptor2
  template<typename F>2
  JNonvirtualMethod<F> getNonvirtualMethod(const char* name, const char* descriptor) const;2
2
private:2
  jclass self() const noexcept;2
};2
2
// Convenience method to register methods on a class without holding2
// onto the class object.2
void registerNatives(const char* name, std::initializer_list<NativeMethod> methods);2
2
/// Wrapper to provide functionality to jstring references2
class FBEXPORT JString : public JavaClass<JString, JObject, jstring> {2
 public:2
  /// Java type descriptor2
  static constexpr const char* kJavaDescriptor = "Ljava/lang/String;";2
2
  /// Convenience method to convert a jstring object to a std::string2
  std::string toStdString() const;2
};2
2
/// Convenience functions to convert a std::string or const char* into a @ref local_ref to a2
/// jstring2
FBEXPORT local_ref<JString> make_jstring(const char* modifiedUtf8);2
FBEXPORT local_ref<JString> make_jstring(const std::string& modifiedUtf8);2
2
namespace detail {2
template<typename Target>2
class ElementProxy {2
 private:2
  Target* target_;2
  size_t idx_;2
2
 public:2
  using T = typename Target::javaentry;2
  ElementProxy(Target* target, size_t idx);2
2
  ElementProxy& operator=(const T& o);2
2
  ElementProxy& operator=(alias_ref<T>& o);2
2
  ElementProxy& operator=(alias_ref<T>&& o);2
2
  ElementProxy& operator=(const ElementProxy& o);2
2
  operator const local_ref<T> () const;2
2
  operator local_ref<T> ();2
};2
}2
2
namespace detail {2
class FBEXPORT JArray : public JavaClass<JArray, JObject, jarray> {2
 public:2
  // This cannot be used in a scope that derives a descriptor (like in a method2
  // signature). Use a more derived type instead (like JArrayInt or2
  // JArrayClass<T>).2
  static constexpr const char* kJavaDescriptor = nullptr;2
  size_t size() const noexcept;2
};2
2
// This is used so that the JArrayClass<T> javaobject extends jni's2
// jobjectArray. This class should not be used directly. A general Object[]2
// should use JArrayClass<jobject>.2
class FBEXPORT JTypeArray : public JavaClass<JTypeArray, JArray, jobjectArray> {2
  // This cannot be used in a scope that derives a descriptor (like in a method2
  // signature).2
  static constexpr const char* kJavaDescriptor = nullptr;2
};2
}2
2
template<typename T>2
class JArrayClass : public JavaClass<JArrayClass<T>, detail::JTypeArray> {2
 public:2
  static_assert(is_plain_jni_reference<T>(), "");2
  // javaentry is the jni type of an entry in the array (i.e. jint).2
  using javaentry = T;2
  // javaobject is the jni type of the array.2
  using javaobject = typename JavaClass<JArrayClass<T>, detail::JTypeArray>::javaobject;2
  static constexpr const char* kJavaDescriptor = nullptr;2
  static std::string get_instantiated_java_descriptor();2
  static std::string get_instantiated_base_name();2
2
  /// Allocate a new array from Java heap, for passing as a JNI parameter or return value.2
  /// NOTE: if using as a return value, you want to call release() instead of get() on the2
  /// smart pointer.2
  static local_ref<javaobject> newArray(size_t count);2
2
  /// Assign an object to the array.2
  /// Typically you will use the shorthand (*ref)[idx]=value;2
  void setElement(size_t idx, const T& value);2
2
  /// Read an object from the array.2
  /// Typically you will use the shorthand2
  ///   T value = (*ref)[idx];2
  /// If you use auto, you'll get an ElementProxy, which may need to be cast.2
  local_ref<T> getElement(size_t idx);2
2
  /// EXPERIMENTAL SUBSCRIPT SUPPORT2
  /// This implementation of [] returns a proxy object which then has a bunch of specializations2
  /// (adopt_local free function, operator= and casting overloads on the ElementProxy) that can2
  /// make code look like it is dealing with a T rather than an obvious proxy. In particular, the2
  /// proxy in this iteration does not read a value and therefore does not create a LocalRef2
  /// until one of these other operators is used. There are certainly holes that you may find2
  /// by using idioms that haven't been tried yet. Consider yourself warned. On the other hand,2
  /// it does make for some idiomatic assignment code; see TestBuildStringArray in fbjni_tests2
  /// for some examples.2
  detail::ElementProxy<JArrayClass> operator[](size_t idx);2
};2
2
template <typename T>2
using jtypeArray = typename JArrayClass<T>::javaobject;2
2
template<typename T>2
local_ref<typename JArrayClass<T>::javaobject> adopt_local_array(jobjectArray ref) {2
  return adopt_local(static_cast<typename JArrayClass<T>::javaobject>(ref));2
}2
2
template<typename Target>2
local_ref<typename Target::javaentry> adopt_local(detail::ElementProxy<Target> elementProxy) {2
  return static_cast<local_ref<typename Target::javaentry>>(elementProxy);2
}2
2
2
struct FBEXPORT JStackTraceElement : JavaClass<JStackTraceElement> {2
  static auto constexpr kJavaDescriptor = "Ljava/lang/StackTraceElement;";2
2
  static local_ref<javaobject> create(const std::string& declaringClass, const std::string& methodName, const std::string& file, int line);2
2
  std::string getClassName() const;2
  std::string getMethodName() const;2
  std::string getFileName() const;2
  int getLineNumber() const;2
};2
2
/// Wrapper to provide functionality to jthrowable references2
class FBEXPORT JThrowable : public JavaClass<JThrowable, JObject, jthrowable> {2
 public:2
  static constexpr const char* kJavaDescriptor = "Ljava/lang/Throwable;";2
  local_ref<JThrowable> initCause(alias_ref<JThrowable> cause);2
  using JStackTrace = JArrayClass<JStackTraceElement::javaobject>;2
  local_ref<JStackTrace> getStackTrace();2
};2
2
template <typename T, typename PinAlloc>2
class PinnedPrimitiveArray;2
2
template <typename T> class PinnedArrayAlloc;2
template <typename T> class PinnedRegionAlloc;2
template <typename T> class PinnedCriticalAlloc;2
2
/// Wrapper to provide functionality to jarray references.2
/// This is an empty holder by itself. Construct a PinnedPrimitiveArray to actually interact with2
/// the elements of the array.2
template <typename JArrayType>2
class FBEXPORT JPrimitiveArray :2
    public JavaClass<JPrimitiveArray<JArrayType>, detail::JArray, JArrayType> {2
  static_assert(is_jni_primitive_array<JArrayType>(), "");2
 public:2
  static constexpr const char* kJavaDescriptor = nullptr;2
  static std::string get_instantiated_java_descriptor();2
  static std::string get_instantiated_base_name();2
2
  using T = typename jtype_traits<JArrayType>::entry_type;2
2
  static local_ref<JArrayType> newArray(size_t count);2
2
  void getRegion(jsize start, jsize length, T* buf);2
  std::unique_ptr<T[]> getRegion(jsize start, jsize length);2
  void setRegion(jsize start, jsize length, const T* buf);2
2
  /// Returns a view of the underlying array. This will either be a "pinned"2
  /// version of the array (in which case changes to one immediately affect the2
  /// other) or a copy of the array (in which cases changes to the view will take2
  /// affect when destroyed or on calls to release()/commit()).2
  PinnedPrimitiveArray<T, PinnedArrayAlloc<T>> pin();2
2
  /// Returns a view of part of the underlying array. A pinned region is always2
  /// backed by a copy of the region.2
  PinnedPrimitiveArray<T, PinnedRegionAlloc<T>> pinRegion(jsize start, jsize length);2
2
  /// Returns a view of the underlying array like pin(). However, while the pin2
  /// is held, the code is considered within a "critical region". In a critical2
  /// region, native code must not call JNI functions or make any calls that may2
  /// block on other Java threads. These restrictions make it more likely that2
  /// the view will be "pinned" rather than copied (for example, the VM may2
  /// suspend garbage collection within a critical region).2
  PinnedPrimitiveArray<T, PinnedCriticalAlloc<T>> pinCritical();2
2
private:2
  friend class PinnedArrayAlloc<T>;2
  T* getElements(jboolean* isCopy);2
  void releaseElements(T* elements, jint mode);2
};2
2
FBEXPORT local_ref<jbooleanArray> make_boolean_array(jsize size);2
FBEXPORT local_ref<jbyteArray> make_byte_array(jsize size);2
FBEXPORT local_ref<jcharArray> make_char_array(jsize size);2
FBEXPORT local_ref<jshortArray> make_short_array(jsize size);2
FBEXPORT local_ref<jintArray> make_int_array(jsize size);2
FBEXPORT local_ref<jlongArray> make_long_array(jsize size);2
FBEXPORT local_ref<jfloatArray> make_float_array(jsize size);2
FBEXPORT local_ref<jdoubleArray> make_double_array(jsize size);2
2
using JArrayBoolean = JPrimitiveArray<jbooleanArray>;2
using JArrayByte = JPrimitiveArray<jbyteArray>;2
using JArrayChar = JPrimitiveArray<jcharArray>;2
using JArrayShort = JPrimitiveArray<jshortArray>;2
using JArrayInt = JPrimitiveArray<jintArray>;2
using JArrayLong = JPrimitiveArray<jlongArray>;2
using JArrayFloat = JPrimitiveArray<jfloatArray>;2
using JArrayDouble = JPrimitiveArray<jdoubleArray>;2
2
/// RAII class for pinned primitive arrays2
/// This currently only supports read/write access to existing java arrays. You can't create a2
/// primitive array this way yet. This class also pins the entire array into memory during the2
/// lifetime of the PinnedPrimitiveArray. If you need to unpin the array manually, call the2
/// release() or abort() functions. During a long-running block of code, you2
/// should unpin the array as soon as you're done with it, to avoid holding up2
/// the Java garbage collector.2
template <typename T, typename PinAlloc>2
class PinnedPrimitiveArray {2
  public:2
   static_assert(is_jni_primitive<T>::value,2
       "PinnedPrimitiveArray requires primitive jni type.");2
2
   using ArrayType = typename jtype_traits<T>::array_type;2
2
   PinnedPrimitiveArray(PinnedPrimitiveArray&&);2
   PinnedPrimitiveArray(const PinnedPrimitiveArray&) = delete;2
   ~PinnedPrimitiveArray() noexcept;2
2
   PinnedPrimitiveArray& operator=(PinnedPrimitiveArray&&);2
   PinnedPrimitiveArray& operator=(const PinnedPrimitiveArray&) = delete;2
2
   T* get();2
   void release();2
   /// Unpins the array. If the array is a copy, pending changes are discarded.2
   void abort();2
   /// If the array is a copy, copies pending changes to the underlying java array.2
   void commit();2
2
   bool isCopy() const noexcept;2
2
   const T& operator[](size_t index) const;2
   T& operator[](size_t index);2
   size_t size() const noexcept;2
2
  private:2
   alias_ref<ArrayType> array_;2
   size_t start_;2
   T* elements_;2
   jboolean isCopy_;2
   size_t size_;2
2
   void allocate(alias_ref<ArrayType>, jint start, jint length);2
   void releaseImpl(jint mode);2
   void clear() noexcept;2
2
   PinnedPrimitiveArray(alias_ref<ArrayType>, jint start, jint length);2
2
   friend class JPrimitiveArray<typename jtype_traits<T>::array_type>;2
};2
2
#pragma push_macro("PlainJniRefMap")2
#undef PlainJniRefMap2
#define PlainJniRefMap(rtype, jtype) \2
namespace detail { \2
template<> \2
struct RefReprType<jtype> { \2
  using type = rtype; \2
}; \2
}2
2
PlainJniRefMap(JArrayBoolean, jbooleanArray);2
PlainJniRefMap(JArrayByte, jbyteArray);2
PlainJniRefMap(JArrayChar, jcharArray);2
PlainJniRefMap(JArrayShort, jshortArray);2
PlainJniRefMap(JArrayInt, jintArray);2
PlainJniRefMap(JArrayLong, jlongArray);2
PlainJniRefMap(JArrayFloat, jfloatArray);2
PlainJniRefMap(JArrayDouble, jdoubleArray);2
PlainJniRefMap(JObject, jobject);2
PlainJniRefMap(JClass, jclass);2
PlainJniRefMap(JString, jstring);2
PlainJniRefMap(JThrowable, jthrowable);2
2
#pragma pop_macro("PlainJniRefMap")2
2
}}2
2
#include "CoreClasses-inl.h"2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/**2
 * @file Exceptions.h2
 *2
 * After invoking a JNI function that can throw a Java exception, the macro2
 * @ref FACEBOOK_JNI_THROW_PENDING_EXCEPTION() or @ref FACEBOOK_JNI_THROW_EXCEPTION_IF()2
 * should be invoked.2
 *2
 * IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT!2
 * To use these methods you MUST call initExceptionHelpers() when your library is loaded.2
 */2
2
#pragma once2
2
#include <alloca.h>2
#include <stdexcept>2
#include <string>2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
#include "Common.h"2
#include "References.h"2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
class JThrowable;2
2
class JCppException : public JavaClass<JCppException, JThrowable> {2
 public:2
  static auto constexpr kJavaDescriptor = "Lcom/facebook/jni/CppException;";2
2
  static local_ref<JCppException> create(const char* str) {2
    return newInstance(make_jstring(str));2
  }2
2
  static local_ref<JCppException> create(const std::exception& ex) {2
    return newInstance(make_jstring(ex.what()));2
  }2
};2
2
// JniException ////////////////////////////////////////////////////////////////////////////////////2
2
/**2
 * This class wraps a Java exception into a C++ exception; if the exception is routed back2
 * to the Java side, it can be unwrapped and just look like a pure Java interaction. The class2
 * is resilient to errors while creating the exception, falling back to some pre-allocated2
 * exceptions if a new one cannot be allocated or populated.2
 *2
 * Note: the what() method of this class is not thread-safe (t6900503).2
 */2
class FBEXPORT JniException : public std::exception {2
 public:2
  JniException();2
  ~JniException();2
2
  explicit JniException(alias_ref<jthrowable> throwable);2
2
  JniException(JniException &&rhs);2
2
  JniException(const JniException &other);2
2
  local_ref<JThrowable> getThrowable() const noexcept;2
2
  virtual const char* what() const noexcept;2
2
  void setJavaException() const noexcept;2
2
 private:2
  global_ref<JThrowable> throwable_;2
  mutable std::string what_;2
  mutable bool isMessageExtracted_;2
  const static std::string kExceptionMessageFailure_;2
2
  void populateWhat() const noexcept;2
};2
2
// Exception throwing & translating functions //////////////////////////////////////////////////////2
2
// Functions that throw C++ exceptions2
2
static const int kMaxExceptionMessageBufferSize = 512;2
2
// These methods are the preferred way to throw a Java exception from2
// a C++ function.  They create and throw a C++ exception which wraps2
// a Java exception, so the C++ flow is interrupted. Then, when2
// translatePendingCppExceptionToJavaException is called at the2
// topmost level of the native stack, the wrapped Java exception is2
// thrown to the java caller.2
template<typename... Args>2
[[noreturn]] void throwNewJavaException(const char* throwableName, const char* fmt, Args... args) {2
  int msgSize = snprintf(nullptr, 0, fmt, args...);2
2
  char *msg = (char*) alloca(msgSize + 1);2
  snprintf(msg, kMaxExceptionMessageBufferSize, fmt, args...);2
  throwNewJavaException(throwableName, msg);2
}2
2
// Identifies any pending C++ exception and throws it as a Java exception. If the exception can't2
// be thrown, it aborts the program. This is a noexcept function at C++ level.2
FBEXPORT void translatePendingCppExceptionToJavaException() noexcept;2
2
// For convenience, some exception names in java.lang are available here.2
2
const char* const gJavaLangIllegalArgumentException = "java/lang/IllegalArgumentException";2
2
}}2
/*2
 *  Copyright (c) 2016-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
class JFile : public JavaClass<JFile> {2
 public:2
  static constexpr const char* kJavaDescriptor = "Ljava/io/File;";2
2
  // Define a method that calls into the represented Java class2
  std::string getAbsolutePath() {2
    static auto method = getClass()->getMethod<jstring()>("getAbsolutePath");2
    return method(self())->toStdString();2
  }2
2
};2
2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <memory>2
#include <type_traits>2
2
#include <fb/assert.h>2
#include <fb/visibility.h>2
2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
class BaseHybridClass {2
public:2
  virtual ~BaseHybridClass() {}2
};2
2
struct FBEXPORT HybridData : public JavaClass<HybridData> {2
  constexpr static auto kJavaDescriptor = "Lcom/facebook/jni/HybridData;";2
  void setNativePointer(std::unique_ptr<BaseHybridClass> new_value);2
  BaseHybridClass* getNativePointer();2
  static local_ref<HybridData> create();2
};2
2
template <typename Base, typename Enabled = void>2
struct HybridTraits {2
  // This static assert should actually always fail if we don't use one of the2
  // specializations below.2
  static_assert(2
      std::is_base_of<JObject, Base>::value ||2
      std::is_base_of<BaseHybridClass, Base>::value,2
      "The base of a HybridClass must be either another HybridClass or derived from JObject.");2
};2
2
template <>2
struct HybridTraits<BaseHybridClass> {2
 using CxxBase = BaseHybridClass;2
 using JavaBase = JObject;2
};2
2
template <typename Base>2
struct HybridTraits<2
    Base,2
    typename std::enable_if<std::is_base_of<BaseHybridClass, Base>::value>::type> {2
 using CxxBase = Base;2
 using JavaBase = typename Base::JavaPart;2
};2
2
template <typename Base>2
struct HybridTraits<2
    Base,2
    typename std::enable_if<std::is_base_of<JObject, Base>::value>::type> {2
 using CxxBase = BaseHybridClass;2
 using JavaBase = Base;2
};2
2
// convert to HybridClass* from jhybridobject2
template <typename T>2
struct FBEXPORT Convert<2
  T, typename std::enable_if<2
    std::is_base_of<BaseHybridClass, typename std::remove_pointer<T>::type>::value>::type> {2
  typedef typename std::remove_pointer<T>::type::jhybridobject jniType;2
  static T fromJni(jniType t) {2
    if (t == nullptr) {2
      return nullptr;2
    }2
    return wrap_alias(t)->cthis();2
  }2
  // There is no automatic return conversion for objects.2
};2
2
template<typename T>2
struct RefReprType<T, typename std::enable_if<std::is_base_of<BaseHybridClass, T>::value, void>::type> {2
  static_assert(std::is_same<T, void>::value,2
      "HybridFoo (where HybridFoo derives from HybridClass<HybridFoo>) is not supported in this context. "2
      "For an xxx_ref<HybridFoo>, you may want: xxx_ref<HybridFoo::javaobject> or HybridFoo*.");2
  using Repr = T;2
};2
2
2
}2
2
template <typename T, typename Base = detail::BaseHybridClass>2
class FBEXPORT HybridClass : public detail::HybridTraits<Base>::CxxBase {2
public:2
  struct JavaPart : JavaClass<JavaPart, typename detail::HybridTraits<Base>::JavaBase> {2
    // At this point, T is incomplete, and so we cannot access2
    // T::kJavaDescriptor directly. jtype_traits support this escape hatch for2
    // such a case.2
    static constexpr const char* kJavaDescriptor = nullptr;2
    static std::string get_instantiated_java_descriptor();2
    static std::string get_instantiated_base_name();2
2
    using HybridType = T;2
2
    // This will reach into the java object and extract the C++ instance from2
    // the mHybridData and return it.2
    T* cthis();2
2
    friend class HybridClass;2
  };2
2
  using jhybridobject = typename JavaPart::javaobject;2
  using javaobject = typename JavaPart::javaobject;2
  typedef detail::HybridData::javaobject jhybriddata;2
2
  static alias_ref<JClass> javaClassStatic() {2
    return JavaPart::javaClassStatic();2
  }2
2
  static local_ref<JClass> javaClassLocal() {2
    std::string className(T::kJavaDescriptor + 1, strlen(T::kJavaDescriptor) - 2);2
    return findClassLocal(className.c_str());2
  }2
2
protected:2
  typedef HybridClass HybridBase;2
2
  // This ensures that a C++ hybrid part cannot be created on its own2
  // by default.  If a hybrid wants to enable this, it can provide its2
  // own public ctor, or change the accessibility of this to public.2
  using detail::HybridTraits<Base>::CxxBase::CxxBase;2
2
  static void registerHybrid(std::initializer_list<NativeMethod> methods) {2
    javaClassStatic()->registerNatives(methods);2
  }2
2
  static local_ref<detail::HybridData> makeHybridData(std::unique_ptr<T> cxxPart) {2
    auto hybridData = detail::HybridData::create();2
    hybridData->setNativePointer(std::move(cxxPart));2
    return hybridData;2
  }2
2
  template <typename... Args>2
  static local_ref<detail::HybridData> makeCxxInstance(Args&&... args) {2
    return makeHybridData(std::unique_ptr<T>(new T(std::forward<Args>(args)...)));2
  }2
2
public:2
  // Factory method for creating a hybrid object where the arguments2
  // are used to initialize the C++ part directly without passing them2
  // through java.  This method requires the Java part to have a ctor2
  // which takes a HybridData, and for the C++ part to have a ctor2
  // compatible with the arguments passed here.  For safety, the ctor2
  // can be private, and the hybrid declared a friend of its base, so2
  // the hybrid can only be created from here.2
  //2
  // Exception behavior: This can throw an exception if creating the2
  // C++ object fails, or any JNI methods throw.2
  template <typename... Args>2
  static local_ref<JavaPart> newObjectCxxArgs(Args&&... args) {2
    auto hybridData = makeCxxInstance(std::forward<Args>(args)...);2
    return JavaPart::newInstance(hybridData);2
  }2
2
  // TODO? Create reusable interface for Allocatable classes and use it to2
  // strengthen type-checking (and possibly provide a default2
  // implementation of allocate().)2
  template <typename... Args>2
  static local_ref<jhybridobject> allocateWithCxxArgs(Args&&... args) {2
    auto hybridData = makeCxxInstance(std::forward<Args>(args)...);2
    static auto allocateMethod =2
        javaClassStatic()->template getStaticMethod<jhybridobject(jhybriddata)>("allocate");2
    return allocateMethod(javaClassStatic(), hybridData.get());2
  }2
2
  // Factory method for creating a hybrid object where the arguments2
  // are passed to the java ctor.2
  template <typename... Args>2
  static local_ref<JavaPart> newObjectJavaArgs(Args&&... args) {2
    return JavaPart::newInstance(std::move(args)...);2
  }2
2
  // If a hybrid class throws an exception which derives from2
  // std::exception, it will be passed to mapException on the hybrid2
  // class, or nearest ancestor.  This allows boilerplate exception2
  // translation code (for example, calling throwNewJavaException on a2
  // particular java class) to be hoisted to a common function.  If2
  // mapException returns, then the std::exception will be translated2
  // to Java.2
  static void mapException(const std::exception& ex) {}2
};2
2
template <typename T, typename B>2
inline T* HybridClass<T, B>::JavaPart::cthis() {2
  static auto field =2
    HybridClass<T, B>::JavaPart::javaClassStatic()->template getField<detail::HybridData::javaobject>("mHybridData");2
  auto hybridData = this->getFieldValue(field);2
  if (!hybridData) {2
    throwNewJavaException("java/lang/NullPointerException", "java.lang.NullPointerException");2
  }2
  // I'd like to use dynamic_cast here, but -fno-rtti is the default.2
  T* value = static_cast<T*>(hybridData->getNativePointer());2
  // This would require some serious programmer error.2
  FBASSERTMSGF(value != 0, "Incorrect C++ type in hybrid field");2
  return value;2
};2
2
template <typename T, typename B>2
/* static */ inline std::string HybridClass<T, B>::JavaPart::get_instantiated_java_descriptor() {2
  return T::kJavaDescriptor;2
}2
2
template <typename T, typename B>2
/* static */ inline std::string HybridClass<T, B>::JavaPart::get_instantiated_base_name() {2
  auto name = get_instantiated_java_descriptor();2
  return name.substr(1, name.size() - 2);2
}2
2
// Given a *_ref object which refers to a hybrid class, this will reach inside2
// of it, find the mHybridData, extract the C++ instance pointer, cast it to2
// the appropriate type, and return it.2
template <typename T>2
inline auto cthis(T jthis) -> decltype(jthis->cthis()) {2
  return jthis->cthis();2
}2
2
void HybridDataOnLoad();2
2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
template <typename E>2
struct IteratorHelper : public JavaClass<IteratorHelper<E>> {2
  constexpr static auto kJavaDescriptor = "Lcom/facebook/jni/IteratorHelper;";2
2
  typedef local_ref<E> value_type;2
  typedef ptrdiff_t difference_type;2
  typedef value_type* pointer;2
  typedef value_type& reference;2
  typedef std::forward_iterator_tag iterator_category;2
2
  typedef JavaClass<IteratorHelper<E>> JavaBase_;2
2
  bool hasNext() const {2
    static auto hasNextMethod =2
      JavaBase_::javaClassStatic()->template getMethod<jboolean()>("hasNext");2
    return hasNextMethod(JavaBase_::self());2
  }2
2
  value_type next() {2
    static auto elementField =2
      JavaBase_::javaClassStatic()->template getField<jobject>("mElement");2
    return dynamic_ref_cast<E>(JavaBase_::getFieldValue(elementField));2
  }2
2
  static void reset(value_type& v) {2
    v.reset();2
  }2
};2
2
template <typename K, typename V>2
struct MapIteratorHelper : public JavaClass<MapIteratorHelper<K,V>> {2
  constexpr static auto kJavaDescriptor = "Lcom/facebook/jni/MapIteratorHelper;";2
2
  typedef std::pair<local_ref<K>, local_ref<V>> value_type;2
2
  typedef JavaClass<MapIteratorHelper<K,V>> JavaBase_;2
2
  bool hasNext() const {2
    static auto hasNextMethod =2
      JavaBase_::javaClassStatic()->template getMethod<jboolean()>("hasNext");2
    return hasNextMethod(JavaBase_::self());2
  }2
2
  value_type next() {2
    static auto keyField = JavaBase_::javaClassStatic()->template getField<jobject>("mKey");2
    static auto valueField = JavaBase_::javaClassStatic()->template getField<jobject>("mValue");2
    return std::make_pair(dynamic_ref_cast<K>(JavaBase_::getFieldValue(keyField)),2
                          dynamic_ref_cast<V>(JavaBase_::getFieldValue(valueField)));2
  }2
2
  static void reset(value_type& v) {2
    v.first.reset();2
    v.second.reset();2
  }2
};2
2
template <typename T>2
class Iterator {2
 public:2
  typedef typename T::value_type value_type;2
  typedef ptrdiff_t difference_type;2
  typedef value_type* pointer;2
  typedef value_type& reference;2
  typedef std::input_iterator_tag iterator_category;2
2
  // begin ctor2
  Iterator(global_ref<typename T::javaobject>&& helper)2
      : helper_(std::move(helper))2
      , i_(-1) {2
    ++(*this);2
  }2
2
  // end ctor2
  Iterator()2
      : i_(-1) {}2
2
  bool operator==(const Iterator& it) const { return i_ == it.i_; }2
  bool operator!=(const Iterator& it) const { return !(*this == it); }2
  const value_type& operator*() const { assert(i_ != -1); return entry_; }2
  const value_type* operator->() const { assert(i_ != -1); return &entry_; }2
  Iterator& operator++() {  // preincrement2
    bool hasNext = helper_->hasNext();2
    if (hasNext) {2
      ++i_;2
      entry_ = helper_->next();2
    } else {2
      i_ = -1;2
      helper_->reset(entry_);2
    }2
    return *this;2
  }2
  Iterator operator++(int) {  // postincrement2
    Iterator ret;2
    ret.i_ = i_;2
    ret.entry_ = std::move(entry_);2
    ++(*this);2
    return ret;2
  }2
2
  global_ref<typename T::javaobject> helper_;2
  // set to -1 at end2
  std::ptrdiff_t i_;2
  value_type entry_;2
};2
2
}2
2
template <typename E>2
struct JIterator<E>::Iterator : public detail::Iterator<detail::IteratorHelper<E>> {2
  using detail::Iterator<detail::IteratorHelper<E>>::Iterator;2
};2
2
template <typename E>2
typename JIterator<E>::Iterator JIterator<E>::begin() const {2
  static auto ctor = detail::IteratorHelper<E>::javaClassStatic()->2
    template getConstructor<typename detail::IteratorHelper<E>::javaobject(2
                              typename JIterator<E>::javaobject)>();2
  return Iterator(2
    make_global(2
      detail::IteratorHelper<E>::javaClassStatic()->newObject(ctor, this->self())));2
}2
2
template <typename E>2
typename JIterator<E>::Iterator JIterator<E>::end() const {2
  return Iterator();2
}2
2
template <typename E>2
struct JIterable<E>::Iterator : public detail::Iterator<detail::IteratorHelper<E>> {2
  using detail::Iterator<detail::IteratorHelper<E>>::Iterator;2
};2
2
template <typename E>2
typename JIterable<E>::Iterator JIterable<E>::begin() const {2
  static auto ctor = detail::IteratorHelper<E>::javaClassStatic()->2
    template getConstructor<typename detail::IteratorHelper<E>::javaobject(2
                              typename JIterable<E>::javaobject)>();2
  return Iterator(2
    make_global(2
      detail::IteratorHelper<E>::javaClassStatic()->newObject(ctor, this->self())));2
}2
2
template <typename E>2
typename JIterable<E>::Iterator JIterable<E>::end() const {2
  return Iterator();2
}2
2
template <typename E>2
size_t JCollection<E>::size() const {2
  static auto sizeMethod =2
    JCollection<E>::javaClassStatic()->template getMethod<jint()>("size");2
  return sizeMethod(this->self());2
}2
2
template <typename K, typename V>2
struct JMap<K,V>::Iterator : public detail::Iterator<detail::MapIteratorHelper<K,V>> {2
  using detail::Iterator<detail::MapIteratorHelper<K,V>>::Iterator;2
};2
2
template <typename K, typename V>2
size_t JMap<K,V>::size() const {2
  static auto sizeMethod =2
    JMap<K,V>::javaClassStatic()->template getMethod<jint()>("size");2
  return sizeMethod(this->self());2
}2
2
template <typename K, typename V>2
typename JMap<K,V>::Iterator JMap<K,V>::begin() const {2
  static auto ctor = detail::MapIteratorHelper<K,V>::javaClassStatic()->2
    template getConstructor<typename detail::MapIteratorHelper<K,V>::javaobject(2
                              typename JMap<K,V>::javaobject)>();2
  return Iterator(2
    make_global(2
      detail::MapIteratorHelper<K,V>::javaClassStatic()->newObject(ctor, this->self())));2
}2
2
template <typename K, typename V>2
typename JMap<K,V>::Iterator JMap<K,V>::end() const {2
  return Iterator();2
}2
2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
/**2
 * JavaClass which represents a reference to a java.util.Iterator instance.  It2
 * provides begin()/end() methods to provide C++-style iteration over the2
 * underlying collection.  The class has a template parameter for the element2
 * type, which defaults to jobject.  For example:2
 *2
 * alias_ref<JIterator<jstring>::javaobject> my_iter = ...;2
 *2
 * In the simplest case, it can be used just as alias_ref<JIterator<>::javaobject>,2
 * for example in a method declaration.2
 */2
template <typename E = jobject>2
struct JIterator : JavaClass<JIterator<E>> {2
  constexpr static auto kJavaDescriptor = "Ljava/util/Iterator;";2
2
  struct Iterator;2
2
  /**2
   * To iterate:2
   *2
   * for (const auto& element : *jiter) { ... }2
   *2
   * The JIterator iterator value_type is local_ref<E>, containing a reference2
   * to an element instance.2
   *2
   * If the Iterator returns objects whch are not convertible to the given2
   * element type, iteration will throw a java ClassCastException.2
   *2
   * For example, to convert an iterator over a collection of java strings to2
   * an std::vector of std::strings:2
   *2
   * std::vector<std::string> vs;2
   * for (const auto& elem : *jiter) {2
   *    vs.push_back(elem->toStdString());2
   * }2
   *2
   * Or if you prefer using std algorithms:2
   *2
   * std::vector<std::string> vs;2
   * std::transform(jiter->begin(), jiter->end(), std::back_inserter(vs),2
   *                [](const local_ref<jstring>& elem) { return elem->toStdString(); });2
   *2
   * The iterator is a InputIterator.2
   */2
  Iterator begin() const;2
  Iterator end() const;2
};2
2
/**2
 * Similar to JIterator, except this represents any object which implements the2
 * java.lang.Iterable interface. It will create the Java Iterator as a part of2
 * begin().2
 */2
template <typename E = jobject>2
struct JIterable : JavaClass<JIterable<E>> {2
  constexpr static auto kJavaDescriptor = "Ljava/lang/Iterable;";2
2
  struct Iterator;2
2
  Iterator begin() const;2
  Iterator end() const;2
};2
2
/**2
 * JavaClass types which represent Collection, List, and Set are also provided.2
 * These preserve the Java class heirarchy.2
 */2
template <typename E = jobject>2
struct JCollection : JavaClass<JCollection<E>, JIterable<E>> {2
  constexpr static auto kJavaDescriptor = "Ljava/util/Collection;";2
2
  /**2
   * Returns the number of elements in the collection.2
   */2
  size_t size() const;2
};2
2
template <typename E = jobject>2
struct JList : JavaClass<JList<E>, JCollection<E>> {2
  constexpr static auto kJavaDescriptor = "Ljava/util/List;";2
};2
2
template <typename E = jobject>2
struct JSet : JavaClass<JSet<E>, JCollection<E>> {2
  constexpr static auto kJavaDescriptor = "Ljava/util/Set;";2
};2
2
/**2
 * JavaClass which represents a reference to a java.util.Map instance.  It adds2
 * wrappers around Java methods, including begin()/end() methods to provide2
 * C++-style iteration over the Java Map.  The class has template parameters2
 * for the key and value types, which default to jobject.  For example:2
 *2
 * alias_ref<JMap<jstring, MyJClass::javaobject>::javaobject> my_map = ...;2
 *2
 * In the simplest case, it can be used just as alias_ref<JMap<>::javaobject>,2
 * for example in a method declaration.2
 */2
template <typename K = jobject, typename V = jobject>2
struct JMap : JavaClass<JMap<K,V>> {2
  constexpr static auto kJavaDescriptor = "Ljava/util/Map;";2
2
  struct Iterator;2
2
  /**2
   * Returns the number of pairs in the map.2
   */2
  size_t size() const;2
2
  /**2
   * To iterate over the Map:2
   *2
   * for (const auto& entry : *jmap) { ... }2
   *2
   * The JMap iterator value_type is std::pair<local_ref<K>, local_ref<V>>2
   * containing references to key and value instances.2
   *2
   * If the Map contains objects whch are not convertible to the given key and2
   * value types, iteration will throw a java ClassCastException.2
   *2
   * The iterator is a InputIterator.2
   */2
  Iterator begin() const;2
  Iterator end() const;2
};2
2
}2
}2
2
#include "Iterator-inl.h"2
/*2
 *  Copyright (c) 2016-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
#include "NativeRunnable.h"2
2
namespace facebook {2
namespace jni {2
2
class JThread : public JavaClass<JThread> {2
 public:2
  static constexpr const char* kJavaDescriptor = "Ljava/lang/Thread;";2
2
  void start() {2
    static auto method = javaClassStatic()->getMethod<void()>("start");2
    method(self());2
  }2
2
  void join() {2
    static auto method = javaClassStatic()->getMethod<void()>("join");2
    method(self());2
  }2
2
  static local_ref<JThread> create(std::function<void()>&& runnable) {2
    auto jrunnable = JNativeRunnable::newObjectCxxArgs(std::move(runnable));2
    return newInstance(static_ref_cast<JRunnable::javaobject>(jrunnable));2
  }2
};2
2
}2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include "CoreClasses.h"2
2
struct JThrowable : public facebook::jni::JavaClass<JThrowable, facebook::jni::JThrowable> {2
  constexpr static auto kJavaDescriptor = "Ljava/lang/Throwable;";2
2
  std::string getStackTrace() const;2
};2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
namespace facebook {2
namespace jni {2
2
template<typename F>2
class JMethod;2
template<typename F>2
class JStaticMethod;2
template<typename F>2
class JNonvirtualMethod;2
template<typename F>2
struct JConstructor;2
template<typename F>2
class JField;2
template<typename F>2
class JStaticField;2
2
/// Type traits for Java types (currently providing Java type descriptors)2
template<typename T>2
struct jtype_traits;2
2
/// Type traits for Java methods (currently providing Java type descriptors)2
template<typename F>2
struct jmethod_traits;2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
2
#include "Common.h"2
#include "Exceptions.h"2
#include "MetaConvert.h"2
#include "References.h"2
#include "Boxed.h"2
2
#if defined(__ANDROID__)2
#include <sys/system_properties.h>2
#endif2
2
namespace facebook {2
namespace jni {2
2
// JMethod /////////////////////////////////////////////////////////////////////////////////////////2
2
inline JMethodBase::JMethodBase(jmethodID method_id) noexcept2
  : method_id_{method_id}2
{}2
2
inline JMethodBase::operator bool() const noexcept {2
  return method_id_ != nullptr;2
}2
2
inline jmethodID JMethodBase::getId() const noexcept {2
  return method_id_;2
}2
2
namespace {2
2
template <int idx, typename... Args>2
struct ArgsArraySetter;2
2
template <int idx, typename Arg, typename... Args>2
struct ArgsArraySetter<idx, Arg, Args...> {2
  static void set(alias_ref<JArrayClass<jobject>::javaobject> array, Arg arg0, Args... args) {2
    // TODO(xxxxxxxx): Use Convert<Args>... to do conversions like the fast path.2
    (*array)[idx] = autobox(arg0);2
    ArgsArraySetter<idx + 1, Args...>::set(array, args...);2
  }2
};2
2
template <int idx>2
struct ArgsArraySetter<idx> {2
  static void set(alias_ref<JArrayClass<jobject>::javaobject> array) {2
  }2
};2
2
template <typename... Args>2
local_ref<JArrayClass<jobject>::javaobject> makeArgsArray(Args... args) {2
  auto arr = JArrayClass<jobject>::newArray(sizeof...(args));2
  ArgsArraySetter<0, Args...>::set(arr, args...);2
  return arr;2
}2
2
2
inline bool needsSlowPath(alias_ref<jobject> obj) {2
#if defined(__ANDROID__)2
  // On Android 6.0, art crashes when attempting to call a function on a Proxy.2
  // So, when we detect that case we must use the safe, slow workaround. That is,2
  // we resolve the method id to the corresponding java.lang.reflect.Method object2
  // and make the call via it's invoke() method.2
  static auto android_sdk = ([] {2
     char sdk_version_str[PROP_VALUE_MAX];2
     __system_property_get("ro.build.version.sdk", sdk_version_str);2
     return atoi(sdk_version_str);2
  })();2
  static auto is_bad_android = android_sdk == 23;2
  if (!is_bad_android) return false;2
  static auto proxy_class = findClassStatic("java/lang/reflect/Proxy");2
  return obj->isInstanceOf(proxy_class);2
#else2
  return false;2
#endif2
}2
2
}2
2
template<typename... Args>2
inline void JMethod<void(Args...)>::operator()(alias_ref<jobject> self, Args... args) {2
  const auto env = Environment::current();2
  env->CallVoidMethod(2
        self.get(),2
        getId(),2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
}2
2
#pragma push_macro("DEFINE_PRIMITIVE_CALL")2
#undef DEFINE_PRIMITIVE_CALL2
#define DEFINE_PRIMITIVE_CALL(TYPE, METHOD, CLASS)                                             \2
template<typename... Args>                                                                     \2
inline TYPE JMethod<TYPE(Args...)>::operator()(alias_ref<jobject> self, Args... args) {        \2
  const auto env = internal::getEnv();                                                         \2
  auto result = env->Call ## METHOD ## Method(                                                 \2
        self.get(),                                                                            \2
        getId(),                                                                               \2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...); \2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();                                                      \2
  return result;                                                                               \2
}2
2
DEFINE_PRIMITIVE_CALL(jboolean, Boolean, JBoolean)2
DEFINE_PRIMITIVE_CALL(jbyte, Byte, JByte)2
DEFINE_PRIMITIVE_CALL(jchar, Char, JCharacter)2
DEFINE_PRIMITIVE_CALL(jshort, Short, JShort)2
DEFINE_PRIMITIVE_CALL(jint, Int, JInteger)2
DEFINE_PRIMITIVE_CALL(jlong, Long, JLong)2
DEFINE_PRIMITIVE_CALL(jfloat, Float, JFloat)2
DEFINE_PRIMITIVE_CALL(jdouble, Double, JDouble)2
#pragma pop_macro("DEFINE_PRIMITIVE_CALL")2
2
/// JMethod specialization for references that wraps the return value in a @ref local_ref2
template<typename R, typename... Args>2
class JMethod<R(Args...)> : public JMethodBase {2
 public:2
   // TODO: static_assert is jobject-derived or local_ref jobject2
  using JniRet = typename detail::Convert<typename std::decay<R>::type>::jniType;2
  static_assert(IsPlainJniReference<JniRet>(), "JniRet must be a JNI reference");2
  using JMethodBase::JMethodBase;2
  JMethod() noexcept {};2
  JMethod(const JMethod& other) noexcept = default;2
2
  /// Invoke a method and return a local reference wrapping the result2
  local_ref<JniRet> operator()(alias_ref<jobject> self, Args... args);2
2
  friend class JClass;2
};2
2
template<typename R, typename... Args>2
inline auto JMethod<R(Args...)>::operator()(alias_ref<jobject> self, Args... args) -> local_ref<JniRet> {2
  const auto env = Environment::current();2
  auto result = env->CallObjectMethod(2
      self.get(),2
      getId(),2
      detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
  return adopt_local(static_cast<JniRet>(result));2
}2
2
template<typename... Args>2
inline void JStaticMethod<void(Args...)>::operator()(alias_ref<jclass> cls, Args... args) {2
  const auto env = internal::getEnv();2
  env->CallStaticVoidMethod(2
        cls.get(),2
        getId(),2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
}2
2
#pragma push_macro("DEFINE_PRIMITIVE_STATIC_CALL")2
#undef DEFINE_PRIMITIVE_STATIC_CALL2
#define DEFINE_PRIMITIVE_STATIC_CALL(TYPE, METHOD)                                             \2
template<typename... Args>                                                                     \2
inline TYPE JStaticMethod<TYPE(Args...)>::operator()(alias_ref<jclass> cls, Args... args) {    \2
  const auto env = internal::getEnv();                                                         \2
  auto result = env->CallStatic ## METHOD ## Method(                                           \2
        cls.get(),                                                                             \2
        getId(),                                                                               \2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...); \2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();                                                      \2
        return result;                                                                         \2
}2
2
DEFINE_PRIMITIVE_STATIC_CALL(jboolean, Boolean)2
DEFINE_PRIMITIVE_STATIC_CALL(jbyte, Byte)2
DEFINE_PRIMITIVE_STATIC_CALL(jchar, Char)2
DEFINE_PRIMITIVE_STATIC_CALL(jshort, Short)2
DEFINE_PRIMITIVE_STATIC_CALL(jint, Int)2
DEFINE_PRIMITIVE_STATIC_CALL(jlong, Long)2
DEFINE_PRIMITIVE_STATIC_CALL(jfloat, Float)2
DEFINE_PRIMITIVE_STATIC_CALL(jdouble, Double)2
#pragma pop_macro("DEFINE_PRIMITIVE_STATIC_CALL")2
2
/// JStaticMethod specialization for references that wraps the return value in a @ref local_ref2
template<typename R, typename... Args>2
class JStaticMethod<R(Args...)> : public JMethodBase {2
2
 public:2
  using JniRet = typename detail::Convert<typename std::decay<R>::type>::jniType;2
  static_assert(IsPlainJniReference<JniRet>(), "T* must be a JNI reference");2
  using JMethodBase::JMethodBase;2
  JStaticMethod() noexcept {};2
  JStaticMethod(const JStaticMethod& other) noexcept = default;2
2
  /// Invoke a method and return a local reference wrapping the result2
  local_ref<JniRet> operator()(alias_ref<jclass> cls, Args... args) {2
    const auto env = internal::getEnv();2
    auto result = env->CallStaticObjectMethod(2
          cls.get(),2
          getId(),2
          detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
    FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
    return adopt_local(static_cast<JniRet>(result));2
  }2
2
  friend class JClass;2
};2
2
template<typename... Args>2
inline void2
JNonvirtualMethod<void(Args...)>::operator()(alias_ref<jobject> self, alias_ref<jclass> cls, Args... args) {2
  const auto env = internal::getEnv();2
  env->CallNonvirtualVoidMethod(2
        self.get(),2
        cls.get(),2
        getId(),2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
}2
2
#pragma push_macro("DEFINE_PRIMITIVE_NON_VIRTUAL_CALL")2
#undef DEFINE_PRIMITIVE_NON_VIRTUAL_CALL2
#define DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(TYPE, METHOD)                                                      \2
template<typename... Args>                                                                                   \2
inline TYPE                                                                                                  \2
JNonvirtualMethod<TYPE(Args...)>::operator()(alias_ref<jobject> self, alias_ref<jclass> cls, Args... args) { \2
  const auto env = internal::getEnv();                                                                       \2
  auto result = env->CallNonvirtual ## METHOD ## Method(                                                     \2
        self.get(),                                                                                          \2
        cls.get(),                                                                                           \2
        getId(),                                                                                             \2
        detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);               \2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();                                                                    \2
  return result;                                                                                             \2
}2
2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jboolean, Boolean)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jbyte, Byte)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jchar, Char)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jshort, Short)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jint, Int)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jlong, Long)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jfloat, Float)2
DEFINE_PRIMITIVE_NON_VIRTUAL_CALL(jdouble, Double)2
#pragma pop_macro("DEFINE_PRIMITIVE_NON_VIRTUAL_CALL")2
2
/// JNonvirtualMethod specialization for references that wraps the return value in a @ref local_ref2
template<typename R, typename... Args>2
class JNonvirtualMethod<R(Args...)> : public JMethodBase {2
 public:2
  using JniRet = typename detail::Convert<typename std::decay<R>::type>::jniType;2
  static_assert(IsPlainJniReference<JniRet>(), "T* must be a JNI reference");2
  using JMethodBase::JMethodBase;2
  JNonvirtualMethod() noexcept {};2
  JNonvirtualMethod(const JNonvirtualMethod& other) noexcept = default;2
2
  /// Invoke a method and return a local reference wrapping the result2
  local_ref<JniRet> operator()(alias_ref<jobject> self, alias_ref<jclass> cls, Args... args){2
    const auto env = internal::getEnv();2
    auto result = env->CallNonvirtualObjectMethod(2
          self.get(),2
          cls.get(),2
          getId(),2
          detail::callToJni(detail::Convert<typename std::decay<Args>::type>::toCall(args))...);2
    FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
    return adopt_local(static_cast<JniRet>(result));2
  }2
2
  friend class JClass;2
};2
2
template <typename... Args>2
local_ref<jobject> slowCall(jmethodID method_id, alias_ref<jobject> self, Args... args) {2
    static auto invoke = findClassStatic("java/lang/reflect/Method")2
      ->getMethod<jobject(jobject, JArrayClass<jobject>::javaobject)>("invoke");2
    // TODO(xxxxxxx): Provide fbjni interface to ToReflectedMethod.2
    auto reflected = adopt_local(Environment::current()->ToReflectedMethod(self->getClass().get(), method_id, JNI_FALSE));2
    FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
    if (!reflected) throw std::runtime_error("Unable to get reflected java.lang.reflect.Method");2
    auto argsArray = makeArgsArray(args...);2
    // No need to check for exceptions since invoke is itself a JMethod that will do that for us.2
    return invoke(reflected, self.get(), argsArray.get());2
}2
2
2
// JField<T> ///////////////////////////////////////////////////////////////////////////////////////2
2
template<typename T>2
inline JField<T>::JField(jfieldID field) noexcept2
  : field_id_{field}2
{}2
2
template<typename T>2
inline JField<T>::operator bool() const noexcept {2
  return field_id_ != nullptr;2
}2
2
template<typename T>2
inline jfieldID JField<T>::getId() const noexcept {2
  return field_id_;2
}2
2
#pragma push_macro("DEFINE_FIELD_PRIMITIVE_GET_SET")2
#undef DEFINE_FIELD_PRIMITIVE_GET_SET2
#define DEFINE_FIELD_PRIMITIVE_GET_SET(TYPE, METHOD)                 \2
template<>                                                           \2
inline TYPE JField<TYPE>::get(jobject object) const noexcept {       \2
  const auto env = internal::getEnv();                               \2
  return env->Get ## METHOD ## Field(object, field_id_);             \2
}                                                                    \2
                                                                     \2
template<>                                                           \2
inline void JField<TYPE>::set(jobject object, TYPE value) noexcept { \2
  const auto env = internal::getEnv();                               \2
  env->Set ## METHOD ## Field(object, field_id_, value);             \2
}2
2
DEFINE_FIELD_PRIMITIVE_GET_SET(jboolean, Boolean)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jbyte, Byte)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jchar, Char)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jshort, Short)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jint, Int)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jlong, Long)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jfloat, Float)2
DEFINE_FIELD_PRIMITIVE_GET_SET(jdouble, Double)2
#pragma pop_macro("DEFINE_FIELD_PRIMITIVE_GET_SET")2
2
template<typename T>2
inline T JField<T>::get(jobject object) const noexcept {2
  return static_cast<T>(internal::getEnv()->GetObjectField(object, field_id_));2
}2
2
template<typename T>2
inline void JField<T>::set(jobject object, T value) noexcept {2
  internal::getEnv()->SetObjectField(object, field_id_, static_cast<jobject>(value));2
}2
2
// JStaticField<T> /////////////////////////////////////////////////////////////////////////////////2
2
template<typename T>2
inline JStaticField<T>::JStaticField(jfieldID field) noexcept2
  : field_id_{field}2
{}2
2
template<typename T>2
inline JStaticField<T>::operator bool() const noexcept {2
  return field_id_ != nullptr;2
}2
2
template<typename T>2
inline jfieldID JStaticField<T>::getId() const noexcept {2
  return field_id_;2
}2
2
#pragma push_macro("DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET")2
#undef DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET2
#define DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(TYPE, METHOD)                \2
template<>                                                                 \2
inline TYPE JStaticField<TYPE>::get(jclass jcls) const noexcept {          \2
  const auto env = internal::getEnv();                                     \2
  return env->GetStatic ## METHOD ## Field(jcls, field_id_);               \2
}                                                                          \2
                                                                           \2
template<>                                                                 \2
inline void JStaticField<TYPE>::set(jclass jcls, TYPE value) noexcept {    \2
  const auto env = internal::getEnv();                                     \2
  env->SetStatic ## METHOD ## Field(jcls, field_id_, value);               \2
}2
2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jboolean, Boolean)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jbyte, Byte)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jchar, Char)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jshort, Short)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jint, Int)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jlong, Long)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jfloat, Float)2
DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET(jdouble, Double)2
#pragma pop_macro("DEFINE_STATIC_FIELD_PRIMITIVE_GET_SET")2
2
template<typename T>2
inline T JStaticField<T>::get(jclass jcls) const noexcept {2
  const auto env = internal::getEnv();2
  return static_cast<T>(env->GetStaticObjectField(jcls, field_id_));2
}2
2
template<typename T>2
inline void JStaticField<T>::set(jclass jcls, T value) noexcept {2
  internal::getEnv()->SetStaticObjectField(jcls, field_id_, value);2
}2
2
2
// jmethod_traits //////////////////////////////////////////////////////////////////////////////////2
2
// TODO(T6608405) Adapt this to implement a register natives method that requires no descriptor2
namespace internal {2
2
template<typename Head>2
inline std::string JavaDescriptor() {2
  return jtype_traits<Head>::descriptor();2
}2
2
template<typename Head, typename Elem, typename... Tail>2
inline std::string JavaDescriptor() {2
  return JavaDescriptor<Head>() + JavaDescriptor<Elem, Tail...>();2
}2
2
template<typename R, typename Arg1, typename... Args>2
inline std::string JMethodDescriptor() {2
  return "(" + JavaDescriptor<Arg1, Args...>() + ")" + JavaDescriptor<R>();2
}2
2
template<typename R>2
inline std::string JMethodDescriptor() {2
  return "()" + JavaDescriptor<R>();2
}2
2
} // internal2
2
template<typename R, typename... Args>2
inline std::string jmethod_traits<R(Args...)>::descriptor() {2
  return internal::JMethodDescriptor<R, Args...>();2
}2
2
template<typename R, typename... Args>2
inline std::string jmethod_traits<R(Args...)>::constructor_descriptor() {2
  return internal::JMethodDescriptor<void, Args...>();2
}2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/** @file meta.h2
 *2
 * Provides wrappers for meta data such as methods and fields.2
 */2
2
#pragma once2
2
#include <type_traits>2
#include <string>2
2
#include <jni.h>2
2
#include "References-forward.h"2
2
#ifdef __ANDROID__2
# include <android/log.h>2
# define XLOG_TAG "fb-jni"2
# define XLOGV(...) __android_log_print(ANDROID_LOG_VERBOSE, XLOG_TAG, __VA_ARGS__)2
# define XLOGD(...) __android_log_print(ANDROID_LOG_DEBUG, XLOG_TAG, __VA_ARGS__)2
# define XLOGI(...) __android_log_print(ANDROID_LOG_INFO, XLOG_TAG, __VA_ARGS__)2
# define XLOGW(...) __android_log_print(ANDROID_LOG_WARN, XLOG_TAG, __VA_ARGS__)2
# define XLOGE(...) __android_log_print(ANDROID_LOG_ERROR, XLOG_TAG, __VA_ARGS__)2
# define XLOGWTF(...) __android_log_print(ANDROID_LOG_FATAL, XLOG_TAG, __VA_ARGS__)2
#endif2
2
namespace facebook {2
namespace jni {2
2
// This will get the reflected Java Method from the method_id, get it's invoke2
// method, and call the method via that. This shouldn't ever be needed, but2
// Android 6.0 crashes when calling a method on a java.lang.Proxy via jni.2
template <typename... Args>2
local_ref<jobject> slowCall(jmethodID method_id, alias_ref<jobject> self, Args... args);2
2
class JObject;2
2
2
/// Wrapper of a jmethodID. Provides a common base for JMethod specializations2
class JMethodBase {2
 public:2
  /// Verify that the method is valid2
  explicit operator bool() const noexcept;2
2
  /// Access the wrapped id2
  jmethodID getId() const noexcept;2
2
 protected:2
  /// Create a wrapper of a method id2
  explicit JMethodBase(jmethodID method_id = nullptr) noexcept;2
2
 private:2
  jmethodID method_id_;2
};2
2
2
/// Representation of a jmethodID2
template<typename F>2
class JMethod;2
2
/// @cond INTERNAL2
#pragma push_macro("DEFINE_PRIMITIVE_METHOD_CLASS")2
2
#undef DEFINE_PRIMITIVE_METHOD_CLASS2
2
// Defining JMethod specializations based on return value2
#define DEFINE_PRIMITIVE_METHOD_CLASS(TYPE)                                      \2
template<typename... Args>                                                       \2
class JMethod<TYPE(Args...)> : public JMethodBase {                              \2
 public:                                                                         \2
  static_assert(std::is_void<TYPE>::value || IsJniPrimitive<TYPE>(),             \2
      "TYPE must be primitive or void");                                         \2
                                                                                 \2
  using JMethodBase::JMethodBase;                                                \2
  JMethod() noexcept {};                                                         \2
  JMethod(const JMethod& other) noexcept = default;                              \2
                                                                                 \2
  TYPE operator()(alias_ref<jobject> self, Args... args);                        \2
                                                                                 \2
  friend class JClass;                                                           \2
}2
2
DEFINE_PRIMITIVE_METHOD_CLASS(void);2
DEFINE_PRIMITIVE_METHOD_CLASS(jboolean);2
DEFINE_PRIMITIVE_METHOD_CLASS(jbyte);2
DEFINE_PRIMITIVE_METHOD_CLASS(jchar);2
DEFINE_PRIMITIVE_METHOD_CLASS(jshort);2
DEFINE_PRIMITIVE_METHOD_CLASS(jint);2
DEFINE_PRIMITIVE_METHOD_CLASS(jlong);2
DEFINE_PRIMITIVE_METHOD_CLASS(jfloat);2
DEFINE_PRIMITIVE_METHOD_CLASS(jdouble);2
2
#pragma pop_macro("DEFINE_PRIMITIVE_METHOD_CLASS")2
/// @endcond2
2
2
/// Convenience type representing constructors2
/// These should only be used with JClass::getConstructor and JClass::newObject.2
template<typename F>2
struct JConstructor : private JMethod<F> {2
  using JMethod<F>::JMethod;2
 private:2
  JConstructor(const JMethod<F>& other) : JMethod<F>(other.getId()) {}2
  friend class JClass;2
};2
2
/// Representation of a jStaticMethodID2
template<typename F>2
class JStaticMethod;2
2
/// @cond INTERNAL2
#pragma push_macro("DEFINE_PRIMITIVE_STATIC_METHOD_CLASS")2
2
#undef DEFINE_PRIMITIVE_STATIC_METHOD_CLASS2
2
// Defining JStaticMethod specializations based on return value2
#define DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(TYPE)                          \2
template<typename... Args>                                                  \2
class JStaticMethod<TYPE(Args...)> : public JMethodBase {                   \2
  static_assert(std::is_void<TYPE>::value || IsJniPrimitive<TYPE>(),        \2
      "T must be a JNI primitive or void");                                 \2
                                                                            \2
 public:                                                                    \2
  using JMethodBase::JMethodBase;                                           \2
  JStaticMethod() noexcept {};                                              \2
  JStaticMethod(const JStaticMethod& other) noexcept = default;             \2
                                                                            \2
  TYPE operator()(alias_ref<jclass> cls, Args... args);                     \2
                                                                            \2
  friend class JClass;                                                      \2
}2
2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(void);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jboolean);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jbyte);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jchar);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jshort);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jint);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jlong);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jfloat);2
DEFINE_PRIMITIVE_STATIC_METHOD_CLASS(jdouble);2
2
#pragma pop_macro("DEFINE_PRIMITIVE_STATIC_METHOD_CLASS")2
/// @endcond2
2
2
/// Representation of a jNonvirtualMethodID2
template<typename F>2
class JNonvirtualMethod;2
2
/// @cond INTERNAL2
#pragma push_macro("DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS")2
2
#undef DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS2
2
// Defining JNonvirtualMethod specializations based on return value2
#define DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(TYPE)                     \2
template<typename... Args>                                                  \2
class JNonvirtualMethod<TYPE(Args...)> : public JMethodBase {               \2
  static_assert(std::is_void<TYPE>::value || IsJniPrimitive<TYPE>(),        \2
      "T must be a JNI primitive or void");                                 \2
                                                                            \2
 public:                                                                    \2
  using JMethodBase::JMethodBase;                                           \2
  JNonvirtualMethod() noexcept {};                                          \2
  JNonvirtualMethod(const JNonvirtualMethod& other) noexcept = default;     \2
                                                                            \2
  TYPE operator()(alias_ref<jobject> self, alias_ref<jclass> cls, Args... args);       \2
                                                                            \2
  friend class JClass;                                                      \2
}2
2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(void);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jboolean);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jbyte);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jchar);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jshort);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jint);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jlong);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jfloat);2
DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS(jdouble);2
2
#pragma pop_macro("DEFINE_PRIMITIVE_NON_VIRTUAL_METHOD_CLASS")2
/// @endcond2
2
2
/**2
 * JField represents typed fields and simplifies their access. Note that object types return2
 * raw pointers which generally should promptly get a wrap_local treatment.2
 */2
template<typename T>2
class JField {2
  static_assert(IsJniScalar<T>(), "T must be a JNI scalar");2
2
 public:2
  /// Wraps an existing field id2
  explicit JField(jfieldID field = nullptr) noexcept;2
2
  /// Verify that the id is valid2
  explicit operator bool() const noexcept;2
2
  /// Access the wrapped id2
  jfieldID getId() const noexcept;2
2
 private:2
  jfieldID field_id_;2
2
  /// Get field value2
  /// @pre object != nullptr2
  T get(jobject object) const noexcept;2
2
  /// Set field value2
  /// @pre object != nullptr2
  void set(jobject object, T value) noexcept;2
2
  friend class JObject;2
};2
2
2
/**2
 * JStaticField represents typed fields and simplifies their access. Note that object types2
 * return raw pointers which generally should promptly get a wrap_local treatment.2
 */2
template<typename T>2
class JStaticField {2
  static_assert(IsJniScalar<T>(), "T must be a JNI scalar");2
2
 public:2
  /// Wraps an existing field id2
  explicit JStaticField(jfieldID field = nullptr) noexcept;2
2
  /// Verify that the id is valid2
  explicit operator bool() const noexcept;2
2
  /// Access the wrapped id2
  jfieldID getId() const noexcept;2
2
 private:2
  jfieldID field_id_;2
2
  /// Get field value2
  /// @pre object != nullptr2
  T get(jclass jcls) const noexcept;2
2
  /// Set field value2
  /// @pre object != nullptr2
  void set(jclass jcls, T value) noexcept;2
2
  friend class JClass;2
  friend class JObject;2
};2
2
2
/// Template magic to provide @ref jmethod_traits2
template<typename R, typename... Args>2
struct jmethod_traits<R(Args...)> {2
  static std::string descriptor();2
  static std::string constructor_descriptor();2
};2
2
2
// jtype_traits ////////////////////////////////////////////////////////////////////////////////////2
2
template<typename T>2
struct jtype_traits {2
private:2
  using Repr = ReprType<T>;2
public:2
  // The jni type signature (described at2
  // http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html).2
  static std::string descriptor() {2
    std::string descriptor;2
    if (Repr::kJavaDescriptor == nullptr) {2
      descriptor = Repr::get_instantiated_java_descriptor();2
    } else {2
      descriptor = Repr::kJavaDescriptor;2
    }2
    return descriptor;2
  }2
2
  // The signature used for class lookups. See2
  // http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html#getName().2
  static std::string base_name() {2
    if (Repr::kJavaDescriptor != nullptr) {2
      std::string base_name = Repr::kJavaDescriptor;2
      return base_name.substr(1, base_name.size() - 2);2
    }2
    return Repr::get_instantiated_base_name();2
  }2
};2
2
#pragma push_macro("DEFINE_FIELD_AND_ARRAY_TRAIT")2
#undef DEFINE_FIELD_AND_ARRAY_TRAIT2
2
#define DEFINE_FIELD_AND_ARRAY_TRAIT(TYPE, DSC)                     \2
template<>                                                          \2
struct jtype_traits<TYPE> {                                         \2
  static std::string descriptor() { return std::string{#DSC}; }     \2
  static std::string base_name() { return descriptor(); }           \2
  using array_type = TYPE ## Array;                                 \2
};                                                                  \2
template<>                                                          \2
struct jtype_traits<TYPE ## Array> {                                \2
  static std::string descriptor() { return std::string{"[" #DSC}; } \2
  static std::string base_name() { return descriptor(); }           \2
  using entry_type = TYPE;                                          \2
};2
2
// There is no voidArray, handle that without the macro.2
template<>2
struct jtype_traits<void> {2
  static std::string descriptor() { return std::string{"V"}; };2
};2
2
DEFINE_FIELD_AND_ARRAY_TRAIT(jboolean, Z)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jbyte,    B)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jchar,    C)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jshort,   S)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jint,     I)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jlong,    J)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jfloat,   F)2
DEFINE_FIELD_AND_ARRAY_TRAIT(jdouble,  D)2
2
#pragma pop_macro("DEFINE_FIELD_AND_ARRAY_TRAIT")2
2
2
template <typename T>2
struct jmethod_traits_from_cxx;2
2
}}2
2
#include "Meta-inl.h"2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
2
#include "Common.h"2
#include "References.h"2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
// In order to avoid potentially filling the jni locals table,2
// temporary objects (right now, this is just jstrings) need to be2
// released. This is done by returning a holder which autoconverts to2
// jstring.2
template <typename T>2
inline T callToJni(T&& t) {2
  return t;2
}2
2
template <typename T>2
inline JniType<T> callToJni(local_ref<T>&& sref) {2
  return sref.get();2
}2
2
// Normally, pass through types unmolested.2
template <typename T, typename Enabled = void>2
struct Convert {2
  typedef T jniType;2
  static jniType fromJni(jniType t) {2
    return t;2
  }2
  static jniType toJniRet(jniType t) {2
    return t;2
  }2
  static jniType toCall(jniType t) {2
    return t;2
  }2
};2
2
// This is needed for return conversion2
template <>2
struct Convert<void> {2
  typedef void jniType;2
};2
2
// jboolean is an unsigned char, not a bool. Allow it to work either way.2
template<>2
struct Convert<bool> {2
  typedef jboolean jniType;2
  static bool fromJni(jniType t) {2
    return t;2
  }2
  static jniType toJniRet(bool t) {2
    return t;2
  }2
  static jniType toCall(bool t) {2
    return t;2
  }2
};2
2
// convert to alias_ref<T> from T2
template <typename T>2
struct Convert<alias_ref<T>> {2
  typedef JniType<T> jniType;2
  static alias_ref<jniType> fromJni(jniType t) {2
    return wrap_alias(t);2
  }2
  static jniType toJniRet(alias_ref<jniType> t) {2
    return t.get();2
  }2
  static jniType toCall(alias_ref<jniType> t) {2
    return t.get();2
  }2
};2
2
// convert return from local_ref<T>2
template <typename T>2
struct Convert<local_ref<T>> {2
  typedef JniType<T> jniType;2
  // No automatic synthesis of local_ref2
  static jniType toJniRet(local_ref<jniType> t) {2
    return t.release();2
  }2
  static jniType toCall(local_ref<jniType> t) {2
    return t.get();2
  }2
};2
2
// convert return from global_ref<T>2
template <typename T>2
struct Convert<global_ref<T>> {2
  typedef JniType<T> jniType;2
  // No automatic synthesis of global_ref2
  static jniType toJniRet(global_ref<jniType> t) {2
    return t.get();2
  }2
  static jniType toCall(global_ref<jniType> t) {2
    return t.get();2
  }2
};2
2
template <typename T> struct jni_sig_from_cxx_t;2
template <typename R, typename... Args>2
struct jni_sig_from_cxx_t<R(Args...)> {2
  using JniRet = typename Convert<typename std::decay<R>::type>::jniType;2
  using JniSig = JniRet(typename Convert<typename std::decay<Args>::type>::jniType...);2
};2
2
template <typename T>2
using jni_sig_from_cxx = typename jni_sig_from_cxx_t<T>::JniSig;2
2
} // namespace detail2
2
template <typename R, typename... Args>2
struct jmethod_traits_from_cxx<R(Args...)> : jmethod_traits<detail::jni_sig_from_cxx<R(Args...)>> {2
};2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "CoreClasses.h"2
#include "Hybrid.h"2
#include "Registration.h"2
2
#include <functional>2
2
namespace facebook {2
namespace jni {2
2
struct JRunnable : public JavaClass<JRunnable> {2
  static auto constexpr kJavaDescriptor = "Ljava/lang/Runnable;";2
};2
2
struct JNativeRunnable : public HybridClass<JNativeRunnable, JRunnable> {2
 public:2
  static auto constexpr kJavaDescriptor = "Lcom/facebook/jni/NativeRunnable;";2
2
  JNativeRunnable(std::function<void()>&& runnable) : runnable_(std::move(runnable)) {}2
2
  static void OnLoad() {2
    registerHybrid({2
        makeNativeMethod("run", JNativeRunnable::run),2
      });2
  }2
2
  void run() {2
    runnable_();2
  }2
2
 private:2
  std::function<void()> runnable_;2
};2
2
2
} // namespace jni2
} // namespace facebook2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <cassert>2
#include <new>2
#include <atomic>2
2
namespace facebook {2
namespace jni {2
2
/// @cond INTERNAL2
namespace internal {2
2
// Statistics mostly provided for test (only updated if FBJNI_DEBUG_REFS is defined)2
struct ReferenceStats {2
  std::atomic_uint locals_deleted, globals_deleted, weaks_deleted;2
2
  void reset() noexcept;2
};2
2
extern ReferenceStats g_reference_stats;2
}2
/// @endcond2
2
2
// LocalReferenceAllocator /////////////////////////////////////////////////////////////////////////2
2
inline jobject LocalReferenceAllocator::newReference(jobject original) const {2
  internal::dbglog("Local new: %p", original);2
  auto ref = internal::getEnv()->NewLocalRef(original);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
  return ref;2
}2
2
inline void LocalReferenceAllocator::deleteReference(jobject reference) const noexcept {2
  internal::dbglog("Local release: %p", reference);2
2
  if (reference) {2
    #ifdef FBJNI_DEBUG_REFS2
      ++internal::g_reference_stats.locals_deleted;2
    #endif2
    assert(verifyReference(reference));2
    internal::getEnv()->DeleteLocalRef(reference);2
  }2
}2
2
inline bool LocalReferenceAllocator::verifyReference(jobject reference) const noexcept {2
  if (!reference || !internal::doesGetObjectRefTypeWork()) {2
    return true;2
  }2
  return internal::getEnv()->GetObjectRefType(reference) == JNILocalRefType;2
}2
2
2
// GlobalReferenceAllocator ////////////////////////////////////////////////////////////////////////2
2
inline jobject GlobalReferenceAllocator::newReference(jobject original) const {2
  internal::dbglog("Global new: %p", original);2
  auto ref = internal::getEnv()->NewGlobalRef(original);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
  return ref;2
}2
2
inline void GlobalReferenceAllocator::deleteReference(jobject reference) const noexcept {2
  internal::dbglog("Global release: %p", reference);2
2
  if (reference) {2
    #ifdef FBJNI_DEBUG_REFS2
      ++internal::g_reference_stats.globals_deleted;2
    #endif2
    assert(verifyReference(reference));2
    internal::getEnv()->DeleteGlobalRef(reference);2
  }2
}2
2
inline bool GlobalReferenceAllocator::verifyReference(jobject reference) const noexcept {2
  if (!reference || !internal::doesGetObjectRefTypeWork()) {2
    return true;2
  }2
  return internal::getEnv()->GetObjectRefType(reference) == JNIGlobalRefType;2
}2
2
2
// WeakGlobalReferenceAllocator ////////////////////////////////////////////////////////////////////2
2
inline jobject WeakGlobalReferenceAllocator::newReference(jobject original) const {2
  internal::dbglog("Weak global new: %p", original);2
  auto ref = internal::getEnv()->NewWeakGlobalRef(original);2
  FACEBOOK_JNI_THROW_PENDING_EXCEPTION();2
  return ref;2
}2
2
inline void WeakGlobalReferenceAllocator::deleteReference(jobject reference) const noexcept {2
  internal::dbglog("Weak Global release: %p", reference);2
2
  if (reference) {2
    #ifdef FBJNI_DEBUG_REFS2
      ++internal::g_reference_stats.weaks_deleted;2
    #endif2
    assert(verifyReference(reference));2
    internal::getEnv()->DeleteWeakGlobalRef(reference);2
  }2
}2
2
inline bool WeakGlobalReferenceAllocator::verifyReference(jobject reference) const noexcept {2
  if (!reference || !internal::doesGetObjectRefTypeWork()) {2
    return true;2
  }2
  return internal::getEnv()->GetObjectRefType(reference) == JNIWeakGlobalRefType;2
}2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/**2
 * @file ReferenceAllocators.h2
 *2
 * Reference allocators are used to create and delete various classes of JNI references (local,2
 * global, and weak global).2
 */2
2
#pragma once2
2
#include <fb/visibility.h>2
2
#include "Common.h"2
2
namespace facebook { namespace jni {2
2
/// Allocator that handles local references2
class FBEXPORT LocalReferenceAllocator {2
 public:2
  jobject newReference(jobject original) const;2
  void deleteReference(jobject reference) const noexcept;2
  bool verifyReference(jobject reference) const noexcept;2
};2
2
/// Allocator that handles global references2
class FBEXPORT GlobalReferenceAllocator {2
 public:2
  jobject newReference(jobject original) const;2
  void deleteReference(jobject reference) const noexcept;2
  bool verifyReference(jobject reference) const noexcept;2
};2
2
/// Allocator that handles weak global references2
class FBEXPORT WeakGlobalReferenceAllocator {2
 public:2
  jobject newReference(jobject original) const;2
  void deleteReference(jobject reference) const noexcept;2
  bool verifyReference(jobject reference) const noexcept;2
};2
2
/// @cond INTERNAL2
namespace internal {2
2
/**2
 * @return true iff env->GetObjectRefType is expected to work properly.2
 */2
FBEXPORT bool doesGetObjectRefTypeWork();2
2
}2
/// @endcond2
2
}}2
2
#include "ReferenceAllocators-inl.h"2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "ReferenceAllocators.h"2
2
namespace facebook {2
namespace jni {2
2
template<typename T, typename Enable = void>2
class JObjectWrapper;2
2
namespace detail {2
struct JObjectBase {2
  jobject get() const noexcept;2
  void set(jobject reference) noexcept;2
  jobject this_;2
};2
2
// RefReprType maps a type to the representation used by fbjni smart references.2
template <typename T, typename Enable = void>2
struct RefReprType;2
2
template <typename T>2
struct JavaObjectType;2
2
template <typename T>2
struct ReprAccess;2
}2
2
// Given T, either a jobject-like type or a JavaClass-derived type, ReprType<T>2
// is the corresponding JavaClass-derived type and JniType<T> is the2
// jobject-like type.2
template <typename T>2
using ReprType = typename detail::RefReprType<T>::type;2
2
template <typename T>2
using JniType = typename detail::JavaObjectType<T>::type;2
2
template<typename T, typename Alloc>2
class base_owned_ref;2
2
template<typename T, typename Alloc>2
class basic_strong_ref;2
2
template<typename T>2
class weak_ref;2
2
template<typename T>2
class alias_ref;2
2
/// A smart unique reference owning a local JNI reference2
template<typename T>2
using local_ref = basic_strong_ref<T, LocalReferenceAllocator>;2
2
/// A smart unique reference owning a global JNI reference2
template<typename T>2
using global_ref = basic_strong_ref<T, GlobalReferenceAllocator>;2
2
}} // namespace facebook::jni2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <new>2
#include "CoreClasses.h"2
2
namespace facebook {2
namespace jni {2
2
template<typename T>2
inline enable_if_t<IsPlainJniReference<T>(), T> getPlainJniReference(T ref) {2
  return ref;2
}2
2
template<typename T>2
inline JniType<T> getPlainJniReference(alias_ref<T> ref) {2
  return ref.get();2
}2
2
template<typename T, typename A>2
inline JniType<T> getPlainJniReference(const base_owned_ref<T, A>& ref) {2
  return ref.get();2
}2
2
2
namespace detail {2
template <typename Repr>2
struct ReprAccess {2
  using javaobject = JniType<Repr>;2
  static void set(Repr& repr, javaobject obj) noexcept {2
    repr.JObjectBase::set(obj);2
  }2
  static javaobject get(const Repr& repr) {2
    return static_cast<javaobject>(repr.JObject::get());2
  }2
};2
2
namespace {2
template <typename Repr>2
void StaticAssertValidRepr() noexcept {2
  static_assert(std::is_base_of<JObject, Repr>::value,2
      "A smart ref representation must be derived from JObject.");2
  static_assert(IsPlainJniReference<JniType<Repr>>(), "T must be a JNI reference");2
  static_assert(sizeof(Repr) == sizeof(JObjectBase), "");2
  static_assert(alignof(Repr) == alignof(JObjectBase), "");2
}2
}2
2
template <typename Repr>2
ReprStorage<Repr>::ReprStorage(JniType<Repr> obj) noexcept {2
  StaticAssertValidRepr<Repr>();2
  set(obj);2
}2
2
template <typename Repr>2
void ReprStorage<Repr>::set(JniType<Repr> obj) noexcept {2
  new (&storage_) Repr;2
  ReprAccess<Repr>::set(get(), obj);2
}2
2
template <typename Repr>2
Repr& ReprStorage<Repr>::get() noexcept {2
  return *reinterpret_cast<Repr*>(&storage_);2
}2
2
template <typename Repr>2
const Repr& ReprStorage<Repr>::get() const noexcept {2
  return *reinterpret_cast<const Repr*>(&storage_);2
}2
2
template <typename Repr>2
JniType<Repr> ReprStorage<Repr>::jobj() const noexcept {2
  ReprAccess<Repr>::get(get());2
  return ReprAccess<Repr>::get(get());2
}2
2
template <typename Repr>2
void ReprStorage<Repr>::swap(ReprStorage& other) noexcept {2
  StaticAssertValidRepr<Repr>();2
  using std::swap;2
  swap(get(), other.get());2
}2
2
inline void JObjectBase::set(jobject reference) noexcept {2
  this_ = reference;2
}2
2
inline jobject JObjectBase::get() const noexcept {2
  return this_;2
}2
2
template<typename T, typename Alloc>2
enable_if_t<IsNonWeakReference<T>(), plain_jni_reference_t<T>> make_ref(const T& reference) {2
  auto old_reference = getPlainJniReference(reference);2
  if (!old_reference) {2
    return nullptr;2
  }2
2
  auto ref = Alloc{}.newReference(old_reference);2
  if (!ref) {2
    // Note that we end up here if we pass a weak ref that refers to a collected object.2
    // Thus, it's hard to come up with a reason why this function should be used with2
    // weak references.2
    throw std::bad_alloc{};2
  }2
2
  return static_cast<plain_jni_reference_t<T>>(ref);2
}2
2
} // namespace detail2
2
template<typename T>2
inline local_ref<T> adopt_local(T ref) noexcept {2
  static_assert(IsPlainJniReference<T>(), "T must be a plain jni reference");2
  return local_ref<T>{ref};2
}2
2
template<typename T>2
inline global_ref<T> adopt_global(T ref) noexcept {2
  static_assert(IsPlainJniReference<T>(), "T must be a plain jni reference");2
  return global_ref<T>{ref};2
}2
2
template<typename T>2
inline weak_ref<T> adopt_weak_global(T ref) noexcept {2
  static_assert(IsPlainJniReference<T>(), "T must be a plain jni reference");2
  return weak_ref<T>{ref};2
}2
2
2
template<typename T>2
inline enable_if_t<IsPlainJniReference<T>(), alias_ref<T>> wrap_alias(T ref) noexcept {2
  return alias_ref<T>(ref);2
}2
2
2
template<typename T>2
enable_if_t<IsPlainJniReference<T>(), alias_ref<T>> wrap_alias(T ref) noexcept;2
2
2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), local_ref<plain_jni_reference_t<T>>>2
make_local(const T& ref) {2
  return adopt_local(detail::make_ref<T, LocalReferenceAllocator>(ref));2
}2
2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), global_ref<plain_jni_reference_t<T>>>2
make_global(const T& ref) {2
  return adopt_global(detail::make_ref<T, GlobalReferenceAllocator>(ref));2
}2
2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), weak_ref<plain_jni_reference_t<T>>>2
make_weak(const T& ref) {2
  return adopt_weak_global(detail::make_ref<T, WeakGlobalReferenceAllocator>(ref));2
}2
2
template<typename T1, typename T2>2
inline enable_if_t<IsNonWeakReference<T1>() && IsNonWeakReference<T2>(), bool>2
operator==(const T1& a, const T2& b) {2
  return isSameObject(getPlainJniReference(a), getPlainJniReference(b));2
}2
2
template<typename T1, typename T2>2
inline enable_if_t<IsNonWeakReference<T1>() && IsNonWeakReference<T2>(), bool>2
operator!=(const T1& a, const T2& b) {2
  return !(a == b);2
}2
2
2
// base_owned_ref ///////////////////////////////////////////////////////////////////////2
2
template<typename T, typename Alloc>2
inline base_owned_ref<T, Alloc>::base_owned_ref() noexcept2
  : base_owned_ref(nullptr)2
{}2
2
template<typename T, typename Alloc>2
inline base_owned_ref<T, Alloc>::base_owned_ref(std::nullptr_t t) noexcept2
  : base_owned_ref(static_cast<javaobject>(nullptr))2
{}2
2
template<typename T, typename Alloc>2
inline base_owned_ref<T, Alloc>::base_owned_ref(const base_owned_ref& other)2
  : storage_{static_cast<javaobject>(Alloc{}.newReference(other.get()))}2
{}2
2
template<typename T, typename Alloc>2
template<typename U>2
inline base_owned_ref<T, Alloc>::base_owned_ref(const base_owned_ref<U, Alloc>& other)2
  : storage_{static_cast<javaobject>(Alloc{}.newReference(other.get()))}2
{2
  static_assert(std::is_convertible<JniType<U>, javaobject>::value, "");2
}2
2
template<typename T, typename Alloc>2
inline facebook::jni::base_owned_ref<T, Alloc>::base_owned_ref(2
    javaobject reference) noexcept2
  : storage_(reference) {2
  assert(Alloc{}.verifyReference(reference));2
  internal::dbglog("New wrapped ref=%p this=%p", get(), this);2
}2
2
template<typename T, typename Alloc>2
inline base_owned_ref<T, Alloc>::base_owned_ref(2
    base_owned_ref<T, Alloc>&& other) noexcept2
  : storage_(other.get()) {2
  internal::dbglog("New move from ref=%p other=%p", other.get(), &other);2
  internal::dbglog("New move to ref=%p this=%p", get(), this);2
  // JObject is a simple type and does not support move semantics so we explicitly2
  // clear other2
  other.set(nullptr);2
}2
2
template<typename T, typename Alloc>2
template<typename U>2
base_owned_ref<T, Alloc>::base_owned_ref(base_owned_ref<U, Alloc>&& other) noexcept2
  : storage_(other.get()) {2
  internal::dbglog("New move from ref=%p other=%p", other.get(), &other);2
  internal::dbglog("New move to ref=%p this=%p", get(), this);2
  // JObject is a simple type and does not support move semantics so we explicitly2
  // clear other2
  other.set(nullptr);2
}2
2
template<typename T, typename Alloc>2
inline base_owned_ref<T, Alloc>::~base_owned_ref() noexcept {2
  reset();2
  internal::dbglog("Ref destruct ref=%p this=%p", get(), this);2
}2
2
template<typename T, typename Alloc>2
inline auto base_owned_ref<T, Alloc>::release() noexcept -> javaobject {2
  auto value = get();2
  internal::dbglog("Ref release ref=%p this=%p", value, this);2
  set(nullptr);2
  return value;2
}2
2
template<typename T, typename Alloc>2
inline void base_owned_ref<T,Alloc>::reset() noexcept {2
  reset(nullptr);2
}2
2
template<typename T, typename Alloc>2
inline void base_owned_ref<T,Alloc>::reset(javaobject reference) noexcept {2
  if (get()) {2
    assert(Alloc{}.verifyReference(reference));2
    Alloc{}.deleteReference(get());2
  }2
  set(reference);2
}2
2
template<typename T, typename Alloc>2
inline auto base_owned_ref<T, Alloc>::get() const noexcept -> javaobject {2
  return storage_.jobj();2
}2
2
template<typename T, typename Alloc>2
inline void base_owned_ref<T, Alloc>::set(javaobject ref) noexcept {2
  storage_.set(ref);2
}2
2
2
// weak_ref ///////////////////////////////////////////////////////////////////////2
2
template<typename T>2
inline weak_ref<T>& weak_ref<T>::operator=(2
    const weak_ref& other) {2
  auto otherCopy = other;2
  swap(*this, otherCopy);2
  return *this;2
}2
2
template<typename T>2
inline weak_ref<T>& weak_ref<T>::operator=(2
    weak_ref<T>&& other) noexcept {2
  internal::dbglog("Op= move ref=%p this=%p oref=%p other=%p",2
      get(), this, other.get(), &other);2
  reset(other.release());2
  return *this;2
}2
2
template<typename T>2
local_ref<T> weak_ref<T>::lockLocal() const {2
  return adopt_local(2
      static_cast<javaobject>(LocalReferenceAllocator{}.newReference(get())));2
}2
2
template<typename T>2
global_ref<T> weak_ref<T>::lockGlobal() const {2
  return adopt_global(2
      static_cast<javaobject>(GlobalReferenceAllocator{}.newReference(get())));2
}2
2
template<typename T>2
inline void swap(2
    weak_ref<T>& a,2
    weak_ref<T>& b) noexcept {2
  internal::dbglog("Ref swap a.ref=%p a=%p b.ref=%p b=%p",2
      a.get(), &a, b.get(), &b);2
  a.storage_.swap(b.storage_);2
}2
2
2
// basic_strong_ref ////////////////////////////////////////////////////////////////////////////2
2
template<typename T, typename Alloc>2
inline basic_strong_ref<T, Alloc>& basic_strong_ref<T, Alloc>::operator=(2
    const basic_strong_ref& other) {2
  auto otherCopy = other;2
  swap(*this, otherCopy);2
  return *this;2
}2
2
template<typename T, typename Alloc>2
inline basic_strong_ref<T, Alloc>& basic_strong_ref<T, Alloc>::operator=(2
    basic_strong_ref<T, Alloc>&& other) noexcept {2
  internal::dbglog("Op= move ref=%p this=%p oref=%p other=%p",2
      get(), this, other.get(), &other);2
  reset(other.release());2
  return *this;2
}2
2
template<typename T, typename Alloc>2
inline alias_ref<T> basic_strong_ref<T, Alloc>::releaseAlias() noexcept {2
  return wrap_alias(release());2
}2
2
template<typename T, typename Alloc>2
inline basic_strong_ref<T, Alloc>::operator bool() const noexcept {2
  return get() != nullptr;2
}2
2
template<typename T, typename Alloc>2
inline auto basic_strong_ref<T, Alloc>::operator->() noexcept -> Repr* {2
  return &storage_.get();2
}2
2
template<typename T, typename Alloc>2
inline auto basic_strong_ref<T, Alloc>::operator->() const noexcept -> const Repr* {2
  return &storage_.get();2
}2
2
template<typename T, typename Alloc>2
inline auto basic_strong_ref<T, Alloc>::operator*() noexcept -> Repr& {2
  return storage_.get();2
}2
2
template<typename T, typename Alloc>2
inline auto basic_strong_ref<T, Alloc>::operator*() const noexcept -> const Repr& {2
  return storage_.get();2
}2
2
template<typename T, typename Alloc>2
inline void swap(2
    basic_strong_ref<T, Alloc>& a,2
    basic_strong_ref<T, Alloc>& b) noexcept {2
  internal::dbglog("Ref swap a.ref=%p a=%p b.ref=%p b=%p",2
      a.get(), &a, b.get(), &b);2
  using std::swap;2
  a.storage_.swap(b.storage_);2
}2
2
2
// alias_ref //////////////////////////////////////////////////////////////////////////////2
2
template<typename T>2
inline alias_ref<T>::alias_ref() noexcept2
  : storage_{nullptr}2
{}2
2
template<typename T>2
inline alias_ref<T>::alias_ref(std::nullptr_t) noexcept2
  : storage_{nullptr}2
{}2
2
template<typename T>2
inline alias_ref<T>::alias_ref(const alias_ref& other) noexcept2
  : storage_{other.get()}2
{}2
2
template<typename T>2
inline alias_ref<T>::alias_ref(javaobject ref) noexcept2
  : storage_(ref) {2
  assert(2
      LocalReferenceAllocator{}.verifyReference(ref) ||2
      GlobalReferenceAllocator{}.verifyReference(ref));2
}2
2
template<typename T>2
template<typename TOther, typename /* for SFINAE */>2
inline alias_ref<T>::alias_ref(alias_ref<TOther> other) noexcept2
  : storage_{other.get()}2
{}2
2
template<typename T>2
template<typename TOther, typename AOther, typename /* for SFINAE */>2
inline alias_ref<T>::alias_ref(const basic_strong_ref<TOther, AOther>& other) noexcept2
  : storage_{other.get()}2
{}2
2
template<typename T>2
inline alias_ref<T>& alias_ref<T>::operator=(alias_ref other) noexcept {2
  swap(*this, other);2
  return *this;2
}2
2
template<typename T>2
inline alias_ref<T>::operator bool() const noexcept {2
  return get() != nullptr;2
}2
2
template<typename T>2
inline auto facebook::jni::alias_ref<T>::get() const noexcept -> javaobject {2
  return storage_.jobj();2
}2
2
template<typename T>2
inline auto alias_ref<T>::operator->() noexcept -> Repr* {2
  return &(**this);2
}2
2
template<typename T>2
inline auto alias_ref<T>::operator->() const noexcept -> const Repr* {2
  return &(**this);2
}2
2
template<typename T>2
inline auto alias_ref<T>::operator*() noexcept -> Repr& {2
  return storage_.get();2
}2
2
template<typename T>2
inline auto alias_ref<T>::operator*() const noexcept -> const Repr& {2
  return storage_.get();2
}2
2
template<typename T>2
inline void alias_ref<T>::set(javaobject ref) noexcept {2
  storage_.set(ref);2
}2
2
template<typename T>2
inline void swap(alias_ref<T>& a, alias_ref<T>& b) noexcept {2
  a.storage_.swap(b.storage_);2
}2
2
// Could reduce code duplication by using a pointer-to-function2
// template argument.  I'm not sure whether that would make the code2
// more maintainable (DRY), or less (too clever/confusing.).2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), local_ref<T>>2
static_ref_cast(const local_ref<U>& ref) noexcept2
{2
  T p = static_cast<T>(ref.get());2
  return make_local(p);2
}2
2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), global_ref<T>>2
static_ref_cast(const global_ref<U>& ref) noexcept2
{2
  T p = static_cast<T>(ref.get());2
  return make_global(p);2
}2
2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), alias_ref<T>>2
static_ref_cast(const alias_ref<U>& ref) noexcept2
{2
  T p = static_cast<T>(ref.get());2
  return wrap_alias(p);2
}2
2
template<typename T, typename RefType>2
auto dynamic_ref_cast(const RefType& ref) ->2
enable_if_t<IsPlainJniReference<T>(), decltype(static_ref_cast<T>(ref))>2
{2
  if (! ref) {2
    return decltype(static_ref_cast<T>(ref))();2
  }2
2
  std::string target_class_name{jtype_traits<T>::base_name()};2
2
  // If not found, will throw an exception.2
  alias_ref<jclass> target_class = findClassStatic(target_class_name.c_str());2
2
  local_ref<jclass> source_class = ref->getClass();2
2
  if ( ! source_class->isAssignableFrom(target_class)) {2
    throwNewJavaException("java/lang/ClassCastException",2
                          "Tried to cast from %s to %s.",2
                          source_class->toString().c_str(),2
                          target_class_name.c_str());2
  }2
2
  return static_ref_cast<T>(ref);2
}2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/** @file References.h2
 *2
 * Functionality similar to smart pointers, but for references into the VM. Four main reference2
 * types are provided: local_ref, global_ref, weak_ref, and alias_ref. All are generic2
 * templates that and refer to objects in the jobject hierarchy. The type of the referred objects2
 * are specified using the template parameter. All reference types except alias_ref own their2
 * underlying reference, just as a std smart pointer owns the underlying raw pointer. In the context2
 * of std smart pointers, these references behave like unique_ptr, and have basically the same2
 * interface. Thus, when the reference is destructed, the plain JNI reference, i.e. the underlying2
 * JNI reference (like the parameters passed directly to JNI functions), is released. The alias2
 * references provides no ownership and is a simple wrapper for plain JNI references.2
 *2
 * All but the weak references provides access to the underlying object using dereferencing, and a2
 * get() method. It is also possible to convert these references to booleans to test for nullity.2
 * To access the underlying object of a weak reference, the reference must either be released, or2
 * the weak reference can be used to create a local or global reference.2
 *2
 * An owning reference is created either by moving the reference from an existing owned reference,2
 * by copying an existing owned reference (which creates a new underlying reference), by using the2
 * default constructor which initialize the reference to nullptr, or by using a helper function. The2
 * helper function exist in two flavors: make_XXX or adopt_XXX.2
 *2
 * Adopting takes a plain JNI reference and wrap it in an owned reference. It takes ownership of the2
 * plain JNI reference so be sure that no one else owns the reference when you adopt it, and make2
 * sure that you know what kind of reference it is.2
 *2
 * New owned references can be created from existing plain JNI references, alias references, local2
 * references, and global references (i.e. non-weak references) using the make_local, make_global,2
 * and make_weak functions.2
 *2
 * Alias references can be implicitly initialized using global, local and plain JNI references using2
 * the wrap_alias function. Here, we don't assume ownership of the passed-in reference, but rather2
 * create a separate reference that we do own, leaving the passed-in reference to its fate.2
 *2
 * Similar rules apply for assignment. An owned reference can be copy or move assigned using a smart2
 * reference of the same type. In the case of copy assignment a new reference is created. Alias2
 * reference can also be assigned new values, but since they are simple wrappers of plain JNI2
 * references there is no move semantics involved.2
 *2
 * Alias references are special in that they do not own the object and can therefore safely be2
 * converted to and from its corresponding plain JNI reference. They are useful as parameters of2
 * functions that do not affect the lifetime of a reference. Usage can be compared with using plain2
 * JNI pointers as parameters where a function does not take ownership of the underlying object.2
 *2
 * The local, global, and alias references makes it possible to access methods in the underlying2
 * objects. A core set of classes are implemented in CoreClasses.h, and user defined wrappers are2
 * supported (see example below). The wrappers also supports inheritance so a wrapper can inherit2
 * from another wrapper to gain access to its functionality. As an example the jstring wrapper2
 * inherits from the jobject wrapper, so does the jclass wrapper. That means that you can for2
 * example call the toString() method using the jclass wrapper, or any other class that inherits2
 * from the jobject wrapper.2
 *2
 * Note that the wrappers are parameterized on the static type of your (jobject) pointer, thus if2
 * you have a jobject that refers to a Java String you will need to cast it to jstring to get the2
 * jstring wrapper. This also mean that if you make a down cast that is invalid there will be no one2
 * stopping you and the wrappers currently does not detect this which can cause crashes. Thus, cast2
 * wisely.2
 *2
 * @include WrapperSample.cpp2
 */2
2
#pragma once2
2
#include <cassert>2
#include <cstddef>2
#include <type_traits>2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
#include "ReferenceAllocators.h"2
#include "TypeTraits.h"2
#include "References-forward.h"2
2
namespace facebook {2
namespace jni {2
2
/// Convenience function to wrap an existing local reference2
template<typename T>2
local_ref<T> adopt_local(T ref) noexcept;2
2
/// Convenience function to wrap an existing global reference2
template<typename T>2
global_ref<T> adopt_global(T ref) noexcept;2
2
/// Convenience function to wrap an existing weak reference2
template<typename T>2
weak_ref<T> adopt_weak_global(T ref) noexcept;2
2
2
/// Swaps two owning references of the same type2
template<typename T>2
void swap(weak_ref<T>& a, weak_ref<T>& b) noexcept;2
2
/// Swaps two owning references of the same type2
template<typename T, typename Alloc>2
void swap(basic_strong_ref<T, Alloc>& a, basic_strong_ref<T, Alloc>& b) noexcept;2
2
/**2
 * Retrieve the plain reference from a plain reference.2
 */2
template<typename T>2
enable_if_t<IsPlainJniReference<T>(), T> getPlainJniReference(T ref);2
2
/**2
 * Retrieve the plain reference from an alias reference.2
 */2
template<typename T>2
JniType<T> getPlainJniReference(alias_ref<T> ref);2
2
/**2
 * Retrieve the plain JNI reference from any reference owned reference.2
 */2
template<typename T, typename Alloc>2
JniType<T> getPlainJniReference(const base_owned_ref<T, Alloc>& ref);2
2
class JObject;2
class JClass;2
2
namespace detail {2
2
template <typename T, typename Enable = void>2
struct HasJniRefRepr : std::false_type {};2
2
template <typename T>2
struct HasJniRefRepr<T, typename std::enable_if<!std::is_same<typename T::JniRefRepr, void>::value, void>::type> : std::true_type {2
  using type = typename T::JniRefRepr;2
};2
2
template <typename T>2
struct RefReprType<T*> {2
  using type = typename std::conditional<HasJniRefRepr<T>::value, typename HasJniRefRepr<T>::type, JObjectWrapper<T*>>::type;2
  static_assert(std::is_base_of<JObject, type>::value,2
      "Repr type missing JObject base.");2
  static_assert(std::is_same<type, typename RefReprType<type>::type>::value,2
      "RefReprType<T> not idempotent");2
};2
2
template <typename T>2
struct RefReprType<T, typename std::enable_if<std::is_base_of<JObject, T>::value, void>::type> {2
  using type = T;2
  static_assert(std::is_base_of<JObject, type>::value,2
      "Repr type missing JObject base.");2
  static_assert(std::is_same<type, typename RefReprType<type>::type>::value,2
      "RefReprType<T> not idempotent");2
};2
2
template <typename T>2
struct JavaObjectType {2
  using type = typename RefReprType<T>::type::javaobject;2
  static_assert(IsPlainJniReference<type>(),2
      "JavaObjectType<T> not a plain jni reference");2
  static_assert(std::is_same<type, typename JavaObjectType<type>::type>::value,2
      "JavaObjectType<T> not idempotent");2
};2
2
template <typename T>2
struct JavaObjectType<JObjectWrapper<T>> {2
  using type = T;2
  static_assert(IsPlainJniReference<type>(),2
      "JavaObjectType<T> not a plain jni reference");2
  static_assert(std::is_same<type, typename JavaObjectType<type>::type>::value,2
      "JavaObjectType<T> not idempotent");2
};2
2
template <typename T>2
struct JavaObjectType<T*> {2
  using type = T*;2
  static_assert(IsPlainJniReference<type>(),2
      "JavaObjectType<T> not a plain jni reference");2
  static_assert(std::is_same<type, typename JavaObjectType<type>::type>::value,2
      "JavaObjectType<T> not idempotent");2
};2
2
template <typename Repr>2
struct ReprStorage {2
  explicit ReprStorage(JniType<Repr> obj) noexcept;2
2
  void set(JniType<Repr> obj) noexcept;2
2
  Repr& get() noexcept;2
  const Repr& get() const noexcept;2
  JniType<Repr> jobj() const noexcept;2
2
  void swap(ReprStorage& other) noexcept;2
 private:2
  ReprStorage() = delete;2
  ReprStorage(const ReprStorage&) = delete;2
  ReprStorage(ReprStorage&&) = delete;2
  ReprStorage& operator=(const ReprStorage&) = delete;2
  ReprStorage& operator=(ReprStorage&&) = delete;2
2
  using Storage = typename std::aligned_storage<sizeof(JObjectBase), alignof(JObjectBase)>::type;2
  Storage storage_;2
};2
2
} // namespace detail2
2
/**2
 * Create a new local reference from an existing reference2
 *2
 * @param ref a plain JNI, alias, or strong reference2
 * @return an owned local reference (referring to null if the input does)2
 * @throws std::bad_alloc if the JNI reference could not be created2
 */2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), local_ref<plain_jni_reference_t<T>>>2
make_local(const T& r);2
2
/**2
 * Create a new global reference from an existing reference2
 *2
 * @param ref a plain JNI, alias, or strong reference2
 * @return an owned global reference (referring to null if the input does)2
 * @throws std::bad_alloc if the JNI reference could not be created2
 */2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), global_ref<plain_jni_reference_t<T>>>2
make_global(const T& r);2
2
/**2
 * Create a new weak global reference from an existing reference2
 *2
 * @param ref a plain JNI, alias, or strong reference2
 * @return an owned weak global reference (referring to null if the input does)2
 * @throws std::bad_alloc if the returned reference is null2
 */2
template<typename T>2
enable_if_t<IsNonWeakReference<T>(), weak_ref<plain_jni_reference_t<T>>>2
make_weak(const T& r);2
2
/**2
 * Compare two references to see if they refer to the same object2
 */2
template<typename T1, typename T2>2
enable_if_t<IsNonWeakReference<T1>() && IsNonWeakReference<T2>(), bool>2
operator==(const T1& a, const T2& b);2
2
/**2
 * Compare two references to see if they don't refer to the same object2
 */2
template<typename T1, typename T2>2
enable_if_t<IsNonWeakReference<T1>() && IsNonWeakReference<T2>(), bool>2
operator!=(const T1& a, const T2& b);2
2
template<typename T, typename Alloc>2
class base_owned_ref {2
 public:2
  using javaobject = JniType<T>;2
2
  /**2
   * Release the ownership and set the reference to null. Thus no deleter is invoked.2
   * @return Returns the reference2
   */2
  javaobject release() noexcept;2
2
  /**2
   * Reset the reference to refer to nullptr.2
   */2
  void reset() noexcept;2
2
 protected:2
  using Repr = ReprType<T>;2
  detail::ReprStorage<Repr> storage_;2
2
  javaobject get() const noexcept;2
  void set(javaobject ref) noexcept;2
2
  /*2
   * Wrap an existing reference and transfers its ownership to the newly created unique reference.2
   * NB! Does not create a new reference2
   */2
  explicit base_owned_ref(javaobject reference) noexcept;2
2
  /// Create a null reference2
  base_owned_ref() noexcept;2
2
  /// Create a null reference2
  explicit base_owned_ref(std::nullptr_t) noexcept;2
2
  /// Copy constructor (note creates a new reference)2
  base_owned_ref(const base_owned_ref& other);2
  template<typename U>2
  base_owned_ref(const base_owned_ref<U, Alloc>& other);2
2
  /// Transfers ownership of an underlying reference from one unique reference to another2
  base_owned_ref(base_owned_ref&& other) noexcept;2
  template<typename U>2
  base_owned_ref(base_owned_ref<U, Alloc>&& other) noexcept;2
2
  /// The delete the underlying reference if applicable2
  ~base_owned_ref() noexcept;2
2
2
  /// Assignment operator (note creates a new reference)2
  base_owned_ref& operator=(const base_owned_ref& other);2
2
  /// Assignment by moving a reference thus not creating a new reference2
  base_owned_ref& operator=(base_owned_ref&& rhs) noexcept;2
2
  void reset(javaobject reference) noexcept;2
2
  friend javaobject jni::getPlainJniReference<>(const base_owned_ref& ref);2
2
  template<typename U, typename UAlloc>2
  friend class base_owned_ref;2
};2
2
2
/**2
 * A smart reference that owns its underlying JNI reference. The class provides basic2
 * functionality to handle a reference but gives no access to it unless the reference is2
 * released, thus no longer owned. The API is stolen with pride from unique_ptr and the2
 * semantics should be basically the same. This class should not be used directly, instead use2
 * @ref weak_ref2
 */2
template<typename T>2
class weak_ref : public base_owned_ref<T, WeakGlobalReferenceAllocator> {2
 public:2
  using javaobject = JniType<T>;2
2
  using Allocator = WeakGlobalReferenceAllocator;2
2
  // This inherits non-default, non-copy, non-move ctors.2
  using base_owned_ref<T, Allocator>::base_owned_ref;2
2
  /// Create a null reference2
  weak_ref() noexcept2
    : base_owned_ref<T, Allocator>{} {}2
2
  /// Create a null reference2
  explicit weak_ref(std::nullptr_t) noexcept2
    : base_owned_ref<T, Allocator>{nullptr} {}2
2
  /// Copy constructor (note creates a new reference)2
  weak_ref(const weak_ref& other)2
    : base_owned_ref<T, Allocator>{other} {}2
2
  // This needs to be explicit to change its visibility.2
  template<typename U>2
  weak_ref(const weak_ref<U>& other)2
    : base_owned_ref<T, Allocator>{other} {}2
2
  /// Transfers ownership of an underlying reference from one unique reference to another2
  weak_ref(weak_ref&& other) noexcept2
    : base_owned_ref<T, Allocator>{std::move(other)} {}2
2
2
  /// Assignment operator (note creates a new reference)2
  weak_ref& operator=(const weak_ref& other);2
2
  /// Assignment by moving a reference thus not creating a new reference2
  weak_ref& operator=(weak_ref&& rhs) noexcept;2
2
  // Creates an owned local reference to the referred object or to null if the object is reclaimed2
  local_ref<T> lockLocal() const;2
2
  // Creates an owned global reference to the referred object or to null if the object is reclaimed2
  global_ref<T> lockGlobal() const;2
2
 private:2
  // get/release/reset on weak_ref are not exposed to users.2
  using base_owned_ref<T, Allocator>::get;2
  using base_owned_ref<T, Allocator>::release;2
  using base_owned_ref<T, Allocator>::reset;2
  /*2
   * Wrap an existing reference and transfers its ownership to the newly created unique reference.2
   * NB! Does not create a new reference2
   */2
  explicit weak_ref(javaobject reference) noexcept2
    : base_owned_ref<T, Allocator>{reference} {}2
2
  template<typename T2> friend class weak_ref;2
  friend weak_ref<javaobject> adopt_weak_global<javaobject>(javaobject ref) noexcept;2
  friend void swap<T>(weak_ref& a, weak_ref& b) noexcept;2
};2
2
2
/**2
 * A class representing owned strong references to Java objects. This class2
 * should not be used directly, instead use @ref local_ref, or @ref global_ref.2
 */2
template<typename T, typename Alloc>2
class basic_strong_ref : public base_owned_ref<T, Alloc> {2
  using typename base_owned_ref<T, Alloc>::Repr;2
 public:2
  using javaobject = JniType<T>;2
2
  using Allocator = Alloc;2
2
  // This inherits non-default, non-copy, non-move ctors.2
  using base_owned_ref<T, Alloc>::base_owned_ref;2
  using base_owned_ref<T, Alloc>::release;2
  using base_owned_ref<T, Alloc>::reset;2
2
  /// Create a null reference2
  basic_strong_ref() noexcept2
    : base_owned_ref<T, Alloc>{} {}2
2
  /// Create a null reference2
  explicit basic_strong_ref(std::nullptr_t) noexcept2
    : base_owned_ref<T, Alloc>{nullptr} {}2
2
  /// Copy constructor (note creates a new reference)2
  basic_strong_ref(const basic_strong_ref& other)2
    : base_owned_ref<T, Alloc>{other} {}2
2
  // This needs to be explicit to change its visibility.2
  template<typename U>2
  basic_strong_ref(const basic_strong_ref<U, Alloc>& other)2
    : base_owned_ref<T, Alloc>{other} {}2
2
  /// Transfers ownership of an underlying reference from one unique reference to another2
  basic_strong_ref(basic_strong_ref&& other) noexcept2
    : base_owned_ref<T, Alloc>{std::move(other)} {}2
2
  /// Assignment operator (note creates a new reference)2
  basic_strong_ref& operator=(const basic_strong_ref& other);2
2
  /// Assignment by moving a reference thus not creating a new reference2
  basic_strong_ref& operator=(basic_strong_ref&& rhs) noexcept;2
2
  /// Get the plain JNI reference2
  using base_owned_ref<T, Allocator>::get;2
2
  /// Release the ownership of the reference and return the wrapped reference in an alias2
  alias_ref<T> releaseAlias() noexcept;2
2
  /// Checks if the reference points to a non-null object2
  explicit operator bool() const noexcept;2
2
  /// Access the functionality provided by the object wrappers2
  Repr* operator->() noexcept;2
2
  /// Access the functionality provided by the object wrappers2
  const Repr* operator->() const noexcept;2
2
  /// Provide a reference to the underlying wrapper (be sure that it is non-null before invoking)2
  Repr& operator*() noexcept;2
2
  /// Provide a const reference to the underlying wrapper (be sure that it is non-null2
  /// before invoking)2
  const Repr& operator*() const noexcept;2
2
 private:2
2
  using base_owned_ref<T, Alloc>::storage_;2
2
  /*2
   * Wrap an existing reference and transfers its ownership to the newly created unique reference.2
   * NB! Does not create a new reference2
   */2
  explicit basic_strong_ref(javaobject reference) noexcept2
    : base_owned_ref<T, Alloc>{reference} {}2
2
2
  friend local_ref<T> adopt_local<T>(T ref) noexcept;2
  friend global_ref<T> adopt_global<T>(T ref) noexcept;2
  friend void swap<T, Alloc>(basic_strong_ref& a, basic_strong_ref& b) noexcept;2
};2
2
2
template<typename T>2
enable_if_t<IsPlainJniReference<T>(), alias_ref<T>> wrap_alias(T ref) noexcept;2
2
/// Swaps to alias reference of the same type2
template<typename T>2
void swap(alias_ref<T>& a, alias_ref<T>& b) noexcept;2
2
/**2
 * A non-owning variant of the smart references (a dumb reference). These references still provide2
 * access to the functionality of the @ref JObjectWrapper specializations including exception2
 * handling and ease of use. Use this representation when you don't want to claim ownership of the2
 * underlying reference (compare to using raw pointers instead of smart pointers.) For symmetry use2
 * @ref alias_ref instead of this class.2
 */2
template<typename T>2
class alias_ref {2
  using Repr = ReprType<T>;2
2
 public:2
  using javaobject = JniType<T>;2
2
  /// Create a null reference2
  alias_ref() noexcept;2
2
  /// Create a null reference2
  alias_ref(std::nullptr_t) noexcept;2
2
  /// Copy constructor2
  alias_ref(const alias_ref& other) noexcept;2
2
  /// Wrap an existing plain JNI reference2
  /* implicit */ alias_ref(javaobject ref) noexcept;2
2
  /// Wrap an existing smart reference of any type convertible to T2
  template<2
    typename TOther,2
    typename = enable_if_t<2
      IsConvertible<JniType<TOther>, javaobject>(), T>2
    >2
  alias_ref(alias_ref<TOther> other) noexcept;2
2
  /// Wrap an existing alias reference of a type convertible to T2
  template<2
    typename TOther,2
    typename AOther,2
    typename = enable_if_t<2
      IsConvertible<JniType<TOther>, javaobject>(), T>2
    >2
  alias_ref(const basic_strong_ref<TOther, AOther>& other) noexcept;2
2
  /// Assignment operator2
  alias_ref& operator=(alias_ref other) noexcept;2
2
  /// Checks if the reference points to a non-null object2
  explicit operator bool() const noexcept;2
2
  /// Converts back to a plain JNI reference2
  javaobject get() const noexcept;2
2
  /// Access the functionality provided by the object wrappers2
  Repr* operator->() noexcept;2
2
  /// Access the functionality provided by the object wrappers2
  const Repr* operator->() const noexcept;2
2
  /// Provide a guaranteed non-null reference (be sure that it is non-null before invoking)2
  Repr& operator*() noexcept;2
2
  /// Provide a guaranteed non-null reference (be sure that it is non-null before invoking)2
  const Repr& operator*() const noexcept;2
2
 private:2
  void set(javaobject ref) noexcept;2
2
  detail::ReprStorage<Repr> storage_;2
2
  friend void swap<T>(alias_ref& a, alias_ref& b) noexcept;2
};2
2
2
/**2
 * RAII object to create a local JNI frame, using PushLocalFrame/PopLocalFrame.2
 *2
 * This is useful when you have a call which is initiated from C++-land, and therefore2
 * doesn't automatically get a local JNI frame managed for you by the JNI framework.2
 */2
class FBEXPORT JniLocalScope {2
public:2
  JniLocalScope(JNIEnv* p_env, jint capacity);2
  ~JniLocalScope();2
2
private:2
  JNIEnv* env_;2
  bool hasFrame_;2
};2
2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), local_ref<T>>2
static_ref_cast(const local_ref<U>& ref) noexcept;2
2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), global_ref<T>>2
static_ref_cast(const global_ref<U>& ref) noexcept;2
2
template<typename T, typename U>2
enable_if_t<IsPlainJniReference<T>(), alias_ref<T>>2
static_ref_cast(const alias_ref<U>& ref) noexcept;2
2
template<typename T, typename RefType>2
auto dynamic_ref_cast(const RefType& ref) ->2
enable_if_t<IsPlainJniReference<T>(), decltype(static_ref_cast<T>(ref))> ;2
2
}}2
2
#include "References-inl.h"2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include "Exceptions.h"2
#include "Hybrid.h"2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
#ifdef __i386__2
// X86 ABI forces 16 byte stack allignment on calls. Unfortunately2
// sometimes Dalvik chooses not to obey the ABI:2
// - https://code.google.com/p/android/issues/detail?id=610122
// - https://android.googlesource.com/platform/ndk/+/81696d2%5E!/2
// Therefore, we tell the compiler to re-align the stack on entry2
// to our JNI functions.2
#define JNI_ENTRY_POINT __attribute__((force_align_arg_pointer))2
#else2
#define JNI_ENTRY_POINT2
#endif2
2
// registration wrapper for legacy JNI-style functions2
2
template<typename F, F func, typename C, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(void (*)(JNIEnv*, C, Args... args)) {2
  struct funcWrapper {2
    JNI_ENTRY_POINT static void call(JNIEnv* env, jobject obj, Args... args) {2
      // Note that if func was declared noexcept, then both gcc and clang are smart2
      // enough to elide the try/catch.2
      try {2
        (*func)(env, static_cast<C>(obj), args...);2
      } catch (...) {2
        translatePendingCppExceptionToJavaException();2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
template<typename F, F func, typename C, typename R, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(R (*)(JNIEnv*, C, Args... args)) {2
  struct funcWrapper {2
    JNI_ENTRY_POINT static R call(JNIEnv* env, jobject obj, Args... args) {2
      try {2
        return (*func)(env, static_cast<JniType<C>>(obj), args...);2
      } catch (...) {2
        translatePendingCppExceptionToJavaException();2
        return R{};2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
// registration wrappers for functions, with autoconversion of arguments.2
2
template<typename F, F func, typename C, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(void (*)(alias_ref<C>, Args... args)) {2
  struct funcWrapper {2
    JNI_ENTRY_POINT static void call(JNIEnv*, jobject obj,2
                                     typename Convert<typename std::decay<Args>::type>::jniType... args) {2
      try {2
        (*func)(static_cast<JniType<C>>(obj), Convert<typename std::decay<Args>::type>::fromJni(args)...);2
      } catch (...) {2
        translatePendingCppExceptionToJavaException();2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
template<typename F, F func, typename C, typename R, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(R (*)(alias_ref<C>, Args... args)) {2
  struct funcWrapper {2
2
    JNI_ENTRY_POINT static typename Convert<typename std::decay<R>::type>::jniType call(JNIEnv*, jobject obj,2
                                       typename Convert<typename std::decay<Args>::type>::jniType... args) {2
      try {2
        return Convert<typename std::decay<R>::type>::toJniRet(2
          (*func)(static_cast<JniType<C>>(obj), Convert<typename std::decay<Args>::type>::fromJni(args)...));2
      } catch (...) {2
        using jniRet = typename Convert<typename std::decay<R>::type>::jniType;2
        translatePendingCppExceptionToJavaException();2
        return jniRet{};2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
// registration wrappers for non-static methods, with autoconvertion of arguments.2
2
template<typename M, M method, typename C, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(void (C::*method0)(Args... args)) {2
  struct funcWrapper {2
    JNI_ENTRY_POINT static void call(JNIEnv* env, jobject obj,2
                                     typename Convert<typename std::decay<Args>::type>::jniType... args) {2
      try {2
        try {2
          auto aref = wrap_alias(static_cast<typename C::jhybridobject>(obj));2
          // This is usually a noop, but if the hybrid object is a2
          // base class of other classes which register JNI methods,2
          // this will get the right type for the registered method.2
          auto cobj = static_cast<C*>(facebook::jni::cthis(aref));2
          (cobj->*method)(Convert<typename std::decay<Args>::type>::fromJni(args)...);2
        } catch (const std::exception& ex) {2
          C::mapException(ex);2
          throw;2
        }2
      } catch (...) {2
        translatePendingCppExceptionToJavaException();2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
template<typename M, M method, typename C, typename R, typename... Args>2
inline NativeMethodWrapper* exceptionWrapJNIMethod(R (C::*method0)(Args... args)) {2
  struct funcWrapper {2
2
    JNI_ENTRY_POINT static typename Convert<typename std::decay<R>::type>::jniType call(JNIEnv* env, jobject obj,2
                                       typename Convert<typename std::decay<Args>::type>::jniType... args) {2
      try {2
        try {2
          auto aref = wrap_alias(static_cast<typename C::jhybridobject>(obj));2
          // This is usually a noop, but if the hybrid object is a2
          // base class of other classes which register JNI methods,2
          // this will get the right type for the registered method.2
          auto cobj = static_cast<C*>(facebook::jni::cthis(aref));2
          return Convert<typename std::decay<R>::type>::toJniRet(2
            (cobj->*method)(Convert<typename std::decay<Args>::type>::fromJni(args)...));2
        } catch (const std::exception& ex) {2
          C::mapException(ex);2
          throw;2
        }2
      } catch (...) {2
        using jniRet = typename Convert<typename std::decay<R>::type>::jniType;2
        translatePendingCppExceptionToJavaException();2
        return jniRet{};2
      }2
    }2
  };2
2
  // This intentionally erases the real type; JNI will do it anyway2
  return reinterpret_cast<NativeMethodWrapper*>(&(funcWrapper::call));2
}2
2
template<typename R, typename C, typename... Args>2
inline std::string makeDescriptor(R (*)(JNIEnv*, C, Args... args)) {2
  return jmethod_traits<R(Args...)>::descriptor();2
}2
2
template<typename R, typename C, typename... Args>2
inline std::string makeDescriptor(R (*)(alias_ref<C>, Args... args)) {2
  return jmethod_traits_from_cxx<R(Args...)>::descriptor();2
}2
2
template<typename R, typename C, typename... Args>2
inline std::string makeDescriptor(R (C::*)(Args... args)) {2
  return jmethod_traits_from_cxx<R(Args...)>::descriptor();2
}2
2
}2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
#include "References.h"2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
// This uses the real JNI function as a non-type template parameter to2
// cause a (static member) function to exist with the same signature,2
// but with try/catch exception translation.2
template<typename F, F func, typename C, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(void (*func0)(JNIEnv*, jobject, Args... args));2
2
// Same as above, but for non-void return types.2
template<typename F, F func, typename C, typename R, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(R (*func0)(JNIEnv*, jobject, Args... args));2
2
// Automatically wrap object argument, and don't take env explicitly.2
template<typename F, F func, typename C, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(void (*func0)(alias_ref<C>, Args... args));2
2
// Automatically wrap object argument, and don't take env explicitly,2
// non-void return type.2
template<typename F, F func, typename C, typename R, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(R (*func0)(alias_ref<C>, Args... args));2
2
// Extract C++ instance from object, and invoke given method on it.2
template<typename M, M method, typename C, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(void (C::*method0)(Args... args));2
2
// Extract C++ instance from object, and invoke given method on it,2
// non-void return type2
template<typename M, M method, typename C, typename R, typename... Args>2
NativeMethodWrapper* exceptionWrapJNIMethod(R (C::*method0)(Args... args));2
2
// This uses deduction to figure out the descriptor name if the types2
// are primitive or have JObjectWrapper specializations.2
template<typename R, typename C, typename... Args>2
std::string makeDescriptor(R (*func)(JNIEnv*, C, Args... args));2
2
// This uses deduction to figure out the descriptor name if the types2
// are primitive or have JObjectWrapper specializations.2
template<typename R, typename C, typename... Args>2
std::string makeDescriptor(R (*func)(alias_ref<C>, Args... args));2
2
// This uses deduction to figure out the descriptor name if the types2
// are primitive or have JObjectWrapper specializations.2
template<typename R, typename C, typename... Args>2
std::string makeDescriptor(R (C::*method0)(Args... args));2
2
}2
2
// We have to use macros here, because the func needs to be used2
// as both a decltype expression argument and as a non-type template2
// parameter, since C++ provides no way for translateException2
// to deduce the type of its non-type template parameter.2
// The empty string in the macros below ensures that name2
// is always a string literal (because that syntax is only2
// valid when name is a string literal).2
#define makeNativeMethod2(name, func)                                   \2
  { name "", ::facebook::jni::detail::makeDescriptor(&func),            \2
      ::facebook::jni::detail::exceptionWrapJNIMethod<decltype(&func), &func>(&func) }2
2
#define makeNativeMethod3(name, desc, func)                             \2
  { name "", desc,                                                      \2
      ::facebook::jni::detail::exceptionWrapJNIMethod<decltype(&func), &func>(&func) }2
2
// Variadic template hacks to get macros with different numbers of2
// arguments. Usage instructions are in CoreClasses.h.2
#define makeNativeMethodN(a, b, c, count, ...) makeNativeMethod ## count2
#define makeNativeMethod(...) makeNativeMethodN(__VA_ARGS__, 3, 2)(__VA_ARGS__)2
2
}}2
2
#include "Registration-inl.h"2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <type_traits>2
2
#include "References-forward.h"2
2
namespace facebook {2
namespace jni {2
2
/// Generic std::enable_if helper2
template<bool B, typename T>2
using enable_if_t = typename std::enable_if<B, T>::type;2
2
/// Generic std::is_convertible helper2
template<typename From, typename To>2
constexpr bool IsConvertible() {2
  return std::is_convertible<From, To>::value;2
}2
2
template<template<typename...> class TT, typename T>2
struct is_instantiation_of : std::false_type {};2
2
template<template<typename...> class TT, typename... Ts>2
struct is_instantiation_of<TT, TT<Ts...>> : std::true_type {};2
2
template<template<typename...> class TT, typename... Ts>2
constexpr bool IsInstantiationOf() {2
  return is_instantiation_of<TT, Ts...>::value;2
}2
2
/// Metafunction to determine whether a type is a JNI reference or not2
template<typename T>2
struct is_plain_jni_reference :2
  std::integral_constant<bool,2
      std::is_pointer<T>::value &&2
      std::is_base_of<2
        typename std::remove_pointer<jobject>::type,2
        typename std::remove_pointer<T>::type>::value> {};2
2
/// Helper to simplify use of is_plain_jni_reference2
template<typename T>2
constexpr bool IsPlainJniReference() {2
  return is_plain_jni_reference<T>::value;2
}2
2
/// Metafunction to determine whether a type is a primitive JNI type or not2
template<typename T>2
struct is_jni_primitive :2
  std::integral_constant<bool,2
    std::is_same<jboolean, T>::value ||2
    std::is_same<jbyte, T>::value ||2
    std::is_same<jchar, T>::value ||2
    std::is_same<jshort, T>::value ||2
    std::is_same<jint, T>::value ||2
    std::is_same<jlong, T>::value ||2
    std::is_same<jfloat, T>::value ||2
    std::is_same<jdouble, T>::value> {};2
2
/// Helper to simplify use of is_jni_primitive2
template<typename T>2
constexpr bool IsJniPrimitive() {2
  return is_jni_primitive<T>::value;2
}2
2
/// Metafunction to determine whether a type is a JNI array of primitives or not2
template <typename T>2
struct is_jni_primitive_array :2
  std::integral_constant<bool,2
    std::is_same<jbooleanArray, T>::value ||2
    std::is_same<jbyteArray, T>::value ||2
    std::is_same<jcharArray, T>::value ||2
    std::is_same<jshortArray, T>::value ||2
    std::is_same<jintArray, T>::value ||2
    std::is_same<jlongArray, T>::value ||2
    std::is_same<jfloatArray, T>::value ||2
    std::is_same<jdoubleArray, T>::value> {};2
2
/// Helper to simplify use of is_jni_primitive_array2
template <typename T>2
constexpr bool IsJniPrimitiveArray() {2
  return is_jni_primitive_array<T>::value;2
}2
2
/// Metafunction to determine if a type is a scalar (primitive or reference) JNI type2
template<typename T>2
struct is_jni_scalar :2
  std::integral_constant<bool,2
    is_plain_jni_reference<T>::value ||2
    is_jni_primitive<T>::value> {};2
2
/// Helper to simplify use of is_jni_scalar2
template<typename T>2
constexpr bool IsJniScalar() {2
  return is_jni_scalar<T>::value;2
}2
2
// Metafunction to determine if a type is a JNI type2
template<typename T>2
struct is_jni_type :2
  std::integral_constant<bool,2
    is_jni_scalar<T>::value ||2
    std::is_void<T>::value> {};2
2
/// Helper to simplify use of is_jni_type2
template<typename T>2
constexpr bool IsJniType() {2
  return is_jni_type<T>::value;2
}2
2
template<typename T>2
struct is_non_weak_reference :2
  std::integral_constant<bool,2
    IsPlainJniReference<T>() ||2
    IsInstantiationOf<basic_strong_ref, T>() ||2
    IsInstantiationOf<alias_ref, T>()> {};2
2
template<typename T>2
constexpr bool IsNonWeakReference() {2
  return is_non_weak_reference<T>::value;2
}2
2
template<typename T>2
struct is_any_reference :2
  std::integral_constant<bool,2
    IsPlainJniReference<T>() ||2
    IsInstantiationOf<weak_ref, T>() ||2
    IsInstantiationOf<basic_strong_ref, T>() ||2
    IsInstantiationOf<alias_ref, T>()> {};2
2
template<typename T>2
constexpr bool IsAnyReference() {2
  return is_any_reference<T>::value;2
}2
2
template<typename T>2
struct reference_traits {2
  using plain_jni_reference_t = JniType<T>;2
  static_assert(IsPlainJniReference<plain_jni_reference_t>(), "Need a plain JNI reference");2
};2
2
template<template <typename...> class R, typename T, typename... A>2
struct reference_traits<R<T, A...>> {2
  using plain_jni_reference_t = JniType<T>;2
  static_assert(IsPlainJniReference<plain_jni_reference_t>(), "Need a plain JNI reference");2
};2
2
template<typename T>2
using plain_jni_reference_t = typename reference_traits<T>::plain_jni_reference_t;2
2
} // namespace jni2
} // namespace facebook2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
2
#include <fb/Countable.h>2
#include <fb/RefPtr.h>2
#include <fb/visibility.h>2
2
namespace facebook {2
namespace jni {2
2
FBEXPORT const RefPtr<Countable>& countableFromJava(JNIEnv* env, jobject obj);2
2
template <typename T> RefPtr<T> extractRefPtr(JNIEnv* env, jobject obj) {2
  return static_cast<RefPtr<T>>(countableFromJava(env, obj));2
}2
2
template <typename T> RefPtr<T> extractPossiblyNullRefPtr(JNIEnv* env, jobject obj) {2
  return obj ? extractRefPtr<T>(env, obj) : nullptr;2
}2
2
FBEXPORT void setCountableForJava(JNIEnv* env, jobject obj, RefPtr<Countable>&& countable);2
2
void CountableOnLoad(JNIEnv* env);2
2
} }2
2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <memory>2
#include <type_traits>2
2
#include <jni.h>2
2
#include <fb/Environment.h>2
2
namespace facebook { namespace jni {2
2
template<typename T>2
class GlobalReference {2
  static_assert(std::is_convertible<T, jobject>::value,2
                "GlobalReference<T> instantiated with type that is not "2
                "convertible to jobject");2
2
 public:2
  explicit GlobalReference(T globalReference) :2
    reference_(globalReference? Environment::current()->NewGlobalRef(globalReference) : nullptr) {2
  }2
2
  ~GlobalReference() {2
    reset();2
  }2
2
  GlobalReference() :2
    reference_(nullptr) {2
  }2
2
  // enable move constructor and assignment2
  GlobalReference(GlobalReference&& rhs) :2
    reference_(std::move(rhs.reference_)) {2
    rhs.reference_ = nullptr;2
  }2
2
  GlobalReference& operator=(GlobalReference&& rhs) {2
    if (this != &rhs) {2
      reset();2
      reference_ = std::move(rhs.reference_);2
      rhs.reference_ = nullptr;2
    }2
    return *this;2
  }2
2
  GlobalReference(const GlobalReference<T>& rhs) :2
    reference_{} {2
    reset(rhs.get());2
  }2
2
  GlobalReference& operator=(const GlobalReference<T>& rhs) {2
    if (this == &rhs) {2
      return *this;2
    }2
    reset(rhs.get());2
    return *this;2
  }2
2
  explicit operator bool() const {2
    return (reference_ != nullptr);2
  }2
2
  T get() const {2
    return reinterpret_cast<T>(reference_);2
  }2
2
  void reset(T globalReference = nullptr) {2
    if (reference_) {2
      Environment::current()->DeleteGlobalRef(reference_);2
    }2
    if (globalReference) {2
      reference_ = Environment::current()->NewGlobalRef(globalReference);2
    } else {2
      reference_ = nullptr;2
    }2
  }2
2
 private:2
  jobject reference_;2
};2
2
}}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
namespace facebook {2
2
/**2
 * Instructs the JNI environment to throw an exception.2
 *2
 * @param pEnv JNI environment2
 * @param szClassName class name to throw2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwException(JNIEnv* pEnv, const char* szClassName, const char* szFmt, va_list va_args);2
2
/**2
 * Instructs the JNI environment to throw a NoClassDefFoundError.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwNoClassDefError(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw a RuntimeException.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwRuntimeException(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw a IllegalArgumentException.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwIllegalArgumentException(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw a IllegalStateException.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwIllegalStateException(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw an IOException.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwIOException(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw an AssertionError.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwAssertionError(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Instructs the JNI environment to throw an OutOfMemoryError.2
 *2
 * @param pEnv JNI environment2
 * @param szFmt sprintf-style format string2
 * @param ... sprintf-style args2
 * @return 0 on success; a negative value on failure2
 */2
FBEXPORT jint throwOutOfMemoryError(JNIEnv* pEnv, const char* szFmt, ...);2
2
/**2
 * Finds the specified class. If it's not found, instructs the JNI environment to throw an2
 * exception.2
 *2
 * @param pEnv JNI environment2
 * @param szClassName the classname to find in JNI format (e.g. "java/lang/String")2
 * @return the class or NULL if not found (in which case a pending exception will be queued). This2
 *     returns a global reference (JNIEnv::NewGlobalRef).2
 */2
FBEXPORT jclass findClassOrThrow(JNIEnv *pEnv, const char* szClassName);2
2
/**2
 * Finds the specified field of the specified class. If it's not found, instructs the JNI2
 * environment to throw an exception.2
 *2
 * @param pEnv JNI environment2
 * @param clazz the class to lookup the field in2
 * @param szFieldName the name of the field to find2
 * @param szSig the signature of the field2
 * @return the field or NULL if not found (in which case a pending exception will be queued)2
 */2
FBEXPORT jfieldID getFieldIdOrThrow(JNIEnv* pEnv, jclass clazz, const char* szFieldName, const char* szSig);2
2
/**2
 * Finds the specified method of the specified class. If it's not found, instructs the JNI2
 * environment to throw an exception.2
 *2
 * @param pEnv JNI environment2
 * @param clazz the class to lookup the method in2
 * @param szMethodName the name of the method to find2
 * @param szSig the signature of the method2
 * @return the method or NULL if not found (in which case a pending exception will be queued)2
 */2
FBEXPORT jmethodID getMethodIdOrThrow(2
    JNIEnv* pEnv,2
    jclass clazz,2
    const char* szMethodName,2
    const char* szSig);2
2
} // namespace facebook2
2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <memory>2
#include <type_traits>2
2
#include <jni.h>2
2
#include <fb/Environment.h>2
2
namespace facebook {2
namespace jni {2
2
template<class T>2
struct LocalReferenceDeleter {2
  static_assert(std::is_convertible<T, jobject>::value,2
    "LocalReferenceDeleter<T> instantiated with type that is not convertible to jobject");2
  void operator()(T localReference) {2
    if (localReference != nullptr) {2
      Environment::current()->DeleteLocalRef(localReference);2
    }2
  } 2
 };2
2
template<class T>2
using LocalReference =2
  std::unique_ptr<typename std::remove_pointer<T>::type, LocalReferenceDeleter<T>>;2
2
} }2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <string>2
2
#include <jni.h>2
2
#include <fb/visibility.h>2
2
namespace facebook {2
namespace jni {2
2
namespace detail {2
2
void utf8ToModifiedUTF8(const uint8_t* bytes, size_t len, uint8_t* modified, size_t modifiedLength);2
size_t modifiedLength(const std::string& str);2
size_t modifiedLength(const uint8_t* str, size_t* length);2
std::string modifiedUTF8ToUTF8(const uint8_t* modified, size_t len) noexcept;2
std::string utf16toUTF8(const uint16_t* utf16Bytes, size_t len) noexcept;2
2
}2
2
// JNI represents strings encoded with modified version of UTF-8.  The difference between UTF-8 and2
// Modified UTF-8 is that the latter support only 1-byte, 2-byte, and 3-byte formats. Supplementary2
// character (4 bytes in unicode) needs to be represented in the form of surrogate pairs. To create2
// a Modified UTF-8 surrogate pair that Dalvik would understand we take 4-byte unicode character,2
// encode it with UTF-16 which gives us two 2 byte chars (surrogate pair) and then we encode each2
// pair as UTF-8. This result in 2 x 3 byte characters.  To convert modified UTF-8 to standard2
// UTF-8, this mus tbe reversed.2
//2
// The second difference is that Modified UTF-8 is encoding NUL byte in 2-byte format.2
//2
// In order to avoid complex error handling, only a minimum of validity checking is done to avoid2
// crashing.  If the input is invalid, the output may be invalid as well.2
//2
// Relevant links:2
//  - http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/functions.html2
//  - https://docs.oracle.com/javase/6/docs/api/java/io/DataInput.html#modified-utf-82
2
class FBEXPORT LocalString {2
public:2
  // Assumes UTF8 encoding and make a required convertion to modified UTF-8 when the string2
  // contains unicode supplementary characters.2
  explicit LocalString(const std::string& str);2
  explicit LocalString(const char* str);2
  jstring string() const {2
    return m_string;2
  }2
  ~LocalString();2
private:2
  jstring m_string;2
};2
2
// JString to UTF16 extractor using RAII idiom2
class JStringUtf16Extractor {2
public:2
  JStringUtf16Extractor(JNIEnv* env, jstring javaString)2
  : env_(env)2
  , javaString_(javaString)2
  , utf16String_(nullptr) {2
    if (env_ && javaString_) {2
      utf16String_ = env_->GetStringCritical(javaString_, nullptr);2
    }2
  }2
2
  ~JStringUtf16Extractor() {2
    if (utf16String_) {2
      env_->ReleaseStringCritical(javaString_, utf16String_);2
    }2
  }2
2
  operator const jchar* () const {2
    return utf16String_;2
  }2
2
private:2
  JNIEnv* env_;2
  jstring javaString_;2
  const jchar* utf16String_;2
};2
2
// The string from JNI is converted to standard UTF-8 if the string contains supplementary2
// characters.2
FBEXPORT std::string fromJString(JNIEnv* env, jstring str);2
2
} }2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <jni.h>2
#include <initializer_list>2
#include <fb/assert.h>2
2
namespace facebook {2
namespace jni {2
2
static inline void registerNatives(JNIEnv* env, jclass cls, std::initializer_list<JNINativeMethod> methods) {2
  auto result = env->RegisterNatives(cls, methods.begin(), methods.size());2
  FBASSERT(result == 0);2
}2
2
static inline void registerNatives(JNIEnv* env, const char* cls, std::initializer_list<JNINativeMethod> list) {2
  registerNatives(env, env->FindClass(cls), list);2
}2
2
} }2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
#include <string>2
#include <jni.h>2
#include <fb/noncopyable.h>2
#include <fb/Countable.h>2
#include <fb/visibility.h>2
2
2
namespace facebook {2
namespace jni {2
2
class FBEXPORT WeakReference : public Countable {2
public:2
  typedef RefPtr<WeakReference> Ptr;2
  WeakReference(jobject strongRef);2
  ~WeakReference();2
  jweak weakRef() {2
    return m_weakReference;2
  }2
2
private:2
  jweak m_weakReference;2
};2
2
// This class is intended to take a weak reference and turn it into a strong2
// local reference. Consequently, it should only be allocated on the stack.2
class FBEXPORT ResolvedWeakReference : public noncopyable {2
public:2
  ResolvedWeakReference(jobject weakRef);2
  ResolvedWeakReference(const RefPtr<WeakReference>& weakRef);2
  ~ResolvedWeakReference();2
2
  operator jobject () {2
    return m_strongReference;2
  }2
2
  explicit operator bool () {2
    return m_strongReference != nullptr;2
  }2
2
private:2
  jobject m_strongReference;2
};2
2
} }2
2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
/**2
 * A Java Object that has native memory allocated corresponding to this instance.2
 *2
 * <p>NB: THREAD SAFETY (this comment also exists at Countable.cpp)2
 *2
 * <p>{@link #dispose} deletes the corresponding native object on whatever thread the method is2
 * called on. In the common case when this is called by Countable#finalize(), this will be called on2
 * the system finalizer thread. If you manually call dispose on the Java object, the native object2
 * will be deleted synchronously on that thread.2
 */2
@DoNotStrip2
public class Countable {2
2
  // Private C++ instance2
  @DoNotStrip private long mInstance = 0;2
2
  public native void dispose();2
2
  protected void finalize() throws Throwable {2
    dispose();2
    super.finalize();2
  }2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
@DoNotStrip2
public class CppException extends RuntimeException {2
  @DoNotStrip2
  public CppException(String message) {2
    super(message);2
  }2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
@DoNotStrip2
public class CppSystemErrorException extends CppException {2
  int errorCode;2
2
  @DoNotStrip2
  public CppSystemErrorException(String message, int errorCode) {2
    super(message);2
    this.errorCode = errorCode;2
  }2
2
  public int getErrorCode() {2
    return errorCode;2
  }2
}2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
@DoNotStrip2
public abstract class HybridClassBase extends HybridData {}2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
/**2
 * This object holds a native C++ member for hybrid Java/C++ objects.2
 *2
 * <p>NB: THREAD SAFETY2
 *2
 * <p>{@link #dispose} deletes the corresponding native object on whatever thread the method is2
 * called on. In the common case when this is called by HybridData#finalize(), this will be called2
 * on the system finalizer thread. If you manually call resetNative() on the Java object, the C++2
 * object will be deleted synchronously on that thread.2
 */2
@DoNotStrip2
public class HybridData {2
2
  // Private C++ instance2
  @DoNotStrip private long mNativePointer = 0;2
2
  /**2
   * To explicitly delete the instance, call resetNative(). If the C++ instance is referenced after2
   * this is called, a NullPointerException will be thrown. resetNative() may be called multiple2
   * times safely. Because {@link #finalize} calls resetNative, the instance will not leak if this2
   * is not called, but timing of deletion and the thread the C++ dtor is called on will be at the2
   * whim of the Java GC. If you want to control the thread and timing of the destructor, you should2
   * call resetNative() explicitly.2
   */2
  public native void resetNative();2
2
  protected void finalize() throws Throwable {2
    resetNative();2
    super.finalize();2
  }2
2
  public boolean isValid() {2
    return mNativePointer != 0;2
  }2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
import java.util.Iterator;2
import javax.annotation.Nullable;2
2
/**2
 * To iterate over an Iterator from C++ requires two calls per entry: hasNext() and next(). This2
 * helper reduces it to one call and one field get per entry. It does not use a generic argument,2
 * since in C++, the types will be erased, anyway. This is *not* a {@link java.util.Iterator}.2
 */2
@DoNotStrip2
public class IteratorHelper {2
  private final Iterator mIterator;2
2
  // This is private, but accessed via JNI.2
  @DoNotStrip private @Nullable Object mElement;2
2
  @DoNotStrip2
  public IteratorHelper(Iterator iterator) {2
    mIterator = iterator;2
  }2
2
  @DoNotStrip2
  public IteratorHelper(Iterable iterable) {2
    mIterator = iterable.iterator();2
  }2
2
  /**2
   * Moves the helper to the next entry in the map, if any. Returns true iff there is an entry to2
   * read.2
   */2
  @DoNotStrip2
  boolean hasNext() {2
    if (mIterator.hasNext()) {2
      mElement = mIterator.next();2
      return true;2
    } else {2
      mElement = null;2
      return false;2
    }2
  }2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
import java.util.Iterator;2
import java.util.Map;2
import javax.annotation.Nullable;2
2
/**2
 * To iterate over a Map from C++ requires four calls per entry: hasNext(), next(), getKey(),2
 * getValue(). This helper reduces it to one call and two field gets per entry. It does not use a2
 * generic argument, since in C++, the types will be erased, anyway. This is *not* a {@link2
 * java.util.Iterator}.2
 */2
@DoNotStrip2
public class MapIteratorHelper {2
  @DoNotStrip private final Iterator<Map.Entry> mIterator;2
  @DoNotStrip private @Nullable Object mKey;2
  @DoNotStrip private @Nullable Object mValue;2
2
  @DoNotStrip2
  public MapIteratorHelper(Map map) {2
    mIterator = map.entrySet().iterator();2
  }2
2
  /**2
   * Moves the helper to the next entry in the map, if any. Returns true iff there is an entry to2
   * read.2
   */2
  @DoNotStrip2
  boolean hasNext() {2
    if (mIterator.hasNext()) {2
      Map.Entry entry = mIterator.next();2
      mKey = entry.getKey();2
      mValue = entry.getValue();2
      return true;2
    } else {2
      mKey = null;2
      mValue = null;2
      return false;2
    }2
  }2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
/** A Runnable that has a native run implementation. */2
@DoNotStrip2
public class NativeRunnable implements Runnable {2
2
  private final HybridData mHybridData;2
2
  private NativeRunnable(HybridData hybridData) {2
    mHybridData = hybridData;2
  }2
2
  public native void run();2
}2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
@DoNotStrip2
public class ThreadScopeSupport {2
  // This is just used for ThreadScope::withClassLoader to have a java function2
  // in the stack so that jni has access to the correct classloader.2
  @DoNotStrip2
  private static void runStdFunction(long ptr) {2
    runStdFunctionImpl(ptr);2
  }2
2
  private static native void runStdFunctionImpl(long ptr);2
}2
/*2
 *  Copyright (c) 2015-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
package com.facebook.jni;2
2
import com.facebook.proguard.annotations.DoNotStrip;2
2
@DoNotStrip2
public class UnknownCppException extends CppException {2
  @DoNotStrip2
  public UnknownCppException() {2
    super("Unknown");2
  }2
2
  @DoNotStrip2
  public UnknownCppException(String message) {2
    super(message);2
  }2
}2
/*2
 *  Copyright (c) 2014-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#ifdef __ANDROID__2
#include_next <jni.h>2
#else2
#include "real/jni.h"2
#endif2
/*2
 *  Copyright (c) 2006-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
/*2
 * JNI specification, as defined by Sun:2
 * http://java.sun.com/javase/6/docs/technotes/guides/jni/spec/jniTOC.html2
 *2
 * Everything here is expected to be VM-neutral.2
 */2
2
#ifndef JNI_H_2
#define JNI_H_2
2
#include <stdarg.h>2
#include <stdint.h>2
2
/* Primitive types that match up with Java equivalents. */2
typedef uint8_t  jboolean; /* unsigned 8 bits */2
typedef int8_t   jbyte;    /* signed 8 bits */2
typedef uint16_t jchar;    /* unsigned 16 bits */2
typedef int16_t  jshort;   /* signed 16 bits */2
typedef int32_t  jint;     /* signed 32 bits */2
typedef int64_t  jlong;    /* signed 64 bits */2
typedef float    jfloat;   /* 32-bit IEEE 754 */2
typedef double   jdouble;  /* 64-bit IEEE 754 */2
2
/* "cardinal indices and sizes" */2
typedef jint     jsize;2
2
#ifdef __cplusplus2
/*2
 * Reference types, in C++2
 */2
class _jobject {};2
class _jclass : public _jobject {};2
class _jstring : public _jobject {};2
class _jarray : public _jobject {};2
class _jobjectArray : public _jarray {};2
class _jbooleanArray : public _jarray {};2
class _jbyteArray : public _jarray {};2
class _jcharArray : public _jarray {};2
class _jshortArray : public _jarray {};2
class _jintArray : public _jarray {};2
class _jlongArray : public _jarray {};2
class _jfloatArray : public _jarray {};2
class _jdoubleArray : public _jarray {};2
class _jthrowable : public _jobject {};2
2
typedef _jobject*       jobject;2
typedef _jclass*        jclass;2
typedef _jstring*       jstring;2
typedef _jarray*        jarray;2
typedef _jobjectArray*  jobjectArray;2
typedef _jbooleanArray* jbooleanArray;2
typedef _jbyteArray*    jbyteArray;2
typedef _jcharArray*    jcharArray;2
typedef _jshortArray*   jshortArray;2
typedef _jintArray*     jintArray;2
typedef _jlongArray*    jlongArray;2
typedef _jfloatArray*   jfloatArray;2
typedef _jdoubleArray*  jdoubleArray;2
typedef _jthrowable*    jthrowable;2
typedef _jobject*       jweak;2
2
2
#else /* not __cplusplus */2
2
/*2
 * Reference types, in C.2
 */2
typedef void*           jobject;2
typedef jobject         jclass;2
typedef jobject         jstring;2
typedef jobject         jarray;2
typedef jarray          jobjectArray;2
typedef jarray          jbooleanArray;2
typedef jarray          jbyteArray;2
typedef jarray          jcharArray;2
typedef jarray          jshortArray;2
typedef jarray          jintArray;2
typedef jarray          jlongArray;2
typedef jarray          jfloatArray;2
typedef jarray          jdoubleArray;2
typedef jobject         jthrowable;2
typedef jobject         jweak;2
2
#endif /* not __cplusplus */2
2
struct _jfieldID;                       /* opaque structure */2
typedef struct _jfieldID* jfieldID;     /* field IDs */2
2
struct _jmethodID;                      /* opaque structure */2
typedef struct _jmethodID* jmethodID;   /* method IDs */2
2
struct JNIInvokeInterface;2
2
typedef union jvalue {2
    jboolean    z;2
    jbyte       b;2
    jchar       c;2
    jshort      s;2
    jint        i;2
    jlong       j;2
    jfloat      f;2
    jdouble     d;2
    jobject     l;2
} jvalue;2
2
typedef enum jobjectRefType {2
    JNIInvalidRefType = 0,2
    JNILocalRefType = 1,2
    JNIGlobalRefType = 2,2
    JNIWeakGlobalRefType = 32
} jobjectRefType;2
2
typedef struct {2
    const char* name;2
    const char* signature;2
    void*       fnPtr;2
} JNINativeMethod;2
2
struct _JNIEnv;2
struct _JavaVM;2
typedef const struct JNINativeInterface* C_JNIEnv;2
2
#if defined(__cplusplus)2
typedef _JNIEnv JNIEnv;2
typedef _JavaVM JavaVM;2
#else2
typedef const struct JNINativeInterface* JNIEnv;2
typedef const struct JNIInvokeInterface* JavaVM;2
#endif2
2
/*2
 * Table of interface function pointers.2
 */2
struct JNINativeInterface {2
    void*       reserved0;2
    void*       reserved1;2
    void*       reserved2;2
    void*       reserved3;2
2
    jint        (*GetVersion)(JNIEnv *);2
2
    jclass      (*DefineClass)(JNIEnv*, const char*, jobject, const jbyte*,2
                        jsize);2
    jclass      (*FindClass)(JNIEnv*, const char*);2
2
    jmethodID   (*FromReflectedMethod)(JNIEnv*, jobject);2
    jfieldID    (*FromReflectedField)(JNIEnv*, jobject);2
    /* spec doesn't show jboolean parameter */2
    jobject     (*ToReflectedMethod)(JNIEnv*, jclass, jmethodID, jboolean);2
2
    jclass      (*GetSuperclass)(JNIEnv*, jclass);2
    jboolean    (*IsAssignableFrom)(JNIEnv*, jclass, jclass);2
2
    /* spec doesn't show jboolean parameter */2
    jobject     (*ToReflectedField)(JNIEnv*, jclass, jfieldID, jboolean);2
2
    jint        (*Throw)(JNIEnv*, jthrowable);2
    jint        (*ThrowNew)(JNIEnv *, jclass, const char *);2
    jthrowable  (*ExceptionOccurred)(JNIEnv*);2
    void        (*ExceptionDescribe)(JNIEnv*);2
    void        (*ExceptionClear)(JNIEnv*);2
    void        (*FatalError)(JNIEnv*, const char*);2
2
    jint        (*PushLocalFrame)(JNIEnv*, jint);2
    jobject     (*PopLocalFrame)(JNIEnv*, jobject);2
2
    jobject     (*NewGlobalRef)(JNIEnv*, jobject);2
    void        (*DeleteGlobalRef)(JNIEnv*, jobject);2
    void        (*DeleteLocalRef)(JNIEnv*, jobject);2
    jboolean    (*IsSameObject)(JNIEnv*, jobject, jobject);2
2
    jobject     (*NewLocalRef)(JNIEnv*, jobject);2
    jint        (*EnsureLocalCapacity)(JNIEnv*, jint);2
2
    jobject     (*AllocObject)(JNIEnv*, jclass);2
    jobject     (*NewObject)(JNIEnv*, jclass, jmethodID, ...);2
    jobject     (*NewObjectV)(JNIEnv*, jclass, jmethodID, va_list);2
    jobject     (*NewObjectA)(JNIEnv*, jclass, jmethodID, jvalue*);2
2
    jclass      (*GetObjectClass)(JNIEnv*, jobject);2
    jboolean    (*IsInstanceOf)(JNIEnv*, jobject, jclass);2
    jmethodID   (*GetMethodID)(JNIEnv*, jclass, const char*, const char*);2
2
    jobject     (*CallObjectMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jobject     (*CallObjectMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jobject     (*CallObjectMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jboolean    (*CallBooleanMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jboolean    (*CallBooleanMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jboolean    (*CallBooleanMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jbyte       (*CallByteMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jbyte       (*CallByteMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jbyte       (*CallByteMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jchar       (*CallCharMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jchar       (*CallCharMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jchar       (*CallCharMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jshort      (*CallShortMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jshort      (*CallShortMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jshort      (*CallShortMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jint        (*CallIntMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jint        (*CallIntMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jint        (*CallIntMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jlong       (*CallLongMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jlong       (*CallLongMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jlong       (*CallLongMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jfloat      (*CallFloatMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jfloat      (*CallFloatMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jfloat      (*CallFloatMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    jdouble     (*CallDoubleMethod)(JNIEnv*, jobject, jmethodID, ...);2
    jdouble     (*CallDoubleMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    jdouble     (*CallDoubleMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
    void        (*CallVoidMethod)(JNIEnv*, jobject, jmethodID, ...);2
    void        (*CallVoidMethodV)(JNIEnv*, jobject, jmethodID, va_list);2
    void        (*CallVoidMethodA)(JNIEnv*, jobject, jmethodID, jvalue*);2
2
    jobject     (*CallNonvirtualObjectMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jobject     (*CallNonvirtualObjectMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jobject     (*CallNonvirtualObjectMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jboolean    (*CallNonvirtualBooleanMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jboolean    (*CallNonvirtualBooleanMethodV)(JNIEnv*, jobject, jclass,2
                         jmethodID, va_list);2
    jboolean    (*CallNonvirtualBooleanMethodA)(JNIEnv*, jobject, jclass,2
                         jmethodID, jvalue*);2
    jbyte       (*CallNonvirtualByteMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jbyte       (*CallNonvirtualByteMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jbyte       (*CallNonvirtualByteMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jchar       (*CallNonvirtualCharMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jchar       (*CallNonvirtualCharMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jchar       (*CallNonvirtualCharMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jshort      (*CallNonvirtualShortMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jshort      (*CallNonvirtualShortMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jshort      (*CallNonvirtualShortMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jint        (*CallNonvirtualIntMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jint        (*CallNonvirtualIntMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jint        (*CallNonvirtualIntMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jlong       (*CallNonvirtualLongMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jlong       (*CallNonvirtualLongMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jlong       (*CallNonvirtualLongMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jfloat      (*CallNonvirtualFloatMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jfloat      (*CallNonvirtualFloatMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jfloat      (*CallNonvirtualFloatMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    jdouble     (*CallNonvirtualDoubleMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    jdouble     (*CallNonvirtualDoubleMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    jdouble     (*CallNonvirtualDoubleMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
    void        (*CallNonvirtualVoidMethod)(JNIEnv*, jobject, jclass,2
                        jmethodID, ...);2
    void        (*CallNonvirtualVoidMethodV)(JNIEnv*, jobject, jclass,2
                        jmethodID, va_list);2
    void        (*CallNonvirtualVoidMethodA)(JNIEnv*, jobject, jclass,2
                        jmethodID, jvalue*);2
2
    jfieldID    (*GetFieldID)(JNIEnv*, jclass, const char*, const char*);2
2
    jobject     (*GetObjectField)(JNIEnv*, jobject, jfieldID);2
    jboolean    (*GetBooleanField)(JNIEnv*, jobject, jfieldID);2
    jbyte       (*GetByteField)(JNIEnv*, jobject, jfieldID);2
    jchar       (*GetCharField)(JNIEnv*, jobject, jfieldID);2
    jshort      (*GetShortField)(JNIEnv*, jobject, jfieldID);2
    jint        (*GetIntField)(JNIEnv*, jobject, jfieldID);2
    jlong       (*GetLongField)(JNIEnv*, jobject, jfieldID);2
    jfloat      (*GetFloatField)(JNIEnv*, jobject, jfieldID);2
    jdouble     (*GetDoubleField)(JNIEnv*, jobject, jfieldID);2
2
    void        (*SetObjectField)(JNIEnv*, jobject, jfieldID, jobject);2
    void        (*SetBooleanField)(JNIEnv*, jobject, jfieldID, jboolean);2
    void        (*SetByteField)(JNIEnv*, jobject, jfieldID, jbyte);2
    void        (*SetCharField)(JNIEnv*, jobject, jfieldID, jchar);2
    void        (*SetShortField)(JNIEnv*, jobject, jfieldID, jshort);2
    void        (*SetIntField)(JNIEnv*, jobject, jfieldID, jint);2
    void        (*SetLongField)(JNIEnv*, jobject, jfieldID, jlong);2
    void        (*SetFloatField)(JNIEnv*, jobject, jfieldID, jfloat);2
    void        (*SetDoubleField)(JNIEnv*, jobject, jfieldID, jdouble);2
2
    jmethodID   (*GetStaticMethodID)(JNIEnv*, jclass, const char*, const char*);2
2
    jobject     (*CallStaticObjectMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jobject     (*CallStaticObjectMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jobject     (*CallStaticObjectMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jboolean    (*CallStaticBooleanMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jboolean    (*CallStaticBooleanMethodV)(JNIEnv*, jclass, jmethodID,2
                        va_list);2
    jboolean    (*CallStaticBooleanMethodA)(JNIEnv*, jclass, jmethodID,2
                        jvalue*);2
    jbyte       (*CallStaticByteMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jbyte       (*CallStaticByteMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jbyte       (*CallStaticByteMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jchar       (*CallStaticCharMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jchar       (*CallStaticCharMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jchar       (*CallStaticCharMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jshort      (*CallStaticShortMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jshort      (*CallStaticShortMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jshort      (*CallStaticShortMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jint        (*CallStaticIntMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jint        (*CallStaticIntMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jint        (*CallStaticIntMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jlong       (*CallStaticLongMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jlong       (*CallStaticLongMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jlong       (*CallStaticLongMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jfloat      (*CallStaticFloatMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jfloat      (*CallStaticFloatMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jfloat      (*CallStaticFloatMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    jdouble     (*CallStaticDoubleMethod)(JNIEnv*, jclass, jmethodID, ...);2
    jdouble     (*CallStaticDoubleMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    jdouble     (*CallStaticDoubleMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
    void        (*CallStaticVoidMethod)(JNIEnv*, jclass, jmethodID, ...);2
    void        (*CallStaticVoidMethodV)(JNIEnv*, jclass, jmethodID, va_list);2
    void        (*CallStaticVoidMethodA)(JNIEnv*, jclass, jmethodID, jvalue*);2
2
    jfieldID    (*GetStaticFieldID)(JNIEnv*, jclass, const char*,2
                        const char*);2
2
    jobject     (*GetStaticObjectField)(JNIEnv*, jclass, jfieldID);2
    jboolean    (*GetStaticBooleanField)(JNIEnv*, jclass, jfieldID);2
    jbyte       (*GetStaticByteField)(JNIEnv*, jclass, jfieldID);2
    jchar       (*GetStaticCharField)(JNIEnv*, jclass, jfieldID);2
    jshort      (*GetStaticShortField)(JNIEnv*, jclass, jfieldID);2
    jint        (*GetStaticIntField)(JNIEnv*, jclass, jfieldID);2
    jlong       (*GetStaticLongField)(JNIEnv*, jclass, jfieldID);2
    jfloat      (*GetStaticFloatField)(JNIEnv*, jclass, jfieldID);2
    jdouble     (*GetStaticDoubleField)(JNIEnv*, jclass, jfieldID);2
2
    void        (*SetStaticObjectField)(JNIEnv*, jclass, jfieldID, jobject);2
    void        (*SetStaticBooleanField)(JNIEnv*, jclass, jfieldID, jboolean);2
    void        (*SetStaticByteField)(JNIEnv*, jclass, jfieldID, jbyte);2
    void        (*SetStaticCharField)(JNIEnv*, jclass, jfieldID, jchar);2
    void        (*SetStaticShortField)(JNIEnv*, jclass, jfieldID, jshort);2
    void        (*SetStaticIntField)(JNIEnv*, jclass, jfieldID, jint);2
    void        (*SetStaticLongField)(JNIEnv*, jclass, jfieldID, jlong);2
    void        (*SetStaticFloatField)(JNIEnv*, jclass, jfieldID, jfloat);2
    void        (*SetStaticDoubleField)(JNIEnv*, jclass, jfieldID, jdouble);2
2
    jstring     (*NewString)(JNIEnv*, const jchar*, jsize);2
    jsize       (*GetStringLength)(JNIEnv*, jstring);2
    const jchar* (*GetStringChars)(JNIEnv*, jstring, jboolean*);2
    void        (*ReleaseStringChars)(JNIEnv*, jstring, const jchar*);2
    jstring     (*NewStringUTF)(JNIEnv*, const char*);2
    jsize       (*GetStringUTFLength)(JNIEnv*, jstring);2
    /* JNI spec says this returns const jbyte*, but that's inconsistent */2
    const char* (*GetStringUTFChars)(JNIEnv*, jstring, jboolean*);2
    void        (*ReleaseStringUTFChars)(JNIEnv*, jstring, const char*);2
    jsize       (*GetArrayLength)(JNIEnv*, jarray);2
    jobjectArray (*NewObjectArray)(JNIEnv*, jsize, jclass, jobject);2
    jobject     (*GetObjectArrayElement)(JNIEnv*, jobjectArray, jsize);2
    void        (*SetObjectArrayElement)(JNIEnv*, jobjectArray, jsize, jobject);2
2
    jbooleanArray (*NewBooleanArray)(JNIEnv*, jsize);2
    jbyteArray    (*NewByteArray)(JNIEnv*, jsize);2
    jcharArray    (*NewCharArray)(JNIEnv*, jsize);2
    jshortArray   (*NewShortArray)(JNIEnv*, jsize);2
    jintArray     (*NewIntArray)(JNIEnv*, jsize);2
    jlongArray    (*NewLongArray)(JNIEnv*, jsize);2
    jfloatArray   (*NewFloatArray)(JNIEnv*, jsize);2
    jdoubleArray  (*NewDoubleArray)(JNIEnv*, jsize);2
2
    jboolean*   (*GetBooleanArrayElements)(JNIEnv*, jbooleanArray, jboolean*);2
    jbyte*      (*GetByteArrayElements)(JNIEnv*, jbyteArray, jboolean*);2
    jchar*      (*GetCharArrayElements)(JNIEnv*, jcharArray, jboolean*);2
    jshort*     (*GetShortArrayElements)(JNIEnv*, jshortArray, jboolean*);2
    jint*       (*GetIntArrayElements)(JNIEnv*, jintArray, jboolean*);2
    jlong*      (*GetLongArrayElements)(JNIEnv*, jlongArray, jboolean*);2
    jfloat*     (*GetFloatArrayElements)(JNIEnv*, jfloatArray, jboolean*);2
    jdouble*    (*GetDoubleArrayElements)(JNIEnv*, jdoubleArray, jboolean*);2
2
    void        (*ReleaseBooleanArrayElements)(JNIEnv*, jbooleanArray,2
                        jboolean*, jint);2
    void        (*ReleaseByteArrayElements)(JNIEnv*, jbyteArray,2
                        jbyte*, jint);2
    void        (*ReleaseCharArrayElements)(JNIEnv*, jcharArray,2
                        jchar*, jint);2
    void        (*ReleaseShortArrayElements)(JNIEnv*, jshortArray,2
                        jshort*, jint);2
    void        (*ReleaseIntArrayElements)(JNIEnv*, jintArray,2
                        jint*, jint);2
    void        (*ReleaseLongArrayElements)(JNIEnv*, jlongArray,2
                        jlong*, jint);2
    void        (*ReleaseFloatArrayElements)(JNIEnv*, jfloatArray,2
                        jfloat*, jint);2
    void        (*ReleaseDoubleArrayElements)(JNIEnv*, jdoubleArray,2
                        jdouble*, jint);2
2
    void        (*GetBooleanArrayRegion)(JNIEnv*, jbooleanArray,2
                        jsize, jsize, jboolean*);2
    void        (*GetByteArrayRegion)(JNIEnv*, jbyteArray,2
                        jsize, jsize, jbyte*);2
    void        (*GetCharArrayRegion)(JNIEnv*, jcharArray,2
                        jsize, jsize, jchar*);2
    void        (*GetShortArrayRegion)(JNIEnv*, jshortArray,2
                        jsize, jsize, jshort*);2
    void        (*GetIntArrayRegion)(JNIEnv*, jintArray,2
                        jsize, jsize, jint*);2
    void        (*GetLongArrayRegion)(JNIEnv*, jlongArray,2
                        jsize, jsize, jlong*);2
    void        (*GetFloatArrayRegion)(JNIEnv*, jfloatArray,2
                        jsize, jsize, jfloat*);2
    void        (*GetDoubleArrayRegion)(JNIEnv*, jdoubleArray,2
                        jsize, jsize, jdouble*);2
2
    /* spec shows these without const; some jni.h do, some don't */2
    void        (*SetBooleanArrayRegion)(JNIEnv*, jbooleanArray,2
                        jsize, jsize, const jboolean*);2
    void        (*SetByteArrayRegion)(JNIEnv*, jbyteArray,2
                        jsize, jsize, const jbyte*);2
    void        (*SetCharArrayRegion)(JNIEnv*, jcharArray,2
                        jsize, jsize, const jchar*);2
    void        (*SetShortArrayRegion)(JNIEnv*, jshortArray,2
                        jsize, jsize, const jshort*);2
    void        (*SetIntArrayRegion)(JNIEnv*, jintArray,2
                        jsize, jsize, const jint*);2
    void        (*SetLongArrayRegion)(JNIEnv*, jlongArray,2
                        jsize, jsize, const jlong*);2
    void        (*SetFloatArrayRegion)(JNIEnv*, jfloatArray,2
                        jsize, jsize, const jfloat*);2
    void        (*SetDoubleArrayRegion)(JNIEnv*, jdoubleArray,2
                        jsize, jsize, const jdouble*);2
2
    jint        (*RegisterNatives)(JNIEnv*, jclass, const JNINativeMethod*,2
                        jint);2
    jint        (*UnregisterNatives)(JNIEnv*, jclass);2
    jint        (*MonitorEnter)(JNIEnv*, jobject);2
    jint        (*MonitorExit)(JNIEnv*, jobject);2
    jint        (*GetJavaVM)(JNIEnv*, JavaVM**);2
2
    void        (*GetStringRegion)(JNIEnv*, jstring, jsize, jsize, jchar*);2
    void        (*GetStringUTFRegion)(JNIEnv*, jstring, jsize, jsize, char*);2
2
    void*       (*GetPrimitiveArrayCritical)(JNIEnv*, jarray, jboolean*);2
    void        (*ReleasePrimitiveArrayCritical)(JNIEnv*, jarray, void*, jint);2
2
    const jchar* (*GetStringCritical)(JNIEnv*, jstring, jboolean*);2
    void        (*ReleaseStringCritical)(JNIEnv*, jstring, const jchar*);2
2
    jweak       (*NewWeakGlobalRef)(JNIEnv*, jobject);2
    void        (*DeleteWeakGlobalRef)(JNIEnv*, jweak);2
2
    jboolean    (*ExceptionCheck)(JNIEnv*);2
2
    jobject     (*NewDirectByteBuffer)(JNIEnv*, void*, jlong);2
    void*       (*GetDirectBufferAddress)(JNIEnv*, jobject);2
    jlong       (*GetDirectBufferCapacity)(JNIEnv*, jobject);2
2
    /* added in JNI 1.6 */2
    jobjectRefType (*GetObjectRefType)(JNIEnv*, jobject);2
};2
2
/*2
 * C++ object wrapper.2
 *2
 * This is usually overlaid on a C struct whose first element is a2
 * JNINativeInterface*.  We rely somewhat on compiler behavior.2
 */2
struct _JNIEnv {2
    /* do not rename this; it does not seem to be entirely opaque */2
    const struct JNINativeInterface* functions;2
2
#if defined(__cplusplus)2
2
    jint GetVersion()2
    { return functions->GetVersion(this); }2
2
    jclass DefineClass(const char *name, jobject loader, const jbyte* buf,2
        jsize bufLen)2
    { return functions->DefineClass(this, name, loader, buf, bufLen); }2
2
    jclass FindClass(const char* name)2
    { return functions->FindClass(this, name); }2
2
    jmethodID FromReflectedMethod(jobject method)2
    { return functions->FromReflectedMethod(this, method); }2
2
    jfieldID FromReflectedField(jobject field)2
    { return functions->FromReflectedField(this, field); }2
2
    jobject ToReflectedMethod(jclass cls, jmethodID methodID, jboolean isStatic)2
    { return functions->ToReflectedMethod(this, cls, methodID, isStatic); }2
2
    jclass GetSuperclass(jclass clazz)2
    { return functions->GetSuperclass(this, clazz); }2
2
    jboolean IsAssignableFrom(jclass clazz1, jclass clazz2)2
    { return functions->IsAssignableFrom(this, clazz1, clazz2); }2
2
    jobject ToReflectedField(jclass cls, jfieldID fieldID, jboolean isStatic)2
    { return functions->ToReflectedField(this, cls, fieldID, isStatic); }2
2
    jint Throw(jthrowable obj)2
    { return functions->Throw(this, obj); }2
2
    jint ThrowNew(jclass clazz, const char* message)2
    { return functions->ThrowNew(this, clazz, message); }2
2
    jthrowable ExceptionOccurred()2
    { return functions->ExceptionOccurred(this); }2
2
    void ExceptionDescribe()2
    { functions->ExceptionDescribe(this); }2
2
    void ExceptionClear()2
    { functions->ExceptionClear(this); }2
2
    void FatalError(const char* msg)2
    { functions->FatalError(this, msg); }2
2
    jint PushLocalFrame(jint capacity)2
    { return functions->PushLocalFrame(this, capacity); }2
2
    jobject PopLocalFrame(jobject result)2
    { return functions->PopLocalFrame(this, result); }2
2
    jobject NewGlobalRef(jobject obj)2
    { return functions->NewGlobalRef(this, obj); }2
2
    void DeleteGlobalRef(jobject globalRef)2
    { functions->DeleteGlobalRef(this, globalRef); }2
2
    void DeleteLocalRef(jobject localRef)2
    { functions->DeleteLocalRef(this, localRef); }2
2
    jboolean IsSameObject(jobject ref1, jobject ref2)2
    { return functions->IsSameObject(this, ref1, ref2); }2
2
    jobject NewLocalRef(jobject ref)2
    { return functions->NewLocalRef(this, ref); }2
2
    jint EnsureLocalCapacity(jint capacity)2
    { return functions->EnsureLocalCapacity(this, capacity); }2
2
    jobject AllocObject(jclass clazz)2
    { return functions->AllocObject(this, clazz); }2
2
    jobject NewObject(jclass clazz, jmethodID methodID, ...)2
    {2
        va_list args;2
        va_start(args, methodID);2
        jobject result = functions->NewObjectV(this, clazz, methodID, args);2
        va_end(args);2
        return result;2
    }2
2
    jobject NewObjectV(jclass clazz, jmethodID methodID, va_list args)2
    { return functions->NewObjectV(this, clazz, methodID, args); }2
2
    jobject NewObjectA(jclass clazz, jmethodID methodID, jvalue* args)2
    { return functions->NewObjectA(this, clazz, methodID, args); }2
2
    jclass GetObjectClass(jobject obj)2
    { return functions->GetObjectClass(this, obj); }2
2
    jboolean IsInstanceOf(jobject obj, jclass clazz)2
    { return functions->IsInstanceOf(this, obj, clazz); }2
2
    jmethodID GetMethodID(jclass clazz, const char* name, const char* sig)2
    { return functions->GetMethodID(this, clazz, name, sig); }2
2
#define CALL_TYPE_METHOD(_jtype, _jname)                                    \2
    _jtype Call##_jname##Method(jobject obj, jmethodID methodID, ...)       \2
    {                                                                       \2
        _jtype result;                                                      \2
        va_list args;                                                       \2
        va_start(args, methodID);                                           \2
        result = functions->Call##_jname##MethodV(this, obj, methodID,      \2
                    args);                                                  \2
        va_end(args);                                                       \2
        return result;                                                      \2
    }2
#define CALL_TYPE_METHODV(_jtype, _jname)                                   \2
    _jtype Call##_jname##MethodV(jobject obj, jmethodID methodID,           \2
        va_list args)                                                       \2
    { return functions->Call##_jname##MethodV(this, obj, methodID, args); }2
#define CALL_TYPE_METHODA(_jtype, _jname)                                   \2
    _jtype Call##_jname##MethodA(jobject obj, jmethodID methodID,           \2
        jvalue* args)                                                       \2
    { return functions->Call##_jname##MethodA(this, obj, methodID, args); }2
2
#define CALL_TYPE(_jtype, _jname)                                           \2
    CALL_TYPE_METHOD(_jtype, _jname)                                        \2
    CALL_TYPE_METHODV(_jtype, _jname)                                       \2
    CALL_TYPE_METHODA(_jtype, _jname)2
2
    CALL_TYPE(jobject, Object)2
    CALL_TYPE(jboolean, Boolean)2
    CALL_TYPE(jbyte, Byte)2
    CALL_TYPE(jchar, Char)2
    CALL_TYPE(jshort, Short)2
    CALL_TYPE(jint, Int)2
    CALL_TYPE(jlong, Long)2
    CALL_TYPE(jfloat, Float)2
    CALL_TYPE(jdouble, Double)2
2
    void CallVoidMethod(jobject obj, jmethodID methodID, ...)2
    {2
        va_list args;2
        va_start(args, methodID);2
        functions->CallVoidMethodV(this, obj, methodID, args);2
        va_end(args);2
    }2
    void CallVoidMethodV(jobject obj, jmethodID methodID, va_list args)2
    { functions->CallVoidMethodV(this, obj, methodID, args); }2
    void CallVoidMethodA(jobject obj, jmethodID methodID, jvalue* args)2
    { functions->CallVoidMethodA(this, obj, methodID, args); }2
2
#define CALL_NONVIRT_TYPE_METHOD(_jtype, _jname)                            \2
    _jtype CallNonvirtual##_jname##Method(jobject obj, jclass clazz,        \2
        jmethodID methodID, ...)                                            \2
    {                                                                       \2
        _jtype result;                                                      \2
        va_list args;                                                       \2
        va_start(args, methodID);                                           \2
        result = functions->CallNonvirtual##_jname##MethodV(this, obj,      \2
                    clazz, methodID, args);                                 \2
        va_end(args);                                                       \2
        return result;                                                      \2
    }2
#define CALL_NONVIRT_TYPE_METHODV(_jtype, _jname)                           \2
    _jtype CallNonvirtual##_jname##MethodV(jobject obj, jclass clazz,       \2
        jmethodID methodID, va_list args)                                   \2
    { return functions->CallNonvirtual##_jname##MethodV(this, obj, clazz,   \2
        methodID, args); }2
#define CALL_NONVIRT_TYPE_METHODA(_jtype, _jname)                           \2
    _jtype CallNonvirtual##_jname##MethodA(jobject obj, jclass clazz,       \2
        jmethodID methodID, jvalue* args)                                   \2
    { return functions->CallNonvirtual##_jname##MethodA(this, obj, clazz,   \2
        methodID, args); }2
2
#define CALL_NONVIRT_TYPE(_jtype, _jname)                                   \2
    CALL_NONVIRT_TYPE_METHOD(_jtype, _jname)                                \2
    CALL_NONVIRT_TYPE_METHODV(_jtype, _jname)                               \2
    CALL_NONVIRT_TYPE_METHODA(_jtype, _jname)2
2
    CALL_NONVIRT_TYPE(jobject, Object)2
    CALL_NONVIRT_TYPE(jboolean, Boolean)2
    CALL_NONVIRT_TYPE(jbyte, Byte)2
    CALL_NONVIRT_TYPE(jchar, Char)2
    CALL_NONVIRT_TYPE(jshort, Short)2
    CALL_NONVIRT_TYPE(jint, Int)2
    CALL_NONVIRT_TYPE(jlong, Long)2
    CALL_NONVIRT_TYPE(jfloat, Float)2
    CALL_NONVIRT_TYPE(jdouble, Double)2
2
    void CallNonvirtualVoidMethod(jobject obj, jclass clazz,2
        jmethodID methodID, ...)2
    {2
        va_list args;2
        va_start(args, methodID);2
        functions->CallNonvirtualVoidMethodV(this, obj, clazz, methodID, args);2
        va_end(args);2
    }2
    void CallNonvirtualVoidMethodV(jobject obj, jclass clazz,2
        jmethodID methodID, va_list args)2
    { functions->CallNonvirtualVoidMethodV(this, obj, clazz, methodID, args); }2
    void CallNonvirtualVoidMethodA(jobject obj, jclass clazz,2
        jmethodID methodID, jvalue* args)2
    { functions->CallNonvirtualVoidMethodA(this, obj, clazz, methodID, args); }2
2
    jfieldID GetFieldID(jclass clazz, const char* name, const char* sig)2
    { return functions->GetFieldID(this, clazz, name, sig); }2
2
    jobject GetObjectField(jobject obj, jfieldID fieldID)2
    { return functions->GetObjectField(this, obj, fieldID); }2
    jboolean GetBooleanField(jobject obj, jfieldID fieldID)2
    { return functions->GetBooleanField(this, obj, fieldID); }2
    jbyte GetByteField(jobject obj, jfieldID fieldID)2
    { return functions->GetByteField(this, obj, fieldID); }2
    jchar GetCharField(jobject obj, jfieldID fieldID)2
    { return functions->GetCharField(this, obj, fieldID); }2
    jshort GetShortField(jobject obj, jfieldID fieldID)2
    { return functions->GetShortField(this, obj, fieldID); }2
    jint GetIntField(jobject obj, jfieldID fieldID)2
    { return functions->GetIntField(this, obj, fieldID); }2
    jlong GetLongField(jobject obj, jfieldID fieldID)2
    { return functions->GetLongField(this, obj, fieldID); }2
    jfloat GetFloatField(jobject obj, jfieldID fieldID)2
    { return functions->GetFloatField(this, obj, fieldID); }2
    jdouble GetDoubleField(jobject obj, jfieldID fieldID)2
    { return functions->GetDoubleField(this, obj, fieldID); }2
2
    void SetObjectField(jobject obj, jfieldID fieldID, jobject value)2
    { functions->SetObjectField(this, obj, fieldID, value); }2
    void SetBooleanField(jobject obj, jfieldID fieldID, jboolean value)2
    { functions->SetBooleanField(this, obj, fieldID, value); }2
    void SetByteField(jobject obj, jfieldID fieldID, jbyte value)2
    { functions->SetByteField(this, obj, fieldID, value); }2
    void SetCharField(jobject obj, jfieldID fieldID, jchar value)2
    { functions->SetCharField(this, obj, fieldID, value); }2
    void SetShortField(jobject obj, jfieldID fieldID, jshort value)2
    { functions->SetShortField(this, obj, fieldID, value); }2
    void SetIntField(jobject obj, jfieldID fieldID, jint value)2
    { functions->SetIntField(this, obj, fieldID, value); }2
    void SetLongField(jobject obj, jfieldID fieldID, jlong value)2
    { functions->SetLongField(this, obj, fieldID, value); }2
    void SetFloatField(jobject obj, jfieldID fieldID, jfloat value)2
    { functions->SetFloatField(this, obj, fieldID, value); }2
    void SetDoubleField(jobject obj, jfieldID fieldID, jdouble value)2
    { functions->SetDoubleField(this, obj, fieldID, value); }2
2
    jmethodID GetStaticMethodID(jclass clazz, const char* name, const char* sig)2
    { return functions->GetStaticMethodID(this, clazz, name, sig); }2
2
#define CALL_STATIC_TYPE_METHOD(_jtype, _jname)                             \2
    _jtype CallStatic##_jname##Method(jclass clazz, jmethodID methodID,     \2
        ...)                                                                \2
    {                                                                       \2
        _jtype result;                                                      \2
        va_list args;                                                       \2
        va_start(args, methodID);                                           \2
        result = functions->CallStatic##_jname##MethodV(this, clazz,        \2
                    methodID, args);                                        \2
        va_end(args);                                                       \2
        return result;                                                      \2
    }2
#define CALL_STATIC_TYPE_METHODV(_jtype, _jname)                            \2
    _jtype CallStatic##_jname##MethodV(jclass clazz, jmethodID methodID,    \2
        va_list args)                                                       \2
    { return functions->CallStatic##_jname##MethodV(this, clazz, methodID,  \2
        args); }2
#define CALL_STATIC_TYPE_METHODA(_jtype, _jname)                            \2
    _jtype CallStatic##_jname##MethodA(jclass clazz, jmethodID methodID,    \2
        jvalue* args)                                                       \2
    { return functions->CallStatic##_jname##MethodA(this, clazz, methodID,  \2
        args); }2
2
#define CALL_STATIC_TYPE(_jtype, _jname)                                    \2
    CALL_STATIC_TYPE_METHOD(_jtype, _jname)                                 \2
    CALL_STATIC_TYPE_METHODV(_jtype, _jname)                                \2
    CALL_STATIC_TYPE_METHODA(_jtype, _jname)2
2
    CALL_STATIC_TYPE(jobject, Object)2
    CALL_STATIC_TYPE(jboolean, Boolean)2
    CALL_STATIC_TYPE(jbyte, Byte)2
    CALL_STATIC_TYPE(jchar, Char)2
    CALL_STATIC_TYPE(jshort, Short)2
    CALL_STATIC_TYPE(jint, Int)2
    CALL_STATIC_TYPE(jlong, Long)2
    CALL_STATIC_TYPE(jfloat, Float)2
    CALL_STATIC_TYPE(jdouble, Double)2
2
    void CallStaticVoidMethod(jclass clazz, jmethodID methodID, ...)2
    {2
        va_list args;2
        va_start(args, methodID);2
        functions->CallStaticVoidMethodV(this, clazz, methodID, args);2
        va_end(args);2
    }2
    void CallStaticVoidMethodV(jclass clazz, jmethodID methodID, va_list args)2
    { functions->CallStaticVoidMethodV(this, clazz, methodID, args); }2
    void CallStaticVoidMethodA(jclass clazz, jmethodID methodID, jvalue* args)2
    { functions->CallStaticVoidMethodA(this, clazz, methodID, args); }2
2
    jfieldID GetStaticFieldID(jclass clazz, const char* name, const char* sig)2
    { return functions->GetStaticFieldID(this, clazz, name, sig); }2
2
    jobject GetStaticObjectField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticObjectField(this, clazz, fieldID); }2
    jboolean GetStaticBooleanField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticBooleanField(this, clazz, fieldID); }2
    jbyte GetStaticByteField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticByteField(this, clazz, fieldID); }2
    jchar GetStaticCharField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticCharField(this, clazz, fieldID); }2
    jshort GetStaticShortField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticShortField(this, clazz, fieldID); }2
    jint GetStaticIntField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticIntField(this, clazz, fieldID); }2
    jlong GetStaticLongField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticLongField(this, clazz, fieldID); }2
    jfloat GetStaticFloatField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticFloatField(this, clazz, fieldID); }2
    jdouble GetStaticDoubleField(jclass clazz, jfieldID fieldID)2
    { return functions->GetStaticDoubleField(this, clazz, fieldID); }2
2
    void SetStaticObjectField(jclass clazz, jfieldID fieldID, jobject value)2
    { functions->SetStaticObjectField(this, clazz, fieldID, value); }2
    void SetStaticBooleanField(jclass clazz, jfieldID fieldID, jboolean value)2
    { functions->SetStaticBooleanField(this, clazz, fieldID, value); }2
    void SetStaticByteField(jclass clazz, jfieldID fieldID, jbyte value)2
    { functions->SetStaticByteField(this, clazz, fieldID, value); }2
    void SetStaticCharField(jclass clazz, jfieldID fieldID, jchar value)2
    { functions->SetStaticCharField(this, clazz, fieldID, value); }2
    void SetStaticShortField(jclass clazz, jfieldID fieldID, jshort value)2
    { functions->SetStaticShortField(this, clazz, fieldID, value); }2
    void SetStaticIntField(jclass clazz, jfieldID fieldID, jint value)2
    { functions->SetStaticIntField(this, clazz, fieldID, value); }2
    void SetStaticLongField(jclass clazz, jfieldID fieldID, jlong value)2
    { functions->SetStaticLongField(this, clazz, fieldID, value); }2
    void SetStaticFloatField(jclass clazz, jfieldID fieldID, jfloat value)2
    { functions->SetStaticFloatField(this, clazz, fieldID, value); }2
    void SetStaticDoubleField(jclass clazz, jfieldID fieldID, jdouble value)2
    { functions->SetStaticDoubleField(this, clazz, fieldID, value); }2
2
    jstring NewString(const jchar* unicodeChars, jsize len)2
    { return functions->NewString(this, unicodeChars, len); }2
2
    jsize GetStringLength(jstring string)2
    { return functions->GetStringLength(this, string); }2
2
    const jchar* GetStringChars(jstring string, jboolean* isCopy)2
    { return functions->GetStringChars(this, string, isCopy); }2
2
    void ReleaseStringChars(jstring string, const jchar* chars)2
    { functions->ReleaseStringChars(this, string, chars); }2
2
    jstring NewStringUTF(const char* bytes)2
    { return functions->NewStringUTF(this, bytes); }2
2
    jsize GetStringUTFLength(jstring string)2
    { return functions->GetStringUTFLength(this, string); }2
2
    const char* GetStringUTFChars(jstring string, jboolean* isCopy)2
    { return functions->GetStringUTFChars(this, string, isCopy); }2
2
    void ReleaseStringUTFChars(jstring string, const char* utf)2
    { functions->ReleaseStringUTFChars(this, string, utf); }2
2
    jsize GetArrayLength(jarray array)2
    { return functions->GetArrayLength(this, array); }2
2
    jobjectArray NewObjectArray(jsize length, jclass elementClass,2
        jobject initialElement)2
    { return functions->NewObjectArray(this, length, elementClass,2
        initialElement); }2
2
    jobject GetObjectArrayElement(jobjectArray array, jsize index)2
    { return functions->GetObjectArrayElement(this, array, index); }2
2
    void SetObjectArrayElement(jobjectArray array, jsize index, jobject value)2
    { functions->SetObjectArrayElement(this, array, index, value); }2
2
    jbooleanArray NewBooleanArray(jsize length)2
    { return functions->NewBooleanArray(this, length); }2
    jbyteArray NewByteArray(jsize length)2
    { return functions->NewByteArray(this, length); }2
    jcharArray NewCharArray(jsize length)2
    { return functions->NewCharArray(this, length); }2
    jshortArray NewShortArray(jsize length)2
    { return functions->NewShortArray(this, length); }2
    jintArray NewIntArray(jsize length)2
    { return functions->NewIntArray(this, length); }2
    jlongArray NewLongArray(jsize length)2
    { return functions->NewLongArray(this, length); }2
    jfloatArray NewFloatArray(jsize length)2
    { return functions->NewFloatArray(this, length); }2
    jdoubleArray NewDoubleArray(jsize length)2
    { return functions->NewDoubleArray(this, length); }2
2
    jboolean* GetBooleanArrayElements(jbooleanArray array, jboolean* isCopy)2
    { return functions->GetBooleanArrayElements(this, array, isCopy); }2
    jbyte* GetByteArrayElements(jbyteArray array, jboolean* isCopy)2
    { return functions->GetByteArrayElements(this, array, isCopy); }2
    jchar* GetCharArrayElements(jcharArray array, jboolean* isCopy)2
    { return functions->GetCharArrayElements(this, array, isCopy); }2
    jshort* GetShortArrayElements(jshortArray array, jboolean* isCopy)2
    { return functions->GetShortArrayElements(this, array, isCopy); }2
    jint* GetIntArrayElements(jintArray array, jboolean* isCopy)2
    { return functions->GetIntArrayElements(this, array, isCopy); }2
    jlong* GetLongArrayElements(jlongArray array, jboolean* isCopy)2
    { return functions->GetLongArrayElements(this, array, isCopy); }2
    jfloat* GetFloatArrayElements(jfloatArray array, jboolean* isCopy)2
    { return functions->GetFloatArrayElements(this, array, isCopy); }2
    jdouble* GetDoubleArrayElements(jdoubleArray array, jboolean* isCopy)2
    { return functions->GetDoubleArrayElements(this, array, isCopy); }2
2
    void ReleaseBooleanArrayElements(jbooleanArray array, jboolean* elems,2
        jint mode)2
    { functions->ReleaseBooleanArrayElements(this, array, elems, mode); }2
    void ReleaseByteArrayElements(jbyteArray array, jbyte* elems,2
        jint mode)2
    { functions->ReleaseByteArrayElements(this, array, elems, mode); }2
    void ReleaseCharArrayElements(jcharArray array, jchar* elems,2
        jint mode)2
    { functions->ReleaseCharArrayElements(this, array, elems, mode); }2
    void ReleaseShortArrayElements(jshortArray array, jshort* elems,2
        jint mode)2
    { functions->ReleaseShortArrayElements(this, array, elems, mode); }2
    void ReleaseIntArrayElements(jintArray array, jint* elems,2
        jint mode)2
    { functions->ReleaseIntArrayElements(this, array, elems, mode); }2
    void ReleaseLongArrayElements(jlongArray array, jlong* elems,2
        jint mode)2
    { functions->ReleaseLongArrayElements(this, array, elems, mode); }2
    void ReleaseFloatArrayElements(jfloatArray array, jfloat* elems,2
        jint mode)2
    { functions->ReleaseFloatArrayElements(this, array, elems, mode); }2
    void ReleaseDoubleArrayElements(jdoubleArray array, jdouble* elems,2
        jint mode)2
    { functions->ReleaseDoubleArrayElements(this, array, elems, mode); }2
2
    void GetBooleanArrayRegion(jbooleanArray array, jsize start, jsize len,2
        jboolean* buf)2
    { functions->GetBooleanArrayRegion(this, array, start, len, buf); }2
    void GetByteArrayRegion(jbyteArray array, jsize start, jsize len,2
        jbyte* buf)2
    { functions->GetByteArrayRegion(this, array, start, len, buf); }2
    void GetCharArrayRegion(jcharArray array, jsize start, jsize len,2
        jchar* buf)2
    { functions->GetCharArrayRegion(this, array, start, len, buf); }2
    void GetShortArrayRegion(jshortArray array, jsize start, jsize len,2
        jshort* buf)2
    { functions->GetShortArrayRegion(this, array, start, len, buf); }2
    void GetIntArrayRegion(jintArray array, jsize start, jsize len,2
        jint* buf)2
    { functions->GetIntArrayRegion(this, array, start, len, buf); }2
    void GetLongArrayRegion(jlongArray array, jsize start, jsize len,2
        jlong* buf)2
    { functions->GetLongArrayRegion(this, array, start, len, buf); }2
    void GetFloatArrayRegion(jfloatArray array, jsize start, jsize len,2
        jfloat* buf)2
    { functions->GetFloatArrayRegion(this, array, start, len, buf); }2
    void GetDoubleArrayRegion(jdoubleArray array, jsize start, jsize len,2
        jdouble* buf)2
    { functions->GetDoubleArrayRegion(this, array, start, len, buf); }2
2
    void SetBooleanArrayRegion(jbooleanArray array, jsize start, jsize len,2
        const jboolean* buf)2
    { functions->SetBooleanArrayRegion(this, array, start, len, buf); }2
    void SetByteArrayRegion(jbyteArray array, jsize start, jsize len,2
        const jbyte* buf)2
    { functions->SetByteArrayRegion(this, array, start, len, buf); }2
    void SetCharArrayRegion(jcharArray array, jsize start, jsize len,2
        const jchar* buf)2
    { functions->SetCharArrayRegion(this, array, start, len, buf); }2
    void SetShortArrayRegion(jshortArray array, jsize start, jsize len,2
        const jshort* buf)2
    { functions->SetShortArrayRegion(this, array, start, len, buf); }2
    void SetIntArrayRegion(jintArray array, jsize start, jsize len,2
        const jint* buf)2
    { functions->SetIntArrayRegion(this, array, start, len, buf); }2
    void SetLongArrayRegion(jlongArray array, jsize start, jsize len,2
        const jlong* buf)2
    { functions->SetLongArrayRegion(this, array, start, len, buf); }2
    void SetFloatArrayRegion(jfloatArray array, jsize start, jsize len,2
        const jfloat* buf)2
    { functions->SetFloatArrayRegion(this, array, start, len, buf); }2
    void SetDoubleArrayRegion(jdoubleArray array, jsize start, jsize len,2
        const jdouble* buf)2
    { functions->SetDoubleArrayRegion(this, array, start, len, buf); }2
2
    jint RegisterNatives(jclass clazz, const JNINativeMethod* methods,2
        jint nMethods)2
    { return functions->RegisterNatives(this, clazz, methods, nMethods); }2
2
    jint UnregisterNatives(jclass clazz)2
    { return functions->UnregisterNatives(this, clazz); }2
2
    jint MonitorEnter(jobject obj)2
    { return functions->MonitorEnter(this, obj); }2
2
    jint MonitorExit(jobject obj)2
    { return functions->MonitorExit(this, obj); }2
2
    jint GetJavaVM(JavaVM** vm)2
    { return functions->GetJavaVM(this, vm); }2
2
    void GetStringRegion(jstring str, jsize start, jsize len, jchar* buf)2
    { functions->GetStringRegion(this, str, start, len, buf); }2
2
    void GetStringUTFRegion(jstring str, jsize start, jsize len, char* buf)2
    { return functions->GetStringUTFRegion(this, str, start, len, buf); }2
2
    void* GetPrimitiveArrayCritical(jarray array, jboolean* isCopy)2
    { return functions->GetPrimitiveArrayCritical(this, array, isCopy); }2
2
    void ReleasePrimitiveArrayCritical(jarray array, void* carray, jint mode)2
    { functions->ReleasePrimitiveArrayCritical(this, array, carray, mode); }2
2
    const jchar* GetStringCritical(jstring string, jboolean* isCopy)2
    { return functions->GetStringCritical(this, string, isCopy); }2
2
    void ReleaseStringCritical(jstring string, const jchar* carray)2
    { functions->ReleaseStringCritical(this, string, carray); }2
2
    jweak NewWeakGlobalRef(jobject obj)2
    { return functions->NewWeakGlobalRef(this, obj); }2
2
    void DeleteWeakGlobalRef(jweak obj)2
    { functions->DeleteWeakGlobalRef(this, obj); }2
2
    jboolean ExceptionCheck()2
    { return functions->ExceptionCheck(this); }2
2
    jobject NewDirectByteBuffer(void* address, jlong capacity)2
    { return functions->NewDirectByteBuffer(this, address, capacity); }2
2
    void* GetDirectBufferAddress(jobject buf)2
    { return functions->GetDirectBufferAddress(this, buf); }2
2
    jlong GetDirectBufferCapacity(jobject buf)2
    { return functions->GetDirectBufferCapacity(this, buf); }2
2
    /* added in JNI 1.6 */2
    jobjectRefType GetObjectRefType(jobject obj)2
    { return functions->GetObjectRefType(this, obj); }2
#endif /*__cplusplus*/2
};2
2
2
/*2
 * JNI invocation interface.2
 */2
struct JNIInvokeInterface {2
    void*       reserved0;2
    void*       reserved1;2
    void*       reserved2;2
2
    jint        (*DestroyJavaVM)(JavaVM*);2
    jint        (*AttachCurrentThread)(JavaVM*, JNIEnv**, void*);2
    jint        (*DetachCurrentThread)(JavaVM*);2
    jint        (*GetEnv)(JavaVM*, void**, jint);2
    jint        (*AttachCurrentThreadAsDaemon)(JavaVM*, JNIEnv**, void*);2
};2
2
/*2
 * C++ version.2
 */2
struct _JavaVM {2
    const struct JNIInvokeInterface* functions;2
2
#if defined(__cplusplus)2
    jint DestroyJavaVM()2
    { return functions->DestroyJavaVM(this); }2
    jint AttachCurrentThread(JNIEnv** p_env, void* thr_args)2
    { return functions->AttachCurrentThread(this, p_env, thr_args); }2
    jint DetachCurrentThread()2
    { return functions->DetachCurrentThread(this); }2
    jint GetEnv(void** env, jint version)2
    { return functions->GetEnv(this, env, version); }2
    jint AttachCurrentThreadAsDaemon(JNIEnv** p_env, void* thr_args)2
    { return functions->AttachCurrentThreadAsDaemon(this, p_env, thr_args); }2
#endif /*__cplusplus*/2
};2
2
struct JavaVMAttachArgs {2
    jint        version;    /* must be >= JNI_VERSION_1_2 */2
    const char* name;       /* NULL or name of thread as modified UTF-8 str */2
    jobject     group;      /* global ref of a ThreadGroup object, or NULL */2
};2
typedef struct JavaVMAttachArgs JavaVMAttachArgs;2
2
/*2
 * JNI 1.2+ initialization.  (As of 1.6, the pre-1.2 structures are no2
 * longer supported.)2
 */2
typedef struct JavaVMOption {2
    const char* optionString;2
    void*       extraInfo;2
} JavaVMOption;2
2
typedef struct JavaVMInitArgs {2
    jint        version;    /* use JNI_VERSION_1_2 or later */2
2
    jint        nOptions;2
    JavaVMOption* options;2
    jboolean    ignoreUnrecognized;2
} JavaVMInitArgs;2
2
#ifdef __cplusplus2
extern "C" {2
#endif2
/*2
 * VM initialization functions.2
 *2
 * Note these are the only symbols exported for JNI by the VM.2
 */2
jint JNI_GetDefaultJavaVMInitArgs(void*);2
jint JNI_CreateJavaVM(JavaVM**, JNIEnv**, void*);2
jint JNI_GetCreatedJavaVMs(JavaVM**, jsize, jsize*);2
2
#define JNIIMPORT2
#define JNIEXPORT  __attribute__ ((visibility ("default")))2
#define JNICALL2
2
/*2
 * Prototypes for functions exported by loadable shared libs.  These are2
 * called by JNI, not provided by JNI.2
 */2
JNIEXPORT jint JNI_OnLoad(JavaVM* vm, void* reserved);2
JNIEXPORT void JNI_OnUnload(JavaVM* vm, void* reserved);2
2
#ifdef __cplusplus2
}2
#endif2
2
2
/*2
 * Manifest constants.2
 */2
#define JNI_FALSE   02
#define JNI_TRUE    12
2
#define JNI_VERSION_1_1 0x000100012
#define JNI_VERSION_1_2 0x000100022
#define JNI_VERSION_1_4 0x000100042
#define JNI_VERSION_1_6 0x000100062
2
#define JNI_OK          (0)         /* no error */2
#define JNI_ERR         (-1)        /* generic error */2
#define JNI_EDETACHED   (-2)        /* thread detached from the VM */2
#define JNI_EVERSION    (-3)        /* JNI version error */2
2
#define JNI_COMMIT      1           /* copy content, do not free buffer */2
#define JNI_ABORT       2           /* free buffer w/o copying back */2
2
#endif  /* JNI_H_ */2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
const path = require('path');2
const tmp = require('tmp');2
const fs = require('fs-extra');2
const builder = require('electron-builder');2
const Platform = builder.Platform;2
const metro = require('../static/node_modules/metro');2
const compilePlugins = require('../static/compilePlugins');2
2
function generateManifest(versionNumber) {2
  const filePath = path.join(__dirname, '..', 'dist');2
  if (!fs.existsSync(filePath)) {2
    fs.mkdirSync(filePath);2
  }2
  fs.writeFileSync(2
    path.join(__dirname, '../dist/manifest.json'),2
    JSON.stringify({2
      package: 'com.facebook.sonar',2
      version_name: versionNumber,2
    }),2
  );2
}2
2
function buildFolder() {2
  // eslint-disable-next-line no-console2
  console.log('Creating build directory');2
  return new Promise((resolve, reject) => {2
    tmp.dir((err, buildFolder) => {2
      if (err) {2
        reject(err);2
      } else {2
        resolve(buildFolder);2
      }2
    });2
  }).catch(die);2
}2
2
function modifyPackageManifest(buildFolder) {2
  // eslint-disable-next-line no-console2
  console.log('Creating package.json manifest');2
  const manifest = require('../package.json');2
  const manifestStatic = require('../static/package.json');2
2
  // The manifest's dependencies are bundled with the final app by2
  // electron-builder. We want to bundle the dependencies from the static-folder2
  // because all dependencies from the root-folder are already bundled by metro.2
  manifest.dependencies = manifestStatic.dependencies;2
  manifest.main = 'index.js';2
2
  const buildNumber = process.argv.join(' ').match(/--version=(\d+)/);2
  if (buildNumber && buildNumber.length > 0) {2
    manifest.version = [2
      ...manifest.version.split('.').slice(0, 2),2
      buildNumber[1],2
    ].join('.');2
  }2
2
  return new Promise((resolve, reject) => {2
    fs.writeFile(2
      path.join(buildFolder, 'package.json'),2
      JSON.stringify(manifest, null, '  '),2
      err => {2
        if (err) {2
          reject(err);2
        } else {2
          resolve(manifest.version);2
        }2
      },2
    );2
  }).catch(die);2
}2
2
function buildDist(buildFolder) {2
  const targetsRaw = [];2
2
  if (process.argv.indexOf('--mac') > -1) {2
    targetsRaw.push(Platform.MAC.createTarget(['zip']));2
  }2
  if (process.argv.indexOf('--linux') > -1) {2
    targetsRaw.push(Platform.LINUX.createTarget(['zip']));2
  }2
  if (process.argv.indexOf('--win') > -1) {2
    targetsRaw.push(Platform.WINDOWS.createTarget(['zip']));2
  }2
  if (!targetsRaw.length) {2
    throw new Error('No targets specified. eg. --mac, --win, or --linux');2
  }2
2
  // merge all target maps into a single map2
  let targetsMerged = [];2
  for (const target of targetsRaw) {2
    targetsMerged = targetsMerged.concat(Array.from(target));2
  }2
  const targets = new Map(targetsMerged);2
2
  const electronDownload = {};2
  if (process.env.electron_config_cache) {2
    electronDownload.cache = process.env.electron_config_cache;2
  }2
2
  return builder2
    .build({2
      appDir: buildFolder,2
      config: {2
        appId: `com.facebook.sonar`,2
        directories: {2
          buildResources: path.join(__dirname, '..', 'static'),2
          output: path.join(__dirname, '..', 'dist'),2
        },2
        electronDownload,2
        npmRebuild: false,2
        asarUnpack: 'PortForwardingMacApp.app/**/*',2
      },2
      projectDir: buildFolder,2
      targets,2
    })2
    .catch(die);2
}2
2
function die(err) {2
  console.error(err.stack);2
  process.exit(1);2
}2
2
function compile(buildFolder) {2
  // eslint-disable-next-line no-console2
  console.log(2
    'Building main bundle',2
    path.join(__dirname, '..', 'src', 'init.js'),2
  );2
  return metro2
    .runBuild({2
      config: {2
        getProjectRoots: () => [path.join(__dirname, '..')],2
        getTransformModulePath: () =>2
          path.join(__dirname, '..', 'static', 'transforms', 'index.js'),2
      },2
      resetCache: true,2
      dev: false,2
      entry: path.join(__dirname, '..', 'src', 'init.js'),2
      out: path.join(buildFolder, 'bundle.js'),2
    })2
    .catch(die);2
}2
2
function copyStaticFolder(buildFolder) {2
  return new Promise((resolve, reject) => {2
    fs.copy(2
      path.join(__dirname, '..', 'static'),2
      buildFolder,2
      {2
        dereference: true,2
      },2
      err => {2
        if (err) {2
          reject(err);2
        } else {2
          resolve();2
        }2
      },2
    );2
  }).catch(die);2
}2
2
function compileDefaultPlugins(buildFolder) {2
  const defaultPluginFolder = 'defaultPlugins';2
  const defaultPluginDir = path.join(buildFolder, defaultPluginFolder);2
  return compilePlugins(2
    null,2
    [2
      path.join(__dirname, '..', 'src', 'plugins'),2
      path.join(__dirname, '..', 'src', 'fb', 'plugins'),2
    ],2
    defaultPluginDir,2
  ).then(defaultPlugins =>2
    fs.writeFileSync(2
      path.join(defaultPluginDir, 'index.json'),2
      JSON.stringify(2
        defaultPlugins.map(plugin => ({2
          ...plugin,2
          out: path.join(defaultPluginFolder, path.parse(plugin.out).base),2
        })),2
      ),2
    ),2
  );2
}2
2
(async () => {2
  const dir = await buildFolder();2
  // eslint-disable-next-line no-console2
  console.log('Created build directory', dir);2
  await copyStaticFolder(dir);2
  await compileDefaultPlugins(dir);2
  await compile(dir);2
  const versionNumber = await modifyPackageManifest(dir);2
  generateManifest(versionNumber);2
  await buildDist(dir);2
  // eslint-disable-next-line no-console2
  console.log('✨  Done');2
  process.exit();2
})();2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const generate = require('babel-generator').default;2
const babylon = require('babylon');2
const babel = require('babel-core');2
const metro = require('metro');2
2
exports.transform = function({2
  filename,2
  options,2
  src,2
  plugins: defaultPlugins,2
}) {2
  const presets = [];2
2
  let ast = babylon.parse(src, {2
    filename,2
    plugins: ['jsx', 'flow', 'classProperties', 'objectRestSpread'],2
    sourceType: filename.includes('node_modules') ? 'script' : 'module',2
  });2
2
  // run babel2
  const plugins = [2
    ...defaultPlugins,2
    require('./babel-plugins/electron-requires.js'),2
    require('./babel-plugins/dynamic-requires.js'),2
  ];2
  if (!filename.includes('node_modules')) {2
    plugins.unshift(require('babel-plugin-transform-es2015-modules-commonjs'));2
  }2
  ast = babel.transformFromAst(ast, src, {2
    babelrc: !filename.includes('node_modules'),2
    code: false,2
    comments: false,2
    compact: false,2
    filename,2
    plugins,2
    presets,2
    sourceMaps: true,2
  }).ast;2
2
  const result = generate(2
    ast,2
    {2
      filename,2
      sourceFileName: filename,2
      sourceMaps: true,2
    },2
    src,2
  );2
2
  return {2
    ast,2
    code: result.code,2
    filename,2
    map: result.rawMappings.map(metro.sourceMaps.compactMapping),2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
const electronBinary = require('electron');2
const codeFrame = require('babel-code-frame');2
const socketIo = require('socket.io');2
const express = require('express');2
const detect = require('detect-port');2
const child = require('child_process');2
const Convert = require('ansi-to-html');2
const chalk = require('chalk');2
const http = require('http');2
const path = require('path');2
const metro = require('../static/node_modules/metro');2
const fs = require('fs');2
2
const convertAnsi = new Convert();2
2
const DEFAULT_PORT = process.env.PORT || 3000;2
const STATIC_DIR = path.join(__dirname, '..', 'static');2
2
function launchElectron({bundleURL, electronURL}) {2
  const args = [2
    path.join(STATIC_DIR, 'index.js'),2
    '--remote-debugging-port=9222',2
    '--dynamicPlugins=~/fbsource/xplat/sonar/src/plugins,~/fbsource/xplat/sonar/src/fb/plugins',2
  ];2
2
  const proc = child.spawn(electronBinary, args, {2
    cwd: STATIC_DIR,2
    env: {2
      ...process.env,2
      SONAR_ROOT: process.cwd(),2
      BUNDLE_URL: bundleURL,2
      ELECTRON_URL: electronURL,2
    },2
    stdio: 'inherit',2
  });2
2
  proc.on('close', () => {2
    process.exit();2
  });2
2
  process.on('exit', () => {2
    proc.kill();2
  });2
}2
2
function startMetroServer(port) {2
  return metro.runServer({2
    port,2
    watch: true,2
    config: {2
      getProjectRoots: () => [path.join(__dirname, '..')],2
      getTransformModulePath: () =>2
        path.join(__dirname, '..', 'static', 'transforms', 'index.js'),2
    },2
  });2
}2
2
function startAssetServer(port) {2
  const app = express();2
2
  app.use((req, res, next) => {2
    if (knownErrors[req.url] != null) {2
      delete knownErrors[req.url];2
      outputScreen();2
    }2
    next();2
  });2
2
  app.get('/', (req, res) => {2
    fs.readFile(path.join(STATIC_DIR, 'index.dev.html'), (err, content) => {2
      res.end(content);2
    });2
  });2
2
  app.use(express.static(STATIC_DIR));2
2
  app.use(function(err, req, res, next) {2
    knownErrors[req.url] = err;2
    outputScreen();2
    res.status(500).send('Something broke, check the console!');2
  });2
2
  const server = http.createServer(app);2
2
  return new Promise((resolve, reject) => {2
    server.listen(port, () => resolve(server));2
  });2
}2
2
function addWebsocket(server) {2
  const io = socketIo(server);2
2
  // notify connected clients that there's errors in the console2
  io.on('connection', client => {2
    if (hasErrors()) {2
      client.emit('hasErrors', convertAnsi.toHtml(buildErrorScreen()));2
    }2
  });2
2
  // refresh the app on changes to the src folder2
  // this can be removed once metroServer notifies us about file changes2
  fs.watch(path.join(__dirname, '..', 'src'), () => {2
    io.emit('refresh');2
  });2
2
  return io;2
}2
2
const knownErrors = {};2
2
function hasErrors() {2
  return Object.keys(knownErrors).length > 0;2
}2
2
function buildErrorScreen() {2
  const lines = [2
    chalk.red(`✖ Found ${Object.keys(knownErrors).length} errors`),2
    '',2
  ];2
2
  for (const url in knownErrors) {2
    const err = knownErrors[url];2
2
    if (err.filename != null && err.lineNumber != null && err.column != null) {2
      lines.push(chalk.inverse(err.filename));2
      lines.push();2
      lines.push(err.message);2
      lines.push(2
        codeFrame(2
          fs.readFileSync(err.filename, 'utf8'),2
          err.lineNumber,2
          err.column,2
        ),2
      );2
    } else {2
      lines.push(err.stack);2
    }2
2
    lines.push('');2
  }2
2
  return lines.join('\n');2
}2
2
function outputScreen(socket) {2
  // output screen2
  if (hasErrors()) {2
    const errorScreen = buildErrorScreen();2
    console.error(errorScreen);2
2
    // notify live clients of errors2
    socket.emit('hasErrors', convertAnsi.toHtml(errorScreen));2
  } else {2
    // eslint-disable-next-line no-console2
    console.log(chalk.green('✔ No known errors'));2
  }2
}2
2
(async () => {2
  const assetServerPort = await detect(DEFAULT_PORT);2
  const assetServer = await startAssetServer(assetServerPort);2
  const socket = addWebsocket(assetServer);2
  const metroServerPort = await detect(DEFAULT_PORT + 1);2
  await startMetroServer(metroServerPort);2
  outputScreen(socket);2
  launchElectron({2
    bundleURL: `http://localhost:${metroServerPort}/src/init.bundle`,2
    electronURL: `http://localhost:${assetServerPort}/index.dev.html`,2
  });2
})();2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const glob = require('glob');2
const path = require('path');2
const {spawn} = require('child_process');2
const PACKAGES = ['static', 'src/plugins/*', 'src/fb/plugins/*'];2
const YARN_PATH =2
  process.argv.length > 2 ? path.join(__dirname, process.argv[2]) : 'yarn';2
2
Promise.all(2
  PACKAGES.map(2
    pattern =>2
      new Promise((resolve, reject) => {2
        glob(2
          path.join(__dirname, '..', pattern, 'package.json'),2
          (err, matches) => {2
            if (err) {2
              reject(err);2
            } else {2
              resolve(matches);2
            }2
          },2
        );2
      }),2
  ),2
)2
  .then(packages =>2
    Promise.all(2
      packages.reduce((acc, cv) => acc.concat(cv), []).map(2
        pkg =>2
          new Promise(resolve => {2
            const cwd = pkg.replace('/package.json', '');2
            const yarn = spawn(YARN_PATH, ['--mutex', 'file'], {2
              cwd,2
            });2
            yarn.stderr.on('data', e => console.error(e.toString()));2
            yarn.on('close', code => resolve(code));2
          }),2
      ),2
    ),2
  )2
  // eslint-disable-next-line2
  .then(() => console.log('📦  Installed all dependencies!'));2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
import {ErrorBoundary, FlexColumn, FlexRow} from 'sonar';2
import {connect} from 'react-redux';2
import {toggleBugDialogVisible} from './reducers/application.js';2
import {setupMenu, activateMenuItems} from './MenuBar.js';2
import {devicePlugins} from './device-plugins/index.js';2
import WelcomeScreen from './chrome/WelcomeScreen.js';2
import SonarTitleBar from './chrome/SonarTitleBar.js';2
import BaseDevice from './devices/BaseDevice.js';2
import MainSidebar from './chrome/MainSidebar.js';2
import {SonarBasePlugin} from './plugin.js';2
import {Server, Client} from './server.js';2
import * as reducers from './reducers.js';2
import React from 'react';2
import BugReporter from './fb-stubs/BugReporter.js';2
import ErrorReporter from './fb-stubs/ErrorReporter.js';2
import BugReporterDialog from './chrome/BugReporterDialog.js';2
import ErrorBar from './chrome/ErrorBar.js';2
import Logger from './fb-stubs/Logger.js';2
import PluginContainer from './PluginContainer.js';2
import PluginManager from './chrome/PluginManager.js';2
const electron = require('electron');2
const yargs = require('yargs');2
2
export type {Client};2
2
export type StatePluginInfo = {2
  plugin: ?SonarBasePlugin<>,2
  state: Object,2
};2
2
export type StateClientPlugins = {2
  [pluginKey: string]: StatePluginInfo,2
};2
2
export type StatePlugins = {2
  [appKey: string]: StateClientPlugins,2
};2
2
export type State = {2
  activePluginKey: ?string,2
  activeAppKey: ?string,2
  plugins: StatePlugins,2
  error: ?string,2
  server: Server,2
};2
2
type Props = {2
  devices: Array<BaseDevice>,2
  leftSidebarVisible: boolean,2
  bugDialogVisible: boolean,2
  pluginManagerVisible: boolean,2
  toggleBugDialogVisible: (visible?: boolean) => void,2
};2
2
export class App extends React.Component<Props, State> {2
  constructor() {2
    performance.mark('init');2
    super();2
    this.initTracking();2
2
    this.logger = new Logger();2
2
    this.state = {2
      activeAppKey: null,2
      activePluginKey: null,2
      error: null,2
      devices: {},2
      plugins: {},2
      server: this.initServer(),2
    };2
2
    this.errorReporter = new ErrorReporter(this.logger.scribeLogger);2
    this.bugReporter = new BugReporter(this.logger);2
    this.commandLineArgs = yargs.parse(electron.remote.process.argv);2
2
    setupMenu(this.sendKeyboardAction);2
  }2
2
  errorReporter: ErrorReporter;2
  bugReporter: BugReporter;2
  logger: Logger;2
  commandLineArgs: Object;2
  _hasActivatedPreferredPlugin: boolean = false;2
2
  componentDidMount() {2
    this.logger.trackTimeSince('init');2
2
    // close socket before reloading2
    window.addEventListener('beforeunload', () => {2
      this.state.server.close();2
    });2
  }2
2
  componentDidUpdate(prevProps: Props) {2
    if (prevProps.devices !== this.props.devices) {2
      this.ensurePluginSelected();2
    }2
  }2
2
  toJSON() {2
    return null;2
  }2
2
  initServer(): Server {2
    const server = new Server(this);2
2
    server.addListener('new-client', client => {2
      client.addListener('close', () => {2
        this.setState(state =>2
          reducers.TeardownClient(this, state, {appKey: client.id}),2
        );2
        if (this.state.activeAppKey === client.id) {2
          setTimeout(this.ensurePluginSelected);2
        }2
      });2
2
      client.addListener('plugins-change', () => {2
        this.setState({}, this.ensurePluginSelected);2
      });2
    });2
2
    server.addListener('clients-change', () => {2
      this.setState({}, this.ensurePluginSelected);2
    });2
2
    server.addListener('error', err => {2
      if (err.code === 'EADDRINUSE') {2
        this.setState({2
          error:2
            "Couldn't start websocket server. " +2
            'Looks like you have multiple copies of Sonar running.',2
        });2
      } else {2
        // unknown error2
        this.setState({2
          error: err.message,2
        });2
      }2
    });2
2
    return server;2
  }2
2
  initTracking = () => {2
    electron.ipcRenderer.on('trackUsage', () => {2
      // check if there's a plugin currently active2
      const {activeAppKey, activePluginKey} = this.state;2
      if (activeAppKey == null || activePluginKey == null) {2
        return;2
      }2
2
      // app plugins2
      const client = this.getClient(activeAppKey);2
      if (client) {2
        this.logger.track('usage', 'ping', {2
          app: client.query.app,2
          device: client.query.device,2
          os: client.query.os,2
          plugin: activePluginKey,2
        });2
        return;2
      }2
2
      // device plugins2
      const device: ?BaseDevice = this.getDevice(activeAppKey);2
      if (device) {2
        this.logger.track('usage', 'ping', {2
          os: device.os,2
          plugin: activePluginKey,2
          device: device.title,2
        });2
      }2
    });2
  };2
2
  sendKeyboardAction = (action: string) => {2
    const {activeAppKey, activePluginKey} = this.state;2
2
    if (activeAppKey != null && activePluginKey != null) {2
      const clientPlugins = this.state.plugins[activeAppKey];2
      const pluginInfo = clientPlugins && clientPlugins[activePluginKey];2
      const plugin = pluginInfo && pluginInfo.plugin;2
      if (plugin && typeof plugin.onKeyboardAction === 'function') {2
        plugin.onKeyboardAction(action);2
      }2
    }2
  };2
2
  getDevice = (id: string): ?BaseDevice => {2
    this.props.devices.find((device: BaseDevice) => device.serial === id);2
  };2
2
  ensurePluginSelected = () => {2
    // check if we need to rehydrate this client as it may have been previously active2
    const {activeAppKey, activePluginKey, server} = this.state;2
    const {devices} = this.props;2
2
    if (!this._hasActivatedPreferredPlugin) {2
      for (const connection of server.connections.values()) {2
        const {client} = connection;2
        const {plugins} = client;2
2
        for (const plugin of plugins) {2
          if (plugin !== this.commandLineArgs.plugin) {2
            continue;2
          }2
2
          this._hasActivatedPreferredPlugin = true;2
          this.onActivatePlugin(client.id, plugin);2
          return;2
        }2
      }2
2
      if (devices.length > 0) {2
        const device = devices[0];2
        for (const plugin of devicePlugins) {2
          if (plugin.id !== this.commandLineArgs.plugin) {2
            continue;2
          }2
2
          this._hasActivatedPreferredPlugin = true;2
          this.onActivatePlugin(device.serial, plugin.id);2
          return;2
        }2
      }2
    }2
2
    if (activeAppKey != null && activePluginKey != null) {2
      const client = this.getClient(activeAppKey);2
      if (client != null && client.plugins.includes(activePluginKey)) {2
        this.onActivatePlugin(client.id, activePluginKey);2
        return;2
      }2
2
      const device: ?BaseDevice = this.getDevice(activeAppKey);2
      if (device != null) {2
        this.onActivatePlugin(device.serial, activePluginKey);2
        return;2
      }2
    } else {2
      // No plugin selected, let's select one2
      const deviceList = ((Object.values(devices): any): Array<BaseDevice>);2
      if (deviceList.length > 0) {2
        const device = deviceList[0];2
        this.onActivatePlugin(device.serial, devicePlugins[0].id);2
        return;2
      }2
2
      const connections = Array.from(server.connections.values());2
      if (connections.length > 0) {2
        const client = connections[0].client;2
        const plugins = client.plugins;2
        if (plugins.length > 0) {2
          this.onActivatePlugin(client.id, client.plugins[0]);2
          return;2
        }2
      }2
    }2
  };2
2
  getClient(appKey: ?string): ?Client {2
    if (appKey == null) {2
      return null;2
    }2
2
    const info = this.state.server.connections.get(appKey);2
    if (info != null) {2
      return info.client;2
    }2
  }2
2
  onActivatePlugin = (appKey: string, pluginKey: string) => {2
    activateMenuItems(pluginKey);2
2
    this.setState(state =>2
      reducers.ActivatePlugin(this, state, {2
        appKey,2
        pluginKey,2
      }),2
    );2
  };2
2
  render() {2
    const {state} = this;2
    const hasDevices =2
      this.props.devices.length > 0 || state.server.connections.size > 0;2
    let mainView = null;2
2
    const {activeAppKey, activePluginKey} = state;2
    if (activeAppKey != null && activePluginKey != null) {2
      const clientPlugins = state.plugins[activeAppKey];2
      const pluginInfo = clientPlugins && clientPlugins[activePluginKey];2
      const plugin = pluginInfo && pluginInfo.plugin;2
      if (plugin) {2
        mainView = this.props.pluginManagerVisible ? (2
          <PluginManager />2
        ) : (2
          <ErrorBoundary2
            heading={`Plugin "${2
              plugin.constructor.title2
            }" encountered an error during render`}2
            logger={this.logger}>2
            <PluginContainer2
              logger={this.logger}2
              plugin={plugin}2
              state={plugin.state}2
            />2
          </ErrorBoundary>2
        );2
      }2
    }2
2
    return (2
      <FlexColumn fill={true}>2
        <SonarTitleBar />2
        {this.props.bugDialogVisible && (2
          <BugReporterDialog2
            bugReporter={this.bugReporter}2
            close={() => this.props.toggleBugDialogVisible(false)}2
          />2
        )}2
        {hasDevices ? (2
          <FlexRow fill={true}>2
            {this.props.leftSidebarVisible && (2
              <MainSidebar2
                activePluginKey={state.activePluginKey}2
                activeAppKey={state.activeAppKey}2
                devices={this.props.devices}2
                server={state.server}2
                onActivatePlugin={this.onActivatePlugin}2
              />2
            )}2
            {mainView}2
          </FlexRow>2
        ) : this.props.pluginManagerVisible ? (2
          <PluginManager />2
        ) : (2
          <WelcomeScreen />2
        )}2
        <ErrorBar text={state.error} />2
      </FlexColumn>2
    );2
  }2
}2
2
export default connect(2
  ({2
    application: {pluginManagerVisible, bugDialogVisible, leftSidebarVisible},2
    devices,2
  }) => ({2
    pluginManagerVisible,2
    bugDialogVisible,2
    leftSidebarVisible,2
    devices,2
  }),2
  {toggleBugDialogVisible},2
)(App);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableHighlightedRows,2
  TableRows,2
  TableColumnSizes,2
  TableColumns,2
} from 'sonar';2
import {FlexColumn, Button} from 'sonar';2
import textContent from './utils/textContent.js';2
import createPaste from './utils/createPaste.js';2
import {SonarPlugin, SearchableTable} from 'sonar';2
2
type ID = string;2
2
type RowData = {2
  id: ID,2
};2
2
type Props<T> = {|2
  title: string,2
  id: string,2
  icon: string,2
  method: string,2
  resetMethod?: string,2
  columns: TableColumns,2
  columnSizes: TableColumnSizes,2
  renderSidebar: (row: T) => any,2
  buildRow: (row: T) => any,2
|};2
2
type State<T> = {|2
  rows: TableRows,2
  datas: {[key: ID]: T},2
  selectedIds: Array<ID>,2
|};2
2
type AppendAndUpdateAction<T> = {|type: 'AppendAndUpdate', datas: Array<T>|};2
type ResetAndUpdateAction<T> = {|type: 'ResetAndUpdate', datas: Array<T>|};2
type Actions<T> = AppendAndUpdateAction<T> | ResetAndUpdateAction<T>;2
2
/**2
 * createTablePlugin creates a Plugin class which handles fetching data from the client and2
 * displaying in in a table. The table handles selection of items and rendering a sidebar where2
 * more detailed information can be presented about the selected row.2
 *2
 * The plugin expects the be able to subscribe to the `method` argument and recieve either an array2
 * of data objects or a single data object. Each data object represents a row in the table which is2
 * build by calling the `buildRow` function argument.2
 *2
 * An optional resetMethod argument can be provided which will replace the current rows with the2
 * data provided. This is useful when connecting to sonar for this first time, or reconnecting to2
 * the client in an unknown state.2
 */2
export function createTablePlugin<T: RowData>(props: Props<T>) {2
  return class extends SonarPlugin<State<T>, Actions<T>> {2
    static title = props.title;2
    static id = props.id;2
    static icon = props.icon;2
    static keyboardActions = ['clear', 'createPaste'];2
2
    state = {2
      rows: [],2
      datas: {},2
      selectedIds: [],2
    };2
2
    onKeyboardAction = (action: string) => {2
      if (action === 'clear') {2
        this.clear();2
      } else if (action === 'createPaste') {2
        this.createPaste();2
      }2
    };2
2
    reducers = {2
      AppendAndUpdate(state: State<T>, action: AppendAndUpdateAction<T>) {2
        const newRows = [];2
        const newData = {};2
2
        for (const data of action.datas.reverse()) {2
          if (data.id == null) {2
            console.warn('The data sent did not contain an ID.');2
          }2
          if (this.state.datas[data.id] == null) {2
            newData[data.id] = data;2
            newRows.push(props.buildRow(data));2
          }2
        }2
        return {2
          datas: {...state.datas, ...newData},2
          rows: [...state.rows, ...newRows],2
        };2
      },2
      ResetAndUpdate(state: State<T>, action: ResetAndUpdateAction<T>) {2
        const newRows = [];2
        const newData = {};2
2
        for (const data of action.datas.reverse()) {2
          if (data.id == null) {2
            console.warn('The data sent did not contain an ID.');2
          }2
          if (this.state.datas[data.id] == null) {2
            newData[data.id] = data;2
            newRows.push(props.buildRow(data));2
          }2
        }2
        return {2
          datas: newData,2
          rows: newRows,2
        };2
      },2
    };2
2
    init() {2
      this.client.subscribe(props.method, (data: T | Array<T>) => {2
        this.dispatchAction({2
          type: 'AppendAndUpdate',2
          datas: data instanceof Array ? data : [data],2
        });2
      });2
      if (props.resetMethod) {2
        this.client.subscribe(props.resetMethod, (data: Array<T>) => {2
          this.dispatchAction({2
            type: 'ResetAndUpdate',2
            datas: data instanceof Array ? data : [],2
          });2
        });2
      }2
    }2
2
    clear = () => {2
      this.setState({2
        datas: {},2
        rows: [],2
        selectedIds: [],2
      });2
    };2
2
    createPaste = () => {2
      let paste = '';2
      const mapFn = row =>2
        Object.keys(props.columns)2
          .map(key => textContent(row.columns[key].value))2
          .join('\t');2
2
      if (this.state.selectedIds.length > 0) {2
        // create paste from selection2
        paste = this.state.rows2
          .filter(row => this.state.selectedIds.indexOf(row.key) > -1)2
          .map(mapFn)2
          .join('\n');2
      } else {2
        // create paste with all rows2
        paste = this.state.rows.map(mapFn).join('\n');2
      }2
      createPaste(paste);2
    };2
2
    onRowHighlighted = (keys: TableHighlightedRows) => {2
      this.setState({2
        selectedIds: keys,2
      });2
    };2
2
    renderSidebar = () => {2
      const {renderSidebar} = props;2
      const {datas, selectedIds} = this.state;2
      const selectedId = selectedIds.length !== 1 ? null : selectedIds[0];2
2
      if (selectedId != null) {2
        return renderSidebar(datas[selectedId]);2
      } else {2
        return null;2
      }2
    };2
2
    render() {2
      const {columns, columnSizes} = props;2
      const {rows} = this.state;2
2
      return (2
        <FlexColumn fill={true}>2
          <SearchableTable2
            key={props.id}2
            rowLineHeight={28}2
            floating={false}2
            multiline={true}2
            columnSizes={columnSizes}2
            columns={columns}2
            onRowHighlighted={this.onRowHighlighted}2
            multiHighlight={true}2
            rows={rows}2
            stickyBottom={true}2
            actions={<Button onClick={this.clear}>Clear Table</Button>}2
          />2
        </FlexColumn>2
      );2
    }2
  };2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export {default as styled} from './ui/styled/index.js';2
export * from './ui/index.js';2
export * from './utils/index.js';2
2
export {default as GK} from './fb-stubs/GK.js';2
export {SonarBasePlugin, SonarPlugin, SonarDevicePlugin} from './plugin.js';2
export {createTablePlugin} from './createTablePlugin.js';2
2
export * from './init.js';2
export {default} from './init.js';2
2
export {default as AndroidDevice} from './devices/AndroidDevice.js';2
export {default as Device} from './devices/BaseDevice.js';2
export {default as IOSDevice} from './devices/IOSDevice.js';2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Provider} from 'react-redux';2
import ReactDOM from 'react-dom';2
import {ContextMenuProvider} from 'sonar';2
import {precachedIcons} from './utils/icons.js';2
import GK from './fb-stubs/GK.js';2
import App from './App.js';2
import {createStore} from 'redux';2
import reducers from './reducers/index.js';2
import dispatcher from './dispatcher/index.js';2
const path = require('path');2
2
const store = createStore(2
  reducers,2
  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),2
);2
2
dispatcher(store);2
2
GK.init();2
2
const AppFrame = () => (2
  <ContextMenuProvider>2
    <Provider store={store}>2
      <App />2
    </Provider>2
  </ContextMenuProvider>2
);2
2
// $FlowFixMe: this element exists!2
ReactDOM.render(<AppFrame />, document.getElementById('root'));2
// $FlowFixMe: service workers exist!2
navigator.serviceWorker2
  .register(2
    process.env.NODE_ENV === 'production'2
      ? path.join(__dirname, 'serviceWorker.js')2
      : './serviceWorker.js',2
  )2
  .then(r => {2
    (r.installing || r.active).postMessage({precachedIcons});2
  })2
  .catch(console.error);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {SonarBasePlugin} from './plugin.js';2
2
import {devicePlugins} from './device-plugins/index.js';2
import {2
  isProduction,2
  loadsDynamicPlugins,2
  toggleDynamicPluginLoading,2
} from './utils/dynamicPluginLoading.js';2
import plugins from './plugins/index.js';2
import electron from 'electron';2
2
export type DefaultKeyboardAction = 'clear' | 'goToBottom' | 'createPaste';2
export type TopLevelMenu = 'Edit' | 'View' | 'Window' | 'Help';2
2
type MenuItem = {|2
  label?: string,2
  accelerator?: string,2
  role?: string,2
  click?: Function,2
  submenu?: Array<MenuItem>,2
  type?: string,2
  enabled?: boolean,2
|};2
2
export type KeyboardAction = {|2
  action: string,2
  label: string,2
  accelerator?: string,2
  topLevelMenu: TopLevelMenu,2
|};2
2
const defaultKeyboardActions: Array<KeyboardAction> = [2
  {2
    label: 'Clear',2
    accelerator: 'CmdOrCtrl+K',2
    topLevelMenu: 'View',2
    action: 'clear',2
  },2
  {2
    label: 'Go To Bottom',2
    accelerator: 'CmdOrCtrl+B',2
    topLevelMenu: 'View',2
    action: 'goToBottom',2
  },2
  {2
    label: 'Create Paste',2
    topLevelMenu: 'Edit',2
    action: 'createPaste',2
  },2
];2
2
export type KeyboardActions = Array<DefaultKeyboardAction | KeyboardAction>;2
2
const menuItems: Map<string, Object> = new Map();2
2
export function setupMenu(actionHandler: (action: string) => void) {2
  const template = getTemplate(electron.remote.app, electron.remote.shell);2
2
  // collect all keyboard actions from all plugins2
  const registeredActions: Set<?KeyboardAction> = new Set(2
    [...devicePlugins, ...plugins]2
      .map((plugin: Class<SonarBasePlugin<>>) => plugin.keyboardActions || [])2
      .reduce((acc: KeyboardActions, cv) => acc.concat(cv), [])2
      .map(2
        (action: DefaultKeyboardAction | KeyboardAction) =>2
          typeof action === 'string'2
            ? defaultKeyboardActions.find(a => a.action === action)2
            : action,2
      ),2
  );2
2
  // add keyboard actions to2
  registeredActions.forEach(keyboardAction => {2
    if (keyboardAction != null) {2
      appendMenuItem(template, actionHandler, keyboardAction);2
    }2
  });2
2
  // create actual menu instance2
  const applicationMenu = electron.remote.Menu.buildFromTemplate(template);2
2
  // add menu items to map, so we can modify them easily later2
  registeredActions.forEach(keyboardAction => {2
    if (keyboardAction != null) {2
      const {topLevelMenu, label, action} = keyboardAction;2
      const menu = applicationMenu.items.find(2
        menuItem => menuItem.label === topLevelMenu,2
      );2
      const menuItem = menu.submenu.items.find(2
        menuItem => menuItem.label === label,2
      );2
      menuItems.set(action, menuItem);2
    }2
  });2
2
  // update menubar2
  electron.remote.Menu.setApplicationMenu(applicationMenu);2
}2
2
function appendMenuItem(2
  template: Array<MenuItem>,2
  actionHandler: (action: string) => void,2
  item: ?KeyboardAction,2
) {2
  const keyboardAction = item;2
  if (keyboardAction == null) {2
    return;2
  }2
  const itemIndex = template.findIndex(2
    menu => menu.label === keyboardAction.topLevelMenu,2
  );2
  if (itemIndex > -1 && template[itemIndex].submenu != null) {2
    template[itemIndex].submenu.push({2
      click: () => actionHandler(keyboardAction.action),2
      label: keyboardAction.label,2
      accelerator: keyboardAction.accelerator,2
      enabled: false,2
    });2
  }2
}2
2
export function activateMenuItems(activePluginKey: ?string) {2
  const activePlugin: ?Class<SonarBasePlugin<>> = [2
    ...devicePlugins,2
    ...plugins,2
  ].find((plugin: Class<SonarBasePlugin<>>) => plugin.id === activePluginKey);2
2
  // disable all keyboard actions2
  for (const item of menuItems) {2
    item[1].enabled = false;2
  }2
2
  // enable keyboard actions for the current plugin2
  if (activePlugin != null && activePlugin.keyboardActions != null) {2
    (activePlugin.keyboardActions || []).forEach(keyboardAction => {2
      const action =2
        typeof keyboardAction === 'string'2
          ? keyboardAction2
          : keyboardAction.action;2
      const item = menuItems.get(action);2
      if (item != null) {2
        item.enabled = true;2
      }2
    });2
  }2
2
  // set the application menu again to make sure it updates2
  electron.remote.Menu.setApplicationMenu(2
    electron.remote.Menu.getApplicationMenu(),2
  );2
}2
2
function getTemplate(app: Object, shell: Object): Array<MenuItem> {2
  const template = [2
    {2
      label: 'Edit',2
      submenu: [2
        {2
          label: 'Undo',2
          accelerator: 'CmdOrCtrl+Z',2
          role: 'undo',2
        },2
        {2
          label: 'Redo',2
          accelerator: 'Shift+CmdOrCtrl+Z',2
          role: 'redo',2
        },2
        {2
          type: 'separator',2
        },2
        {2
          label: 'Cut',2
          accelerator: 'CmdOrCtrl+X',2
          role: 'cut',2
        },2
        {2
          label: 'Copy',2
          accelerator: 'CmdOrCtrl+C',2
          role: 'copy',2
        },2
        {2
          label: 'Paste',2
          accelerator: 'CmdOrCtrl+V',2
          role: 'paste',2
        },2
        {2
          label: 'Select All',2
          accelerator: 'CmdOrCtrl+A',2
          role: 'selectall',2
        },2
      ],2
    },2
    {2
      label: 'View',2
      submenu: [2
        {2
          label: 'Reload',2
          accelerator: 'CmdOrCtrl+R',2
          click: function(item: Object, focusedWindow: Object) {2
            if (focusedWindow) {2
              focusedWindow.reload();2
            }2
          },2
        },2
        {2
          label: 'Toggle Full Screen',2
          accelerator: (function() {2
            if (process.platform === 'darwin') {2
              return 'Ctrl+Command+F';2
            } else {2
              return 'F11';2
            }2
          })(),2
          click: function(item: Object, focusedWindow: Object) {2
            if (focusedWindow) {2
              focusedWindow.setFullScreen(!focusedWindow.isFullScreen());2
            }2
          },2
        },2
        {2
          label: 'Toggle Developer Tools',2
          accelerator: (function() {2
            if (process.platform === 'darwin') {2
              return 'Alt+Command+I';2
            } else {2
              return 'Ctrl+Shift+I';2
            }2
          })(),2
          click: function(item: Object, focusedWindow: Object) {2
            if (focusedWindow) {2
              focusedWindow.toggleDevTools();2
            }2
          },2
        },2
        {2
          type: 'separator',2
        },2
      ],2
    },2
    {2
      label: 'Window',2
      role: 'window',2
      submenu: [2
        {2
          label: 'Minimize',2
          accelerator: 'CmdOrCtrl+M',2
          role: 'minimize',2
        },2
        {2
          label: 'Close',2
          accelerator: 'CmdOrCtrl+W',2
          role: 'close',2
        },2
      ],2
    },2
    {2
      label: 'Help',2
      role: 'help',2
      submenu: [2
        {2
          label: 'Getting started',2
          click: function() {2
            shell.openExternal('https://fbsonar.com/docs/getting-started.html');2
          },2
        },2
        {2
          label: 'Create plugins',2
          click: function() {2
            shell.openExternal('https://fbsonar.com/docs/create-plugin.html');2
          },2
        },2
        {2
          label: 'Report problems',2
          click: function() {2
            shell.openExternal('https://github.com/facebook/Sonar/issues');2
          },2
        },2
      ],2
    },2
  ];2
2
  if (process.platform === 'darwin') {2
    const name = app.getName();2
    template.unshift({2
      label: name,2
      submenu: [2
        {2
          label: 'About ' + name,2
          role: 'about',2
        },2
        {2
          type: 'separator',2
        },2
        {2
          label: 'Services',2
          role: 'services',2
          submenu: [],2
        },2
        {2
          type: 'separator',2
        },2
        {2
          label: 'Hide ' + name,2
          accelerator: 'Command+H',2
          role: 'hide',2
        },2
        {2
          label: 'Hide Others',2
          accelerator: 'Command+Shift+H',2
          role: 'hideothers',2
        },2
        {2
          label: 'Show All',2
          role: 'unhide',2
        },2
        {2
          type: 'separator',2
        },2
        {2
          label: `Restart in ${2
            loadsDynamicPlugins() ? 'Production' : 'Development'2
          } Mode`,2
          enabled: isProduction(),2
          click: function() {2
            toggleDynamicPluginLoading();2
          },2
        },2
        {2
          label: 'Quit',2
          accelerator: 'Command+Q',2
          click: function() {2
            app.quit();2
          },2
        },2
      ],2
    });2
    const windowMenu = template.find(function(m: Object) {2
      return m.role === 'window';2
    });2
    if (windowMenu) {2
      windowMenu.submenu.push(2
        {2
          type: 'separator',2
        },2
        {2
          label: 'Bring All to Front',2
          role: 'front',2
        },2
      );2
    }2
  }2
2
  return template;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {KeyboardActions} from './MenuBar.js';2
import type {App} from './App.js';2
import type {Client} from './server.js';2
2
import BaseDevice from './devices/BaseDevice.js';2
import {AndroidDevice, IOSDevice} from 'sonar';2
2
const invariant = require('invariant');2
2
export type PluginClient = {|2
  send: (method: string, params?: Object) => void,2
  call: (method: string, params?: Object) => Promise<any>,2
  subscribe: (method: string, callback: (params: any) => void) => void,2
|};2
2
type PluginTarget = BaseDevice | Client;2
2
/**2
 * This is a wrapper for a plugin instance and state. We have a special toJSON method that removes the plugin2
 * instance and any state if it's not set to be persisted.2
 */2
export class PluginStateContainer {2
  constructor(plugin: SonarBasePlugin<>, state: Object) {2
    this.plugin = plugin;2
    this.state = state;2
  }2
2
  plugin: ?SonarBasePlugin<>;2
  state: Object;2
2
  toJSON() {2
    return {2
      plugin: null,2
      state: this.plugin != null ? this.state : null,2
    };2
  }2
}2
2
export class SonarBasePlugin<State: Object = any, Actions = any> {2
  constructor() {2
    // $FlowFixMe: this is fine2
    this.state = {};2
  }2
2
  static title: string = 'Unknown';2
  static id: string = 'Unknown';2
  static icon: string = 'apps';2
  static persist: boolean = true;2
  static keyboardActions: ?KeyboardActions;2
  static screenshot: ?string;2
2
  // forbid instance properties that should be static2
  title: empty;2
  id: empty;2
  persist: empty;2
2
  namespaceKey: string;2
  reducers: {2
    [actionName: string]: (state: State, actionData: Object) => $Shape<State>,2
  } = {};2
  app: App;2
  state: State;2
  renderSidebar: ?() => ?React.Element<*>;2
  renderIntro: ?() => ?React.Element<*>;2
  onKeyboardAction: ?(action: string) => void;2
2
  toJSON() {2
    return null;2
  }2
2
  // methods to be overriden by plugins2
  init(): void {}2
  teardown(): void {}2
  // methods to be overridden by subclasses2
  _init(): void {}2
  _teardown(): void {}2
  _setup(target: PluginTarget, app: App) {2
    this.app = app;2
  }2
2
  setState(2
    state: $Shape<State> | ((state: State) => $Shape<State>),2
    callback?: () => void,2
  ) {2
    if (typeof state === 'function') {2
      state = state(this.state);2
    }2
    this.state = Object.assign({}, this.state, state);2
2
    const pluginKey = this.constructor.id;2
    const namespaceKey = this.namespaceKey;2
    const appState = this.app.state;2
2
    // update app state2
    this.app.setState(2
      {2
        plugins: {2
          ...appState.plugins,2
          [namespaceKey]: {2
            ...(appState.plugins[namespaceKey] || {}),2
            [pluginKey]: new PluginStateContainer(this, this.state),2
          },2
        },2
      },2
      callback,2
    );2
  }2
2
  dispatchAction(actionData: Actions) {2
    // $FlowFixMe2
    const action = this.reducers[actionData.type];2
    if (!action) {2
      // $FlowFixMe2
      throw new ReferenceError(`Unknown action ${actionData.type}`);2
    }2
2
    if (typeof action === 'function') {2
      this.setState(action.call(this, this.state, actionData));2
    } else {2
      // $FlowFixMe2
      throw new TypeError(`Reducer ${actionData.type} isn't a function`);2
    }2
  }2
2
  render(): any {2
    return null;2
  }2
}2
2
export class SonarDevicePlugin<2
  State: Object = any,2
  Actions = any,2
> extends SonarBasePlugin<State, Actions> {2
  device: BaseDevice;2
2
  _setup(target: PluginTarget, app: App) {2
    invariant(target instanceof BaseDevice, 'expected instanceof Client');2
    const device: BaseDevice = target;2
2
    this.namespaceKey = device.serial;2
    this.device = device;2
    super._setup(device, app);2
  }2
2
  _teardown() {2
    this.teardown();2
  }2
2
  _init() {2
    this.init();2
  }2
}2
2
export class SonarPlugin<2
  State: Object = any,2
  Actions = any,2
> extends SonarBasePlugin<State, Actions> {2
  constructor() {2
    super();2
    this.subscriptions = [];2
  }2
2
  subscriptions: Array<{2
    method: string,2
    callback: Function,2
  }>;2
2
  client: PluginClient;2
  realClient: Client;2
2
  getDevice(): ?BaseDevice {2
    return this.realClient.getDevice();2
  }2
2
  getAndroidDevice(): AndroidDevice {2
    const device = this.getDevice();2
    invariant(2
      device != null && device instanceof AndroidDevice,2
      'expected android device',2
    );2
    return device;2
  }2
2
  getIOSDevice() {2
    const device = this.getDevice();2
    invariant(2
      device != null && device instanceof IOSDevice,2
      'expected ios device',2
    );2
    return device;2
  }2
2
  _setup(target: any, app: App) {2
    /* We have to type the above as `any` since if we import the actual Client we have an2
       unresolvable dependency cycle */2
2
    const realClient: Client = target;2
    const id: string = this.constructor.id;2
2
    this.namespaceKey = realClient.id;2
    this.realClient = realClient;2
    this.client = {2
      call: (method, params) => realClient.call(id, method, params),2
      send: (method, params) => realClient.send(id, method, params),2
      subscribe: (method, callback) => {2
        this.subscriptions.push({2
          method,2
          callback,2
        });2
        realClient.subscribe(id, method, callback);2
      },2
    };2
2
    super._setup(realClient, app);2
  }2
2
  _teardown() {2
    // automatically unsubscribe subscriptions2
    for (const {method, callback} of this.subscriptions) {2
      this.realClient.unsubscribe(this.constructor.id, method, callback);2
    }2
2
    // run plugin teardown2
    this.teardown();2
    if (this.realClient.connected) {2
      this.realClient.rawSend('deinit', {plugin: this.constructor.id});2
    }2
  }2
2
  _init() {2
    this.realClient.rawSend('init', {plugin: this.constructor.id});2
    this.init();2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
import {Component, FlexColumn, Sidebar, colors} from 'sonar';2
import Intro from './ui/components/intro/intro.js';2
import {connect} from 'react-redux';2
import {2
  toggleRightSidebarAvailable,2
  toggleRightSidebarVisible,2
} from './reducers/application.js';2
import type {SonarBasePlugin} from './plugin.js';2
import type LogManager from './fb-stubs/Logger';2
2
type Props = {2
  plugin: SonarBasePlugin<>,2
  state?: any,2
  logger: LogManager,2
  rightSidebarVisible: boolean,2
  rightSidebarAvailable: boolean,2
  toggleRightSidebarVisible: (available: ?boolean) => void,2
  toggleRightSidebarAvailable: (available: ?boolean) => void,2
};2
2
type State = {2
  showIntro: boolean,2
};2
2
class PluginContainer extends Component<Props, State> {2
  state = {2
    showIntro:2
      typeof this.props.plugin.renderIntro === 'function' &&2
      window.localStorage.getItem(2
        `${this.props.plugin.constructor.id}.introShown`,2
      ) !== 'true',2
  };2
2
  _sidebar: ?React$Node;2
2
  static Container = FlexColumn.extends({2
    width: 0,2
    flexGrow: 1,2
    flexShrink: 1,2
    backgroundColor: colors.white,2
  });2
2
  componentWillUnmount() {2
    performance.mark(`init_${this.props.plugin.constructor.id}`);2
  }2
2
  componentDidMount() {2
    this.props.logger.trackTimeSince(2
      `init_${this.props.plugin.constructor.id}`,2
    );2
  }2
2
  componentDidUpdate(prevProps: Props) {2
    if (prevProps.plugin !== this.props.plugin) {2
      this.props.logger.trackTimeSince(2
        `init_${this.props.plugin.constructor.id}`,2
      );2
    }2
  }2
2
  componentWillUpdate(nextProps: Props) {2
    if (this.props.plugin !== nextProps.plugin) {2
      performance.mark(`init_${nextProps.plugin.constructor.id}`);2
    }2
    let sidebarContent;2
    if (typeof nextProps.plugin.renderSidebar === 'function') {2
      sidebarContent = nextProps.plugin.renderSidebar();2
    }2
2
    if (sidebarContent == null) {2
      this._sidebar = null;2
      nextProps.toggleRightSidebarAvailable(false);2
    } else {2
      this._sidebar = (2
        <Sidebar position="right" width={400} key="sidebar">2
          {sidebarContent}2
        </Sidebar>2
      );2
      nextProps.toggleRightSidebarAvailable(true);2
    }2
  }2
2
  onDismissIntro = () => {2
    const {plugin} = this.props;2
    window.localStorage.setItem(`${plugin.constructor.id}.introShown`, 'true');2
    this.setState({2
      showIntro: false,2
    });2
  };2
2
  render() {2
    const {plugin} = this.props;2
2
    return [2
      <PluginContainer.Container key="plugin">2
        {this.state.showIntro ? (2
          <Intro2
            title={plugin.constructor.title}2
            icon={plugin.constructor.icon}2
            screenshot={plugin.constructor.screenshot}2
            onDismiss={this.onDismissIntro}>2
            {typeof plugin.renderIntro === 'function' && plugin.renderIntro()}2
          </Intro>2
        ) : (2
          plugin.render()2
        )}2
      </PluginContainer.Container>,2
      this.props.rightSidebarVisible === false ? null : this._sidebar,2
    ];2
  }2
}2
2
export default connect(2
  ({application: {rightSidebarVisible, rightSidebarAvailable}}) => ({2
    rightSidebarVisible,2
    rightSidebarAvailable,2
  }),2
  {2
    toggleRightSidebarAvailable,2
    toggleRightSidebarVisible,2
  },2
)(PluginContainer);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  App,2
  State,2
  StatePluginInfo,2
  StatePlugins,2
  StateClientPlugins,2
} from './App.js';2
import type {SonarBasePlugin} from 'sonar';2
import {devicePlugins} from './device-plugins/index.js';2
import {SonarPlugin, SonarDevicePlugin} from 'sonar';2
import {PluginStateContainer} from './plugin.js';2
import BaseDevice from './devices/BaseDevice.js';2
import plugins from './plugins/index.js';2
import {Client} from './server.js';2
2
const invariant = require('invariant');2
2
type ActivatePluginAction = {|2
  appKey: string,2
  pluginKey: string,2
|};2
2
type TeardownClientAction = {|2
  appKey: string,2
|};2
2
export function ActivatePlugin(2
  app: App,2
  state: State,2
  {appKey, pluginKey}: ActivatePluginAction,2
) {2
  const {activePluginKey, activeAppKey} = state;2
2
  // get currently active plugin2
  const activeClientPlugins: ?StateClientPlugins =2
    activeAppKey != null ? state.plugins[activeAppKey] : null;2
  const activePluginInfo: ?StatePluginInfo =2
    activePluginKey != null && activeClientPlugins2
      ? activeClientPlugins[activePluginKey]2
      : null;2
2
  // check if this plugin is already active2
  if (2
    activePluginKey === pluginKey &&2
    activeAppKey === appKey &&2
    activePluginInfo &&2
    activePluginInfo.plugin2
  ) {2
    // this is a noop2
    return state;2
  }2
2
  // produce new plugins object2
  const newPluginsState: StatePlugins = {2
    ...state.plugins,2
  };2
2
  // check if the currently active plugin needs to be torn down after being deactivated2
  if (2
    activeAppKey != null &&2
    activePluginKey != null &&2
    activePluginInfo &&2
    activeClientPlugins2
  ) {2
    const activePlugin: ?SonarBasePlugin<> = activePluginInfo.plugin;2
    if (activePlugin && !activePlugin.constructor.persist) {2
      // teardown the currently active plugin2
      activePlugin._teardown();2
2
      // and remove it's plugin instance so next time it's made active it'll be reloaded2
      newPluginsState[activeAppKey] = {2
        ...activeClientPlugins,2
        [activePluginKey]: {2
          plugin: null,2
          state: activePluginInfo.state,2
        },2
      };2
    }2
  }2
2
  // get the plugin state associated with the new client2
  const newClientPluginsState: StateClientPlugins = {2
    ...(newPluginsState[appKey] || {}),2
  };2
  newPluginsState[appKey] = newClientPluginsState;2
2
  // find the Plugin constructor with this key2
  let Plugin: Class<SonarBasePlugin<>>;2
  for (const FindPlugin of plugins) {2
    if (FindPlugin.id === pluginKey) {2
      Plugin = FindPlugin;2
    }2
  }2
  for (const FindPlugin of devicePlugins) {2
    if (FindPlugin.id === pluginKey) {2
      Plugin = FindPlugin;2
    }2
  }2
  invariant(Plugin, 'expected plugin');2
2
  // get target, this could be an app connection or a device2
  const clientInfo = state.server.connections.get(appKey);2
  let target: void | Client | BaseDevice;2
  if (clientInfo) {2
    target = clientInfo.client;2
    invariant(2
      // $FlowFixMe prototype not known2
      Plugin.prototype instanceof SonarPlugin,2
      'expected plugin to be an app Plugin',2
    );2
  } else {2
    target = app.props.devices.find(2
      (device: BaseDevice) => device.serial === appKey,2
    );2
    invariant(2
      // $FlowFixMe prototype not known2
      Plugin.prototype instanceof SonarDevicePlugin,2
      'expected plugin to be DevicePlugin',2
    );2
  }2
  invariant(target, 'expected target');2
2
  // initialise the client if it hasn't alreadu been2
  const thisPluginState: ?StatePluginInfo = newClientPluginsState[pluginKey];2
  if (!thisPluginState || !thisPluginState.plugin) {2
    const plugin = new Plugin();2
2
    // setup plugin, this is to avoid consumers having to pass args to super2
    plugin._setup(target, app);2
2
    // if we already have state for this plugin then rehydrate it2
    if (thisPluginState && thisPluginState.state) {2
      plugin.state = thisPluginState.state;2
    }2
2
    // init plugin - setup broadcasts, initial messages etc2
    plugin._init();2
2
    newClientPluginsState[pluginKey] = new PluginStateContainer(2
      plugin,2
      plugin.state,2
    );2
  }2
2
  return {2
    activeAppKey: appKey,2
    activePluginKey: pluginKey,2
    plugins: newPluginsState,2
  };2
}2
2
export function TeardownClient(2
  app: App,2
  state: State,2
  {appKey}: TeardownClientAction,2
) {2
  const allPlugins: StatePlugins = {...state.plugins};2
2
  // teardown all plugins2
  const clientPlugins: StateClientPlugins = allPlugins[appKey];2
  for (const pluginKey in clientPlugins) {2
    const {plugin} = clientPlugins[pluginKey];2
    if (plugin) {2
      plugin._teardown();2
    }2
  }2
2
  // remove this client2
  delete allPlugins[appKey];2
2
  return {2
    activeAppKey: state.activeAppKey === appKey ? null : state.activeAppKey,2
    activePluginKey:2
      state.activeAppKey === appKey ? null : state.activePluginKey,2
    plugins: allPlugins,2
  };2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type BaseDevice from './devices/BaseDevice.js';2
import type {App} from './App.js';2
import type {SonarPlugin} from './plugin.js';2
import plugins from './plugins/index.js';2
import CertificateProvider from './utils/CertificateProvider';2
import type {SecureServerConfig} from './utils/CertificateProvider';2
2
import {RSocketServer, ReactiveSocket, PartialResponder} from 'rsocket-core';2
import RSocketTCPServer from 'rsocket-tcp-server';2
const tls = require('tls');2
const net = require('net');2
2
const EventEmitter = (require('events'): any);2
2
const invariant = require('invariant');2
2
const SECURE_PORT = 8088;2
const INSECURE_PORT = 8089;2
2
type RSocket = {|2
  fireAndForget(payload: {data: string}): void,2
  connectionStatus(): any,2
  close(): void,2
|};2
2
type ClientInfo = {|2
  connection: ?ReactiveSocket,2
  client: Client,2
|};2
2
type Plugins = Array<string>;2
2
type ClientQuery = {|2
  app: string,2
  os: string,2
  device: string,2
  device_id: ?string,2
|};2
2
type RequestMetadata = {method: string, id: number, params: ?Object};2
2
export class Client extends EventEmitter {2
  constructor(app: App, id: string, query: ClientQuery, conn: ReactiveSocket) {2
    super();2
2
    this.connected = true;2
    this.plugins = [];2
    this.connection = conn;2
    this.id = id;2
    this.query = query;2
    this.messageIdCounter = 0;2
    this.app = app;2
2
    this.broadcastCallbacks = new Map();2
    this.requestCallbacks = new Map();2
2
    const client = this;2
    this.responder = {2
      fireAndForget: (payload: {data: string}) => {2
        client.onMessage(payload.data);2
      },2
    };2
2
    conn.connectionStatus().subscribe({2
      onNext(payload) {2
        if (payload.kind == 'ERROR' || payload.kind == 'CLOSED') {2
          client.connected = false;2
        }2
      },2
      onSubscribe(subscription) {2
        subscription.request(Number.MAX_SAFE_INTEGER);2
      },2
    });2
  }2
2
  on: ((event: 'plugins-change', callback: () => void) => void) &2
    ((event: 'close', callback: () => void) => void);2
2
  app: App;2
  connected: boolean;2
  id: string;2
  query: ClientQuery;2
  messageIdCounter: number;2
  plugins: Plugins;2
  connection: ReactiveSocket;2
  responder: PartialResponder;2
2
  broadcastCallbacks: Map<?string, Map<string, Set<Function>>>;2
2
  requestCallbacks: Map<2
    number,2
    {|2
      resolve: (data: any) => void,2
      reject: (err: Error) => void,2
      metadata: RequestMetadata,2
    |},2
  >;2
2
  getDevice(): ?BaseDevice {2
    const {device_id} = this.query;2
2
    if (device_id == null) {2
      return null;2
    } else {2
      return this.app.getDevice(device_id);2
    }2
  }2
2
  supportsPlugin(Plugin: Class<SonarPlugin<>>): boolean {2
    return this.plugins.includes(Plugin.id);2
  }2
2
  getFirstSupportedPlugin(): ?string {2
    for (const Plugin of plugins) {2
      if (this.supportsPlugin(Plugin)) {2
        return Plugin.id;2
      }2
    }2
  }2
2
  async init() {2
    await this.getPlugins();2
  }2
2
  // get the supported plugins2
  async getPlugins(): Promise<Plugins> {2
    const plugins = await this.rawCall('getPlugins').then(data => data.plugins);2
    this.plugins = plugins;2
    return plugins;2
  }2
2
  // get the plugins, and update the UI2
  async refreshPlugins() {2
    await this.getPlugins();2
    this.emit('plugins-change');2
  }2
2
  onMessage(msg: string) {2
    if (typeof msg !== 'string') {2
      return;2
    }2
2
    let rawData;2
    try {2
      rawData = JSON.parse(msg);2
    } catch (err) {2
      this.app.logger.error(`Invalid JSON: ${msg}`, 'clientMessage');2
      return;2
    }2
2
    const data: {|2
      id?: number,2
      method?: string,2
      params?: Object,2
      success?: Object,2
      error?: Object,2
    |} = rawData;2
2
    this.app.logger.info(data, 'message:receive');2
2
    const {id, method} = data;2
2
    if (id == null) {2
      const {error} = data;2
      if (error != null) {2
        this.app.logger.error(error.stacktrace || error.message, 'deviceError');2
        this.app.errorReporter.report({2
          message: error.message,2
          stack: error.stacktrace,2
        });2
      } else if (method === 'refreshPlugins') {2
        this.refreshPlugins();2
      } else if (method === 'execute') {2
        const params = data.params;2
        invariant(params, 'expected params');2
2
        const apiCallbacks = this.broadcastCallbacks.get(params.api);2
        if (!apiCallbacks) {2
          return;2
        }2
2
        const methodCallbacks: ?Set<Function> = apiCallbacks.get(params.method);2
        if (methodCallbacks) {2
          for (const callback of methodCallbacks) {2
            callback(params.params);2
          }2
        }2
      }2
      return;2
    }2
2
    const callbacks = this.requestCallbacks.get(id);2
    if (!callbacks) {2
      return;2
    }2
    this.requestCallbacks.delete(id);2
    this.finishTimingRequestResponse(callbacks.metadata);2
2
    if (data.success) {2
      callbacks.resolve(data.success);2
    } else if (data.error) {2
      callbacks.reject(data.error);2
    } else {2
      // ???2
    }2
  }2
2
  toJSON() {2
    return null;2
  }2
2
  subscribe(2
    api: ?string = null,2
    method: string,2
    callback: (params: Object) => void,2
  ) {2
    let apiCallbacks = this.broadcastCallbacks.get(api);2
    if (!apiCallbacks) {2
      apiCallbacks = new Map();2
      this.broadcastCallbacks.set(api, apiCallbacks);2
    }2
2
    let methodCallbacks = apiCallbacks.get(method);2
    if (!methodCallbacks) {2
      methodCallbacks = new Set();2
      apiCallbacks.set(method, methodCallbacks);2
    }2
    methodCallbacks.add(callback);2
  }2
2
  unsubscribe(api: ?string = null, method: string, callback: Function) {2
    const apiCallbacks = this.broadcastCallbacks.get(api);2
    if (!apiCallbacks) {2
      return;2
    }2
2
    const methodCallbacks = apiCallbacks.get(method);2
    if (!methodCallbacks) {2
      return;2
    }2
    methodCallbacks.delete(callback);2
  }2
2
  rawCall(method: string, params?: Object): Promise<Object> {2
    return new Promise((resolve, reject) => {2
      const id = this.messageIdCounter++;2
      const metadata: RequestMetadata = {2
        method,2
        id,2
        params,2
      };2
      this.requestCallbacks.set(id, {reject, resolve, metadata});2
2
      const data = {2
        id,2
        method,2
        params,2
      };2
2
      this.app.logger.info(data, 'message:call');2
      this.startTimingRequestResponse({method, id, params});2
      this.connection.fireAndForget({data: JSON.stringify(data)});2
    });2
  }2
2
  startTimingRequestResponse(data: RequestMetadata) {2
    performance.mark(this.getPerformanceMark(data));2
  }2
2
  finishTimingRequestResponse(data: RequestMetadata) {2
    const mark = this.getPerformanceMark(data);2
    const logEventName = this.getLogEventName(data);2
    this.app.logger.trackTimeSince(mark, logEventName);2
  }2
2
  getPerformanceMark(data: RequestMetadata): string {2
    const {method, id} = data;2
    return `request_response_${method}_${id}`;2
  }2
2
  getLogEventName(data: RequestMetadata): string {2
    const {method, params} = data;2
    return params && params.api && params.method2
      ? `request_response_${method}_${params.api}_${params.method}`2
      : `request_response_${method}`;2
  }2
2
  rawSend(method: string, params?: Object): void {2
    const data = {2
      method,2
      params,2
    };2
    this.app.logger.info(data, 'message:send');2
    this.connection.fireAndForget({data: JSON.stringify(data)});2
  }2
2
  call(api: string, method: string, params?: Object): Promise<Object> {2
    return this.rawCall('execute', {api, method, params});2
  }2
2
  send(api: string, method: string, params?: Object): void {2
    return this.rawSend('execute', {api, method, params});2
  }2
}2
2
export class Server extends EventEmitter {2
  connections: Map<string, ClientInfo>;2
  secureServer: RSocketServer;2
  insecureServer: RSocketServer;2
  certificateProvider: CertificateProvider;2
  app: App;2
2
  constructor(app: App) {2
    super();2
    this.app = app;2
    this.connections = new Map();2
    this.certificateProvider = new CertificateProvider(this, app.logger);2
    this.init();2
  }2
2
  on: ((event: 'new-client', callback: (client: Client) => void) => void) &2
    ((event: 'error', callback: (err: Error) => void) => void) &2
    ((event: 'clients-change', callback: () => void) => void);2
2
  init() {2
    if (process.env.NODE_ENV === 'test') {2
      this.app.logger.warn(2
        "rsocket server has not been started as we're in test mode",2
        'server',2
      );2
      return;2
    }2
2
    this.certificateProvider2
      .loadSecureServerConfig()2
      .then(2
        options => (this.secureServer = this.startServer(SECURE_PORT, options)),2
      );2
    this.insecureServer = this.startServer(INSECURE_PORT);2
  }2
2
  startServer(port: number, sslConfig?: SecureServerConfig) {2
    const server = this;2
    const serverFactory = onConnect => {2
      const transportServer = sslConfig2
        ? tls.createServer(sslConfig, socket => {2
            onConnect(socket);2
          })2
        : net.createServer(onConnect);2
      transportServer2
        .on('error', err => {2
          server.emit('error', err);2
          server.app.logger.error(2
            `Error opening server on port ${port}`,2
            'server',2
          );2
        })2
        .on('listening', () => {2
          server.app.logger.warn(2
            `${2
              sslConfig ? 'Secure' : 'Certificate'2
            } server started on port ${port}`,2
            'server',2
          );2
        });2
      return transportServer;2
    };2
    const rsServer = new RSocketServer({2
      getRequestHandler: sslConfig2
        ? this._trustedRequestHandler2
        : this._untrustedRequestHandler,2
      transport: new RSocketTCPServer({2
        port: port,2
        serverFactory: serverFactory,2
      }),2
    });2
2
    rsServer.start();2
    return rsServer;2
  }2
2
  _trustedRequestHandler = (conn: RSocket, connectRequest: {data: string}) => {2
    const server = this;2
2
    const client = this.addConnection(conn, connectRequest.data);2
2
    conn.connectionStatus().subscribe({2
      onNext(payload) {2
        if (payload.kind == 'ERROR' || payload.kind == 'CLOSED') {2
          server.app.logger.warn(2
            `Device disconnected ${client.id}`,2
            'connection',2
          );2
          server.removeConnection(client.id);2
        }2
      },2
      onSubscribe(subscription) {2
        subscription.request(Number.MAX_SAFE_INTEGER);2
      },2
    });2
2
    return client.responder;2
  };2
2
  _untrustedRequestHandler = (2
    conn: RSocket,2
    connectRequest: {data: string},2
  ) => {2
    const connectionParameters = JSON.parse(connectRequest.data);2
2
    return {2
      fireAndForget: (payload: {data: string}) => {2
        if (typeof payload.data !== 'string') {2
          return;2
        }2
2
        let rawData;2
        try {2
          rawData = JSON.parse(payload.data);2
        } catch (err) {2
          this.app.logger.error(2
            `Invalid JSON: ${payload.data}`,2
            'clientMessage',2
          );2
          return;2
        }2
2
        const json: {|2
          method: 'signCertificate',2
          csr: string,2
          destination: string,2
        |} = rawData;2
        if (json.method === 'signCertificate') {2
          this.app.logger.warn('CSR received from device', 'server');2
          const {csr, destination} = json;2
          this.certificateProvider.processCertificateSigningRequest(2
            csr,2
            connectionParameters.os,2
            destination,2
          );2
        }2
      },2
    };2
  };2
2
  close() {2
    this.secureServer.stop();2
    this.insecureServer.stop();2
  }2
2
  toJSON() {2
    return null;2
  }2
2
  addConnection(conn: ReactiveSocket, queryString: string): Client {2
    const query = JSON.parse(queryString);2
    invariant(query, 'expected query');2
2
    this.app.logger.warn(`Device connected: ${queryString}`, 'connection');2
2
    const id = `${query.app}-${query.os}-${query.device}`;2
    const client = new Client(this.app, id, query, conn);2
2
    const info = {2
      client,2
      connection: conn,2
    };2
2
    client.init().then(() => {2
      this.app.logger.info(2
        `Device client initialised: ${id}. Supported plugins: ${client.plugins.join(2
          ', ',2
        )}`,2
        'connection',2
      );2
2
      /* If a device gets disconnected without being cleaned up properly,2
       * sonar won't be aware until it attempts to reconnect.2
       * When it does we need to terminate the zombie connection.2
      */2
      if (this.connections.has(id)) {2
        const connectionInfo = this.connections.get(id);2
        connectionInfo &&2
          connectionInfo.connection &&2
          connectionInfo.connection.close();2
        this.removeConnection(id);2
      }2
2
      this.connections.set(id, info);2
      this.emit('new-client', client);2
      this.emit('clients-change');2
      client.emit('plugins-change');2
    });2
2
    return client;2
  }2
2
  attachFakeClient(client: Client) {2
    this.connections.set(client.id, {2
      client,2
      connection: null,2
    });2
  }2
2
  removeConnection(id: string) {2
    const info = this.connections.get(id);2
    if (info) {2
      info.client.emit('close');2
      this.connections.delete(id);2
      this.emit('clients-change');2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {FlexRow, Text, colors, LoadingIndicator, Glyph, Component} from 'sonar';2
import {remote} from 'electron';2
import {isProduction} from '../utils/dynamicPluginLoading';2
import config from '../fb-stubs/config.js';2
const version = remote.app.getVersion();2
2
const VersionText = Text.extends({2
  color: colors.light50,2
  marginLeft: 4,2
  marginTop: 2,2
});2
2
const Container = FlexRow.extends({2
  alignItems: 'center',2
});2
2
type State = {2
  updater:2
    | 'error'2
    | 'checking-for-update'2
    | 'update-available'2
    | 'update-not-available'2
    | 'update-downloaded',2
  error?: string,2
};2
2
export default class AutoUpdateVersion extends Component<{}, State> {2
  state = {2
    updater: 'update-not-available',2
  };2
2
  componentDidMount() {2
    if (isProduction()) {2
      remote.autoUpdater.setFeedURL(2
        `${config.updateServer}?version=${version}`,2
      );2
2
      remote.autoUpdater.on('update-downloaded', () => {2
        this.setState({updater: 'update-downloaded'});2
2
        remote.dialog.showMessageBox(2
          {2
            title: 'Update available',2
            message: 'A new version of Sonar is available!',2
            detail: `You have Sonar ${version} which is outdated. Update to the latest version now.`,2
            buttons: ['Install and Restart'],2
          },2
          () => {2
            remote.autoUpdater.quitAndInstall();2
          },2
        );2
      });2
2
      remote.autoUpdater.on('error', error => {2
        this.setState({updater: 'error', error: error.toString()});2
      });2
2
      remote.autoUpdater.on('checking-for-update', () => {2
        this.setState({updater: 'checking-for-update'});2
      });2
2
      remote.autoUpdater.on('update-available', error => {2
        this.setState({updater: 'update-available'});2
      });2
2
      remote.autoUpdater.on('update-not-available', error => {2
        this.setState({updater: 'update-not-available'});2
      });2
2
      remote.autoUpdater.checkForUpdates();2
    }2
  }2
2
  render() {2
    return (2
      <Container>2
        {this.state.updater === 'update-available' && (2
          <span title="Downloading new version">2
            <LoadingIndicator size={16} />2
          </span>2
        )}2
        {this.state.updater === 'error' && (2
          <span title={`Error fetching update: ${this.state.error || ''}`}>2
            <Glyph color={colors.light30} name="caution-triangle" />2
          </span>2
        )}2
        {this.state.updater === 'update-downloaded' && (2
          <span title="Update available. Restart Sonar.">2
            <Glyph color={colors.light30} name="breaking-news" />2
          </span>2
        )}2
        {isProduction() && <VersionText>{version}</VersionText>}2
      </Container>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type BugReporter from '../fb-stubs/BugReporter.js';2
import {Component} from 'react';2
import {2
  Button,2
  colors,2
  Link,2
  Input,2
  FlexColumn,2
  FlexRow,2
  Textarea,2
  Text,2
  FlexCenter,2
  styled,2
} from 'sonar';2
2
const Container = FlexColumn.extends({2
  padding: 10,2
});2
2
const textareaStyle = {2
  margin: 0,2
  marginBottom: 10,2
};2
2
const DialogContainer = styled.view({2
  width: 400,2
  height: 300,2
  position: 'absolute',2
  left: '50%',2
  marginLeft: -200,2
  top: 40,2
  zIndex: 999999,2
  backgroundColor: '#fff',2
  border: '1px solid #ddd',2
  borderTop: 'none',2
  borderBottomLeftRadius: 5,2
  borderBottomRightRadius: 5,2
  boxShadow: '0 1px 10px rgba(0, 0, 0, 0.1)',2
});2
2
const TitleInput = Input.extends({2
  ...textareaStyle,2
  height: 30,2
});2
2
const DescriptionTextarea = Textarea.extends({2
  ...textareaStyle,2
  flexGrow: 1,2
});2
2
const SubmitButtonContainer = styled.view({2
  marginLeft: 'auto',2
});2
2
const Footer = FlexRow.extends({2
  lineHeight: '24px',2
});2
2
const CloseDoneButton = Button.extends({2
  width: 50,2
  margin: '10px auto',2
});2
2
type State = {2
  description: string,2
  title: string,2
  submitting: boolean,2
  success: false | number, // false if not created, id of bug if it's been created2
  error: ?string,2
};2
2
type Props = {2
  bugReporter: BugReporter,2
  close: () => void,2
};2
2
const DEFAULT_DESCRIPTION = `Thanks for taking the time to provide feedback!2
Please fill out the following information to make addressing your issue easier.2
2
What device platform are you using? ios/android2
What sort of device are you using? emulator/physical2
What app are you trying to use? wilde, fb4a, lite etc2
Describe your problem in as much detail as possible: `;2
2
export default class BugReporterDialog extends Component<Props, State> {2
  constructor(props: Props) {2
    super(props);2
2
    this.state = {2
      description: DEFAULT_DESCRIPTION,2
      title: '',2
      submitting: false,2
      success: false,2
      error: null,2
    };2
  }2
2
  titleRef: HTMLElement;2
  descriptionRef: HTMLElement;2
2
  onDescriptionChange = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    this.setState({description: e.target.value});2
  };2
2
  onTitleChange = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    this.setState({title: e.target.value});2
  };2
2
  onSubmit = () => {2
    // validate fields2
    const {title, description} = this.state;2
    if (!title) {2
      this.setState({2
        error: 'Title required.',2
      });2
      this.titleRef.focus();2
      return;2
    }2
    if (!description) {2
      this.setState({2
        error: 'Description required.',2
      });2
      this.descriptionRef.focus();2
      return;2
    }2
2
    this.setState(2
      {2
        error: null,2
        submitting: true,2
      },2
      () => {2
        // this will be called before the next repaint2
        requestAnimationFrame(() => {2
          // we have to call this again to ensure a repaint has actually happened2
          // as requestAnimationFrame is called BEFORE a repaint, not after which2
          // means we have to queue up twice to actually ensure a repaint has2
          // happened2
          requestAnimationFrame(() => {2
            this.props.bugReporter2
              .report(title, description)2
              .then((id: number) => {2
                this.setState({2
                  submitting: false,2
                  success: id,2
                });2
              })2
              .catch(err => {2
                this.setState({2
                  error: err.message,2
                  submitting: false,2
                });2
              });2
          });2
        });2
      },2
    );2
  };2
2
  setTitleRef = (ref: HTMLElement) => {2
    this.titleRef = ref;2
  };2
2
  setDescriptionRef = (ref: HTMLElement) => {2
    this.descriptionRef = ref;2
  };2
2
  onCancel = () => {2
    this.props.close();2
  };2
2
  render() {2
    let content;2
2
    const {title, success, error, description} = this.state;2
2
    if (success) {2
      content = (2
        <FlexCenter fill={true}>2
          <FlexColumn>2
            <Text>2
              <Text>Bug </Text>2
2
              <Text bold={true}>2
                <Link2
                  href={`https://our.intern.facebook.com/intern/bug/${success}`}>2
                  {success}2
                </Link>2
              </Text>2
2
              <Text> created. Thank you for the report!</Text>2
            </Text>2
2
            <CloseDoneButton onClick={this.onCancel}>Close</CloseDoneButton>2
          </FlexColumn>2
        </FlexCenter>2
      );2
    } else {2
      content = (2
        <Container fill={true}>2
          <TitleInput2
            placeholder="Title..."2
            value={title}2
            innerRef={this.setTitleRef}2
            onChange={this.onTitleChange}2
          />2
2
          <DescriptionTextarea2
            placeholder="Description..."2
            value={description}2
            innerRef={this.setDescriptionRef}2
            onChange={this.onDescriptionChange}2
          />2
2
          <Footer>2
            {error != null && <Text color={colors.red}>{error}</Text>}2
            <SubmitButtonContainer>2
              <Button type="primary" onClick={this.onSubmit}>2
                Submit report2
              </Button>2
              <Button type="danger" onClick={this.onCancel}>2
                Cancel2
              </Button>2
            </SubmitButtonContainer>2
          </Footer>2
        </Container>2
      );2
    }2
2
    return <DialogContainer>{content}</DialogContainer>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component, styled, Glyph, Button, colors} from 'sonar';2
import {connect} from 'react-redux';2
import BaseDevice from '../devices/BaseDevice.js';2
import child_process from 'child_process';2
import DevicesList from './DevicesList.js';2
2
const adb = require('adbkit-fb');2
2
const Light = styled.view(2
  {2
    width: 10,2
    height: 10,2
    borderRadius: '999em',2
    backgroundColor: props => (props.active ? '#70f754' : colors.light20),2
    border: props => `1px solid ${props.active ? '#52d936' : colors.light30}`,2
  },2
  {2
    ignoreAttributes: ['active'],2
  },2
);2
2
type Props = {|2
  devices: Array<BaseDevice>,2
|};2
2
type Emulator = {|2
  name: string,2
  os?: string,2
  isRunning: boolean,2
|};2
2
type State = {2
  androidEmulators: Array<Emulator>,2
  iOSSimulators: Array<Emulator>,2
  popoverVisible: boolean,2
};2
2
type IOSSimulatorList = {2
  devices: {2
    [os: string]: Array<{2
      state: 'Shutdown' | 'Booted',2
      availability: string,2
      name: string,2
      udid: string,2
      os?: string,2
    }>,2
  },2
};2
2
class DevicesButton extends Component<Props, State> {2
  state = {2
    androidEmulators: [],2
    iOSSimulators: [],2
    popoverVisible: false,2
  };2
2
  client = adb.createClient();2
  _iOSSimulatorRefreshInterval: ?number;2
2
  componentDidMount() {2
    this.updateEmulatorState(this.openMenuWhenNoDevicesConnected);2
    this.fetchIOSSimulators();2
    this._iOSSimulatorRefreshInterval = window.setInterval(2
      this.fetchIOSSimulators,2
      5000,2
    );2
2
    this.client.trackDevices().then(tracker => {2
      tracker.on('add', () => this.updateEmulatorState());2
      tracker.on('remove', () => this.updateEmulatorState());2
      tracker.on('end', () => this.updateEmulatorState());2
    });2
  }2
2
  componentWillUnmount() {2
    if (this._iOSSimulatorRefreshInterval != null) {2
      window.clearInterval(this._iOSSimulatorRefreshInterval);2
    }2
  }2
2
  fetchIOSSimulators = () => {2
    child_process.exec(2
      'xcrun simctl list devices --json',2
      (err: ?Error, data: ?string) => {2
        if (data != null && err == null) {2
          const devicesList: IOSSimulatorList = JSON.parse(data);2
          const iOSSimulators = Object.keys(devicesList.devices)2
            .map(os =>2
              devicesList.devices[os].map(device => {2
                device.os = os;2
                return device;2
              }),2
            )2
            .reduce((acc, cv) => acc.concat(cv), [])2
            .filter(device => device.state === 'Booted')2
            .map(device => ({2
              name: device.name,2
              os: device.os,2
              isRunning: true,2
            }));2
          this.setState({iOSSimulators});2
        }2
      },2
    );2
  };2
2
  openMenuWhenNoDevicesConnected = () => {2
    const numberOfEmulators = this.state.androidEmulators.filter(2
      e => e.isRunning,2
    ).length;2
    const numberOfDevices = Object.values(this.props.devices).length;2
    if (numberOfEmulators + numberOfDevices === 0) {2
      this.setState({popoverVisible: true});2
    }2
  };2
2
  updateEmulatorState = async (cb?: Function) => {2
    try {2
      const devices = await this.getEmulatorNames();2
      const ports = await this.getRunningEmulatorPorts();2
      const runningDevices = await Promise.all(2
        ports.map(port => this.getRunningName(port)),2
      );2
      this.setState(2
        {2
          androidEmulators: devices.map(name => ({2
            name,2
            isRunning: runningDevices.indexOf(name) > -1,2
          })),2
        },2
        cb,2
      );2
    } catch (e) {2
      console.error(e);2
    }2
  };2
2
  getEmulatorNames(): Promise<Array<string>> {2
    return new Promise((resolve, reject) => {2
      child_process.exec(2
        '$ANDROID_HOME/tools/emulator -list-avds',2
        (error: ?Error, data: ?string) => {2
          if (error == null && data != null) {2
            resolve(data.split('\n').filter(name => name !== ''));2
          } else {2
            reject(error);2
          }2
        },2
      );2
    });2
  }2
2
  getRunningEmulatorPorts(): Promise<Array<string>> {2
    const EMULATOR_PREFIX = 'emulator-';2
    return adb2
      .createClient()2
      .listDevices()2
      .then((devices: Array<{id: string}>) =>2
        devices2
          .filter(d => d.id.startsWith(EMULATOR_PREFIX))2
          .map(d => d.id.replace(EMULATOR_PREFIX, '')),2
      )2
      .catch((e: Error) => {2
        return [];2
      });2
  }2
2
  getRunningName(port: string): Promise<?string> {2
    return new Promise((resolve, reject) => {2
      child_process.exec(2
        `echo "avd name" | nc -w 1 localhost ${port}`,2
        (error: ?Error, data: ?string) => {2
          if (error == null && data != null) {2
            const match = data.trim().match(/(.*)\r\nOK$/);2
            resolve(match != null && match.length > 0 ? match[1] : null);2
          } else {2
            reject(error);2
          }2
        },2
      );2
    });2
  }2
2
  launchEmulator = (name: string) => {2
    child_process.exec(2
      `$ANDROID_HOME/tools/emulator @${name}`,2
      this.updateEmulatorState,2
    );2
  };2
2
  createEmualtor = () => {};2
2
  onClick = () => {2
    this.setState({popoverVisible: !this.state.popoverVisible});2
    this.updateEmulatorState();2
    this.fetchIOSSimulators();2
  };2
2
  onDismissPopover = () => {2
    this.setState({popoverVisible: false});2
  };2
2
  render() {2
    let text = 'No devices running';2
    let glyph = 'minus-circle';2
2
    const runnningEmulators = this.state.androidEmulators.filter(2
      emulator => emulator.isRunning,2
    );2
2
    const numberOfRunningDevices =2
      runnningEmulators.length + this.state.iOSSimulators.length;2
2
    if (numberOfRunningDevices > 0) {2
      text = `${numberOfRunningDevices} device${2
        numberOfRunningDevices > 1 ? 's' : ''2
      } running`;2
      glyph = 'mobile';2
    }2
2
    const connectedDevices = this.props.devices;2
2
    return (2
      <Button2
        compact={true}2
        onClick={this.onClick}2
        icon={glyph}2
        disabled={this.state.androidEmulators.length === 0}>2
        {text}2
        {this.state.popoverVisible && (2
          <DevicesList2
            onDismiss={this.onDismissPopover}2
            sections={[2
              {2
                title: 'Running',2
                items: [2
                  ...connectedDevices2
                    .filter(device => device.deviceType === 'physical')2
                    .map(device => ({2
                      title: device.title,2
                      subtitle: device.os,2
                      icon: <Light active={true} />,2
                    })),2
                  ...runnningEmulators.map(emulator => ({2
                    title: emulator.name,2
                    subtitle: 'Android Emulator',2
                    icon: <Light active={true} />,2
                  })),2
                  ...this.state.iOSSimulators.map(simulator => ({2
                    title: simulator.name,2
                    subtitle: `${String(simulator.os)} Simulator`,2
                    icon: <Light active={true} />,2
                  })),2
                ],2
              },2
              {2
                title: 'Not Running',2
                items: [2
                  ...this.state.androidEmulators2
                    .filter(emulator => !emulator.isRunning)2
                    .map(emulator => ({2
                      title: emulator.name,2
                      subtitle: 'Android Emulator',2
                      onClick: () => this.launchEmulator(emulator.name),2
                      icon: <Light active={false} />,2
                    })),2
                  {2
                    title: 'Connect a device',2
                    subtitle: 'Plugins will load automatically',2
                    icon: <Glyph name="mobile" size={12} />,2
                  },2
                ],2
              },2
            ]}2
          />2
        )}2
      </Button>2
    );2
  }2
}2
2
export default connect(({devices}) => ({2
  devices,2
}))(DevicesButton);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  PureComponent,2
  FlexRow,2
  FlexBox,2
  Text,2
  Button,2
  Popover,2
  styled,2
  colors,2
} from 'sonar';2
2
const Heading = Text.extends({2
  display: 'block',2
  backgroundColor: colors.white,2
  color: colors.light30,2
  fontSize: 11,2
  fontWeight: 600,2
  lineHeight: '21px',2
  padding: '4px 8px 0',2
});2
2
const PopoverItem = FlexRow.extends({2
  alignItems: 'center',2
  borderBottom: `1px solid ${colors.light05}`,2
  height: 50,2
  '&:last-child': {2
    borderBottom: 'none',2
  },2
});2
2
const ItemTitle = Text.extends({2
  display: 'block',2
  fontSize: 14,2
  fontWeight: 400,2
  lineHeight: '120%',2
  textOverflow: 'ellipsis',2
  overflow: 'hidden',2
  whiteSpace: 'nowrap',2
  marginBottom: 1,2
});2
2
const ItemSubtitle = Text.extends({2
  display: 'block',2
  fontWeight: 400,2
  fontSize: 11,2
  color: colors.light30,2
  lineHeight: '14px',2
  textOverflow: 'ellipsis',2
  overflow: 'hidden',2
  whiteSpace: 'nowrap',2
});2
2
const ItemImage = FlexBox.extends({2
  alignItems: 'center',2
  justifyContent: 'center',2
  width: 40,2
  flexShrink: 0,2
});2
2
const ItemContent = styled.view({2
  minWidth: 0,2
  paddingRight: 5,2
  flexGrow: 1,2
});2
2
const Section = styled.view({2
  maxWidth: 260,2
  borderBottom: `1px solid ${colors.light05}`,2
  '&:last-child': {2
    borderBottom: 'none',2
  },2
});2
2
const Action = Button.extends({2
  border: `1px solid ${colors.macOSTitleBarButtonBorder}`,2
  background: 'transparent',2
  color: colors.macOSTitleBarIconSelected,2
  marginRight: 8,2
  marginLeft: 4,2
  lineHeight: '22px',2
  '&:hover': {2
    background: 'transparent',2
  },2
  '&:active': {2
    background: 'transparent',2
    border: `1px solid ${colors.macOSTitleBarButtonBorder}`,2
  },2
});2
2
type Props = {|2
  sections: Array<{2
    title: string,2
    items: Array<{2
      title: string,2
      subtitle: string,2
      onClick?: Function,2
      icon?: React.Element<*>,2
    }>,2
  }>,2
  onDismiss: Function,2
|};2
2
export default class DevicesList extends PureComponent<Props> {2
  render() {2
    return (2
      <Popover onDismiss={this.props.onDismiss}>2
        {this.props.sections.map(section => {2
          if (section.items.length > 0) {2
            return (2
              <Section key={section.title}>2
                <Heading>{section.title}</Heading>2
                {section.items.map(item => (2
                  <PopoverItem key={item.title}>2
                    <ItemImage>{item.icon}</ItemImage>2
                    <ItemContent>2
                      <ItemTitle>{item.title}</ItemTitle>2
                      <ItemSubtitle>{item.subtitle}</ItemSubtitle>2
                    </ItemContent>2
                    {item.onClick && (2
                      <Action onClick={item.onClick} compact={true}>2
                        Run2
                      </Action>2
                    )}2
                  </PopoverItem>2
                ))}2
              </Section>2
            );2
          } else {2
            return null;2
          }2
        })}2
      </Popover>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {styled, colors} from 'sonar';2
2
const ErrorBarContainer = styled.view({2
  backgroundColor: colors.cherry,2
  bottom: 0,2
  color: '#fff',2
  left: 0,2
  lineHeight: '26px',2
  position: 'absolute',2
  right: 0,2
  textAlign: 'center',2
  zIndex: 2,2
});2
2
export default function ErrorBar(props: {|text: ?string|}) {2
  if (props.text == null) {2
    return null;2
  } else {2
    return <ErrorBarContainer>{props.text}</ErrorBarContainer>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {SonarBasePlugin} from '../plugin.js';2
import type {Client} from '../server.js';2
2
import {2
  Component,2
  Sidebar,2
  FlexBox,2
  ClickableList,2
  ClickableListItem,2
  colors,2
  brandColors,2
  Text,2
  Glyph,2
} from 'sonar';2
import {devicePlugins} from '../device-plugins/index.js';2
import type BaseDevice from '../devices/BaseDevice.js';2
import PropTypes from 'prop-types';2
import plugins from '../plugins/index.js';2
2
const CustomClickableListItem = ClickableListItem.extends({2
  paddingLeft: 10,2
  display: 'flex',2
  alignItems: 'center',2
  marginBottom: 2,2
});2
2
const SidebarHeader = FlexBox.extends({2
  display: 'block',2
  alignItems: 'center',2
  padding: 3,2
  color: colors.macOSSidebarSectionTitle,2
  fontSize: 11,2
  fontWeight: 500,2
  marginLeft: 7,2
  textOverflow: 'ellipsis',2
  overflow: 'hidden',2
  whiteSpace: 'nowrap',2
  flexShrink: 0,2
});2
2
const PluginShape = FlexBox.extends(2
  {2
    marginRight: 5,2
    backgroundColor: props => props.backgroundColor,2
    borderRadius: 3,2
    flexShrink: 0,2
    width: 18,2
    height: 18,2
    justifyContent: 'center',2
    alignItems: 'center',2
  },2
  {2
    ignoreAttributes: ['backgroundColor'],2
  },2
);2
2
const PluginName = Text.extends({2
  minWidth: 0,2
  textOverflow: 'ellipsis',2
  whiteSpace: 'nowrap',2
  overflow: 'hidden',2
});2
2
function PluginIcon({2
  backgroundColor,2
  name,2
  color,2
}: {2
  backgroundColor: string,2
  name: string,2
  color: string,2
}) {2
  return (2
    <PluginShape backgroundColor={backgroundColor}>2
      <Glyph size={12} name={name} color={color} />2
    </PluginShape>2
  );2
}2
2
class PluginSidebarListItem extends Component<{2
  activePluginKey: ?string,2
  activeAppKey: ?string,2
  onActivatePlugin: (appKey: string, pluginKey: string) => void,2
  appKey: string,2
  appName?: string,2
  isActive: boolean,2
  Plugin: Class<SonarBasePlugin<>>,2
  windowFocused: boolean,2
}> {2
  onClick = () => {2
    const {props} = this;2
    props.onActivatePlugin(props.appKey, props.Plugin.id);2
  };2
2
  render() {2
    const {isActive, Plugin, windowFocused, appKey, appName} = this.props;2
2
    let iconColor;2
    if (appName != null) {2
      iconColor = brandColors[appName];2
    }2
2
    if (iconColor == null) {2
      const pluginColors = [2
        colors.seaFoam,2
        colors.teal,2
        colors.lime,2
        colors.lemon,2
        colors.orange,2
        colors.tomato,2
        colors.cherry,2
        colors.pink,2
        colors.grape,2
      ];2
2
      iconColor = pluginColors[parseInt(appKey, 36) % pluginColors.length];2
    }2
2
    return (2
      <CustomClickableListItem2
        active={isActive}2
        onClick={this.onClick}2
        windowFocused={windowFocused}>2
        <PluginIcon2
          name={Plugin.icon}2
          backgroundColor={2
            isActive2
              ? windowFocused2
                ? colors.white2
                : colors.macOSSidebarSectionTitle2
              : iconColor2
          }2
          color={2
            isActive2
              ? windowFocused2
                ? colors.macOSTitleBarIconSelected2
                : colors.white2
              : colors.white2
          }2
        />2
        <PluginName>{Plugin.title}</PluginName>2
      </CustomClickableListItem>2
    );2
  }2
}2
2
function PluginSidebarList(props: {|2
  activePluginKey: ?string,2
  activeAppKey: ?string,2
  onActivatePlugin: (appKey: string, pluginKey: string) => void,2
  appKey: string,2
  appName?: string,2
  enabledPlugins: Array<Class<SonarBasePlugin<>>>,2
  windowFocused: boolean,2
|}) {2
  if (props.enabledPlugins.length === 0) {2
    return <Text>No available plugins for this device</Text>;2
  }2
2
  return (2
    <ClickableList>2
      {props.enabledPlugins.map(Plugin => {2
        const isActive =2
          props.activeAppKey === props.appKey &&2
          props.activePluginKey === Plugin.id;2
        return (2
          <PluginSidebarListItem2
            key={Plugin.id}2
            activePluginKey={props.activePluginKey}2
            activeAppKey={props.activeAppKey}2
            onActivatePlugin={props.onActivatePlugin}2
            appKey={props.appKey}2
            appName={props.appName}2
            isActive={isActive}2
            Plugin={Plugin}2
            windowFocused={props.windowFocused}2
          />2
        );2
      })}2
    </ClickableList>2
  );2
}2
2
function AppSidebarInfo(props: {|2
  client: Client,2
  appKey: string,2
  activePluginKey: ?string,2
  activeAppKey: ?string,2
  onActivatePlugin: (appKey: string, pluginKey: string) => void,2
  windowFocused: boolean,2
|}): any {2
  const {appKey, client, windowFocused} = props;2
2
  let enabledPlugins = [];2
  for (const Plugin of plugins) {2
    if (client.supportsPlugin(Plugin)) {2
      enabledPlugins.push(Plugin);2
    }2
  }2
  enabledPlugins = enabledPlugins.sort((a, b) => {2
    return (a.title || '').localeCompare(b.title);2
  });2
2
  return [2
    <SidebarHeader key={client.query.app}>{`${client.query.app} (${2
      client.query.os2
    }) - ${client.query.device}`}</SidebarHeader>,2
    <PluginSidebarList2
      key={`list-${appKey}`}2
      activePluginKey={props.activePluginKey}2
      activeAppKey={props.activeAppKey}2
      onActivatePlugin={props.onActivatePlugin}2
      appKey={appKey}2
      appName={client.query.app}2
      enabledPlugins={enabledPlugins}2
      windowFocused={windowFocused}2
    />,2
  ];2
}2
2
type MainSidebarProps = {|2
  activePluginKey: ?string,2
  activeAppKey: ?string,2
  onActivatePlugin: (appKey: string, pluginKey: string) => void,2
  devices: Array<BaseDevice>,2
  server: Server,2
|};2
2
export default class MainSidebar extends Component<MainSidebarProps> {2
  static contextTypes = {2
    windowIsFocused: PropTypes.bool,2
  };2
2
  render() {2
    const connections = Array.from(this.props.server.connections.values()).sort(2
      (a, b) => {2
        return (a.client.query.app || '').localeCompare(b.client.query.app);2
      },2
    );2
2
    const sidebarContent = connections.map(conn => {2
      const {client} = conn;2
2
      return (2
        <AppSidebarInfo2
          key={`app=${client.id}`}2
          client={client}2
          appKey={client.id}2
          activePluginKey={this.props.activePluginKey}2
          activeAppKey={this.props.activeAppKey}2
          onActivatePlugin={this.props.onActivatePlugin}2
          windowFocused={this.context.windowIsFocused}2
        />2
      );2
    });2
2
    let {devices} = this.props;2
    devices = devices.sort((a, b) => {2
      return (a.title || '').localeCompare(b.title);2
    });2
2
    for (const device of devices) {2
      let enabledPlugins = [];2
      for (const DevicePlugin of devicePlugins) {2
        if (device.supportsPlugin(DevicePlugin)) {2
          enabledPlugins.push(DevicePlugin);2
        }2
      }2
      enabledPlugins = enabledPlugins.sort((a, b) => {2
        return (a.title || '').localeCompare(b.title);2
      });2
2
      sidebarContent.unshift([2
        <SidebarHeader key={device.title}>{device.title}</SidebarHeader>,2
        <PluginSidebarList2
          key={`list-${device.serial}`}2
          activePluginKey={this.props.activePluginKey}2
          activeAppKey={this.props.activeAppKey}2
          onActivatePlugin={this.props.onActivatePlugin}2
          appKey={device.serial}2
          enabledPlugins={enabledPlugins}2
          windowFocused={this.context.windowIsFocused}2
        />,2
      ]);2
    }2
2
    return (2
      <Sidebar2
        position="left"2
        width={200}2
        backgroundColor={2
          this.context.windowIsFocused ? 'transparent' : '#f6f6f6'2
        }>2
        {sidebarContent}2
      </Sidebar>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  PureComponent,2
  Button,2
  FlexColumn,2
  FlexBox,2
  Text,2
  LoadingIndicator,2
  ButtonGroup,2
  colors,2
  Glyph,2
  FlexRow,2
  styled,2
  Searchable,2
} from 'sonar';2
const {spawn} = require('child_process');2
const path = require('path');2
const {app, shell} = require('electron').remote;2
2
const SONAR_PLUGIN_PATH = path.join(app.getPath('home'), '.sonar');2
const DYNAMIC_PLUGINS = JSON.parse(window.process.env.PLUGINS || '[]');2
2
type NPMModule = {2
  name: string,2
  version: string,2
  description?: string,2
  error?: Object,2
};2
2
type Status =2
  | 'installed'2
  | 'outdated'2
  | 'install'2
  | 'remove'2
  | 'update'2
  | 'uninstalled'2
  | 'uptodate';2
2
type PluginT = {2
  name: string,2
  version?: string,2
  description?: string,2
  status: Status,2
  managed?: boolean,2
  entry?: string,2
  rootDir?: string,2
};2
2
type Props = {2
  searchTerm: string,2
};2
type State = {2
  plugins: {2
    [name: string]: PluginT,2
  },2
  restartRequired: boolean,2
  searchCompleted: boolean,2
};2
2
const Container = FlexBox.extends({2
  width: '100%',2
  flexGrow: 1,2
  background: colors.light02,2
  overflowY: 'scroll',2
});2
2
const Title = Text.extends({2
  fontWeight: 500,2
});2
2
const Plugin = FlexColumn.extends({2
  backgroundColor: colors.white,2
  borderRadius: 4,2
  padding: 15,2
  margin: '0 15px 25px',2
  boxShadow: '0 1px 2px rgba(0,0,0,0.05)',2
});2
2
const SectionTitle = styled.text({2
  fontWeight: 'bold',2
  fontSize: 24,2
  margin: 15,2
  marginLeft: 20,2
});2
2
const Loading = FlexBox.extends({2
  padding: 50,2
  alignItems: 'center',2
  justifyContent: 'center',2
});2
2
const RestartRequired = FlexBox.extends({2
  textAlign: 'center',2
  justifyContent: 'center',2
  fontWeight: 500,2
  color: colors.white,2
  padding: 12,2
  backgroundColor: colors.green,2
  cursor: 'pointer',2
});2
2
const TitleRow = FlexRow.extends({2
  alignItems: 'center',2
  marginBottom: 10,2
  fontSize: '1.1em',2
});2
2
const Description = FlexRow.extends({2
  marginBottom: 15,2
  lineHeight: '130%',2
});2
2
const PluginGlyph = Glyph.extends({2
  marginRight: 5,2
});2
2
const PluginLoading = LoadingIndicator.extends({2
  marginLeft: 5,2
  marginTop: 5,2
});2
2
const getLatestVersion = (name: string): Promise<NPMModule> => {2
  return fetch(`http://registry.npmjs.org/${name}/latest`).then(res =>2
    res.json(),2
  );2
};2
2
const getPluginList = (): Promise<Array<NPMModule>> => {2
  return fetch(2
    'http://registry.npmjs.org/-/v1/search?text=keywords:sonar&size=250',2
  )2
    .then(res => res.json())2
    .then(res => res.objects.map(o => o.package));2
};2
2
const sortByName = (a: PluginT, b: PluginT): 1 | -1 =>2
  a.name > b.name ? 1 : -1;2
2
const INSTALLED = ['installed', 'outdated', 'uptodate'];2
2
class PluginItem extends PureComponent<2
  {2
    plugin: PluginT,2
    onChangeState: (action: Status) => void,2
  },2
  {2
    working: boolean,2
  },2
> {2
  state = {2
    working: false,2
  };2
2
  npmAction = (action: Status) => {2
    const {name, status: initialStatus} = this.props.plugin;2
    this.setState({working: true});2
    const npm = spawn('npm', [action, name], {2
      cwd: SONAR_PLUGIN_PATH,2
    });2
2
    npm.stderr.on('data', e => {2
      console.error(e.toString());2
    });2
2
    npm.on('close', code => {2
      this.setState({working: false});2
      const newStatus = action === 'remove' ? 'uninstalled' : 'uptodate';2
      this.props.onChangeState(code !== 0 ? initialStatus : newStatus);2
    });2
  };2
2
  render() {2
    const {2
      entry,2
      status,2
      version,2
      description,2
      managed,2
      name,2
      rootDir,2
    } = this.props.plugin;2
2
    return (2
      <Plugin>2
        <TitleRow>2
          <PluginGlyph2
            name="apps"2
            size={24}2
            variant="outline"2
            color={colors.light30}2
          />2
          <Title>{name}</Title>2
          &nbsp;2
          <Text code={true}>{version}</Text>2
        </TitleRow>2
        {description && <Description>{description}</Description>}2
        <FlexRow>2
          {managed ? (2
            <Text size="0.9em" color={colors.light30}>2
              This plugin is not managed by Sonar, but loaded from{' '}2
              <Text size="1em" code={true}>2
                {rootDir}2
              </Text>2
            </Text>2
          ) : (2
            <ButtonGroup>2
              {status === 'outdated' && (2
                <Button2
                  disabled={this.state.working}2
                  onClick={() => this.npmAction('update')}>2
                  Update2
                </Button>2
              )}2
              {INSTALLED.includes(status) ? (2
                <Button2
                  disabled={this.state.working}2
                  title={2
                    managed === true && entry != null2
                      ? `This plugin is dynamically loaded from ${entry}`2
                      : undefined2
                  }2
                  onClick={() => this.npmAction('remove')}>2
                  Remove2
                </Button>2
              ) : (2
                <Button2
                  disabled={this.state.working}2
                  onClick={() => this.npmAction('install')}>2
                  Install2
                </Button>2
              )}2
              <Button2
                onClick={() =>2
                  shell.openExternal(`https://www.npmjs.com/package/${name}`)2
                }>2
                Info2
              </Button>2
            </ButtonGroup>2
          )}2
          {this.state.working && <PluginLoading size={18} />}2
        </FlexRow>2
      </Plugin>2
    );2
  }2
}2
2
class PluginManager extends PureComponent<Props, State> {2
  state = {2
    plugins: DYNAMIC_PLUGINS.reduce((acc, plugin) => {2
      acc[plugin.name] = {2
        ...plugin,2
        managed: !(plugin.entry, '').startsWith(SONAR_PLUGIN_PATH),2
        status: 'installed',2
      };2
      return acc;2
    }, {}),2
    restartRequired: false,2
    searchCompleted: false,2
  };2
2
  componentDidMount() {2
    Promise.all(2
      Object.keys(this.state.plugins)2
        .filter(name => this.state.plugins[name].managed)2
        .map(getLatestVersion),2
    ).then((res: Array<NPMModule>) => {2
      const updates = {};2
      res.forEach(plugin => {2
        if (2
          plugin.error == null &&2
          this.state.plugins[plugin.name].version !== plugin.version2
        ) {2
          updates[plugin.name] = {2
            ...plugin,2
            ...this.state.plugins[plugin.name],2
            status: 'outdated',2
          };2
        }2
      });2
      this.setState({2
        plugins: {2
          ...this.state.plugins,2
          ...updates,2
        },2
      });2
    });2
2
    getPluginList().then(pluginList => {2
      const plugins = {...this.state.plugins};2
      pluginList.forEach(plugin => {2
        if (plugins[plugin.name] != null) {2
          plugins[plugin.name] = {2
            ...plugin,2
            ...plugins[plugin.name],2
            status:2
              plugin.version === plugins[plugin.name].version2
                ? 'uptodate'2
                : 'outdated',2
          };2
        } else {2
          plugins[plugin.name] = {2
            ...plugin,2
            status: 'uninstalled',2
          };2
        }2
      });2
      this.setState({2
        plugins,2
        searchCompleted: true,2
      });2
    });2
  }2
2
  onChangePluginState = (name: string, status: Status) => {2
    this.setState({2
      plugins: {2
        ...this.state.plugins,2
        [name]: {2
          ...this.state.plugins[name],2
          status,2
        },2
      },2
      restartRequired: true,2
    });2
  };2
2
  relaunch() {2
    app.relaunch();2
    app.exit(0);2
  }2
2
  render() {2
    // $FlowFixMe2
    const plugins: Array<PluginT> = Object.values(this.state.plugins);2
    const availablePlugins = plugins.filter(2
      ({status}) => !INSTALLED.includes(status),2
    );2
    return (2
      <Container>2
        <FlexColumn fill={true}>2
          {this.state.restartRequired && (2
            <RestartRequired onClick={this.relaunch}>2
              <Glyph name="arrows-circle" size={12} color={colors.white} />2
              &nbsp; Restart Required: Click to Restart2
            </RestartRequired>2
          )}2
          <SectionTitle>Installed Plugins</SectionTitle>2
          {plugins2
            .filter(2
              ({status, name}) =>2
                INSTALLED.includes(status) &&2
                name.indexOf(this.props.searchTerm) > -1,2
            )2
            .sort(sortByName)2
            .map((plugin: PluginT) => (2
              <PluginItem2
                plugin={plugin}2
                key={plugin.name}2
                onChangeState={action =>2
                  this.onChangePluginState(plugin.name, action)2
                }2
              />2
            ))}2
          <SectionTitle>Available Plugins</SectionTitle>2
          {availablePlugins2
            .filter(({name}) => name.indexOf(this.props.searchTerm) > -1)2
            .sort(sortByName)2
            .map((plugin: PluginT) => (2
              <PluginItem2
                plugin={plugin}2
                key={plugin.name}2
                onChangeState={action =>2
                  this.onChangePluginState(plugin.name, action)2
                }2
              />2
            ))}2
          {!this.state.searchCompleted && (2
            <Loading>2
              <LoadingIndicator size={32} />2
            </Loading>2
          )}2
        </FlexColumn>2
      </Container>2
    );2
  }2
}2
2
const SearchablePluginManager = Searchable(PluginManager);2
2
export default class extends PureComponent<{}> {2
  render() {2
    return (2
      <FlexColumn fill={true}>2
        <SearchablePluginManager />2
      </FlexColumn>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  PureComponent,2
  FlexColumn,2
  FlexRow,2
  FlexBox,2
  Text,2
  Button,2
  styled,2
  colors,2
} from 'sonar';2
2
const Anchor = styled.image({2
  zIndex: 6,2
  position: 'absolute',2
  bottom: 0,2
  left: '50%',2
  transform: 'translate(-50%, calc(100% + 2px))',2
});2
2
const PopoverContainer = FlexColumn.extends({2
  backgroundColor: colors.white,2
  borderRadius: 7,2
  border: '1px solid rgba(0,0,0,0.3)',2
  boxShadow: '0 2px 10px 0 rgba(0,0,0,0.3)',2
  position: 'absolute',2
  zIndex: 5,2
  minWidth: 240,2
  bottom: 0,2
  marginTop: 15,2
  left: '50%',2
  transform: 'translate(-50%, calc(100% + 15px))',2
  overflow: 'hidden',2
  '&::before': {2
    content: '""',2
    display: 'block',2
    position: 'absolute',2
    left: '50%',2
    transform: 'translateX(-50%)',2
    height: 13,2
    top: -13,2
    width: 26,2
    backgroundColor: colors.white,2
  },2
});2
2
const Heading = Text.extends({2
  display: 'block',2
  backgroundColor: colors.white,2
  color: colors.light30,2
  fontSize: 11,2
  fontWeight: 600,2
  lineHeight: '21px',2
  padding: '4px 8px 0',2
});2
2
const PopoverItem = FlexRow.extends({2
  alignItems: 'center',2
  borderBottom: `1px solid ${colors.light05}`,2
  height: 50,2
  '&:last-child': {2
    borderBottom: 'none',2
  },2
});2
2
const ItemTitle = Text.extends({2
  display: 'block',2
  fontSize: 14,2
  fontWeight: 400,2
  lineHeight: '120%',2
  textOverflow: 'ellipsis',2
  overflow: 'hidden',2
  whiteSpace: 'nowrap',2
  marginBottom: 1,2
});2
2
const ItemSubtitle = Text.extends({2
  display: 'block',2
  fontWeight: 400,2
  fontSize: 11,2
  color: colors.light30,2
  lineHeight: '14px',2
  textOverflow: 'ellipsis',2
  overflow: 'hidden',2
  whiteSpace: 'nowrap',2
});2
2
const ItemImage = FlexBox.extends({2
  alignItems: 'center',2
  justifyContent: 'center',2
  width: 40,2
  flexShrink: 0,2
});2
2
const ItemContent = styled.view({2
  minWidth: 0,2
  paddingRight: 5,2
  flexGrow: 1,2
});2
2
const Section = styled.view({2
  borderBottom: `1px solid ${colors.light05}`,2
  '&:last-child': {2
    borderBottom: 'none',2
  },2
});2
2
const Action = Button.extends({2
  border: `1px solid ${colors.macOSTitleBarButtonBorder}`,2
  background: 'transparent',2
  color: colors.macOSTitleBarIconSelected,2
  marginRight: 8,2
  lineHeight: '22px',2
  '&:hover': {2
    background: 'transparent',2
  },2
  '&:active': {2
    background: 'transparent',2
    border: `1px solid ${colors.macOSTitleBarButtonBorder}`,2
  },2
});2
2
type Props = {|2
  sections: Array<{2
    title: string,2
    items: Array<{2
      title: string,2
      subtitle: string,2
      onClick?: Function,2
      icon?: React.Element<*>,2
    }>,2
  }>,2
  onDismiss: Function,2
|};2
2
export default class Popover extends PureComponent<Props> {2
  _ref: ?Element;2
2
  componentDidMount() {2
    window.document.addEventListener('click', this.handleClick);2
  }2
2
  componentWillUnmount() {2
    window.document.addEventListener('click', this.handleClick);2
  }2
2
  handleClick = (e: SyntheticMouseEvent<>) => {2
    // $FlowFixMe2
    if (this._ref && !this._ref.contains(e.target)) {2
      this.props.onDismiss();2
    }2
  };2
2
  _setRef = (ref: ?Element) => {2
    this._ref = ref;2
  };2
2
  render() {2
    return [2
      <Anchor src="./anchor.svg" key="anchor" />,2
      <PopoverContainer innerRef={this._setRef} key="popup">2
        {this.props.sections.map(section => {2
          if (section.items.length > 0) {2
            return (2
              <Section key={section.title}>2
                <Heading>{section.title}</Heading>2
                {section.items.map(item => (2
                  <PopoverItem key={item.title}>2
                    <ItemImage>{item.icon}</ItemImage>2
                    <ItemContent>2
                      <ItemTitle>{item.title}</ItemTitle>2
                      <ItemSubtitle>{item.subtitle}</ItemSubtitle>2
                    </ItemContent>2
                    {item.onClick && (2
                      <Action onClick={item.onClick} compact={true}>2
                        Run2
                      </Action>2
                    )}2
                  </PopoverItem>2
                ))}2
              </Section>2
            );2
          } else {2
            return null;2
          }2
        })}2
      </PopoverContainer>,2
    ];2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  colors,2
  Button,2
  ButtonGroup,2
  FlexRow,2
  FlexBox,2
  Component,2
  Spacer,2
  Glyph,2
  GK,2
} from 'sonar';2
import {2
  loadsDynamicPlugins,2
  dynamicPluginPath,2
} from '../utils/dynamicPluginLoading.js';2
import {connect} from 'react-redux';2
import {2
  toggleBugDialogVisible,2
  toggleLeftSidebarVisible,2
  toggleRightSidebarVisible,2
  togglePluginManagerVisible,2
} from '../reducers/application.js';2
import DevicesButton from './DevicesButton.js';2
import Version from './Version.js';2
import AutoUpdateVersion from './AutoUpdateVersion.js';2
import config from '../fb-stubs/config.js';2
2
const TitleBar = FlexRow.extends(2
  {2
    background: props =>2
      props.focused2
        ? `linear-gradient(to bottom, ${2
            colors.macOSTitleBarBackgroundTop2
          } 0%, ${colors.macOSTitleBarBackgroundBottom} 100%)`2
        : colors.macOSTitleBarBackgroundBlur,2
    borderBottom: props =>2
      `1px solid ${2
        props.focused2
          ? colors.macOSTitleBarBorder2
          : colors.macOSTitleBarBorderBlur2
      }`,2
    height: 38,2
    flexShrink: 0,2
    width: '100%',2
    alignItems: 'center',2
    paddingLeft: 80,2
    paddingRight: 10,2
    justifyContent: 'space-between',2
    // $FlowFixMe2
    WebkitAppRegion: 'drag',2
  },2
  {2
    ignoreAttributes: ['focused'],2
  },2
);2
2
const Icon = FlexBox.extends({2
  marginRight: 3,2
});2
2
type Props = {|2
  windowIsFocused: boolean,2
  leftSidebarVisible: boolean,2
  rightSidebarVisible: boolean,2
  rightSidebarAvailable: boolean,2
  pluginManagerVisible: boolean,2
  toggleBugDialogVisible: (visible?: boolean) => void,2
  toggleLeftSidebarVisible: (visible?: boolean) => void,2
  toggleRightSidebarVisible: (visible?: boolean) => void,2
  togglePluginManagerVisible: (visible?: boolean) => void,2
|};2
2
class SonarTitleBar extends Component<Props> {2
  render() {2
    return (2
      <TitleBar focused={this.props.windowIsFocused} className="toolbar">2
        <DevicesButton />2
        <Spacer />2
        {loadsDynamicPlugins() && (2
          <Icon2
            title={`Plugins are loaded dynamically from ${dynamicPluginPath() ||2
              ''}`}>2
            <Glyph color={colors.light30} name="flash-default" size={16} />2
          </Icon>2
        )}2
        {process.platform === 'darwin' ? <AutoUpdateVersion /> : <Version />}2
        {config.bugReportButtonVisible && (2
          <Button2
            compact={true}2
            onClick={() => this.props.toggleBugDialogVisible()}2
            title="Report Bug"2
            icon="bug"2
          />2
        )}2
        {GK.get('sonar_dynamic_plugins') && (2
          <Button2
            compact={true}2
            onClick={() => this.props.toggleBugDialogVisible()}2
            selected={this.props.pluginManagerVisible}2
            title="Plugin Manager"2
            icon="apps"2
          />2
        )}2
        <ButtonGroup>2
          <Button2
            compact={true}2
            selected={this.props.leftSidebarVisible}2
            onClick={() => this.props.toggleLeftSidebarVisible()}2
            icon="icons/sidebar_left.svg"2
            iconSize={20}2
            title="Toggle Plugins"2
          />2
          <Button2
            compact={true}2
            selected={this.props.rightSidebarVisible}2
            onClick={() => this.props.toggleRightSidebarVisible()}2
            icon="icons/sidebar_right.svg"2
            iconSize={20}2
            title="Toggle Details"2
            disabled={!this.props.rightSidebarAvailable}2
          />2
        </ButtonGroup>2
      </TitleBar>2
    );2
  }2
}2
2
export default connect(2
  ({2
    application: {2
      windowIsFocused,2
      leftSidebarVisible,2
      rightSidebarVisible,2
      rightSidebarAvailable,2
      pluginManagerVisible,2
    },2
  }) => ({2
    windowIsFocused,2
    leftSidebarVisible,2
    rightSidebarVisible,2
    rightSidebarAvailable,2
    pluginManagerVisible,2
  }),2
  {2
    toggleBugDialogVisible,2
    toggleLeftSidebarVisible,2
    toggleRightSidebarVisible,2
    togglePluginManagerVisible,2
  },2
)(SonarTitleBar);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component, FlexRow, colors, LoadingIndicator} from 'sonar';2
import {version} from '../../package.json';2
import {remote} from 'electron';2
import * as path from 'path';2
import {userInfo} from 'os';2
import * as fs from 'fs';2
2
const VERSION_URL =2
  'https://interngraph.intern.facebook.com/sonar/version?app=543626909362475&token=AeNRaexWgPooanyxG0';2
2
type VersionState = {2
  status: 'unknown' | 'outdated' | 'latest' | 'updated' | 'errored',2
};2
2
export default class Version extends Component<{}, VersionState> {2
  state = {2
    status: 'unknown',2
  };2
2
  static Container = FlexRow.extends({2
    alignItems: 'center',2
    marginRight: 7,2
    marginLeft: 7,2
    marginTop: -1,2
    color: colors.light50,2
  });2
2
  static UpdatedContainer = FlexRow.extends({2
    backgroundColor: colors.blackAlpha10,2
    borderRadius: '999em',2
    padding: '2px 6px',2
    marginLeft: 7,2
    color: colors.light80,2
    '&:hover': {2
      backgroundColor: colors.blackAlpha15,2
    },2
  });2
2
  componentDidMount() {2
    this.watchUpdates();2
2
    this.checkVersion().catch(() => {2
      this.setState({status: 'errored'});2
    });2
  }2
2
  async watchUpdates() {2
    fs.watch(path.join(userInfo().homedir, '.sonar-desktop'), () =>2
      this.setState({status: 'updated'}),2
    );2
  }2
2
  async checkVersion() {2
    const req = await fetch(VERSION_URL);2
    const json = await req.json();2
    this.setState({status: json.version === version ? 'latest' : 'outdated'});2
  }2
2
  onClick = () => {2
    // mark the app to relaunch once killed2
    remote.app.relaunch();2
    // close the current window2
    remote.getCurrentWindow().destroy();2
  };2
2
  render() {2
    const {status} = this.state;2
    return (2
      <Version.Container>2
        {version}2
        {status === 'outdated' && [2
          <Version.Container key="loading">2
            <LoadingIndicator size={16} />2
          </Version.Container>,2
          'Updating...',2
        ]}2
        {status === 'updated' && (2
          <Version.UpdatedContainer onClick={this.onClick}>2
            Restart Sonar2
          </Version.UpdatedContainer>2
        )}2
      </Version.Container>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  styled,2
  PureComponent,2
  FlexColumn,2
  FlexRow,2
  Text,2
  Glyph,2
  colors,2
  brandColors,2
} from 'sonar';2
import {isProduction} from '../utils/dynamicPluginLoading';2
import {shell, remote} from 'electron';2
2
const Container = FlexColumn.extends({2
  height: '100%',2
  width: '100%',2
  justifyContent: 'center',2
  alignItems: 'center',2
  backgroundImage: 'url(./pattern.gif)',2
});2
2
const Welcome = FlexColumn.extends(2
  {2
    width: 460,2
    background: colors.white,2
    borderRadius: 10,2
    boxShadow: '0 1px 3px rgba(0,0,0,0.25)',2
    overflow: 'hidden',2
    opacity: props => (props.isMounted ? 1 : 0),2
    transform: props => `translateY(${props.isMounted ? 0 : 20}px)`,2
    transition: '0.6s all ease-out',2
  },2
  {2
    ignoreAttributes: ['isMounted'],2
  },2
);2
2
const Title = Text.extends({2
  fontSize: 24,2
  fontWeight: 300,2
  textAlign: 'center',2
  color: colors.light50,2
  marginBottom: 16,2
});2
2
const Version = Text.extends({2
  textAlign: 'center',2
  fontSize: 11,2
  fontWeight: 300,2
  color: colors.light30,2
  marginBottom: 60,2
});2
2
const Item = FlexRow.extends({2
  padding: 10,2
  cursor: 'pointer',2
  alignItems: 'center',2
  borderTop: `1px solid ${colors.light10}`,2
  '&:hover, &:focus, &:active': {2
    backgroundColor: colors.light02,2
    textDecoration: 'none',2
  },2
});2
2
const ItemTitle = Text.extends({2
  color: colors.light50,2
  fontSize: 15,2
});2
2
const ItemSubTitle = Text.extends({2
  color: colors.light30,2
  fontSize: 11,2
  marginTop: 2,2
});2
2
const Icon = Glyph.extends({2
  marginRight: 11,2
  marginLeft: 6,2
});2
2
const Logo = styled.image({2
  width: 128,2
  height: 128,2
  alignSelf: 'center',2
  marginTop: 50,2
  marginBottom: 20,2
});2
2
type Props = {};2
type State = {2
  isMounted: boolean,2
};2
2
export default class WelcomeScreen extends PureComponent<Props, State> {2
  state = {2
    isMounted: false,2
  };2
2
  componentDidMount() {2
    setTimeout(2
      () =>2
        this.setState({2
          isMounted: true,2
        }),2
      100,2
    );2
  }2
2
  render() {2
    return (2
      <Container>2
        <Welcome isMounted={this.state.isMounted}>2
          <Logo src="./icon.png" />2
          <Title>Welcome to Sonar</Title>2
          <Version>2
            {isProduction()2
              ? `Version ${remote.app.getVersion()}`2
              : 'Development Mode'}2
          </Version>2
          <Item2
            onClick={() =>2
              shell.openExternal('https://fbsonar.com/docs/understand.html')2
            }>2
            <Icon size={20} name="rocket" color={brandColors.Sonar} />2
            <FlexColumn>2
              <ItemTitle>Using Sonar</ItemTitle>2
              <ItemSubTitle>2
                Learn how Sonar can help you debugging your App2
              </ItemSubTitle>2
            </FlexColumn>2
          </Item>2
          <Item2
            onClick={() =>2
              shell.openExternal('https://fbsonar.com/docs/create-plugin.html')2
            }>2
            <Icon size={20} name="magic-wand" color={brandColors.Sonar} />2
            <FlexColumn>2
              <ItemTitle>Create your own plugin</ItemTitle>2
              <ItemSubTitle>Get started with these pointers</ItemSubTitle>2
            </FlexColumn>2
          </Item>2
          <Item2
            onClick={() =>2
              shell.openExternal(2
                'https://fbsonar.com/docs/getting-started.html',2
              )2
            }>2
            <Icon size={20} name="tools" color={brandColors.Sonar} />2
            <FlexColumn>2
              <ItemTitle>Add Sonar support to your app</ItemTitle>2
              <ItemSubTitle>Get started with these pointers</ItemSubTitle>2
            </FlexColumn>2
          </Item>2
          <Item2
            onClick={() =>2
              shell.openExternal('https://github.com/facebook/Sonar/issues')2
            }>2
            <Icon size={20} name="posts" color={brandColors.Sonar} />2
            <FlexColumn>2
              <ItemTitle>Contributing and Feedback</ItemTitle>2
              <ItemSubTitle>2
                Report issues and help us improving Sonar2
              </ItemSubTitle>2
            </FlexColumn>2
          </Item>2
        </Welcome>2
      </Container>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
import {GK} from 'sonar';2
import logs from './logs/index.js';2
import cpu from './cpu/index.js';2
import screen from './screen/index.js';2
2
const plugins = [logs];2
2
if (GK.get('sonar_uiperf')) {2
  plugins.push(cpu);2
}2
2
if (GK.get('sonar_screen_plugin')) {2
  plugins.push(screen);2
}2
2
export const devicePlugins = plugins;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {SonarDevicePlugin} from 'sonar';2
var adb = require('adbkit-fb');2
2
import {2
  FlexColumn,2
  FlexRow,2
  Button,2
  Toolbar,2
  Text,2
  ManagedTable,2
  colors,2
} from 'sonar';2
2
type ADBClient = any;2
type AndroidDevice = any;2
type TableRows = any;2
2
// we keep vairable name with underline for to physical path mappings on device2
type CPUFrequency = {|2
  cpu_id: number,2
  scaling_cur_freq: number,2
  scaling_min_freq: number,2
  scaling_max_freq: number,2
  cpuinfo_max_freq: number,2
  cpuinfo_min_freq: number,2
|};2
2
type CPUState = {|2
  cpuFreq: Array<CPUFrequency>,2
  cpuCount: number,2
  monitoring: boolean,2
|};2
2
type ShellCallBack = (output: string) => void;2
2
const ColumnSizes = {2
  cpu_id: '10%',2
  scaling_cur_freq: 'flex',2
  scaling_min_freq: 'flex',2
  scaling_max_freq: 'flex',2
  cpuinfo_min_freq: 'flex',2
  cpuinfo_max_freq: 'flex',2
};2
2
const Columns = {2
  cpu_id: {2
    value: 'CPU ID',2
    resizable: true,2
  },2
  scaling_cur_freq: {2
    value: 'Scaling Current',2
    resizable: true,2
  },2
  scaling_min_freq: {2
    value: 'Scaling MIN',2
    resizable: true,2
  },2
  scaling_max_freq: {2
    value: 'Scaling MAX',2
    resizable: true,2
  },2
  cpuinfo_min_freq: {2
    value: 'MIN Frequency',2
    resizable: true,2
  },2
  cpuinfo_max_freq: {2
    value: 'MAX Frequency',2
    resizable: true,2
  },2
};2
2
// check if str is a number2
function isNormalInteger(str) {2
  let n = Math.floor(Number(str));2
  return String(n) === str && n >= 0;2
}2
2
// format frequency to MHz, GHz2
function formatFrequency(freq) {2
  if (freq == -1) {2
    return 'N/A';2
  } else if (freq == -2) {2
    return 'off';2
  } else if (freq > 1000 * 1000) {2
    return (freq / 1000 / 1000).toFixed(2) + ' GHz';2
  } else {2
    return freq / 1000 + ' MHz';2
  }2
}2
2
export default class CPUFrequencyTable extends SonarDevicePlugin<CPUState> {2
  static id = 'DeviceCPU';2
  static title = 'CPU';2
  static icon = 'underline';2
2
  adbClient: ADBClient;2
  intervalID: ?IntervalID;2
  device: AndroidDevice;2
2
  init() {2
    this.setState({2
      cpuFreq: [],2
      cpuCount: 0,2
      monitoring: false,2
    });2
2
    this.adbClient = this.device.adb;2
2
    // check how many cores we have on this device2
    this.executeShell((output: string) => {2
      let idx = output.indexOf('-');2
      let cpuFreq = [];2
      let count = parseInt(output.substring(idx + 1), 10) + 1;2
      for (let i = 0; i < count; ++i) {2
        cpuFreq[i] = {2
          cpu_id: i,2
          scaling_cur_freq: -1,2
          scaling_min_freq: -1,2
          scaling_max_freq: -1,2
          cpuinfo_min_freq: -1,2
          cpuinfo_max_freq: -1,2
        };2
      }2
      this.setState({2
        cpuCount: count,2
        cpuFreq: cpuFreq,2
      });2
    }, 'cat /sys/devices/system/cpu/possible');2
  }2
2
  executeShell = (callback: ShellCallBack, command: string) => {2
    this.adbClient2
      .shell(this.device.serial, command)2
      .then(adb.util.readAll)2
      .then(function(output) {2
        return callback(output.toString().trim());2
      });2
  };2
2
  updateCoreFrequency = (core: number, type: string) => {2
    this.executeShell((output: string) => {2
      let cpuFreq = this.state.cpuFreq;2
      let newFreq = isNormalInteger(output) ? parseInt(output, 10) : -1;2
2
      // update table only if frequency changed2
      if (cpuFreq[core][type] != newFreq) {2
        cpuFreq[core][type] = newFreq;2
        if (type == 'scaling_cur_freq' && cpuFreq[core][type] < 0) {2
          // cannot find current freq means offline2
          cpuFreq[core][type] = -2;2
        }2
2
        this.setState({2
          cpuFreq: cpuFreq,2
        });2
      }2
    }, 'cat /sys/devices/system/cpu/cpu' + core + '/cpufreq/' + type);2
  };2
2
  readCoreFrequency = (core: number) => {2
    let freq = this.state.cpuFreq[core];2
    if (freq.cpuinfo_max_freq < 0) {2
      this.updateCoreFrequency(core, 'cpuinfo_max_freq');2
    }2
    if (freq.cpuinfo_min_freq < 0) {2
      this.updateCoreFrequency(core, 'cpuinfo_min_freq');2
    }2
    this.updateCoreFrequency(core, 'scaling_cur_freq');2
    this.updateCoreFrequency(core, 'scaling_min_freq');2
    this.updateCoreFrequency(core, 'scaling_max_freq');2
  };2
2
  onStartMonitor = () => {2
    if (this.intervalID) {2
      return;2
    }2
2
    this.intervalID = setInterval(() => {2
      for (let i = 0; i < this.state.cpuCount; ++i) {2
        this.readCoreFrequency(i);2
      }2
    }, 500);2
2
    this.setState({2
      monitoring: true,2
    });2
  };2
2
  onStopMonitor = () => {2
    if (!this.intervalID) {2
      return;2
    } else {2
      clearInterval(this.intervalID);2
      this.intervalID = null;2
      this.setState({2
        monitoring: false,2
      });2
      this.cleanup();2
    }2
  };2
2
  cleanup = () => {2
    let cpuFreq = this.state.cpuFreq;2
    for (let i = 0; i < this.state.cpuCount; ++i) {2
      cpuFreq[i].scaling_cur_freq = -1;2
      cpuFreq[i].scaling_min_freq = -1;2
      cpuFreq[i].scaling_max_freq = -1;2
      // we don't cleanup cpuinfo_min_freq, cpuinfo_max_freq2
      // because usually they are fixed (hardware)2
    }2
    this.setState({2
      cpuFreq: cpuFreq,2
    });2
  };2
2
  teardown = () => {2
    this.cleanup();2
  };2
2
  buildRow = (freq: CPUFrequency) => {2
    let style = {};2
    if (freq.scaling_cur_freq == -2) {2
      style = {2
        style: {2
          backgroundColor: colors.blueTint30,2
          color: colors.white,2
          fontWeight: 700,2
        },2
      };2
    } else if (2
      freq.scaling_min_freq != freq.cpuinfo_min_freq &&2
      freq.scaling_min_freq > 0 &&2
      freq.cpuinfo_min_freq > 02
    ) {2
      style = {2
        style: {2
          backgroundColor: colors.redTint,2
          color: colors.red,2
          fontWeight: 700,2
        },2
      };2
    } else if (2
      freq.scaling_max_freq != freq.cpuinfo_max_freq &&2
      freq.scaling_max_freq > 0 &&2
      freq.cpuinfo_max_freq > 02
    ) {2
      style = {2
        style: {2
          backgroundColor: colors.yellowTint,2
          color: colors.yellow,2
          fontWeight: 700,2
        },2
      };2
    }2
2
    return {2
      columns: {2
        cpu_id: {value: <Text>CPU_{freq.cpu_id}</Text>},2
        scaling_cur_freq: {2
          value: <Text>{formatFrequency(freq.scaling_cur_freq)}</Text>,2
        },2
        scaling_min_freq: {2
          value: <Text>{formatFrequency(freq.scaling_min_freq)}</Text>,2
        },2
        scaling_max_freq: {2
          value: <Text>{formatFrequency(freq.scaling_max_freq)}</Text>,2
        },2
        cpuinfo_min_freq: {2
          value: <Text>{formatFrequency(freq.cpuinfo_min_freq)}</Text>,2
        },2
        cpuinfo_max_freq: {2
          value: <Text>{formatFrequency(freq.cpuinfo_max_freq)}</Text>,2
        },2
      },2
      key: freq.cpu_id,2
      style,2
    };2
  };2
2
  frequencyRows = (cpuFreqs: Array<CPUFrequency>): TableRows => {2
    let rows = [];2
    for (const cpuFreq of cpuFreqs) {2
      rows.push(this.buildRow(cpuFreq));2
    }2
    return rows;2
  };2
2
  render() {2
    return (2
      <FlexRow>2
        <FlexColumn fill={true}>2
          <Toolbar position="top">2
            {this.state.monitoring ? (2
              <Button onClick={this.onStopMonitor} icon="pause">2
                Pause2
              </Button>2
            ) : (2
              <Button onClick={this.onStartMonitor} icon="play">2
                Start2
              </Button>2
            )}2
          </Toolbar>2
          <ManagedTable2
            multiline={true}2
            columnSizes={ColumnSizes}2
            columns={Columns}2
            autoHeight={true}2
            floating={false}2
            zebra={true}2
            rows={this.frequencyRows(this.state.cpuFreq)}2
          />2
        </FlexColumn>2
      </FlexRow>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
import LogTable from './LogTable.js';2
export default LogTable;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableBodyRow,2
  TableColumnOrder,2
  TableColumnSizes,2
  TableColumns,2
} from 'sonar';2
import type {Counter} from './LogWatcher.js';2
import type {DeviceLogEntry} from '../../devices/BaseDevice.js';2
2
import {2
  Text,2
  ManagedTable,2
  Button,2
  colors,2
  FlexCenter,2
  LoadingIndicator,2
  ContextMenu,2
  FlexColumn,2
  Glyph,2
} from 'sonar';2
import {SonarDevicePlugin, SearchableTable} from 'sonar';2
import textContent from '../../utils/textContent.js';2
import createPaste from '../../utils/createPaste.js';2
import LogWatcher from './LogWatcher';2
2
const LOG_WATCHER_LOCAL_STORAGE_KEY = 'LOG_WATCHER_LOCAL_STORAGE_KEY';2
2
type Entries = Array<{2
  row: TableBodyRow,2
  entry: DeviceLogEntry,2
}>;2
2
type LogsState = {|2
  initialising: boolean,2
  rows: Array<TableBodyRow>,2
  entries: Entries,2
  key2entry: {[key: string]: DeviceLogEntry},2
  highlightedRows: Array<string>,2
  counters: Array<Counter>,2
|};2
2
const Icon = Glyph.extends({2
  marginTop: 5,2
});2
2
function getLineCount(str: string): number {2
  let count = 1;2
  for (let i = 0; i < str.length; i++) {2
    if (str[i] === '\n') {2
      count++;2
    }2
  }2
  return count;2
}2
2
function keepKeys(obj, keys) {2
  const result = {};2
  for (const key in obj) {2
    if (keys.includes(key)) {2
      result[key] = obj[key];2
    }2
  }2
  return result;2
}2
2
const COLUMN_SIZE = {2
  type: 32,2
  time: 120,2
  pid: 60,2
  tid: 60,2
  tag: 120,2
  app: 200,2
  message: 'flex',2
};2
2
const COLUMNS = {2
  type: {2
    value: '',2
  },2
  time: {2
    value: 'Time',2
  },2
  pid: {2
    value: 'PID',2
  },2
  tid: {2
    value: 'TID',2
  },2
  tag: {2
    value: 'Tag',2
  },2
  app: {2
    value: 'App',2
  },2
  message: {2
    value: 'Message',2
  },2
};2
2
const INITIAL_COLUMN_ORDER = [2
  {2
    key: 'type',2
    visible: true,2
  },2
  {2
    key: 'time',2
    visible: false,2
  },2
  {2
    key: 'pid',2
    visible: false,2
  },2
  {2
    key: 'tid',2
    visible: false,2
  },2
  {2
    key: 'tag',2
    visible: true,2
  },2
  {2
    key: 'app',2
    visible: true,2
  },2
  {2
    key: 'message',2
    visible: true,2
  },2
];2
2
const LOG_TYPES: {2
  [level: string]: {2
    label: string,2
    color: string,2
    icon?: React.Node,2
    style?: Object,2
  },2
} = {2
  verbose: {2
    label: 'Verbose',2
    color: colors.purple,2
  },2
  debug: {2
    label: 'Debug',2
    color: colors.grey,2
  },2
  info: {2
    label: 'Info',2
    icon: <Icon name="info-circle" color={colors.cyan} />,2
    color: colors.cyan,2
  },2
  warn: {2
    label: 'Warn',2
    style: {2
      backgroundColor: colors.yellowTint,2
      color: colors.yellow,2
      fontWeight: 500,2
    },2
    icon: <Icon name="caution-triangle" color={colors.yellow} />,2
    color: colors.yellow,2
  },2
  error: {2
    label: 'Error',2
    style: {2
      backgroundColor: colors.redTint,2
      color: colors.red,2
      fontWeight: 500,2
    },2
    icon: <Icon name="caution-octagon" color={colors.red} />,2
    color: colors.red,2
  },2
  fatal: {2
    label: 'Fatal',2
    style: {2
      backgroundColor: colors.redTint,2
      color: colors.red,2
      fontWeight: 700,2
    },2
    icon: <Icon name="stop" color={colors.red} />,2
    color: colors.red,2
  },2
};2
2
const DEFAULT_FILTERS = [2
  {2
    type: 'enum',2
    enum: Object.keys(LOG_TYPES).map(value => ({2
      label: LOG_TYPES[value].label,2
      value,2
    })),2
    key: 'type',2
    value: [],2
    persistent: true,2
  },2
];2
2
const NonSelectableText = Text.extends({2
  alignSelf: 'baseline',2
  userSelect: 'none',2
  lineHeight: '130%',2
  marginTop: 6,2
});2
2
const LogCount = NonSelectableText.extends(2
  {2
    backgroundColor: props => props.color,2
    borderRadius: '999em',2
    fontSize: 11,2
    display: 'flex',2
    justifyContent: 'center',2
    alignItems: 'center',2
    marginTop: 4,2
    width: 16,2
    height: 16,2
    color: colors.white,2
  },2
  {2
    ignoreAttributes: ['color'],2
  },2
);2
2
const HiddenScrollText = NonSelectableText.extends({2
  '&::-webkit-scrollbar': {2
    display: 'none',2
  },2
});2
2
function pad(chunk: mixed, len: number): string {2
  let str = String(chunk);2
  while (str.length < len) {2
    str = `0${str}`;2
  }2
  return str;2
}2
2
export default class LogTable extends SonarDevicePlugin<LogsState> {2
  static id = 'DeviceLogs';2
  static title = 'Logs';2
  static icon = 'arrow-right';2
  static keyboardActions = ['clear', 'goToBottom', 'createPaste'];2
2
  onKeyboardAction = (action: string) => {2
    if (action === 'clear') {2
      this.clearLogs();2
    } else if (action === 'goToBottom') {2
      this.goToBottom();2
    } else if (action === 'createPaste') {2
      this.createPaste();2
    }2
  };2
2
  restoreSavedCounters = (): Array<Counter> => {2
    const savedCounters =2
      window.localStorage.getItem(LOG_WATCHER_LOCAL_STORAGE_KEY) || '[]';2
    return JSON.parse(savedCounters).map((counter: Counter) => ({2
      ...counter,2
      expression: new RegExp(counter.label, 'gi'),2
      count: 0,2
    }));2
  };2
2
  state = {2
    rows: [],2
    entries: [],2
    key2entry: {},2
    initialising: true,2
    highlightedRows: [],2
    counters: this.restoreSavedCounters(),2
  };2
2
  tableRef: ?ManagedTable;2
  columns: TableColumns;2
  columnSizes: TableColumnSizes;2
  columnOrder: TableColumnOrder;2
2
  init() {2
    let batch: Entries = [];2
    let queued = false;2
    let counter = 0;2
2
    const supportedColumns = this.device.supportedColumns();2
    this.columns = keepKeys(COLUMNS, supportedColumns);2
    this.columnSizes = keepKeys(COLUMN_SIZE, supportedColumns);2
    this.columnOrder = INITIAL_COLUMN_ORDER.filter(obj =>2
      supportedColumns.includes(obj.key),2
    );2
2
    this.device.addLogListener((entry: DeviceLogEntry) => {2
      const {icon, style} =2
        LOG_TYPES[(entry.type: string)] || LOG_TYPES.verbose;2
2
      // clean message2
      const message = entry.message.trim();2
      entry.type === 'error';2
2
      let counterUpdated = false;2
      const counters = this.state.counters.map(counter => {2
        if (message.match(counter.expression)) {2
          counterUpdated = true;2
          if (counter.notify) {2
            new window.Notification(`${counter.label}`, {2
              body: 'The watched log message appeared',2
            });2
          }2
          return {2
            ...counter,2
            count: counter.count + 1,2
          };2
        } else {2
          return counter;2
        }2
      });2
      if (counterUpdated) {2
        this.setState({counters});2
      }2
2
      // build the item, it will either be batched or added straight away2
      const item = {2
        entry,2
        row: {2
          columns: {2
            type: {2
              value: icon,2
            },2
            time: {2
              value: (2
                <HiddenScrollText code={true}>2
                  {entry.date.toTimeString().split(' ')[0] +2
                    '.' +2
                    pad(entry.date.getMilliseconds(), 3)}2
                </HiddenScrollText>2
              ),2
            },2
            message: {2
              value: <HiddenScrollText code={true}>{message}</HiddenScrollText>,2
            },2
            tag: {2
              value: (2
                <NonSelectableText code={true}>{entry.tag}</NonSelectableText>2
              ),2
              isFilterable: true,2
            },2
            pid: {2
              value: (2
                <NonSelectableText code={true}>2
                  {String(entry.pid)}2
                </NonSelectableText>2
              ),2
              isFilterable: true,2
            },2
            tid: {2
              value: (2
                <NonSelectableText code={true}>2
                  {String(entry.tid)}2
                </NonSelectableText>2
              ),2
              isFilterable: true,2
            },2
            app: {2
              value: (2
                <NonSelectableText code={true}>{entry.app}</NonSelectableText>2
              ),2
              isFilterable: true,2
            },2
          },2
          height: getLineCount(message) * 15 + 10, // 15px per line height + 8px padding2
          style,2
          type: entry.type,2
          filterValue: entry.message,2
          key: String(counter++),2
        },2
      };2
2
      // batch up logs to be processed every 250ms, if we have lots of log2
      // messages coming in, then calling an setState 200+ times is actually2
      // pretty expensive2
      batch.push(item);2
2
      if (!queued) {2
        queued = true;2
2
        setTimeout(() => {2
          const thisBatch = batch;2
          batch = [];2
          queued = false;2
2
          // update rows/entries2
          this.setState(state => {2
            const rows = [...state.rows];2
            const entries = [...state.entries];2
            const key2entry = {...state.key2entry};2
2
            for (let i = 0; i < thisBatch.length; i++) {2
              const {entry, row} = thisBatch[i];2
              entries.push({row, entry});2
              key2entry[row.key] = entry;2
2
              let previousEntry: ?DeviceLogEntry = null;2
2
              if (i > 0) {2
                previousEntry = thisBatch[i - 1].entry;2
              } else if (state.rows.length > 0 && state.entries.length > 0) {2
                previousEntry = state.entries[state.entries.length - 1].entry;2
              }2
2
              this.addRowIfNeeded(rows, row, entry, previousEntry);2
            }2
2
            return {2
              entries,2
              rows,2
              key2entry,2
            };2
          });2
        }, 100);2
      }2
    });2
2
    setTimeout(() => {2
      this.setState({2
        initialising: false,2
      });2
    }, 2000);2
  }2
2
  addRowIfNeeded(2
    rows: Array<TableBodyRow>,2
    row: TableBodyRow,2
    entry: DeviceLogEntry,2
    previousEntry: ?DeviceLogEntry,2
  ) {2
    const previousRow = rows.length > 0 ? rows[rows.length - 1] : null;2
    if (2
      previousRow &&2
      previousEntry &&2
      entry.message === previousEntry.message &&2
      entry.tag === previousEntry.tag &&2
      previousRow.type != null2
    ) {2
      const count = (previousRow.columns.time.value.props.count || 1) + 1;2
      previousRow.columns.type.value = (2
        <LogCount color={LOG_TYPES[previousRow.type].color}>{count}</LogCount>2
      );2
    } else {2
      rows.push(row);2
    }2
  }2
2
  clearLogs = () => {2
    this.setState({2
      entries: [],2
      rows: [],2
      highlightedRows: [],2
      key2entry: {},2
      counters: this.state.counters.map(counter => ({2
        ...counter,2
        count: 0,2
      })),2
    });2
  };2
2
  createPaste = () => {2
    let paste = '';2
    const mapFn = row =>2
      Object.keys(COLUMNS)2
        .map(key => textContent(row.columns[key].value))2
        .join('\t');2
2
    if (this.state.highlightedRows.length > 0) {2
      // create paste from selection2
      paste = this.state.rows2
        .filter(row => this.state.highlightedRows.indexOf(row.key) > -1)2
        .map(mapFn)2
        .join('\n');2
    } else {2
      // create paste with all rows2
      paste = this.state.rows.map(mapFn).join('\n');2
    }2
    createPaste(paste);2
  };2
2
  setTableRef = (ref: React.ElementRef<*>) => {2
    this.tableRef = ref;2
  };2
2
  goToBottom = () => {2
    if (this.tableRef != null) {2
      this.tableRef.scrollToBottom();2
    }2
  };2
2
  onRowHighlighted = (highlightedRows: Array<string>) => {2
    this.setState({2
      ...this.state,2
      highlightedRows,2
    });2
  };2
2
  renderSidebar = () => {2
    return (2
      <LogWatcher2
        counters={this.state.counters}2
        onChange={counters =>2
          this.setState({counters}, () =>2
            window.localStorage.setItem(2
              LOG_WATCHER_LOCAL_STORAGE_KEY,2
              JSON.stringify(this.state.counters),2
            ),2
          )2
        }2
      />2
    );2
  };2
2
  static ContextMenu = ContextMenu.extends({2
    flex: 1,2
  });2
2
  render() {2
    const {initialising, highlightedRows, rows} = this.state;2
2
    const contextMenuItems = [2
      {2
        type: 'separator',2
      },2
      {2
        label: 'Clear all',2
        click: this.clearLogs,2
      },2
    ];2
    return initialising ? (2
      <FlexCenter fill={true}>2
        <LoadingIndicator />2
      </FlexCenter>2
    ) : (2
      <LogTable.ContextMenu items={contextMenuItems} component={FlexColumn}>2
        <SearchableTable2
          innerRef={this.setTableRef}2
          floating={false}2
          multiline={true}2
          columnSizes={this.columnSizes}2
          columnOrder={this.columnOrder}2
          columns={this.columns}2
          stickyBottom={highlightedRows.length === 0}2
          rows={rows}2
          onRowHighlighted={this.onRowHighlighted}2
          multiHighlight={true}2
          defaultFilters={DEFAULT_FILTERS}2
          zebra={false}2
          actions={<Button onClick={this.clearLogs}>Clear Logs</Button>}2
        />2
      </LogTable.ContextMenu>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  PureComponent,2
  FlexColumn,2
  Panel,2
  Input,2
  Toolbar,2
  Text,2
  ManagedTable,2
  Button,2
  colors,2
} from 'sonar';2
2
export type Counter = {2
  expression: RegExp,2
  count: number,2
  notify: boolean,2
  label: string,2
};2
2
type Props = {|2
  onChange: (counters: Array<Counter>) => void,2
  counters: Array<Counter>,2
|};2
2
type State = {2
  input: string,2
  highlightedRow: ?string,2
};2
2
const ColumnSizes = {2
  expression: '70%',2
  count: '15%',2
  notify: 'flex',2
};2
2
const Columns = {2
  expression: {2
    value: 'Expression',2
    resizable: false,2
  },2
  count: {2
    value: 'Count',2
    resizable: false,2
  },2
  notify: {2
    value: 'Notify',2
    resizable: false,2
  },2
};2
2
const Count = Text.extends({2
  alignSelf: 'center',2
  background: colors.macOSHighlightActive,2
  color: colors.white,2
  fontSize: 12,2
  fontWeight: 500,2
  textAlign: 'center',2
  borderRadius: '999em',2
  padding: '4px 9px 3px',2
  lineHeight: '100%',2
  marginLeft: 'auto',2
});2
2
const Checkbox = Input.extends({2
  lineHeight: '100%',2
  padding: 0,2
  margin: 0,2
  height: 'auto',2
  alignSelf: 'center',2
});2
2
const ExpressionInput = Input.extends({2
  flexGrow: 1,2
});2
2
const WatcherPanel = Panel.extends({2
  minHeight: 200,2
});2
2
export default class LogWatcher extends PureComponent<Props, State> {2
  state = {2
    input: '',2
    highlightedRow: null,2
  };2
2
  _inputRef: ?HTMLInputElement;2
2
  onAdd = () => {2
    if (2
      this.props.counters.findIndex(({label}) => label === this.state.input) >2
      -12
    ) {2
      // prevent duplicates2
      return;2
    }2
    this.props.onChange([2
      ...this.props.counters,2
      {2
        label: this.state.input,2
        expression: new RegExp(this.state.input, 'gi'),2
        notify: false,2
        count: 0,2
      },2
    ]);2
    this.setState({input: ''});2
  };2
2
  onChange = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    this.setState({2
      input: e.target.value,2
    });2
  };2
2
  resetCount = (index: number) => {2
    const newCounters = [...this.props.counters];2
    newCounters[index] = {2
      ...newCounters[index],2
      count: 0,2
    };2
    this.props.onChange(newCounters);2
  };2
2
  buildRows = () => {2
    return this.props.counters.map(({label, count, notify}, i) => ({2
      columns: {2
        expression: {2
          value: <Text code={true}>{label}</Text>,2
        },2
        count: {2
          value: <Count onClick={() => this.resetCount(i)}>{count}</Count>,2
        },2
        notify: {2
          value: (2
            <Checkbox2
              type="checkbox"2
              checked={notify}2
              onChange={() => this.setNotification(i, !notify)}2
            />2
          ),2
        },2
      },2
      key: label,2
    }));2
  };2
2
  setNotification = (index: number, notify: boolean) => {2
    const newCounters: Array<Counter> = [...this.props.counters];2
    newCounters[index] = {2
      ...newCounters[index],2
      notify,2
    };2
    this.props.onChange(newCounters);2
  };2
2
  onRowHighlighted = (rows: Array<string>) => {2
    this.setState({2
      highlightedRow: rows.length === 1 ? rows[0] : null,2
    });2
  };2
2
  onKeyDown = (e: SyntheticKeyboardEvent<>) => {2
    if (2
      (e.key === 'Delete' || e.key === 'Backspace') &&2
      this.state.highlightedRow != null2
    ) {2
      this.props.onChange(2
        this.props.counters.filter(2
          ({label}) => label !== this.state.highlightedRow,2
        ),2
      );2
    }2
  };2
2
  onSubmit = (e: SyntheticKeyboardEvent<>) => {2
    if (e.key === 'Enter') {2
      this.onAdd();2
    }2
  };2
2
  render() {2
    return (2
      <FlexColumn fill={true} tabIndex={-1} onKeyDown={this.onKeyDown}>2
        <WatcherPanel2
          heading="Expression Watcher"2
          floating={false}2
          padded={false}>2
          <Toolbar>2
            <ExpressionInput2
              value={this.state.input}2
              placeholder="Expression..."2
              onChange={this.onChange}2
              onKeyDown={this.onSubmit}2
            />2
            <Button onClick={this.onAdd}>Add counter</Button>2
          </Toolbar>2
          <ManagedTable2
            onRowHighlighted={this.onRowHighlighted}2
            columnSizes={ColumnSizes}2
            columns={Columns}2
            rows={this.buildRows()}2
            autoHeight={true}2
            floating={false}2
            zebra={false}2
          />2
        </WatcherPanel>2
      </FlexColumn>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {SonarDevicePlugin} from 'sonar';2
2
import {2
  Button,2
  FlexColumn,2
  FlexRow,2
  LoadingIndicator,2
  styled,2
  colors,2
  Component,2
} from 'sonar';2
2
const os = require('os');2
const fs = require('fs');2
const adb = require('adbkit-fb');2
const path = require('path');2
const exec = require('child_process').exec;2
const SCREENSHOT_FILE_NAME = 'screen.png';2
const VIDEO_FILE_NAME = 'video.mp4';2
const SCREENSHOT_PATH = path.join(2
  os.homedir(),2
  '/.sonar/',2
  SCREENSHOT_FILE_NAME,2
);2
const VIDEO_PATH = path.join(os.homedir(), '.sonar', VIDEO_FILE_NAME);2
2
type AndroidDevice = any;2
type AdbClient = any;2
type PullTransfer = any;2
2
type State = {|2
  pullingData: boolean,2
  recording: boolean,2
  recordingEnabled: boolean,2
  capturingScreenshot: boolean,2
|};2
2
const BigButton = Button.extends({2
  height: 200,2
  width: 200,2
  flexGrow: 1,2
  fontSize: 24,2
});2
2
const ButtonContainer = FlexRow.extends({2
  alignItems: 'center',2
  justifyContent: 'space-around',2
  padding: 20,2
});2
2
const LoadingSpinnerContainer = FlexRow.extends({2
  flexGrow: 1,2
  padding: 24,2
  justifyContent: 'center',2
  alignItems: 'center',2
});2
2
const LoadingSpinnerText = styled.text({2
  fontSize: 24,2
  marginLeft: 12,2
  color: colors.grey,2
});2
2
class LoadingSpinner extends Component<{}, {}> {2
  render() {2
    return (2
      <LoadingSpinnerContainer>2
        <LoadingIndicator />2
        <LoadingSpinnerText>Pulling files from device...</LoadingSpinnerText>2
      </LoadingSpinnerContainer>2
    );2
  }2
}2
2
function openFile(path: string): Promise<*> {2
  return new Promise((resolve, reject) => {2
    exec(`${getOpenCommand()} ${path}`, (error, stdout, stderr) => {2
      if (error) {2
        reject(error);2
      } else {2
        resolve(path);2
      }2
    });2
  });2
}2
2
function getOpenCommand(): string {2
  //TODO: TESTED ONLY ON MAC!2
  switch (os.platform()) {2
    case 'win32':2
      return 'start';2
    case 'linux':2
      return 'xdg-open';2
    default:2
      return 'open';2
  }2
}2
2
function writePngStreamToFile(stream: PullTransfer): Promise<string> {2
  return new Promise((resolve, reject) => {2
    stream.on('end', () => {2
      resolve(SCREENSHOT_PATH);2
    });2
    stream.on('error', reject);2
    stream.pipe(fs.createWriteStream(SCREENSHOT_PATH));2
  });2
}2
2
export default class ScreenPlugin extends SonarDevicePlugin<State> {2
  static id = 'DeviceScreen';2
  static title = 'Screen';2
  static icon = 'mobile';2
2
  device: AndroidDevice;2
  adbClient: AdbClient;2
2
  init() {2
    this.adbClient = this.device.adb;2
2
    this.executeShell(2
      `[ ! -f /system/bin/screenrecord ] && echo "File does not exist"`,2
    ).then(output => {2
      if (output) {2
        console.error(2
          'screenrecord util does not exist. Most likely it is an emulator which does not support screen recording via adb',2
        );2
        this.setState({2
          recordingEnabled: false,2
        });2
      } else {2
        this.setState({2
          recordingEnabled: true,2
        });2
      }2
    });2
  }2
2
  captureScreenshot = () => {2
    return this.adbClient2
      .screencap(this.device.serial)2
      .then(writePngStreamToFile)2
      .then(openFile)2
      .catch(error => {2
        //TODO: proper logging?2
        console.error(error);2
      });2
  };2
2
  pullFromDevice = (src: string, dst: string): Promise<string> => {2
    return new Promise((resolve, reject) => {2
      return this.adbClient.pull(this.device.serial, src).then(stream => {2
        stream.on('end', () => {2
          resolve(dst);2
        });2
        stream.on('error', reject);2
        stream.pipe(fs.createWriteStream(dst));2
      });2
    });2
  };2
2
  onRecordingClicked = () => {2
    if (this.state.recording) {2
      this.stopRecording();2
    } else {2
      this.startRecording();2
    }2
  };2
2
  onScreenshotClicked = () => {2
    var self = this;2
    this.setState({2
      capturingScreenshot: true,2
    });2
    this.captureScreenshot().then(() => {2
      self.setState({2
        capturingScreenshot: false,2
      });2
    });2
  };2
2
  startRecording = () => {2
    const self = this;2
    this.setState({2
      recording: true,2
    });2
    this.executeShell(`screenrecord --bugreport /sdcard/${VIDEO_FILE_NAME}`)2
      .then(output => {2
        if (output) {2
          throw output;2
        }2
      })2
      .then(() => {2
        self.setState({2
          recording: false,2
          pullingData: true,2
        });2
      })2
      .then(2
        (): Promise<string> => {2
          return self.pullFromDevice(`/sdcard/${VIDEO_FILE_NAME}`, VIDEO_PATH);2
        },2
      )2
      .then(openFile)2
      .then(() => {2
        self.executeShell(`rm /sdcard/${VIDEO_FILE_NAME}`);2
      })2
      .then(() => {2
        self.setState({2
          pullingData: false,2
        });2
      })2
      .catch(error => {2
        console.error(`unable to capture video: ${error}`);2
        self.setState({2
          recording: false,2
          pullingData: false,2
        });2
      });2
  };2
2
  stopRecording = () => {2
    this.executeShell(`pgrep 'screenrecord' -L 2`);2
  };2
2
  executeShell = (command: string): Promise<string> => {2
    return this.adbClient2
      .shell(this.device.serial, command)2
      .then(adb.util.readAll)2
      .then(output => {2
        return new Promise((resolve, reject) => {2
          resolve(output.toString().trim());2
        });2
      });2
  };2
2
  getLoadingSpinner = () => {2
    return this.state.pullingData ? <LoadingSpinner /> : null;2
  };2
2
  render() {2
    const recordingEnabled =2
      this.state.recordingEnabled &&2
      !this.state.capturingScreenshot &&2
      !this.state.pullingData;2
    const screenshotEnabled =2
      !this.state.recording &&2
      !this.state.capturingScreenshot &&2
      !this.state.pullingData;2
    return (2
      <FlexColumn>2
        <ButtonContainer>2
          <BigButton2
            key="video_btn"2
            onClick={!recordingEnabled ? null : this.onRecordingClicked}2
            icon={this.state.recording ? 'stop' : 'camcorder'}2
            disabled={!recordingEnabled}2
            selected={true}2
            pulse={this.state.recording}2
            iconSize={24}>2
            {!this.state.recording ? 'Record screen' : 'Stop recording'}2
          </BigButton>2
          <BigButton2
            key="screenshot_btn"2
            icon="camera"2
            selected={true}2
            onClick={!screenshotEnabled ? null : this.onScreenshotClicked}2
            iconSize={24}2
            pulse={this.state.capturingScreenshot}2
            disabled={!screenshotEnabled}>2
            Take screenshot2
          </BigButton>2
        </ButtonContainer>2
        {this.getLoadingSpinner()}2
      </FlexColumn>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {DeviceType, DeviceShell, DeviceLogListener} from './BaseDevice.js';2
2
import {Priority} from 'adbkit-logcat-fb';2
import child_process from 'child_process';2
2
// TODO2
import BaseDevice from './BaseDevice.js';2
2
type ADBClient = any;2
2
export default class AndroidDevice extends BaseDevice {2
  constructor(2
    serial: string,2
    deviceType: DeviceType,2
    title: string,2
    adb: ADBClient,2
  ) {2
    super(serial, deviceType, title);2
    this.adb = adb;2
    if (deviceType == 'physical') {2
      this.supportedPlugins.push('DeviceCPU');2
    }2
  }2
2
  supportedPlugins = [2
    'DeviceLogs',2
    'DeviceShell',2
    'DeviceFiles',2
    'DeviceScreen',2
  ];2
  icon = 'icons/android.svg';2
  os = 'Android';2
  adb: ADBClient;2
  pidAppMapping: {[key: number]: string} = {};2
2
  supportedColumns(): Array<string> {2
    return ['date', 'pid', 'tid', 'tag', 'message', 'type', 'time'];2
  }2
2
  addLogListener(callback: DeviceLogListener) {2
    this.adb.openLogcat(this.serial).then(reader => {2
      reader.on('entry', async entry => {2
        let type = 'unknown';2
        if (entry.priority === Priority.VERBOSE) {2
          type = 'verbose';2
        }2
        if (entry.priority === Priority.DEBUG) {2
          type = 'debug';2
        }2
        if (entry.priority === Priority.INFO) {2
          type = 'info';2
        }2
        if (entry.priority === Priority.WARN) {2
          type = 'warn';2
        }2
        if (entry.priority === Priority.ERROR) {2
          type = 'error';2
        }2
        if (entry.priority === Priority.FATAL) {2
          type = 'fatal';2
        }2
2
        callback({2
          tag: entry.tag,2
          pid: entry.pid,2
          tid: entry.tid,2
          message: entry.message,2
          date: entry.date,2
          type,2
        });2
      });2
    });2
  }2
2
  reverse(): Promise<void> {2
    if (this.deviceType === 'physical') {2
      return this.adb2
        .reverse(this.serial, 'tcp:8088', 'tcp:8088')2
        .then(_ => this.adb.reverse(this.serial, 'tcp:8089', 'tcp:8089'));2
    } else {2
      return Promise.resolve();2
    }2
  }2
2
  spawnShell(): DeviceShell {2
    return child_process.spawn('adb', ['-s', this.serial, 'shell', '-t', '-t']);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type stream from 'stream';2
import {SonarDevicePlugin} from 'sonar';2
2
export type DeviceLogEntry = {2
  date: Date,2
  pid: number,2
  tid: number,2
  app?: string,2
  type: 'unknown' | 'verbose' | 'debug' | 'info' | 'warn' | 'error' | 'fatal',2
  tag: string,2
  message: string,2
};2
2
export type DeviceShell = {2
  stdout: stream.Readable,2
  stderr: stream.Readable,2
  stdin: stream.Writable,2
};2
2
export type DeviceLogListener = (entry: DeviceLogEntry) => void;2
2
export type DeviceType = 'emulator' | 'physical';2
2
export default class BaseDevice {2
  constructor(serial: string, deviceType: DeviceType, title: string) {2
    this.serial = serial;2
    this.title = title;2
    this.deviceType = deviceType;2
  }2
2
  // operating system of this device2
  os: string;2
2
  // human readable name for this device2
  title: string;2
2
  // type of this device2
  deviceType: DeviceType;2
2
  // serial number for this device2
  serial: string;2
2
  // supported device plugins for this platform2
  supportedPlugins: Array<string> = [];2
2
  // possible src of icon to display next to the device title2
  icon: ?string;2
2
  supportsPlugin(DevicePlugin: Class<SonarDevicePlugin<>>) {2
    return this.supportedPlugins.includes(DevicePlugin.id);2
  }2
2
  // ensure that we don't serialise devices2
  toJSON() {2
    return null;2
  }2
2
  teardown() {}2
2
  supportedColumns(): Array<string> {2
    throw new Error('unimplemented');2
  }2
2
  addLogListener(listener: DeviceLogListener) {2
    throw new Error('unimplemented');2
  }2
2
  spawnShell(): DeviceShell {2
    throw new Error('unimplemented');2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  DeviceType,2
  DeviceLogEntry,2
  DeviceLogListener,2
} from './BaseDevice.js';2
import child_process from 'child_process';2
import BaseDevice from './BaseDevice.js';2
import JSONStream from 'JSONStream';2
import {Transform} from 'stream';2
2
type RawLogEntry = {2
  activityID: string, // Number in string format2
  eventMessage: string,2
  eventType: string,2
  machTimestamp: number,2
  processID: number,2
  processImagePath: string,2
  processImageUUID: string,2
  processUniqueID: number,2
  senderImagePath: string,2
  senderImageUUID: string,2
  senderProgramCounter: number,2
  threadID: number,2
  timestamp: string, // "2017-09-27 16:21:15.771213-0400"2
  timezoneName: string,2
  traceID: string,2
};2
2
export default class IOSDevice extends BaseDevice {2
  supportedPlugins = ['DeviceLogs'];2
  icon = 'icons/ios.svg';2
  os = 'iOS';2
2
  log: any;2
  buffer: string;2
2
  constructor(serial: string, deviceType: DeviceType, title: string) {2
    super(serial, deviceType, title);2
2
    this.buffer = '';2
    this.log = null;2
  }2
2
  teardown() {2
    if (this.log) {2
      this.log.kill();2
    }2
  }2
2
  supportedColumns(): Array<string> {2
    return ['date', 'pid', 'tid', 'tag', 'message', 'type', 'time'];2
  }2
2
  addLogListener(callback: DeviceLogListener) {2
    if (!this.log) {2
      this.log = child_process.spawn(2
        'xcrun',2
        [2
          'simctl',2
          'spawn',2
          'booted',2
          'log',2
          'stream',2
          '--style',2
          'json',2
          '--predicate',2
          'senderImagePath contains "Containers"',2
          '--info',2
          '--debug',2
        ],2
        {},2
      );2
2
      this.log.on('error', err => {2
        console.error(err);2
      });2
2
      this.log.stderr.on('data', data => {2
        console.error(data.toString());2
      });2
2
      this.log.on('exit', () => {2
        this.log = null;2
      });2
    }2
2
    this.log.stdout2
      .pipe(new StripLogPrefix())2
      .pipe(JSONStream.parse('*'))2
      .on('data', (data: RawLogEntry) => {2
        callback(IOSDevice.parseLogEntry(data));2
      });2
  }2
2
  static parseLogEntry(entry: RawLogEntry): DeviceLogEntry {2
    let type = 'unknown';2
    if (entry.eventMessage.indexOf('[debug]') !== -1) {2
      type = 'debug';2
    } else if (entry.eventMessage.indexOf('[info]') !== -1) {2
      type = 'info';2
    } else if (entry.eventMessage.indexOf('[warn]') !== -1) {2
      type = 'warn';2
    } else if (entry.eventMessage.indexOf('[error]') !== -1) {2
      type = 'error';2
    }2
2
    // remove timestamp in front of message2
    entry.eventMessage = entry.eventMessage.replace(2
      /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} /,2
      '',2
    );2
2
    // remove type from mesage2
    entry.eventMessage = entry.eventMessage.replace(2
      /^\[(debug|info|warn|error)\]/,2
      '',2
    );2
2
    const tags = entry.processImagePath.split('/');2
    const tag = tags[tags.length - 1];2
2
    return {2
      date: new Date(entry.timestamp),2
      pid: entry.processID,2
      tid: entry.threadID,2
      tag,2
      message: entry.eventMessage,2
      type,2
    };2
  }2
}2
2
// Used to strip the initial output of the logging utility where it prints out settings.2
// We know the log stream is json so it starts with an open brace.2
class StripLogPrefix extends Transform {2
  passedPrefix = false;2
2
  _transform(2
    data: any,2
    encoding: string,2
    callback: (err?: Error, data?: any) => void,2
  ) {2
    if (this.passedPrefix) {2
      this.push(data);2
    } else {2
      const dataString = data.toString();2
      const index = dataString.indexOf('[');2
      if (index >= 0) {2
        this.push(dataString.substring(index));2
        this.passedPrefix = true;2
      }2
    }2
    callback();2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  DeviceType,2
  DeviceLogEntry,2
  DeviceLogListener,2
} from './BaseDevice.js';2
2
import fs from 'fs-extra';2
import os from 'os';2
import path from 'path';2
2
import BaseDevice from './BaseDevice.js';2
2
function getLogsPath(fileName: ?string): string {2
  const dir = '/AppData/Local/Oculus/';2
  if (fileName) {2
    return path.join(os.homedir(), dir, fileName);2
  }2
  return path.join(os.homedir(), dir);2
}2
2
export default class OculusDevice extends BaseDevice {2
  supportedPlugins = ['DeviceLogs'];2
  icon = 'icons/oculus.png';2
  os = 'Oculus';2
2
  watcher: any;2
  processedFileMap: {};2
  watchedFile: ?string;2
  timer: TimeoutID;2
2
  constructor(serial: string, deviceType: DeviceType, title: string) {2
    super(serial, deviceType, title);2
2
    this.watcher = null;2
    this.processedFileMap = {};2
  }2
2
  teardown() {2
    clearTimeout(this.timer);2
    const file = this.watchedFile;2
    if (file) {2
      fs.unwatchFile(path.join(getLogsPath(), file));2
    }2
  }2
2
  supportedColumns(): Array<string> {2
    return ['date', 'tag', 'message', 'type', 'time'];2
  }2
2
  mapLogLevel(type: string): $PropertyType<DeviceLogEntry, 'type'> {2
    switch (type) {2
      case 'WARNING':2
        return 'warn';2
      case '!ERROR!':2
        return 'error';2
      case 'DEBUG':2
        return 'debug';2
      case 'INFO':2
        return 'info';2
      default:2
        return 'verbose';2
    }2
  }2
2
  processText(text: Buffer, callback: DeviceLogListener) {2
    text2
      .toString()2
      .split('\r\n')2
      .forEach(line => {2
        const regex = /(.*){(\S+)}\s*\[([\w :.\\]+)\](.*)/;2
        const match = regex.exec(line);2
        if (match && match.length === 5) {2
          callback({2
            tid: 0,2
            pid: 0,2
            date: new Date(Date.parse(match[1])),2
            type: this.mapLogLevel(match[2]),2
            tag: match[3],2
            message: match[4],2
          });2
        } else if (line.trim() === '') {2
          // skip2
        } else {2
          callback({2
            tid: 0,2
            pid: 0,2
            date: new Date(),2
            type: 'verbose',2
            tag: 'failed-parse',2
            message: line,2
          });2
        }2
      });2
  }2
2
  addLogListener = (callback: DeviceLogListener) => {2
    this.setupListener(callback);2
  };2
2
  async setupListener(callback: DeviceLogListener) {2
    const files = await fs.readdir(getLogsPath());2
    this.watchedFile = files2
      .filter(file => file.startsWith('Service_'))2
      .sort()2
      .pop();2
    this.watch(callback);2
    this.timer = setTimeout(() => this.checkForNewLog(callback), 5000);2
  }2
2
  watch(callback: DeviceLogListener) {2
    const filePath = getLogsPath(this.watchedFile);2
    fs.watchFile(filePath, async (current, previous) => {2
      const readLen = current.size - previous.size;2
      const buffer = new Buffer(readLen);2
      const fd = await fs.open(filePath, 'r');2
      await fs.read(fd, buffer, 0, readLen, previous.size);2
      this.processText(buffer, callback);2
    });2
  }2
2
  async checkForNewLog(callback: DeviceLogListener) {2
    const files = await fs.readdir(getLogsPath());2
    const latestLog = files2
      .filter(file => file.startsWith('Service_'))2
      .sort()2
      .pop();2
    if (this.watchedFile !== latestLog) {2
      const oldFilePath = getLogsPath(this.watchedFile);2
      fs.unwatchFile(oldFilePath);2
      this.watchedFile = latestLog;2
      this.watch(callback);2
    }2
    this.timer = setTimeout(() => this.checkForNewLog(callback), 5000);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import AndroidDevice from '../devices/AndroidDevice';2
import type {Store} from '../reducers/index.js';2
import type BaseDevice from '../devices/BaseDevice';2
const adb = require('adbkit-fb');2
2
function createDecive(client, device): Promise<AndroidDevice> {2
  return new Promise((resolve, reject) => {2
    const type =2
      device.type !== 'device' || device.id.startsWith('emulator')2
        ? 'emulator'2
        : 'physical';2
    client.getProperties(device.id).then(props => {2
      const androidDevice = new AndroidDevice(2
        device.id,2
        type,2
        props['ro.product.model'],2
        client,2
      );2
      androidDevice.reverse();2
      resolve(androidDevice);2
    });2
  });2
}2
2
export default (store: Store) => {2
  const client = adb.createClient();2
2
  client2
    .trackDevices()2
    .then(tracker => {2
      tracker.on('error', err => {2
        if (err.message === 'Connection closed') {2
          // adb server has shutdown, remove all android devices2
          const {devices} = store.getState();2
          const deviceIDsToRemove: Array<string> = devices2
            .filter((device: BaseDevice) => device instanceof AndroidDevice)2
            .map((device: BaseDevice) => device.serial);2
2
          store.dispatch({2
            type: 'UNREGISTER_DEVICES',2
            payload: new Set(deviceIDsToRemove),2
          });2
          console.error(2
            'adb server shutdown. Run `adb start-server` and restart Sonar.',2
          );2
        } else {2
          throw err;2
        }2
      });2
2
      tracker.on('add', async device => {2
        const androidDevice = await createDecive(client, device);2
        if (device.type !== 'offline') {2
          store.dispatch({2
            type: 'REGISTER_DEVICE',2
            payload: androidDevice,2
          });2
        }2
      });2
2
      tracker.on('change', async device => {2
        if (device.type === 'offline') {2
          store.dispatch({2
            type: 'UNREGISTER_DEVICES',2
            payload: new Set([device.id]),2
          });2
        } else {2
          const androidDevice = await createDecive(client, device);2
          store.dispatch({2
            type: 'REGISTER_DEVICE',2
            payload: androidDevice,2
          });2
        }2
      });2
2
      tracker.on('remove', device => {2
        store.dispatch({2
          type: 'UNREGISTER_DEVICES',2
          payload: new Set([device.id]),2
        });2
      });2
    })2
    .catch(err => {2
      if (err.code === 'ECONNREFUSED') {2
        // adb server isn't running2
      } else {2
        throw err;2
      }2
    });2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {remote} from 'electron';2
import type {Store} from '../reducers/index.js';2
2
export default (store: Store) => {2
  const currentWindow = remote.getCurrentWindow();2
  currentWindow.on('focus', () =>2
    store.dispatch({2
      type: 'windowIsFocused',2
      payload: true,2
    }),2
  );2
  currentWindow.on('blur', () =>2
    store.dispatch({2
      type: 'windowIsFocused',2
      payload: false,2
    }),2
  );2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import androidDevice from './androidDevice';2
import iOSDevice from './iOSDevice';2
import application from './application';2
import type {Store} from '../reducers/index.js';2
2
export default (store: Store) =>2
  [application, androidDevice, iOSDevice].forEach(fn => fn(store));2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {ChildProcess} from 'child_process';2
import type {Store} from '../reducers/index.js';2
import child_process from 'child_process';2
import IOSDevice from '../devices/IOSDevice';2
2
type iOSSimulatorDevice = {|2
  state: 'Booted' | 'Shutdown' | 'Shutting Down',2
  availability: string,2
  name: string,2
  udid: string,2
|};2
2
type IOSDeviceMap = {[id: string]: Array<iOSSimulatorDevice>};2
2
// start port forwarding server for real device connections2
const portForwarder: ChildProcess = child_process.exec(2
  'PortForwardingMacApp.app/Contents/MacOS/PortForwardingMacApp -portForward=8088 -multiplexChannelPort=8078',2
);2
window.addEventListener('beforeunload', () => {2
  portForwarder.kill();2
});2
2
function querySimulatorDevices(): Promise<IOSDeviceMap> {2
  return new Promise((resolve, reject) => {2
    child_process.execFile(2
      'xcrun',2
      ['simctl', 'list', 'devices', '--json'],2
      {encoding: 'utf8'},2
      (err, stdout) => {2
        if (err) {2
          console.error('Failed to load iOS devices', err);2
          return resolve({});2
        }2
2
        try {2
          const {devices} = JSON.parse(stdout.toString());2
          resolve(devices);2
        } catch (err) {2
          console.error('Failed to parse iOS device list', err);2
          resolve({});2
        }2
      },2
    );2
  });2
}2
2
export default (store: Store) => {2
  // monitoring iOS devices only available on MacOS.2
  if (process.platform !== 'darwin') {2
    return;2
  }2
  setInterval(() => {2
    const {devices} = store.getState();2
    querySimulatorDevices().then((simulatorDevices: IOSDeviceMap) => {2
      const simulators: Array<iOSSimulatorDevice> = Object.values(2
        simulatorDevices,2
        // $FlowFixMe2
      ).reduce((acc, cv) => acc.concat(cv), []);2
2
      const currentDeviceIDs: Set<string> = new Set(2
        devices2
          .filter(device => device instanceof IOSDevice)2
          .map(device => device.serial),2
      );2
2
      const deviceIDsToRemove = new Set();2
      simulators.forEach((simulator: iOSSimulatorDevice) => {2
        const isRunning =2
          simulator.state === 'Booted' &&2
          simulator.availability === '(available)';2
2
        if (isRunning && !currentDeviceIDs.has(simulator.udid)) {2
          // create device2
          store.dispatch({2
            type: 'REGISTER_DEVICE',2
            payload: new IOSDevice(simulator.udid, 'emulator', simulator.name),2
          });2
        } else if (!isRunning && currentDeviceIDs.has(simulator.udid)) {2
          deviceIDsToRemove.add(simulator.udid);2
          // delete device2
        }2
      });2
2
      if (deviceIDsToRemove.size > 0) {2
        store.dispatch({2
          type: 'UNREGISTER_DEVICES',2
          payload: deviceIDsToRemove,2
        });2
      }2
    });2
  }, 3000);2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import LogManager from './Logger';2
2
export default class BugReporter {2
  constructor(logManager: LogManager) {}2
  async report(title: string, body: string): Promise<number> {2
    return Promise.resolve(-1);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export default {2
  updateServer: 'https://www.facebook.com/sonar/public/latest.json',2
  bugReportButtonVisible: false,2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export const GRAPH_APP_ID = '';2
export const GRAPH_CLIENT_TOKEN = '';2
export const GRAPH_ACCESS_TOKEN = '';2
2
// this provides elevated access to scribe. we really shouldn't be exposing this.2
// need to investigate how to abstract the scribe logging so it's safe.2
export const GRAPH_SECRET = '';2
export const GRAPH_SECRET_ACCESS_TOKEN = '';2
2
// Provides access to Insights Validation ednpoint on interngraph2
export const INSIGHT_INTERN_APP_ID = '';2
export const INSIGHT_INTERN_APP_TOKEN = '';2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export function cleanStack(stack: string, loc: ?string) {}2
import type ScribeLogger from './ScribeLogger';2
2
export type ObjectError =2
  | Error2
  | {2
      message: string,2
      stack?: string,2
    };2
2
export default class ErrorReporter {2
  constructor(scribeLogger: ScribeLogger) {}2
  report(err: ObjectError) {}2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type GKID = string;2
2
export default class GK {2
  static init() {}2
2
  static get(id: GKID): boolean {2
    return false;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type LogTypes = 'error' | 'warn' | 'info' | 'debug';2
export type TrackType = 'duration' | 'usage' | 'performance';2
import ScribeLogger from './ScribeLogger';2
2
export default class LogManager {2
  constructor() {2
    this.scribeLogger = new ScribeLogger(this);2
  }2
2
  scribeLogger: ScribeLogger;2
2
  track(type: TrackType, event: string, data: ?any) {}2
2
  trackTimeSince(mark: string, eventName: ?string) {}2
2
  info(data: any, category: string) {2
    // eslint-disable-next-line2
    console.info(data, category);2
  }2
2
  warn(data: any, category: string) {2
    console.warn(data, category);2
  }2
2
  error(data: any, category: string) {2
    console.error(data, category);2
  }2
2
  debug(data: any, category: string) {2
    // eslint-disable-next-line2
    console.debug(data, category);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type ScribeMessage = {|2
  category: string,2
  message: string,2
|};2
2
import type Logger from './Logger.js';2
2
export default class ScribeLogger {2
  constructor(logger: Logger) {}2
  send(message: ScribeMessage) {}2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {GK} from 'sonar';2
import React from 'react';2
import ReactDOM from 'react-dom';2
import * as Sonar from 'sonar';2
import {SonarBasePlugin} from '../plugin.js';2
2
const plugins = new Map();2
2
// expose Sonar and exact globally for dynamically loaded plugins2
window.React = React;2
window.ReactDOM = ReactDOM;2
window.Sonar = Sonar;2
2
const addIfNotAdded = plugin => {2
  if (!plugins.has(plugin.name)) {2
    plugins.set(plugin.name, plugin);2
  }2
};2
2
let disabledPlugins = [];2
try {2
  disabledPlugins =2
    JSON.parse(window.process.env.CONFIG || '{}').disabledPlugins || [];2
} catch (e) {2
  console.error(e);2
}2
2
// Load dynamic plugins2
try {2
  JSON.parse(window.process.env.PLUGINS || '[]').forEach(addIfNotAdded);2
} catch (e) {2
  console.error(e);2
}2
2
// DefaultPlugins that are included in the bundle.2
// List of defaultPlugins is written at build time2
let bundledPlugins = [];2
try {2
  bundledPlugins = window.electronRequire('./defaultPlugins/index.json');2
} catch (e) {}2
bundledPlugins2
  .map(plugin => ({2
    ...plugin,2
    out: './' + plugin.out,2
  }))2
  .forEach(addIfNotAdded);2
2
export default Array.from(plugins.values())2
  .map(plugin => {2
    if (2
      (plugin.gatekeeper && !GK.get(plugin.gatekeeper)) ||2
      disabledPlugins.indexOf(plugin.name) > -12
    ) {2
      return null;2
    } else {2
      try {2
        return window.electronRequire(plugin.out);2
      } catch (e) {2
        console.error(plugin, e);2
        return null;2
      }2
    }2
  })2
  .filter(Boolean)2
  .filter(plugin => plugin.prototype instanceof SonarBasePlugin);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {ElementID, Element, ElementSearchResultSet} from 'sonar';2
import {2
  colors,2
  Glyph,2
  FlexRow,2
  FlexColumn,2
  Toolbar,2
  SonarPlugin,2
  ElementsInspector,2
  InspectorSidebar,2
  LoadingIndicator,2
  styled,2
  Component,2
  SearchBox,2
  SearchInput,2
  SearchIcon,2
} from 'sonar';2
2
// $FlowFixMe2
import debounce from 'lodash.debounce';2
2
export type InspectorState = {|2
  initialised: boolean,2
  selected: ?ElementID,2
  root: ?ElementID,2
  elements: {[key: ElementID]: Element},2
  isSearchActive: boolean,2
  searchResults: ?ElementSearchResultSet,2
  outstandingSearchQuery: ?string,2
|};2
2
type SelectElementArgs = {|2
  key: ElementID,2
|};2
2
type ExpandElementArgs = {|2
  key: ElementID,2
  expand: boolean,2
|};2
2
type ExpandElementsArgs = {|2
  elements: Array<ElementID>,2
|};2
2
type UpdateElementsArgs = {|2
  elements: Array<$Shape<Element>>,2
|};2
2
type SetRootArgs = {|2
  root: ElementID,2
|};2
2
type GetNodesResult = {|2
  elements: Array<Element>,2
|};2
2
type SearchResultTree = {|2
  id: string,2
  isMatch: Boolean,2
  children: ?Array<SearchResultTree>,2
  element: Element,2
|};2
2
const LoadingSpinner = LoadingIndicator.extends({2
  marginRight: 4,2
  marginLeft: 3,2
  marginTop: -1,2
});2
2
const Center = FlexRow.extends({2
  alignItems: 'center',2
  justifyContent: 'center',2
});2
2
const SearchIconContainer = styled.view({2
  marginRight: 9,2
  marginTop: -3,2
  marginLeft: 4,2
});2
2
class LayoutSearchInput extends Component<2
  {2
    onSubmit: string => void,2
  },2
  {2
    value: string,2
  },2
> {2
  static TextInput = styled.textInput({2
    width: '100%',2
    marginLeft: 6,2
  });2
2
  state = {2
    value: '',2
  };2
2
  timer: TimeoutID;2
2
  onChange = (e: SyntheticInputEvent<>) => {2
    clearTimeout(this.timer);2
    this.setState({2
      value: e.target.value,2
    });2
    this.timer = setTimeout(() => this.props.onSubmit(this.state.value), 200);2
  };2
2
  onKeyDown = (e: SyntheticKeyboardEvent<>) => {2
    if (e.key === 'Enter') {2
      this.props.onSubmit(this.state.value);2
    }2
  };2
2
  render() {2
    return (2
      <SearchInput2
        placeholder={'Search'}2
        onChange={this.onChange}2
        onKeyDown={this.onKeyDown}2
        value={this.state.value}2
      />2
    );2
  }2
}2
2
export default class Layout extends SonarPlugin<InspectorState> {2
  static title = 'Layout';2
  static id = 'Inspector';2
  static icon = 'target';2
2
  state = {2
    elements: {},2
    initialised: false,2
    isSearchActive: false,2
    root: null,2
    selected: null,2
    searchResults: null,2
    outstandingSearchQuery: null,2
  };2
2
  reducers = {2
    SelectElement(state: InspectorState, {key}: SelectElementArgs) {2
      return {2
        selected: key,2
      };2
    },2
2
    ExpandElement(state: InspectorState, {expand, key}: ExpandElementArgs) {2
      return {2
        elements: {2
          ...state.elements,2
          [key]: {2
            ...state.elements[key],2
            expanded: expand,2
          },2
        },2
      };2
    },2
2
    ExpandElements(state: InspectorState, {elements}: ExpandElementsArgs) {2
      const expandedSet = new Set(elements);2
      const newState = {2
        elements: {2
          ...state.elements,2
        },2
      };2
      for (const key of Object.keys(state.elements)) {2
        newState.elements[key] = {2
          ...newState.elements[key],2
          expanded: expandedSet.has(key),2
        };2
      }2
      return newState;2
    },2
2
    UpdateElements(state: InspectorState, {elements}: UpdateElementsArgs) {2
      const updatedElements = state.elements;2
2
      for (const element of elements) {2
        const current = updatedElements[element.id] || {};2
        // $FlowFixMe2
        updatedElements[element.id] = {2
          ...current,2
          ...element,2
        };2
      }2
2
      return {elements: updatedElements};2
    },2
2
    SetRoot(state: InspectorState, {root}: SetRootArgs) {2
      return {root};2
    },2
2
    SetSearchActive(2
      state: InspectorState,2
      {isSearchActive}: {isSearchActive: boolean},2
    ) {2
      return {isSearchActive};2
    },2
  };2
2
  search(query: string) {2
    if (!query) {2
      return;2
    }2
    this.setState({2
      outstandingSearchQuery: query,2
    });2
    this.client2
      .call('getSearchResults', {query: query})2
      .then(response => this.displaySearchResults(response));2
  }2
2
  executeCommand(command: string) {2
    return this.client.call('executeCommand', {2
      command: command,2
      context: this.state.selected,2
    });2
  }2
2
  /**2
   * When opening the inspector for the first time, expand all elements that contain only 1 child2
   * recursively.2
   */2
  async performInitialExpand(element: Element): Promise<void> {2
    if (!element.children.length) {2
      // element has no children so we're as deep as we can be2
      return;2
    }2
2
    this.dispatchAction({expand: true, key: element.id, type: 'ExpandElement'});2
2
    return this.getChildren(element.id).then((elements: Array<Element>) => {2
      this.dispatchAction({elements, type: 'UpdateElements'});2
2
      if (element.children.length >= 2) {2
        // element has two or more children so we can stop expanding2
        return;2
      }2
2
      return this.performInitialExpand(2
        this.state.elements[element.children[0]],2
      );2
    });2
  }2
2
  displaySearchResults({2
    results,2
    query,2
  }: {2
    results: SearchResultTree,2
    query: string,2
  }) {2
    const elements = this.getElementsFromSearchResultTree(results);2
    const idsToExpand = elements2
      .filter(x => x.hasChildren)2
      .map(x => x.element.id);2
2
    const finishedSearching = query === this.state.outstandingSearchQuery;2
2
    this.dispatchAction({2
      elements: elements.map(x => x.element),2
      type: 'UpdateElements',2
    });2
    this.dispatchAction({2
      elements: idsToExpand,2
      type: 'ExpandElements',2
    });2
    this.setState({2
      searchResults: {2
        matches: new Set(2
          elements.filter(x => x.isMatch).map(x => x.element.id),2
        ),2
        query: query,2
      },2
      outstandingSearchQuery: finishedSearching2
        ? null2
        : this.state.outstandingSearchQuery,2
    });2
  }2
2
  getElementsFromSearchResultTree(tree: SearchResultTree) {2
    if (!tree) {2
      return [];2
    }2
    var elements = [2
      {2
        id: tree.id,2
        isMatch: tree.isMatch,2
        hasChildren: Boolean(tree.children),2
        element: tree.element,2
      },2
    ];2
    if (tree.children) {2
      for (const child of tree.children) {2
        elements = elements.concat(this.getElementsFromSearchResultTree(child));2
      }2
    }2
    return elements;2
  }2
2
  init() {2
    performance.mark('LayoutInspectorInitialize');2
    this.client.call('getRoot').then((element: Element) => {2
      this.dispatchAction({elements: [element], type: 'UpdateElements'});2
      this.dispatchAction({root: element.id, type: 'SetRoot'});2
      this.performInitialExpand(element).then(() => {2
        this.app.logger.trackTimeSince('LayoutInspectorInitialize');2
        this.setState({initialised: true});2
      });2
    });2
2
    this.client.subscribe(2
      'invalidate',2
      ({nodes}: {nodes: Array<{id: ElementID}>}) => {2
        this.invalidate(nodes.map(node => node.id)).then(2
          (elements: Array<Element>) => {2
            this.dispatchAction({elements, type: 'UpdateElements'});2
          },2
        );2
      },2
    );2
2
    this.client.subscribe('select', ({path}: {path: Array<ElementID>}) => {2
      this.getNodesAndDirectChildren(path).then((elements: Array<Element>) => {2
        const selected = path[path.length - 1];2
2
        this.dispatchAction({elements, type: 'UpdateElements'});2
        this.dispatchAction({key: selected, type: 'SelectElement'});2
        this.dispatchAction({isSearchActive: false, type: 'SetSearchActive'});2
2
        for (const key of path) {2
          this.dispatchAction({expand: true, key, type: 'ExpandElement'});2
        }2
2
        this.client.send('setHighlighted', {id: selected});2
        this.client.send('setSearchActive', {active: false});2
      });2
    });2
  }2
2
  invalidate(ids: Array<ElementID>): Promise<Array<Element>> {2
    if (ids.length === 0) {2
      return Promise.resolve([]);2
    }2
2
    return this.getNodes(ids, true).then((elements: Array<Element>) => {2
      const children = elements2
        .filter(element => {2
          const prev = this.state.elements[element.id];2
          return prev && prev.expanded;2
        })2
        .map(element => element.children)2
        .reduce((acc, val) => acc.concat(val), []);2
2
      return Promise.all([elements, this.invalidate(children)]).then(arr => {2
        return arr.reduce((acc, val) => acc.concat(val), []);2
      });2
    });2
  }2
2
  getNodesAndDirectChildren(ids: Array<ElementID>): Promise<Array<Element>> {2
    return this.getNodes(ids, false).then((elements: Array<Element>) => {2
      const children = elements2
        .map(element => element.children)2
        .reduce((acc, val) => acc.concat(val), []);2
2
      return Promise.all([elements, this.getNodes(children, false)]).then(2
        arr => {2
          return arr.reduce((acc, val) => acc.concat(val), []);2
        },2
      );2
    });2
  }2
2
  getChildren(key: ElementID): Promise<Array<Element>> {2
    return this.getNodes(this.state.elements[key].children, false);2
  }2
2
  getNodes(2
    ids: Array<ElementID> = [],2
    force: boolean,2
  ): Promise<Array<Element>> {2
    if (!force) {2
      ids = ids.filter(id => {2
        return this.state.elements[id] === undefined;2
      });2
    }2
2
    if (ids.length > 0) {2
      performance.mark('LayoutInspectorGetNodes');2
      return this.client2
        .call('getNodes', {ids})2
        .then(({elements}: GetNodesResult) => {2
          this.app.logger.trackTimeSince('LayoutInspectorGetNodes');2
          return Promise.resolve(elements);2
        });2
    } else {2
      return Promise.resolve([]);2
    }2
  }2
2
  isExpanded(key: ElementID): boolean {2
    return this.state.elements[key].expanded;2
  }2
2
  expandElement = (key: ElementID): Promise<Array<Element>> => {2
    const expand = !this.isExpanded(key);2
    return this.setElementExpanded(key, expand);2
  };2
2
  setElementExpanded = (2
    key: ElementID,2
    expand: boolean,2
  ): Promise<Array<Element>> => {2
    this.dispatchAction({expand, key, type: 'ExpandElement'});2
    performance.mark('LayoutInspectorExpandElement');2
    if (expand) {2
      return this.getChildren(key).then((elements: Array<Element>) => {2
        this.app.logger.trackTimeSince('LayoutInspectorExpandElement');2
        this.dispatchAction({elements, type: 'UpdateElements'});2
        return Promise.resolve(elements);2
      });2
    } else {2
      return Promise.resolve([]);2
    }2
  };2
2
  deepExpandElement = async (key: ElementID) => {2
    const expand = !this.isExpanded(key);2
    if (!expand) {2
      // we never deep unexpand2
      return this.setElementExpanded(key, false);2
    }2
2
    // queue of keys to open2
    const keys = [key];2
2
    // amount of elements we've expanded, we stop at 100 just to be safe2
    let count = 0;2
2
    while (keys.length && count < 100) {2
      const key = keys.shift();2
2
      // expand current element2
      const children = await this.setElementExpanded(key, true);2
2
      // and add it's children to the queue2
      for (const child of children) {2
        keys.push(child.id);2
      }2
2
      count++;2
    }2
  };2
2
  onElementExpanded = (key: ElementID, deep: boolean) => {2
    if (deep) {2
      this.deepExpandElement(key);2
    } else {2
      this.expandElement(key);2
    }2
    this.app.logger.track('usage', 'layout:element-expanded', {2
      id: key,2
      deep: deep,2
    });2
  };2
2
  onFindClick = () => {2
    const isSearchActive = !this.state.isSearchActive;2
    this.dispatchAction({isSearchActive, type: 'SetSearchActive'});2
    this.client.send('setSearchActive', {active: isSearchActive});2
  };2
2
  onElementSelected = debounce((key: ElementID) => {2
    this.dispatchAction({key, type: 'SelectElement'});2
    this.client.send('setHighlighted', {id: key});2
    this.getNodes([key], true).then((elements: Array<Element>) => {2
      this.dispatchAction({elements, type: 'UpdateElements'});2
    });2
  });2
2
  onElementHovered = debounce((key: ?ElementID) => {2
    this.client.send('setHighlighted', {id: key});2
  });2
2
  onDataValueChanged = (path: Array<string>, value: any) => {2
    this.client.send('setData', {id: this.state.selected, path, value});2
    this.app.logger.track('usage', 'layout:value-changed', {2
      id: this.state.selected,2
      value: value,2
      path: path,2
    });2
  };2
2
  renderSidebar = () => {2
    return this.state.selected != null ? (2
      <InspectorSidebar2
        element={this.state.elements[this.state.selected]}2
        onValueChanged={this.onDataValueChanged}2
        client={this.client}2
      />2
    ) : null;2
  };2
2
  render() {2
    const {2
      initialised,2
      selected,2
      root,2
      elements,2
      isSearchActive,2
      outstandingSearchQuery,2
    } = this.state;2
2
    return (2
      <FlexColumn fill={true}>2
        <Toolbar>2
          <SearchIconContainer2
            onClick={this.onFindClick}2
            role="button"2
            tabIndex={-1}2
            title="Select an element on the device to inspect it">2
            <Glyph2
              name="target"2
              size={16}2
              color={2
                isSearchActive2
                  ? colors.macOSTitleBarIconSelected2
                  : colors.macOSTitleBarIconActive2
              }2
            />2
          </SearchIconContainer>2
          <SearchBox tabIndex={-1}>2
            <SearchIcon2
              name="magnifying-glass"2
              color={colors.macOSTitleBarIcon}2
              size={16}2
            />2
            <LayoutSearchInput onSubmit={this.search.bind(this)} />2
            {outstandingSearchQuery && <LoadingSpinner size={16} />}2
          </SearchBox>2
        </Toolbar>2
        <FlexRow fill={true}>2
          {initialised ? (2
            <ElementsInspector2
              onElementSelected={this.onElementSelected}2
              onElementHovered={this.onElementHovered}2
              onElementExpanded={this.onElementExpanded}2
              onValueChanged={this.onDataValueChanged}2
              selected={selected}2
              searchResults={this.state.searchResults}2
              root={root}2
              elements={elements}2
            />2
          ) : (2
            <Center fill={true}>2
              <LoadingIndicator />2
            </Center>2
          )}2
        </FlexRow>2
      </FlexColumn>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {TableHighlightedRows, TableRows} from 'sonar';2
2
import {2
  ContextMenu,2
  FlexColumn,2
  Button,2
  Text,2
  Glyph,2
  colors,2
  PureComponent,2
} from 'sonar';2
2
import {SonarPlugin, SearchableTable} from 'sonar';2
import RequestDetails from './RequestDetails.js';2
2
import {URL} from 'url';2
// $FlowFixMe2
import sortBy from 'lodash.sortby';2
2
type RequestId = string;2
2
type State = {|2
  requests: {[id: RequestId]: Request},2
  responses: {[id: RequestId]: Response},2
  selectedIds: Array<RequestId>,2
|};2
2
export type Request = {|2
  id: RequestId,2
  timestamp: number,2
  method: string,2
  url: string,2
  headers: Array<Header>,2
  data: ?string,2
|};2
2
export type Response = {|2
  id: RequestId,2
  timestamp: number,2
  status: number,2
  reason: string,2
  headers: Array<Header>,2
  data: ?string,2
|};2
2
export type Header = {|2
  key: string,2
  value: string,2
|};2
2
const COLUMN_SIZE = {2
  domain: 'flex',2
  method: 100,2
  status: 70,2
  size: 100,2
  duration: 100,2
};2
2
const COLUMNS = {2
  domain: {2
    value: 'Domain',2
  },2
  method: {2
    value: 'Method',2
  },2
  status: {2
    value: 'Status',2
  },2
  size: {2
    value: 'Size',2
  },2
  duration: {2
    value: 'Duration',2
  },2
};2
2
export function getHeaderValue(headers: Array<Header>, key: string) {2
  for (const header of headers) {2
    if (header.key.toLowerCase() === key.toLowerCase()) {2
      return header.value;2
    }2
  }2
  return '';2
}2
2
export function formatBytes(count: number): string {2
  if (count > 1024 * 1024) {2
    return (count / (1024.0 * 1024)).toFixed(1) + ' MB';2
  }2
  if (count > 1024) {2
    return (count / 1024.0).toFixed(1) + ' kB';2
  }2
  return count + ' B';2
}2
2
const TextEllipsis = Text.extends({2
  overflowX: 'hidden',2
  textOverflow: 'ellipsis',2
  maxWidth: '100%',2
  lineHeight: '18px',2
  paddingTop: 4,2
});2
2
export default class extends SonarPlugin<State> {2
  static title = 'Network';2
  static id = 'Network';2
  static icon = 'internet';2
  static keyboardActions = ['clear'];2
2
  onKeyboardAction = (action: string) => {2
    if (action === 'clear') {2
      this.clearLogs();2
    }2
  };2
2
  state = {2
    requests: {},2
    responses: {},2
    selectedIds: [],2
  };2
2
  init() {2
    this.client.subscribe('newRequest', (request: Request) => {2
      this.dispatchAction({request, type: 'NewRequest'});2
    });2
    this.client.subscribe('newResponse', (response: Response) => {2
      this.dispatchAction({response, type: 'NewResponse'});2
    });2
  }2
2
  reducers = {2
    NewRequest(state: State, {request}: {request: Request}) {2
      return {2
        requests: {...state.requests, [request.id]: request},2
        responses: state.responses,2
      };2
    },2
2
    NewResponse(state: State, {response}: {response: Response}) {2
      return {2
        requests: state.requests,2
        responses: {...state.responses, [response.id]: response},2
      };2
    },2
2
    Clear(state: State) {2
      return {2
        requests: {},2
        responses: {},2
      };2
    },2
  };2
2
  onRowHighlighted = (selectedIds: Array<RequestId>) =>2
    this.setState({selectedIds});2
2
  clearLogs = () => {2
    this.setState({selectedIds: []});2
    this.dispatchAction({type: 'Clear'});2
  };2
2
  renderSidebar = () => {2
    const {selectedIds, requests, responses} = this.state;2
    const selectedId = selectedIds.length === 1 ? selectedIds[0] : null;2
2
    return selectedId != null ? (2
      <RequestDetails2
        key={selectedId}2
        request={requests[selectedId]}2
        response={responses[selectedId]}2
      />2
    ) : null;2
  };2
2
  render() {2
    return (2
      <FlexColumn fill={true}>2
        <NetworkTable2
          requests={this.state.requests}2
          responses={this.state.responses}2
          clear={this.clearLogs}2
          onRowHighlighted={this.onRowHighlighted}2
        />2
      </FlexColumn>2
    );2
  }2
}2
2
type NetworkTableProps = {|2
  requests: {[id: RequestId]: Request},2
  responses: {[id: RequestId]: Response},2
  clear: () => void,2
  onRowHighlighted: (keys: TableHighlightedRows) => void,2
|};2
2
type NetworkTableState = {|2
  sortedRows: TableRows,2
|};2
2
class NetworkTable extends PureComponent<NetworkTableProps, NetworkTableState> {2
  static ContextMenu = ContextMenu.extends({2
    flex: 1,2
  });2
2
  state = {2
    sortedRows: [],2
  };2
2
  componentWillReceiveProps(nextProps: NetworkTableProps) {2
    if (Object.keys(nextProps.requests).length === 0) {2
      // cleared2
      this.setState({sortedRows: []});2
    } else if (this.props.requests !== nextProps.requests) {2
      // new request2
      for (const requestId in nextProps.requests) {2
        if (this.props.requests[requestId] == null) {2
          this.buildRow(nextProps.requests[requestId], null);2
          break;2
        }2
      }2
    } else if (this.props.responses !== nextProps.responses) {2
      // new response2
      for (const responseId in nextProps.responses) {2
        if (this.props.responses[responseId] == null) {2
          this.buildRow(2
            nextProps.requests[responseId],2
            nextProps.responses[responseId],2
          );2
          break;2
        }2
      }2
    }2
  }2
2
  buildRow(request: Request, response: ?Response) {2
    if (request == null) {2
      return;2
    }2
    const url = new URL(request.url);2
    const domain = url.host + url.pathname;2
    const friendlyName = getHeaderValue(request.headers, 'X-FB-Friendly-Name');2
2
    const newRow = {2
      columns: {2
        domain: {2
          value: (2
            <TextEllipsis>{friendlyName ? friendlyName : domain}</TextEllipsis>2
          ),2
          isFilterable: true,2
        },2
        method: {2
          value: <TextEllipsis>{request.method}</TextEllipsis>,2
          isFilterable: true,2
        },2
        status: {2
          value: (2
            <StatusColumn>2
              {response ? response.status : undefined}2
            </StatusColumn>2
          ),2
          isFilterable: true,2
        },2
        size: {2
          value: <SizeColumn response={response ? response : undefined} />,2
        },2
        duration: {2
          value: <DurationColumn request={request} response={response} />,2
        },2
      },2
      key: request.id,2
      filterValue: `${request.method} ${request.url}`,2
      sortKey: request.timestamp,2
      copyText: request.url,2
      highlightOnHover: true,2
    };2
2
    let rows;2
    if (response == null) {2
      rows = [...this.state.sortedRows, newRow];2
    } else {2
      const index = this.state.sortedRows.findIndex(r => r.key === request.id);2
      if (index > -1) {2
        rows = [...this.state.sortedRows];2
        rows[index] = newRow;2
      }2
    }2
2
    this.setState({2
      sortedRows: sortBy(rows, x => x.sortKey),2
    });2
  }2
2
  contextMenuItems = [2
    {2
      type: 'separator',2
    },2
    {2
      label: 'Clear all',2
      click: this.props.clear,2
    },2
  ];2
2
  render() {2
    return (2
      <NetworkTable.ContextMenu items={this.contextMenuItems}>2
        <SearchableTable2
          virtual={true}2
          multiline={false}2
          multiHighlight={true}2
          stickyBottom={true}2
          floating={false}2
          columnSizes={COLUMN_SIZE}2
          columns={COLUMNS}2
          rows={this.state.sortedRows}2
          onRowHighlighted={this.props.onRowHighlighted}2
          rowLineHeight={26}2
          zebra={false}2
          actions={<Button onClick={this.props.clear}>Clear Table</Button>}2
        />2
      </NetworkTable.ContextMenu>2
    );2
  }2
}2
2
const Icon = Glyph.extends({2
  marginTop: -3,2
  marginRight: 3,2
});2
2
class StatusColumn extends PureComponent<{2
  children?: number,2
}> {2
  render() {2
    const {children} = this.props;2
    let glyph;2
2
    if (children != null && children >= 400 && children < 600) {2
      glyph = <Icon name="stop-solid" color={colors.red} />;2
    }2
2
    return (2
      <TextEllipsis>2
        {glyph}2
        {children}2
      </TextEllipsis>2
    );2
  }2
}2
2
class DurationColumn extends PureComponent<{2
  request: Request,2
  response: ?Response,2
}> {2
  static Text = Text.extends({2
    flex: 1,2
    textAlign: 'right',2
    paddingRight: 10,2
  });2
2
  render() {2
    const {request, response} = this.props;2
    const duration = response2
      ? response.timestamp - request.timestamp2
      : undefined;2
    return (2
      <DurationColumn.Text selectable={false}>2
        {duration != null ? duration.toLocaleString() + 'ms' : ''}2
      </DurationColumn.Text>2
    );2
  }2
}2
2
class SizeColumn extends PureComponent<{2
  response: ?Response,2
}> {2
  static Text = Text.extends({2
    flex: 1,2
    textAlign: 'right',2
    paddingRight: 10,2
  });2
2
  render() {2
    const {response} = this.props;2
    if (response) {2
      const text = formatBytes(this.getResponseLength(response));2
      return <SizeColumn.Text>{text}</SizeColumn.Text>;2
    } else {2
      return null;2
    }2
  }2
2
  getResponseLength(response) {2
    let length = 0;2
    const lengthString = response.headers2
      ? getHeaderValue(response.headers, 'content-length')2
      : undefined;2
    if (lengthString != null && lengthString != '') {2
      length = parseInt(lengthString, 10);2
    } else if (response.data) {2
      length = atob(response.data).length;2
    }2
    return length;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
// $FlowFixMe2
import pako from 'pako';2
import type {Request, Response, Header} from './index.js';2
2
import {2
  Component,2
  FlexColumn,2
  ManagedTable,2
  ManagedDataInspector,2
  Text,2
  Panel,2
  styled,2
  colors,2
} from 'sonar';2
import {getHeaderValue} from './index.js';2
2
import querystring from 'querystring';2
2
const WrappingText = Text.extends({2
  wordWrap: 'break-word',2
  width: '100%',2
  lineHeight: '125%',2
  padding: '3px 0',2
});2
2
const KeyValueColumnSizes = {2
  key: '30%',2
  value: 'flex',2
};2
2
const KeyValueColumns = {2
  key: {2
    value: 'Key',2
    resizable: false,2
  },2
  value: {2
    value: 'Value',2
    resizable: false,2
  },2
};2
2
type RequestDetailsProps = {2
  request: Request,2
  response: ?Response,2
};2
2
function decodeBody(container: Request | Response): string {2
  if (!container.data) {2
    return '';2
  }2
  const b64Decoded = atob(container.data);2
  const encodingHeader = container.headers.find(2
    header => header.key === 'Content-Encoding',2
  );2
2
  return encodingHeader && encodingHeader.value === 'gzip'2
    ? decompress(b64Decoded)2
    : b64Decoded;2
}2
2
function decompress(body: string): string {2
  const charArray = body.split('').map(x => x.charCodeAt(0));2
2
  const byteArray = new Uint8Array(charArray);2
2
  let data;2
  try {2
    if (body) {2
      data = pako.inflate(byteArray);2
    } else {2
      return body;2
    }2
  } catch (e) {2
    // Sometimes Content-Encoding is 'gzip' but the body is already decompressed.2
    // Assume this is the case when decompression fails.2
    return body;2
  }2
2
  return String.fromCharCode.apply(null, new Uint8Array(data));2
}2
2
export default class RequestDetails extends Component<RequestDetailsProps> {2
  static Container = FlexColumn.extends({2
    height: '100%',2
    overflow: 'auto',2
  });2
2
  urlColumns = (url: URL) => {2
    return [2
      {2
        columns: {2
          key: {value: <WrappingText>Full URL</WrappingText>},2
          value: {2
            value: <WrappingText>{url.href}</WrappingText>,2
          },2
        },2
        copyText: url.href,2
        key: 'url',2
      },2
      {2
        columns: {2
          key: {value: <WrappingText>Host</WrappingText>},2
          value: {2
            value: <WrappingText>{url.host}</WrappingText>,2
          },2
        },2
        copyText: url.host,2
        key: 'host',2
      },2
      {2
        columns: {2
          key: {value: <WrappingText>Path</WrappingText>},2
          value: {2
            value: <WrappingText>{url.pathname}</WrappingText>,2
          },2
        },2
        copyText: url.pathname,2
        key: 'path',2
      },2
      {2
        columns: {2
          key: {value: <WrappingText>Query String</WrappingText>},2
          value: {2
            value: <WrappingText>{url.search}</WrappingText>,2
          },2
        },2
        copyText: url.search,2
        key: 'query',2
      },2
    ];2
  };2
2
  render() {2
    const {request, response} = this.props;2
    const url = new URL(request.url);2
2
    return (2
      <RequestDetails.Container>2
        <Panel heading={'Request'} floating={false} padded={false}>2
          <ManagedTable2
            multiline={true}2
            columnSizes={KeyValueColumnSizes}2
            columns={KeyValueColumns}2
            rows={this.urlColumns(url)}2
            autoHeight={true}2
            floating={false}2
            zebra={false}2
          />2
        </Panel>2
2
        {url.search ? (2
          <Panel2
            heading={'Request Query Parameters'}2
            floating={false}2
            padded={false}>2
            <QueryInspector queryParams={url.searchParams} />2
          </Panel>2
        ) : null}2
2
        {request.headers.length > 0 ? (2
          <Panel heading={'Request Headers'} floating={false} padded={false}>2
            <HeaderInspector headers={request.headers} />2
          </Panel>2
        ) : null}2
2
        {request.data != null ? (2
          <Panel heading={'Request Body'} floating={false}>2
            <RequestBodyInspector request={request} />2
          </Panel>2
        ) : null}2
2
        {response2
          ? [2
              response.headers.length > 0 ? (2
                <Panel2
                  heading={'Response Headers'}2
                  floating={false}2
                  padded={false}>2
                  <HeaderInspector headers={response.headers} />2
                </Panel>2
              ) : null,2
              <Panel heading={'Response Body'} floating={false}>2
                <ResponseBodyInspector request={request} response={response} />2
              </Panel>,2
            ]2
          : null}2
      </RequestDetails.Container>2
    );2
  }2
}2
2
class QueryInspector extends Component<{queryParams: URLSearchParams}> {2
  render() {2
    const {queryParams} = this.props;2
2
    const rows = [];2
    for (const kv of queryParams.entries()) {2
      rows.push({2
        columns: {2
          key: {2
            value: <WrappingText>{kv[0]}</WrappingText>,2
          },2
          value: {2
            value: <WrappingText>{kv[1]}</WrappingText>,2
          },2
        },2
        copyText: kv[1],2
        key: kv[0],2
      });2
    }2
2
    return rows.length > 0 ? (2
      <ManagedTable2
        multiline={true}2
        columnSizes={KeyValueColumnSizes}2
        columns={KeyValueColumns}2
        rows={rows}2
        autoHeight={true}2
        floating={false}2
        zebra={false}2
      />2
    ) : null;2
  }2
}2
2
type HeaderInspectorProps = {2
  headers: Array<Header>,2
};2
2
type HeaderInspectorState = {2
  computedHeaders: Object,2
};2
2
class HeaderInspector extends Component<2
  HeaderInspectorProps,2
  HeaderInspectorState,2
> {2
  render() {2
    const computedHeaders = this.props.headers.reduce((sum, header) => {2
      return {...sum, [header.key]: header.value};2
    }, {});2
2
    const rows = [];2
    for (const key in computedHeaders) {2
      rows.push({2
        columns: {2
          key: {2
            value: <WrappingText>{key}</WrappingText>,2
          },2
          value: {2
            value: <WrappingText>{computedHeaders[key]}</WrappingText>,2
          },2
        },2
        copyText: computedHeaders[key],2
        key,2
      });2
    }2
2
    return rows.length > 0 ? (2
      <ManagedTable2
        multiline={true}2
        columnSizes={KeyValueColumnSizes}2
        columns={KeyValueColumns}2
        rows={rows}2
        autoHeight={true}2
        floating={false}2
        zebra={false}2
      />2
    ) : null;2
  }2
}2
2
const BodyContainer = styled.view({2
  paddingTop: 10,2
  paddingBottom: 20,2
});2
2
type BodyFormatter = {2
  formatRequest?: (request: Request) => any,2
  formatResponse?: (request: Request, response: Response) => any,2
};2
2
class RequestBodyInspector extends Component<{2
  request: Request,2
}> {2
  render() {2
    const {request} = this.props;2
    let component;2
    try {2
      for (const formatter of BodyFormatters) {2
        if (formatter.formatRequest) {2
          component = formatter.formatRequest(request);2
          if (component) {2
            break;2
          }2
        }2
      }2
    } catch (e) {}2
2
    if (component == null && request.data != null) {2
      component = <Text>{decodeBody(request)}</Text>;2
    }2
2
    if (component == null) {2
      return null;2
    }2
2
    return <BodyContainer>{component}</BodyContainer>;2
  }2
}2
2
class ResponseBodyInspector extends Component<{2
  response: Response,2
  request: Request,2
}> {2
  render() {2
    const {request, response} = this.props;2
2
    let component;2
    try {2
      for (const formatter of BodyFormatters) {2
        if (formatter.formatResponse) {2
          component = formatter.formatResponse(request, response);2
          if (component) {2
            break;2
          }2
        }2
      }2
    } catch (e) {}2
2
    component = component || <Text>{decodeBody(response)}</Text>;2
2
    return <BodyContainer>{component}</BodyContainer>;2
  }2
}2
2
const MediaContainer = FlexColumn.extends({2
  alignItems: 'center',2
  justifyContent: 'center',2
  width: '100%',2
});2
2
type ImageWithSizeProps = {2
  src: string,2
};2
2
type ImageWithSizeState = {2
  width: number,2
  height: number,2
};2
2
class ImageWithSize extends Component<ImageWithSizeProps, ImageWithSizeState> {2
  static Image = styled.image({2
    objectFit: 'scale-down',2
    maxWidth: 500,2
    maxHeight: 500,2
    marginBottom: 10,2
  });2
2
  static Text = Text.extends({2
    color: colors.dark70,2
    fontSize: 14,2
  });2
2
  constructor(props, context) {2
    super(props, context);2
    this.state = {2
      width: 0,2
      height: 0,2
    };2
  }2
2
  componentDidMount() {2
    const image = new Image();2
    image.src = this.props.src;2
    image.onload = () => {2
      image.width;2
      image.height;2
      this.setState({2
        width: image.width,2
        height: image.height,2
      });2
    };2
  }2
2
  render() {2
    return (2
      <MediaContainer>2
        <ImageWithSize.Image src={this.props.src} />2
        <ImageWithSize.Text>2
          {this.state.width} x {this.state.height}2
        </ImageWithSize.Text>2
      </MediaContainer>2
    );2
  }2
}2
2
class ImageFormatter {2
  formatResponse = (request: Request, response: Response) => {2
    if (getHeaderValue(response.headers, 'content-type').startsWith('image')) {2
      return <ImageWithSize src={request.url} />;2
    }2
  };2
}2
2
class VideoFormatter {2
  static Video = styled.customHTMLTag('video', {2
    maxWidth: 500,2
    maxHeight: 500,2
  });2
2
  formatResponse = (request: Request, response: Response) => {2
    const contentType = getHeaderValue(response.headers, 'content-type');2
    if (contentType.startsWith('video')) {2
      return (2
        <MediaContainer>2
          <VideoFormatter.Video controls={true}>2
            <source src={request.url} type={contentType} />2
          </VideoFormatter.Video>2
        </MediaContainer>2
      );2
    }2
  };2
}2
2
class JSONFormatter {2
  formatRequest = (request: Request) => {2
    return this.format(2
      decodeBody(request),2
      getHeaderValue(request.headers, 'content-type'),2
    );2
  };2
2
  formatResponse = (request: Request, response: Response) => {2
    return this.format(2
      decodeBody(response),2
      getHeaderValue(response.headers, 'content-type'),2
    );2
  };2
2
  format = (body: string, contentType: string) => {2
    if (2
      contentType.startsWith('application/json') ||2
      contentType.startsWith('text/javascript') ||2
      contentType.startsWith('application/x-fb-flatbuffer')2
    ) {2
      try {2
        const data = JSON.parse(body);2
        return (2
          <ManagedDataInspector2
            collapsed={true}2
            expandRoot={true}2
            data={data}2
          />2
        );2
      } catch (SyntaxError) {2
        // Multiple top level JSON roots, map them one by one2
        const roots = body.split('\n');2
        return (2
          <ManagedDataInspector2
            collapsed={true}2
            expandRoot={true}2
            data={roots.map(json => JSON.parse(json))}2
          />2
        );2
      }2
    }2
  };2
}2
2
class LogEventFormatter {2
  formatRequest = (request: Request) => {2
    if (request.url.indexOf('logging_client_event') > 0) {2
      const data = querystring.parse(decodeBody(request));2
      if (data.message) {2
        data.message = JSON.parse(data.message);2
      }2
      return <ManagedDataInspector expandRoot={true} data={data} />;2
    }2
  };2
}2
2
class GraphQLBatchFormatter {2
  formatRequest = (request: Request) => {2
    if (request.url.indexOf('graphqlbatch') > 0) {2
      const data = querystring.parse(decodeBody(request));2
      if (data.queries) {2
        data.queries = JSON.parse(data.queries);2
      }2
      return <ManagedDataInspector expandRoot={true} data={data} />;2
    }2
  };2
}2
2
class GraphQLFormatter {2
  formatRequest = (request: Request) => {2
    if (request.url.indexOf('graphql') > 0) {2
      const data = querystring.parse(decodeBody(request));2
      if (data.variables) {2
        data.variables = JSON.parse(data.variables);2
      }2
      if (data.query_params) {2
        data.query_params = JSON.parse(data.query_params);2
      }2
      return <ManagedDataInspector expandRoot={true} data={data} />;2
    }2
  };2
}2
2
class FormUrlencodedFormatter {2
  formatRequest = (request: Request) => {2
    const contentType = getHeaderValue(request.headers, 'content-type');2
    if (contentType.startsWith('application/x-www-form-urlencoded')) {2
      return (2
        <ManagedDataInspector2
          expandRoot={true}2
          data={querystring.parse(decodeBody(request))}2
        />2
      );2
    }2
  };2
}2
2
const BodyFormatters: Array<BodyFormatter> = [2
  new ImageFormatter(),2
  new VideoFormatter(),2
  new LogEventFormatter(),2
  new GraphQLBatchFormatter(),2
  new GraphQLFormatter(),2
  new JSONFormatter(),2
  new FormUrlencodedFormatter(),2
];2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {remote} from 'electron';2
2
export type State = {2
  leftSidebarVisible: boolean,2
  rightSidebarVisible: boolean,2
  rightSidebarAvailable: boolean,2
  bugDialogVisible: boolean,2
  windowIsFocused: boolean,2
  pluginManagerVisible: boolean,2
};2
2
type ActionType =2
  | 'leftSidebarVisible'2
  | 'rightSidebarVisible'2
  | 'rightSidebarAvailable'2
  | 'bugDialogVisible'2
  | 'windowIsFocused'2
  | 'pluginManagerVisible';2
2
export type Action = {2
  type: ActionType,2
  payload?: boolean,2
};2
2
const INITIAL_STATE: State = {2
  leftSidebarVisible: true,2
  rightSidebarVisible: true,2
  rightSidebarAvailable: false,2
  bugDialogVisible: false,2
  windowIsFocused: remote.getCurrentWindow().isFocused(),2
  pluginManagerVisible: false,2
};2
2
export default function reducer(2
  state: State = INITIAL_STATE,2
  action: Action,2
): State {2
  const newValue =2
    typeof action.payload === 'undefined'2
      ? !state[action.type]2
      : action.payload;2
  if (state[action.type] === newValue) {2
    // value hasn't changed, do nothing2
    return state;2
  } else {2
    return {2
      ...state,2
      [action.type]: newValue,2
    };2
  }2
}2
2
export const toggleAction = (type: ActionType, payload?: boolean): Action => ({2
  type,2
  payload,2
});2
2
export const toggleBugDialogVisible = (payload?: boolean): Action => ({2
  type: 'bugDialogVisible',2
  payload,2
});2
2
export const toggleLeftSidebarVisible = (payload?: boolean): Action => ({2
  type: 'leftSidebarVisible',2
  payload,2
});2
2
export const toggleRightSidebarVisible = (payload?: boolean): Action => ({2
  type: 'rightSidebarVisible',2
  payload,2
});2
2
export const toggleRightSidebarAvailable = (payload?: boolean): Action => ({2
  type: 'rightSidebarAvailable',2
  payload,2
});2
2
export const togglePluginManagerVisible = (payload?: boolean): Action => ({2
  type: 'pluginManagerVisible',2
  payload,2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type BaseDevice from '../devices/BaseDevice';2
export type State = Array<BaseDevice>;2
2
export type Action =2
  | {2
      type: 'UNREGISTER_DEVICES',2
      payload: Set<string>,2
    }2
  | {2
      type: 'REGISTER_DEVICE',2
      payload: BaseDevice,2
    };2
2
const INITIAL_STATE: State = [];2
2
export default function reducer(2
  state: State = INITIAL_STATE,2
  action: Action,2
): State {2
  switch (action.type) {2
    case 'REGISTER_DEVICE': {2
      const {payload} = action;2
      return state.concat(payload);2
    }2
    case 'UNREGISTER_DEVICES': {2
      const {payload} = action;2
      return state.filter((device: BaseDevice) => !payload.has(device.serial));2
    }2
    default:2
      return state;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {combineReducers} from 'redux';2
import application from './application.js';2
import devices from './devices.js';2
import type {2
  State as ApplicationState,2
  Action as ApplicationAction,2
} from './application.js';2
import type {2
  State as DevicesState,2
  Action as DevicesAction,2
} from './devices.js';2
import type {Store as ReduxStore} from 'redux';2
2
export type Store = ReduxStore<2
  {2
    application: ApplicationState,2
    devices: DevicesState,2
  },2
  ApplicationAction | DevicesAction,2
>;2
2
export default combineReducers({application, devices});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
export type {StyledComponent} from './styled/index.js';2
2
//2
export {default as Button} from './components/Button.js';2
export {default as ToggleButton} from './components/ToggleSwitch.js';2
export {2
  default as ButtonNavigationGroup,2
} from './components/ButtonNavigationGroup.js';2
export {default as ButtonGroup} from './components/ButtonGroup.js';2
2
//2
export {colors, darkColors, brandColors} from './components/colors.js';2
2
//2
export {default as Glyph, ColoredIcon} from './components/Glyph.js';2
2
//2
export {default as LoadingIndicator} from './components/LoadingIndicator.js';2
2
//2
export {default as Popover} from './components/Popover.js';2
2
//2
export {default as ClickableList} from './components/ClickableList.js';2
export {default as ClickableListItem} from './components/ClickableListItem.js';2
2
//2
export type {2
  TableColumns,2
  TableRows,2
  TableBodyColumn,2
  TableBodyRow,2
  TableHighlightedRows,2
  TableRowSortOrder,2
  TableColumnOrder,2
  TableColumnSizes,2
} from './components/table/types.js';2
export {default as Table} from './components/table/Table.js';2
export {default as ManagedTable} from './components/table/ManagedTable.js';2
export type {ManagedTableProps} from './components/table/ManagedTable.js';2
2
//2
export type {2
  DataValueExtractor,2
  DataInspectorExpanded,2
} from './components/data-inspector/DataInspector.js';2
export {2
  default as DataInspector,2
} from './components/data-inspector/DataInspector.js';2
export {2
  default as ManagedDataInspector,2
} from './components/data-inspector/ManagedDataInspector.js';2
2
// tabs2
export {default as Tabs} from './components/Tabs.js';2
export {default as Tab} from './components/Tab.js';2
2
// inputs2
export {default as Input} from './components/Input.js';2
export {default as Textarea} from './components/Textarea.js';2
export {default as Select} from './components/Select.js';2
export {default as Checkbox} from './components/Checkbox.js';2
2
// code2
export {default as CodeBlock} from './components/CodeBlock.js';2
2
// error2
export {default as ErrorBlock} from './components/ErrorBlock.js';2
export {default as ErrorBoundary} from './components/ErrorBoundary.js';2
2
// interactive components2
export type {OrderableOrder} from './components/Orderable.js';2
export {default as Interactive} from './components/Interactive.js';2
export {default as Orderable} from './components/Orderable.js';2
export {default as VirtualList} from './components/VirtualList.js';2
2
// base components2
export {Component, PureComponent} from 'react';2
2
// context menus and dropdowns2
export {2
  default as ContextMenuProvider,2
} from './components/ContextMenuProvider.js';2
export {default as ContextMenu} from './components/ContextMenu.js';2
export {default as InlineContextMenu} from './components/InlineContextMenu.js';2
export {default as Dropdown} from './components/Dropdown.js';2
2
// file2
export type {FileListFile, FileListFiles} from './components/FileList.js';2
export {default as FileList} from './components/FileList.js';2
export {default as File} from './components/File.js';2
2
// context menu items2
export {2
  DesktopDropdownItem,2
  DesktopDropdownSelectedItem,2
  DesktopDropdown,2
} from './components/desktop-toolbar.js';2
2
// utility elements2
export {default as View} from './components/View.js';2
export {default as ViewWithSize} from './components/ViewWithSize.js';2
export {default as Block} from './components/Block.js';2
export {default as FocusableBox} from './components/FocusableBox.js';2
export {default as Sidebar} from './components/Sidebar.js';2
export {default as SidebarLabel} from './components/SidebarLabel.js';2
export {default as Box} from './components/Box.js';2
export {default as FlexBox} from './components/FlexBox.js';2
export {default as FlexRow} from './components/FlexRow.js';2
export {default as FlexColumn} from './components/FlexColumn.js';2
export {default as FlexCenter} from './components/FlexCenter.js';2
export {default as Toolbar, Spacer} from './components/Toolbar.js';2
export {default as Panel} from './components/Panel.js';2
export {default as Text} from './components/Text.js';2
export {default as TextParagraph} from './components/TextParagraph.js';2
export {default as Link} from './components/Link.js';2
export {default as PathBreadcrumbs} from './components/PathBreadcrumbs.js';2
export {default as ModalOverlay} from './components/ModalOverlay.js';2
export {default as Tooltip} from './components/Tooltip.js';2
export {default as TooltipProvider} from './components/TooltipProvider.js';2
export {default as ResizeSensor} from './components/ResizeSensor.js';2
2
// typhography2
export {default as HorizontalRule} from './components/HorizontalRule.js';2
export {default as Label} from './components/Label.js';2
export {default as Heading} from './components/Heading.js';2
2
// filters2
export type {Filter} from './components/filter/types.js';2
2
//2
export {2
  SearchBox,2
  SearchInput,2
  SearchIcon,2
  default as Searchable,2
} from './components/searchable/Searchable.js';2
export {2
  default as SearchableTable,2
} from './components/searchable/SearchableTable.js';2
export type {SearchableProps} from './components/searchable/Searchable.js';2
2
//2
export type {2
  ElementID,2
  ElementData,2
  ElementAttribute,2
  Element,2
  ElementSearchResultSet,2
} from './components/elements-inspector/ElementsInspector.js';2
export {2
  default as ElementsInspector,2
} from './components/elements-inspector/ElementsInspector.js';2
export {InspectorSidebar} from './components/elements-inspector/sidebar.js';2
2
export {Console} from './components/console.js';2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
export default styled.view({2
  display: 'block',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexBox from './FlexBox.js';2
2
export default FlexBox.extends({2
  height: '100%',2
  overflow: 'auto',2
  position: 'relative',2
  width: '100%',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import Glyph from './Glyph.js';2
import styled from '../styled/index.js';2
import type {StyledComponent} from '../styled/index.js';2
import {findDOMNode} from 'react-dom';2
import PropTypes from 'prop-types';2
import {colors} from './colors.js';2
import {connect} from 'react-redux';2
import electron from 'electron';2
2
const borderColor = props => {2
  if (!props.windowIsFocused) {2
    return colors.macOSTitleBarButtonBorderBlur;2
  } else if (props.type === 'danger') {2
    return colors.red;2
  } else {2
    return colors.macOSTitleBarButtonBorder;2
  }2
};2
const borderBottomColor = props => {2
  if (!props.windowIsFocused) {2
    return colors.macOSTitleBarButtonBorderBlur;2
  } else if (props.type === 'danger') {2
    return colors.red;2
  } else {2
    return colors.macOSTitleBarButtonBorderBottom;2
  }2
};2
2
const StyledButton = styled.view(2
  {2
    backgroundColor: props => {2
      if (!props.windowIsFocused) {2
        return colors.macOSTitleBarButtonBackgroundBlur;2
      } else {2
        return colors.white;2
      }2
    },2
    backgroundImage: props =>2
      props.windowIsFocused2
        ? `linear-gradient(to bottom, transparent 0%,${2
            colors.macOSTitleBarButtonBackground2
          } 100%)`2
        : 'none',2
    borderStyle: 'solid',2
    borderWidth: 1,2
    borderColor,2
    borderBottomColor,2
    fontSize: props => (props.compact === true ? 11 : '1em'),2
    color: props => {2
      if (props.type === 'danger' && props.windowIsFocused) {2
        return colors.red;2
      } else if (props.disabled) {2
        return colors.macOSTitleBarIconBlur;2
      } else {2
        return colors.light50;2
      }2
    },2
    borderRadius: 4,2
    position: 'relative',2
    padding: '0 6px',2
    height: props => (props.compact === true ? 24 : 28),2
    margin: 0,2
    marginLeft: props => (props.inButtonGroup === true ? 0 : 10),2
    minWidth: 34,2
    display: 'inline-flex',2
    alignItems: 'center',2
    justifyContent: 'center',2
    flexShrink: 0,2
2
    boxShadow: props =>2
      props.pulse && props.windowIsFocused2
        ? `0 0 0 ${colors.macOSTitleBarIconSelected}`2
        : '',2
    animation: props =>2
      props.pulse && props.windowIsFocused ? 'pulse 1s infinite' : '',2
2
    '&:not(:first-child)': {2
      borderTopLeftRadius: props => (props.inButtonGroup === true ? 0 : 4),2
      borderBottomLeftRadius: props => (props.inButtonGroup === true ? 0 : 4),2
    },2
2
    '&:not(:last-child)': {2
      borderTopRightRadius: props => (props.inButtonGroup === true ? 0 : 4),2
      borderBottomRightRadius: props => (props.inButtonGroup === true ? 0 : 4),2
      borderRight: props => (props.inButtonGroup === true ? 0 : ''),2
    },2
2
    '&:first-of-type': {2
      marginLeft: 0,2
    },2
2
    '&:active': {2
      borderColor: colors.macOSTitleBarButtonBorder,2
      borderBottomColor: colors.macOSTitleBarButtonBorderBottom,2
      background: `linear-gradient(to bottom, ${2
        colors.macOSTitleBarButtonBackgroundActiveHighlight2
      } 1px, ${colors.macOSTitleBarButtonBackgroundActive} 0%, ${2
        colors.macOSTitleBarButtonBorderBlur2
      } 100%)`,2
    },2
2
    '&:disabled': {2
      borderColor,2
      borderBottomColor,2
      pointerEvents: 'none',2
    },2
2
    '&:hover::before': {2
      content: props => (props.dropdown ? "''" : ''),2
      position: 'absolute',2
      bottom: 1,2
      right: 2,2
      borderStyle: 'solid',2
      borderWidth: '4px 3px 0 3px',2
      borderColor: props =>2
        `${colors.macOSTitleBarIcon} transparent transparent transparent`,2
    },2
  },2
  {2
    ignoreAttributes: [2
      'dispatch',2
      'compact',2
      'large',2
      'windowIsFocused',2
      'inButtonGroup',2
      'danger',2
      'pulse',2
    ],2
  },2
);2
2
const Icon = Glyph.extends(2
  {2
    marginRight: props => (props.hasText ? 3 : 0),2
  },2
  {2
    ignoreAttributes: ['hasText', 'type'],2
  },2
);2
2
type Props = {2
  /**2
   * onClick handler.2
   */2
  onClick?: (event: SyntheticMouseEvent<>) => void,2
  /**2
   * Whether this button is disabled.2
   */2
  disabled?: boolean,2
  /**2
   * Whether this button is large. Increases padding and line-height.2
   */2
  large?: boolean,2
  /**2
   * Whether this button is compact. Decreases padding and line-height.2
   */2
  compact?: boolean,2
  /**2
   * Type of button.2
   */2
  type?: 'primary' | 'success' | 'warning' | 'danger',2
  /**2
   * Children.2
   */2
  children?: React$Node,2
  /**2
   * Dropdown menu template shown on click.2
   */2
  dropdown?: Array<Electron$MenuItemOptions>,2
  /**2
   * Name of the icon dispalyed next to the text2
   */2
  icon?: string,2
  iconSize?: number,2
  /**2
   * For toggle buttons, if the button is selected2
   */2
  selected?: boolean,2
  /**2
   * Button is pulsing2
   */2
  pulse?: boolean,2
  /**2
   * URL to open in the browser on click2
   */2
  href?: string,2
};2
2
type State = {2
  active: boolean,2
};2
2
/**2
 * Simple button.2
 *2
 * **Usage**2
 *2
 * ```jsx2
 * import {Button} from 'sonar';2
 * <Button onClick={handler}>Click me</Button>2
 * ```2
 *2
 * @example Default button2
 *   <Button>Click me</Button>2
 * @example Primary button2
 *   <Button type="primary">Click me</Button>2
 * @example Success button2
 *   <Button type="success">Click me</Button>2
 * @example Warning button2
 *   <Button type="warning">Click me</Button>2
 * @example Danger button2
 *   <Button type="danger">Click me</Button>2
 * @example Default solid button2
 *   <Button solid={true}>Click me</Button>2
 * @example Primary solid button2
 *   <Button type="primary" solid={true}>Click me</Button>2
 * @example Success solid button2
 *   <Button type="success" solid={true}>Click me</Button>2
 * @example Warning solid button2
 *   <Button type="warning" solid={true}>Click me</Button>2
 * @example Danger solid button2
 *   <Button type="danger" solid={true}>Click me</Button>2
 * @example Compact button2
 *   <Button compact={true}>Click me</Button>2
 * @example Large button2
 *   <Button large={true}>Click me</Button>2
 * @example Disabled button2
 *   <Button disabled={true}>Click me</Button>2
 */2
class Button extends styled.StylableComponent<2
  Props & {windowIsFocused: boolean},2
  State,2
> {2
  static contextTypes = {2
    inButtonGroup: PropTypes.bool,2
  };2
2
  state = {2
    active: false,2
  };2
2
  _ref: ?Element | ?Text;2
2
  onMouseDown = () => this.setState({active: true});2
  onMouseUp = () => this.setState({active: false});2
2
  onClick = (e: SyntheticMouseEvent<>) => {2
    if (this.props.disabled === true) {2
      return;2
    }2
    if (this.props.dropdown) {2
      const menu = electron.remote.Menu.buildFromTemplate(this.props.dropdown);2
      const position = {};2
      if (this._ref != null && this._ref instanceof Element) {2
        const {left, bottom} = this._ref.getBoundingClientRect();2
        position.x = parseInt(left, 10);2
        position.y = parseInt(bottom + 6, 10);2
      }2
      menu.popup(electron.remote.getCurrentWindow(), {2
        async: true,2
        ...position,2
      });2
    }2
    if (this.props.onClick) {2
      this.props.onClick(e);2
    }2
    if (this.props.href != null) {2
      electron.shell.openExternal(this.props.href);2
    }2
  };2
2
  setRef = (ref: ?React.ElementRef<any>) => {2
    this._ref = findDOMNode(ref);2
  };2
2
  render() {2
    const {2
      icon,2
      children,2
      selected,2
      iconSize,2
      windowIsFocused,2
      ...props2
    } = this.props;2
    const {active} = this.state;2
2
    let color = colors.macOSTitleBarIcon;2
    if (props.disabled === true) {2
      color = colors.macOSTitleBarIconBlur;2
    } else if (windowIsFocused && selected === true) {2
      color = colors.macOSTitleBarIconSelected;2
    } else if (!windowIsFocused && (selected == null || selected === false)) {2
      color = colors.macOSTitleBarIconBlur;2
    } else if (!windowIsFocused && selected === true) {2
      color = colors.macOSTitleBarIconSelectedBlur;2
    } else if (selected == null && active) {2
      color = colors.macOSTitleBarIconActive;2
    } else if (props.type === 'danger') {2
      color = colors.red;2
    }2
2
    let iconComponent;2
    if (icon != null) {2
      iconComponent = (2
        <Icon2
          name={icon}2
          size={2
            iconSize != null ? iconSize : this.props.compact === true ? 12 : 162
          }2
          color={color}2
          hasText={Boolean(children)}2
        />2
      );2
    }2
2
    return (2
      <StyledButton2
        {...props}2
        ref={this.setRef}2
        windowIsFocused={windowIsFocused}2
        onClick={this.onClick}2
        onMouseDown={this.onMouseDown}2
        onMouseUp={this.onMouseUp}2
        inButtonGroup={this.context.inButtonGroup}>2
        {iconComponent}2
        {children}2
        {this.props.pulse === true && (2
          <style2
            dangerouslySetInnerHTML={{2
              __html: `2
        @keyframes pulse {2
          0% {2
            box-shadow: 0 0 4px 0 ${colors.macOSTitleBarIconSelected};2
          }2
          70% {2
            box-shadow: 0 0 4px 6px transparent;2
          }2
          100% {2
            box-shadow: 0 0 4px 0 transparent;2
          }2
        }2
      `,2
            }}2
          />2
        )}2
      </StyledButton>2
    );2
  }2
}2
2
const ConnectedButton = connect(({application: {windowIsFocused}}) => ({2
  windowIsFocused,2
}))(Button);2
2
// $FlowFixMe2
export default (ConnectedButton: StyledComponent<Props>);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const PropTypes = require('prop-types');2
2
const ButtonGroupContainer = styled.view({2
  display: 'inline-flex',2
  marginLeft: 10,2
  '&:first-child': {2
    marginLeft: 0,2
  },2
});2
2
/**2
 * Group a series of buttons together.2
 *2
 * @example List of buttons2
 *   <ButtonGroup>2
 *     <Button>One</Button>2
 *     <Button>Two</Button>2
 *     <Button>Three</Button>2
 *   </ButtonGroup>2
 */2
export default class ButtonGroup extends Component<{2
  children: React$Node,2
}> {2
  getChildContext() {2
    return {inButtonGroup: true};2
  }2
2
  render() {2
    return <ButtonGroupContainer>{this.props.children}</ButtonGroupContainer>;2
  }2
}2
2
ButtonGroup.childContextTypes = {2
  inButtonGroup: PropTypes.bool,2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import ButtonGroup from './ButtonGroup.js';2
import Button from './Button.js';2
2
export default function ButtonNavigationGroup(props: {|2
  canGoBack: boolean,2
  canGoForward: boolean,2
  onBack: () => void,2
  onForward: () => void,2
|}) {2
  return (2
    <ButtonGroup>2
      <Button disabled={!props.canGoBack} onClick={props.onBack}>2
        {'<'}2
      </Button>2
2
      <Button disabled={!props.canGoForward} onClick={props.onForward}>2
        {'<'}2
      </Button>2
    </ButtonGroup>2
  );2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {PureComponent} from 'react';2
import styled from '../styled/index.js';2
2
type CheckboxProps = {2
  checked: boolean,2
  onChange: (checked: boolean) => void,2
};2
2
const CheckboxContainer = styled.textInput({2
  display: 'inline-block',2
  marginRight: 5,2
  verticalAlign: 'middle',2
});2
2
export default class Checkbox extends PureComponent<CheckboxProps> {2
  onChange = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    this.props.onChange(e.target.checked);2
  };2
2
  render() {2
    return (2
      <CheckboxContainer2
        type="checkbox"2
        checked={this.props.checked}2
        onChange={this.onChange}2
      />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
export default styled.view({2
  marginBottom: 10,2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {colors} from './colors.js';2
2
export default styled.view(2
  {2
    backgroundColor: ({active, windowFocused}) => {2
      if (active && windowFocused) {2
        return colors.macOSTitleBarIconSelected;2
      } else if (active && !windowFocused) {2
        return colors.macOSTitleBarBorderBlur;2
      } else {2
        return 'none';2
      }2
    },2
    color: ({active, windowFocused}) =>2
      active && windowFocused ? colors.white : colors.macOSSidebarSectionItem,2
    lineHeight: '25px',2
    padding: '0 10px',2
    '&[disabled]': {2
      color: 'rgba(0, 0, 0, 0.5)',2
    },2
  },2
  {2
    ignoreAttributes: ['active', 'windowFocused'],2
  },2
);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
export default styled.view({2
  fontFamily: 'monospace',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
// Last updated: Jan 30 20162
2
export const colors = {2
  // FIG UI Core2
  blue: '#4267b2', // Blue - Active-state nav glyphs, nav bars, links, buttons2
  blueDark3: '#162643', // Blue - Dark 3 (illustrations only)2
  blueDark2: '#20375f', // Blue - Dark 2 (illustrations only)2
  blueDark1: '#29487d', // Blue - Dark 1 (illustrations only)2
  blueDark: '#365899', // Blue - Dark 0 (blue links, blue button hover states)2
  blueTint15: '#577fbc', // Blue - Tint 15 (illustrations only)2
  blueTint30: '#7596c8', // Blue - Tint 30 (illustrations only)2
  blueTint50: '#9cb4d8', // Blue - Tint 50 (illustrations only)2
  blueTint70: '#c4d2e7', // Blue - Tint 70 (illustrations only)2
  blueTint90: '#ecf0f7', // Blue - Tint 90 (illustrations only)2
  highlight: '#4080ff', // Highlight - Unread, badging notifications, NUX *Use sparingly.*2
  highlightDark3: '#1c4f8c', // Highlight - Dark 3 (illustrations only)2
  highlightDark2: '#1d5fbf', // Highlight - Dark 2 (illustrations only)2
  highlightDark1: '#3578e5', // Highlight - Dark 1 (illustrations only)2
  highlightTint15: '#5d93ff', // Highlight - Tint 15 (illustrations only)2
  highlightTint30: '#79a6ff', // Highlight - Tint 30 (illustrations only)2
  highlightTint50: '#9fbfff', // Highlight - Tint 50 (illustrations only)2
  highlightTint70: '#c6d9ff', // Highlight - Tint 70 (illustrations only)2
  highlightTint90: '#ecf2ff', // Highlight - Tint 90 (illustrations only)2
  highlightBackground: '#edf2fa', // Highlight Background - Background fill for unread or highlighted states. Not intended for hover / pressed states2
  green: '#42b72a', // Green - Confirmation, success, commerce and status2
  red: '#FC3A4B', // Red - Badges, error states2
  redTint: '#FEF2F1',2
  white: '#ffffff', // White - Text and glyphs in Dark UI and media views2
  black: '#000000', // Black - Media backgrounds2
  yellow: '#D79651', // Yellow - Warnings2
  yellowTint: '#FEFBF2',2
  purple: '#8C73C8', // Purple - Verbose2
  purpleTint: '#E8E3F4',2
  grey: '#88A2AB', // Grey - Debug2
  greyTint: '#E7ECEE',2
  cyan: '#4FC9EA', // Cyan - Info2
  cyanTint: '#DCF4FB', // Cyan - Info2
  // FIG UI Light2
  light02: '#f6f7f9', // Light 02 – Modal Headers & Nav - Modal headers and navigation elements that sit above primary UI2
  light05: '#e9ebee', // Light 05 – Mobile & Desktop Wash - Background wash color for desktop and mobile2
  light10: '#dddfe2', // Light 10 – Desktop Dividers, Strokes, Borders - Desktop dividers, strokes, borders2
  light15: '#ced0d4', // Light 15 – Mobile Dividers, Strokes, Borders - Mobile dividers, strokes, borders2
  light20: '#bec2c9', // Light 20 – Inactive Nav Glyphs - Inactive-state nav glyphs, tertiary glyphs2
  light30: '#90949c', // Light 30 – Secondary Text & Glyphs - Secondary text and glyphs, meta text and glyphs2
  light50: '#4b4f56', // Light 50 – Medium Text & Primary Glyphs - Medium text and primary glyphs2
  light80: '#1d2129', // Light 80 – Primary Text - Primary text2
  // FIG UI Alpha2
  whiteAlpha10: 'rgba(255, 255, 255, 0.10)', // Alpha 10 - Inset strokes and borders on photos2
  whiteAlpha15: 'rgba(255, 255, 255, 0.15)', // Alpha 15 - Dividers, strokes, borders2
  whiteAlpha30: 'rgba(255, 255, 255, 0.3)', // Alpha 30 - Secondary text and glyphs, meta text and glyphs2
  whiteAlpha40: 'rgba(255, 255, 255, 0.4)', // Alpha 40 - Overlays2
  whiteAlpha50: 'rgba(255, 255, 255, 0.5)', // Alpha 50 - Medium text and primary glyphs2
  whiteAlpha80: 'rgba(255, 255, 255, 0.8)', // Alpha 80 - Primary Text2
  blackAlpha10: 'rgba(0, 0, 0, 0.1)', // Alpha 10 - Inset strokes and borders on photos2
  blackAlpha15: 'rgba(0, 0, 0, 0.15)', // Alpha 15 - Dividers, strokes, borders2
  blackAlpha30: 'rgba(0, 0, 0, 0.3)', // Alpha 30 - Secondary text and glyphs, meta text and glyphs2
  blackAlpha40: 'rgba(0, 0, 0, 0.4)', // Alpha 40 - Overlays2
  blackAlpha50: 'rgba(0, 0, 0, 0.5)', // Alpha 50 - Medium text and primary glyphs2
  blackAlpha80: 'rgba(0, 0, 0, 0.8)', // Alpha 80 - Primary Text2
  light80Alpha4: 'rgba(29, 33, 41, 0.04)', // Light 80 Alpha 4 - Hover state background fill for list views on WWW2
  light80Alpha8: 'rgba(29, 33, 41, 0.08)', // Light 80 Alpha 8 - Pressed state background fill for list views on WWW and Mobile2
  // FIG UI Dark2
  dark20: '#cccccc', // Dark 20 – Primary Text - Primary text2
  dark50: '#7f7f7f', // Dark 50 – Medium Text & Primary Glyphs - Medium text and primary glyphs2
  dark70: '#4c4c4c', // Dark 70 – Secondary Text & Glyphs - Secondary text and glyphs, meta text and glyphs2
  dark80: '#333333', // Dark 80 – Inactive Nav Glyphs - Inactive-state nav glyphs, tertiary glyphs2
  dark85: '#262626', // Dark 85 – Dividers, Strokes, Borders - Dividers, strokes, borders2
  dark90: '#191919', // Dark 90 – Nav Bar, Tab Bar, Cards - Nav bar, tab bar, cards2
  dark95: '#0d0d0d', // Dark 95 – Background Wash - Background Wash2
  // FIG Spectrum2
  blueGrey: '#5f6673', // Blue Grey2
  blueGreyDark3: '#23272f', // Blue Grey - Dark 32
  blueGreyDark2: '#303846', // Blue Grey - Dark 22
  blueGreyDark1: '#4f5766', // Blue Grey - Dark 12
  blueGreyTint15: '#777d88', // Blue Grey - Tint 152
  blueGreyTint30: '#8f949d', // Blue Grey - Tint 302
  blueGreyTint50: '#afb3b9', // Blue Grey - Tint 502
  blueGreyTint70: '#cfd1d5', // Blue Grey - Tint 702
  blueGreyTint90: '#eff0f1', // Blue Grey - Tint 902
  slate: '#b9cad2', // Slate2
  slateDark3: '#688694', // Slate - Dark 32
  slateDark2: '#89a1ac', // Slate - Dark 22
  slateDark1: '#a8bbc3', // Slate - Dark 12
  slateTint15: '#c4d2d9', // Slate - Tint 152
  slateTint30: '#cedae0', // Slate - Tint 302
  slateTint50: '#dce5e9', // Slate - Tint 502
  slateTint70: '#eaeff2', // Slate - Tint 702
  slateTint90: '#f8fafb', // Slate - Tint 902
  aluminum: '#a3cedf', // Aluminum2
  aluminumDark3: '#4b8096', // Aluminum - Dark 32
  aluminumDark2: '#6ca0b6', // Aluminum - Dark 22
  aluminumDark1: '#8ebfd4', // Aluminum - Dark 12
  aluminumTint15: '#b0d5e5', // Aluminum - Tint 152
  aluminumTint30: '#bfdde9', // Aluminum - Tint 302
  aluminumTint50: '#d1e7f0', // Aluminum - Tint 502
  aluminumTint70: '#e4f0f6', // Aluminum - Tint 702
  aluminumTint90: '#f6fafc', // Aluminum - Tint 902
  seaFoam: '#54c7ec', // Sea Foam2
  seaFoamDark3: '#186d90', // Sea Foam - Dark 32
  seaFoamDark2: '#2088af', // Sea Foam - Dark 22
  seaFoamDark1: '#39afd5', // Sea Foam - Dark 12
  seaFoamTint15: '#6bcfef', // Sea Foam - Tint 152
  seaFoamTint30: '#84d8f2', // Sea Foam - Tint 302
  seaFoamTint50: '#a7e3f6', // Sea Foam - Tint 502
  seaFoamTint70: '#caeef9', // Sea Foam - Tint 702
  seaFoamTint90: '#eefafd', // Sea Foam - Tint 902
  teal: '#6bcebb', // Teal2
  tealDark3: '#24917d', // Teal - Dark 32
  tealDark2: '#31a38d', // Teal - Dark 22
  tealDark1: '#4dbba6', // Teal - Dark 12
  tealTint15: '#80d4c4', // Teal - Tint 152
  tealTint30: '#97dccf', // Teal - Tint 302
  tealTint50: '#b4e6dd', // Teal - Tint 502
  tealTint70: '#d2f0ea', // Teal - Tint 702
  tealTint90: '#f0faf8', // Teal - Tint 902
  lime: '#a3ce71', // Lime2
  limeDark3: '#629824', // Lime - Dark 32
  limeDark2: '#71a830', // Lime - Dark 22
  limeDark1: '#89be4c', // Lime - Dark 12
  limeTint15: '#b1d587', // Lime - Tint 152
  limeTint30: '#bedd9c', // Lime - Tint 302
  limeTint50: '#d1e6b9', // Lime - Tint 502
  limeTint70: '#e4f0d5', // Lime - Tint 702
  limeTint90: '#f6faf1', // Lime - Tint 902
  lemon: '#fcd872', // Lemon2
  lemonDark3: '#d18f41', // Lemon - Dark 32
  lemonDark2: '#e1a43b', // Lemon - Dark 22
  lemonDark1: '#f5c33b', // Lemon - Dark 12
  lemonTint15: '#ffe18f', // Lemon - Tint 152
  lemonTint30: '#ffe8a8', // Lemon - Tint 302
  lemonTint50: '#ffecb5', // Lemon - Tint 502
  lemonTint70: '#fef2d1', // Lemon - Tint 702
  lemonTint90: '#fffbf0', // Lemon - Tint 902
  orange: '#f7923b', // Orange2
  orangeDark3: '#ac4615', // Orange - Dark 32
  orangeDark2: '#cc5d22', // Orange - Dark 22
  orangeDark1: '#e07a2e', // Orange - Dark 12
  orangeTint15: '#f9a159', // Orange - Tint 152
  orangeTint30: '#f9b278', // Orange - Tint 302
  orangeTint50: '#fbc89f', // Orange - Tint 502
  orangeTint70: '#fcdec5', // Orange - Tint 702
  orangeTint90: '#fef4ec', // Orange - Tint 902
  tomato: '#fb724b', // Tomato - Tometo? Tomato.2
  tomatoDark3: '#c32d0e', // Tomato - Dark 32
  tomatoDark2: '#db4123', // Tomato - Dark 22
  tomatoDark1: '#ef6632', // Tomato - Dark 12
  tomatoTint15: '#f1765e', // Tomato - Tint 152
  tomatoTint30: '#f38e7b', // Tomato - Tint 302
  tomatoTint50: '#f7afa0', // Tomato - Tint 502
  tomatoTint70: '#f9cfc7', // Tomato - Tint 702
  tomatoTint90: '#fdefed', // Tomato - Tint 902
  cherry: '#f35369', // Cherry2
  cherryDark3: '#9b2b3a', // Cherry - Dark 32
  cherryDark2: '#b73749', // Cherry - Dark 22
  cherryDark1: '#e04c60', // Cherry - Dark 12
  cherryTint15: '#f36b7f', // Cherry - Tint 152
  cherryTint30: '#f58796', // Cherry - Tint 302
  cherryTint50: '#f8a9b4', // Cherry - Tint 502
  cherryTint70: '#fbccd2', // Cherry - Tint 702
  cherryTint90: '#feeef0', // Cherry - Tint 902
  pink: '#ec7ebd', // Pink2
  pinkDark3: '#b0377b', // Pink - Dark 32
  pinkDark2: '#d4539b', // Pink - Dark 22
  pinkDark1: '#ec6fb5', // Pink - Dark 12
  pinkTint15: '#ef92c7', // Pink - Tint 152
  pinkTint30: '#f2a5d1', // Pink - Tint 302
  pinkTint50: '#f6bfdf', // Pink - Tint 502
  pinkTint70: '#f9d9eb', // Pink - Tint 702
  pinkTint90: '#fdf3f8', // Pink - Tint 902
  grape: '#8c72cb', // Grape2
  grapeDark3: '#58409b', // Grape - Dark 32
  grapeDark2: '#6a51b2', // Grape - Dark 22
  grapeDark1: '#7b64c0', // Grape - Dark 12
  grapeTint15: '#9d87d2', // Grape - Tint 152
  grapeTint30: '#af9cda', // Grape - Tint 302
  grapeTint50: '#c6b8e5', // Grape - Tint 502
  grapeTint70: '#ddd5f0', // Grape - Tint 702
  grapeTint90: '#f4f1fa', // Grape - Tint 902
  // FIG Spectrum (Skin)2
  skin1: '#f1d2b6', // Skin 12
  skin1Dark3: '#d9a170', // Skin 1 - Dark 32
  skin1Dark2: '#ddac82', // Skin 1 - Dark 22
  skin1Dark1: '#e2ba96', // Skin 1 - Dark 12
  skin1Tint15: '#f3d9c1', // Skin 1 - Tint 152
  skin1Tint30: '#f6e0cc', // Skin 1 - Tint 302
  skin1Tint50: '#f8e9db', // Skin 1 - Tint 502
  skin1Tint70: '#faf2ea', // Skin 1 - Tint 702
  skin1Tint90: '#fefbf8', // Skin 1 - Tint 902
  skin2: '#d7b195', // Skin 22
  skin2Dark3: '#af866a', // Skin 2 - Dark 32
  skin2Dark2: '#c2977a', // Skin 2 - Dark 22
  skin2Dark1: '#cfa588', // Skin 2 - Dark 12
  skin2Tint15: '#debda5', // Skin 2 - Tint 152
  skin2Tint30: '#e5c9b5', // Skin 2 - Tint 302
  skin2Tint50: '#ecd8cb', // Skin 2 - Tint 502
  skin2Tint70: '#f3e8e0', // Skin 2 - Tint 702
  skin2Tint90: '#fbf7f5', // Skin 2 - Tint 902
  skin3: '#d8a873', // Skin 32
  skin3Dark3: '#a77a4e', // Skin 3 - Dark 32
  skin3Dark2: '#ba8653', // Skin 3 - Dark 22
  skin3Dark1: '#cd9862', // Skin 3 - Dark 12
  skin3Tint15: '#e0b588', // Skin 3 - Tint 152
  skin3Tint30: '#e5c29e', // Skin 3 - Tint 302
  skin3Tint50: '#ecd4b9', // Skin 3 - Tint 502
  skin3Tint70: '#f4e5d6', // Skin 3 - Tint 702
  skin3Tint90: '#fcf6f1', // Skin 3 - Tint 902
  skin4: '#a67b4f', // Skin 42
  skin4Dark3: '#815830', // Skin 4 - Dark 32
  skin4Dark2: '#94683d', // Skin 4 - Dark 22
  skin4Dark1: '#a07243', // Skin 4 - Dark 12
  skin4Tint15: '#ae8761', // Skin 4 - Tint 152
  skin4Tint30: '#bc9d7d', // Skin 4 - Tint 302
  skin4Tint50: '#d0b9a2', // Skin 4 - Tint 502
  skin4Tint70: '#e2d5c8', // Skin 4 - Tint 702
  skin4Tint90: '#f6f1ed', // Skin 4 - Tint 902
  skin5: '#6a4f3b', // Skin 52
  skin5Dark3: '#453223', // Skin 5 - Dark 32
  skin5Dark2: '#503b2c', // Skin 5 - Dark 22
  skin5Dark1: '#624733', // Skin 5 - Dark 12
  skin5Tint15: '#8a715b', // Skin 5 - Tint 152
  skin5Tint30: '#9f8a79', // Skin 5 - Tint 302
  skin5Tint50: '#baaca0', // Skin 5 - Tint 502
  skin5Tint70: '#d5cdc6', // Skin 5 - Tint 702
  skin5Tint90: '#f2efec', // Skin 5 - Tint 902
  // macOS system colors2
  macOSHighlight: '#dbe7fa', // used for text selection, tokens, etc.2
  macOSHighlightActive: '#85afee', // active tokens2
  macOSTitleBarBackgroundTop: '#eae9eb',2
  macOSTitleBarBackgroundBottom: '#dcdbdc',2
  macOSTitleBarBackgroundBlur: '#f6f6f6',2
  macOSTitleBarBorder: '#c1c0c2',2
  macOSTitleBarBorderBlur: '#cecece',2
  macOSTitleBarIcon: '#6f6f6f',2
  macOSTitleBarIconBlur: '#acacac',2
  macOSTitleBarIconSelected: '#4d84f5',2
  macOSTitleBarIconSelectedBlur: '#80a6f5',2
  macOSTitleBarIconActive: '#4c4c4c',2
  macOSTitleBarButtonBorder: '#d3d2d3',2
  macOSTitleBarButtonBorderBottom: '#b0afb0',2
  macOSTitleBarButtonBorderBlur: '#dbdbdb',2
  macOSTitleBarButtonBackground: 'rgba(0,0,0,0.05)',2
  macOSTitleBarButtonBackgroundBlur: '#f6f6f6',2
  macOSTitleBarButtonBackgroundActiveHighlight: '#ededed',2
  macOSTitleBarButtonBackgroundActive: '#e5e5e5',2
  macOSSidebarSectionTitle: '#777',2
  macOSSidebarSectionItem: '#434343',2
  macOSSidebarPanelSeperator: '#b3b3b3',2
  sectionHeaderBorder: '#DDDFE2',2
  placeholder: '#A7AAB1',2
  info: '#5ACFEC',2
};2
2
export const darkColors = {2
  activeBackground: colors.dark80,2
  backgroundWash: colors.dark95,2
  barBackground: colors.dark90,2
  barText: colors.dark20,2
  dividers: colors.whiteAlpha10,2
};2
2
export const brandColors = {2
  Facebook: '#4267B2',2
  Messenger: '#0088FA',2
  Instagram: '#E61E68',2
  Sonar: '#8155cb',2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
import {Component} from 'react';2
import {2
  CodeBlock,2
  colors,2
  ManagedTable,2
  FlexColumn,2
  Text,2
  ManagedDataInspector,2
  Input,2
  View,2
} from '../index';2
import type {TableBodyRow, TableRows} from 'sonar';2
import type {PluginClient} from '../../plugin';2
2
type ValueWithType = {|2
  type: string,2
  value: any,2
|};2
type SuccessResult = {|2
  isSuccess: true,2
  value: ValueWithType,2
|};2
type FailedResult = {|2
  isSuccess: false,2
  error: string,2
|};2
2
type CommandResult = SuccessResult | FailedResult;2
2
type Props = {2
  client: PluginClient,2
  getContext: () => string,2
};2
type State = {2
  isConsoleEnabled: boolean,2
  script: string,2
  previousExecutions: Array<{2
    command: string,2
    result: CommandResult,2
  }>,2
};2
2
class ConsoleError extends Component<{2
  error: Error | string | void,2
  className?: string,2
}> {2
  static Container = CodeBlock.extends({2
    backgroundColor: colors.redTint,2
    color: colors.red,2
    overflow: 'auto',2
    flexGrow: 1,2
    margin: '0 -8px',2
    padding: '0 8px',2
  });2
2
  render() {2
    const {className, error} = this.props;2
2
    return (2
      <ConsoleError.Container className={className}>2
        {error}2
      </ConsoleError.Container>2
    );2
  }2
}2
2
export class Console extends Component<Props, State> {2
  static title = 'Console';2
  static id = 'Console';2
  static icon = 'chevron-right';2
2
  static TableColumns = {2
    command: {2
      value: 'Commands',2
    },2
  };2
2
  static CommandsTable = ManagedTable.extends({2
    flexGrow: 1,2
  });2
  static Window = FlexColumn.extends({2
    padding: '15px',2
    flexGrow: 1,2
  });2
  static Input = Input.extends({2
    width: '100%',2
  });2
2
  constructor(props: Props) {2
    super(props);2
    this.state = {2
      isConsoleEnabled: false,2
      script: '',2
      previousExecutions: [],2
    };2
  }2
2
  executeScriptOnDevice = () => {2
    this.props.client2
      .call('executeCommand', {2
        command: this.state.script,2
        context: this.props.getContext(),2
      })2
      .then((result: ValueWithType) => {2
        this.setState({2
          script: '',2
          previousExecutions: [2
            ...this.state.previousExecutions,2
            {2
              command: this.state.script,2
              result: {isSuccess: true, value: result},2
            },2
          ],2
        });2
      })2
      .catch((onReject?) => {2
        this.setState({2
          previousExecutions: [2
            ...this.state.previousExecutions,2
            {2
              command: this.state.script,2
              result: {2
                isSuccess: false,2
                error: (onReject && onReject.message) || '',2
              },2
            },2
          ],2
        });2
      });2
  };2
2
  onInputChange = (event: SyntheticInputEvent<>) => {2
    this.setState({script: event.target.value});2
  };2
2
  onSubmit = (event: SyntheticEvent<>) => {2
    if (this.state.script != '') {2
      this.executeScriptOnDevice();2
    }2
    event.preventDefault();2
  };2
2
  buildCommandResultRowPair(2
    command: string,2
    result: CommandResult,2
    index: number,2
  ): TableRows {2
    const key = index * 2;2
    const commandRow: TableBodyRow = {2
      columns: {2
        command: {value: <Text>{command}</Text>},2
      },2
      key: key.toString(),2
    };2
    const resultRow: TableBodyRow = {2
      columns: {2
        command: {2
          value: result.isSuccess ? (2
            <ManagedDataInspector2
              data={result.value}2
              expandRoot={true}2
              collapsed={true}2
            />2
          ) : (2
            <ConsoleError error={result.error} />2
          ),2
        },2
      },2
      key: (key + 1).toString(),2
    };2
    return [commandRow, resultRow];2
  }2
2
  renderPreviousCommands() {2
    const rows: TableRows = this.state.previousExecutions2
      .map(({command, result}, index) =>2
        this.buildCommandResultRowPair(command, result, index),2
      )2
      .reduce((x, y) => x.concat(y), []);2
    return rows.length ? (2
      <Console.CommandsTable2
        columns={Console.TableColumns}2
        rows={rows}2
        multiline={true}2
        stickyBottom={true}2
        highlightableRows={false}2
        hideHeader={true}2
        autoHeight={true}2
      />2
    ) : null;2
  }2
2
  render() {2
    return (2
      <Console.Window>2
        <View fill>{this.renderPreviousCommands()}</View>2
        <form onSubmit={this.onSubmit}>2
          <Console.Input2
            onChange={this.onInputChange}2
            placeholder="Command"2
            value={this.state.script}2
          />2
        </form>2
      </Console.Window>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexColumn from './FlexColumn.js';2
import styled from '../styled/index.js';2
import PropTypes from 'prop-types';2
2
type MenuTemplate = Array<Electron$MenuItemOptions>;2
2
type Props = {2
  items?: MenuTemplate,2
  buildItems?: () => MenuTemplate,2
  children: React$Node,2
  component: React.ComponentType<any> | string,2
};2
2
export default class ContextMenu extends styled.StylablePureComponent<Props> {2
  static defaultProps = {2
    component: FlexColumn,2
  };2
2
  static contextTypes = {2
    appendToContextMenu: PropTypes.func,2
  };2
2
  onContextMenu = (e: SyntheticMouseEvent<>) => {2
    if (typeof this.context.appendToContextMenu === 'function') {2
      if (this.props.items != null) {2
        this.context.appendToContextMenu(this.props.items);2
      } else if (this.props.buildItems != null) {2
        this.context.appendToContextMenu(this.props.buildItems());2
      }2
    }2
  };2
2
  render() {2
    const {2
      items: _itesm,2
      buildItems: _buildItems,2
      component,2
      ...props2
    } = this.props;2
    return React.createElement(2
      component,2
      {2
        onContextMenu: this.onContextMenu,2
        ...props,2
      },2
      this.props.children,2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
import styled from '../styled/index.js';2
import electron from 'electron';2
2
const PropTypes = require('prop-types');2
2
type MenuTemplate = Array<Electron$MenuItemOptions>;2
2
const Container = styled.view({2
  display: 'contents',2
});2
2
export default class ContextMenuProvider extends Component<{|2
  children: React$Node,2
|}> {2
  static childContextTypes = {2
    appendToContextMenu: PropTypes.func,2
  };2
2
  getChildContext() {2
    return {appendToContextMenu: this.appendToContextMenu};2
  }2
2
  _menuTemplate: MenuTemplate = [];2
2
  appendToContextMenu = (items: MenuTemplate) => {2
    this._menuTemplate = this._menuTemplate.concat(items);2
  };2
2
  onContextMenu = () => {2
    const menu = electron.remote.Menu.buildFromTemplate(this._menuTemplate);2
    this._menuTemplate = [];2
    menu.popup(electron.remote.getCurrentWindow(), {async: true});2
  };2
2
  render() {2
    return (2
      <Container onContextMenu={this.onContextMenu}>2
        {this.props.children}2
      </Container>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {colors, darkColors} from './colors.js';2
2
const React = require('react');2
2
const DesktopDropdownContainer = styled.view({2
  borderBottom: `1px solid ${darkColors.dividers}`,2
  lineHeight: '25px',2
  marginTop: 5,2
  maxHeight: 600,2
  minWidth: 180,2
  overflow: 'auto',2
  padding: 0,2
  paddingBottom: 5,2
  textAlign: 'left',2
  width: 'auto',2
2
  '&:last-child': {2
    borderBottom: 'none',2
  },2
});2
2
export function DesktopDropdown(props: {|2
  deactivate?: () => void,2
  children?: any,2
|}) {2
  return (2
    <DesktopDropdownContainer>2
      {React.Children.map(props.children, child => {2
        return (2
          child &&2
          React.cloneElement(child, {2
            deactivate: props.deactivate,2
          })2
        );2
      })}2
    </DesktopDropdownContainer>2
  );2
}2
2
const DesktopDropdownItemContainer = styled.view(2
  {2
    listStyle: 'none',2
    opacity: props => (props.onClick || props.onHover ? 1 : 0.5),2
    padding: '0 20px',2
2
    '&:hover': {2
      backgroundColor: props =>2
        props.onClick || props.onHover ? colors.highlight : '',2
      color: props => (props.onClick || props.onHover ? '#fff' : 'inherit'),2
    },2
  },2
  {2
    ignoreAttributes: [],2
  },2
);2
2
type DesktopDropdownItemState = {|hovered: boolean|};2
2
type DesktopDropdownItemProps = {2
  onClick?: false | ?((event: SyntheticMouseEvent<>) => void),2
  onHover?: false | ?(() => React$Node),2
  children?: React$Node,2
  deactivate?: () => void,2
};2
2
export class DesktopDropdownItem extends styled.StylableComponent<2
  DesktopDropdownItemProps,2
  DesktopDropdownItemState,2
> {2
  constructor(props: DesktopDropdownItemProps, context: Object) {2
    super(props, context);2
    this.state = {hovered: false};2
  }2
2
  onMouseEnter = () => {2
    this.setState({hovered: true});2
  };2
2
  onMouseLeave = () => {2
    this.setState({hovered: false});2
  };2
2
  onClick = (event: SyntheticMouseEvent<>) => {2
    const {deactivate, onClick} = this.props;2
    if (typeof onClick === 'function') {2
      if (deactivate) {2
        deactivate();2
      }2
      onClick(event);2
    }2
  };2
2
  render() {2
    const {hovered} = this.state;2
    const {2
      children,2
      deactivate: _deactivate,2
      onClick,2
      onHover,2
      ...props2
    } = this.props;2
2
    return (2
      <DesktopDropdownItemContainer2
        {...props}2
        onMouseEnter={this.onMouseEnter}2
        onMouseLeave={this.onMouseLeave}2
        onClick={typeof onClick === 'function' && this.onClick}>2
        {children}2
        {hovered && typeof onHover === 'function' && onHover()}2
      </DesktopDropdownItemContainer>2
    );2
  }2
}2
2
export const DesktopDropdownSelectedItem = DesktopDropdownItem.extends({2
  position: 'relative',2
2
  '&::before': {2
    content: "'✔'",2
    marginLeft: '-15px',2
    position: 'absolute',2
  },2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import ContextMenu from './ContextMenu.js';2
2
const invariant = require('invariant');2
2
export default class Dropdown extends ContextMenu {2
  trigger: string = 'onClick';2
2
  ref: ?HTMLElement;2
2
  getCoordinates(): {top: number, left: number} {2
    const {ref} = this;2
    invariant(ref, 'expected ref');2
2
    const rect = ref.getBoundingClientRect();2
    return {2
      left: rect.left,2
      top: rect.top,2
    };2
  }2
2
  setRef = (ref: ?HTMLElement) => {2
    this.ref = ref;2
  };2
2
  render() {2
    return <span ref={this.setRef}>{this.props.children}</span>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import CodeBlock from './CodeBlock.js';2
2
const ErrorBlockContainer = CodeBlock.extends({2
  backgroundColor: '#f2dede',2
  border: '1px solid #ebccd1',2
  borderRadius: 4,2
  color: '#a94442',2
  overflow: 'auto',2
  padding: 10,2
});2
2
export default class ErrorBlock extends styled.StylableComponent<{2
  error: Error | string | void,2
  className?: string,2
}> {2
  render() {2
    const {className, error} = this.props;2
2
    let stack = 'Unknown Error';2
    if (typeof error === 'string') {2
      stack = error;2
    } else if (error && typeof error === 'object') {2
      stack = error.stack || error.message || stack;2
    }2
2
    return (2
      <ErrorBlockContainer className={className}>{stack}</ErrorBlockContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import ErrorBlock from './ErrorBlock.js';2
import {Component} from 'react';2
import Heading from './Heading.js';2
import Button from './Button.js';2
import View from './View.js';2
import LogManager from '../../fb-stubs/Logger.js';2
2
const ErrorBoundaryContainer = View.extends({2
  overflow: 'auto',2
  padding: 10,2
});2
2
const ErrorBoundaryStack = ErrorBlock.extends({2
  marginBottom: 10,2
});2
2
type ErrorBoundaryProps = {2
  buildHeading?: (err: Error) => string,2
  heading?: string,2
  logger?: LogManager,2
  showStack?: boolean,2
  children?: React$Node,2
};2
2
type ErrorBoundaryState = {|2
  error: ?Error,2
|};2
2
export default class ErrorBoundary extends Component<2
  ErrorBoundaryProps,2
  ErrorBoundaryState,2
> {2
  constructor(props: ErrorBoundaryProps, context: Object) {2
    super(props, context);2
    this.state = {error: null};2
  }2
2
  componentDidCatch(err: Error) {2
    this.props.logger &&2
      this.props.logger.error(err.toString(), 'ErrorBoundary');2
    this.setState({error: err});2
  }2
2
  clearError = () => {2
    this.setState({error: null});2
  };2
2
  render() {2
    const {error} = this.state;2
    if (error) {2
      const {buildHeading} = this.props;2
      let {heading} = this.props;2
      if (buildHeading) {2
        heading = buildHeading(error);2
      }2
      if (heading == null) {2
        heading = 'An error has occured';2
      }2
2
      return (2
        <ErrorBoundaryContainer fill={true}>2
          <Heading>{heading}</Heading>2
          {this.props.showStack !== false && (2
            <ErrorBoundaryStack error={error} />2
          )}2
          <Button onClick={this.clearError}>Clear error and try again</Button>2
        </ErrorBoundaryContainer>2
      );2
    } else {2
      return this.props.children;2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
2
const React = require('react');2
const fs = require('fs');2
2
type FileProps = {|2
  src: string,2
  buffer?: ?string,2
  encoding: string,2
  onError?: (err: Error) => React.Element<*>,2
  onLoading?: () => React.Element<*>,2
  onData?: (content: string) => void,2
  onLoad: (content: string) => React.Element<*>,2
|};2
2
type FileState = {|2
  error: ?Error,2
  loaded: boolean,2
  content: string,2
|};2
2
export default class File extends Component<FileProps, FileState> {2
  constructor(props: FileProps, context: Object) {2
    super(props, context);2
    this.state = {2
      content: props.buffer || '',2
      error: null,2
      loaded: props.buffer != null,2
    };2
  }2
2
  static defaultProps = {2
    encoding: 'utf8',2
  };2
2
  componentWillReceiveProps(nextProps: FileProps) {2
    if (nextProps.buffer != null) {2
      this.setState({content: nextProps.buffer, loaded: true});2
    }2
  }2
2
  componentDidMount() {2
    if (this.state.loaded) {2
      return;2
    }2
2
    fs.readFile(this.props.src, this.props.encoding, (err, content) => {2
      if (err) {2
        this.setState({error: err});2
        return;2
      }2
2
      this.setState({content, loaded: true});2
2
      if (this.props.onData) {2
        this.props.onData(content);2
      }2
    });2
  }2
2
  render() {2
    const {onError, onLoad, onLoading} = this.props;2
    const {content, error, loaded} = this.state;2
2
    if (error && onError) {2
      return onError(error);2
    } else if (loaded) {2
      return onLoad(content);2
    } else if (onLoading) {2
      return onLoading();2
    } else {2
      return null;2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
2
const path = require('path');2
const fs = require('fs');2
2
const EMPTY_MAP = new Map();2
const EMPTY_FILE_LIST_STATE = {error: null, files: EMPTY_MAP};2
2
export type FileListFileType = 'file' | 'folder';2
2
export type FileListFile = {|2
  name: string,2
  src: string,2
  type: FileListFileType,2
  size: number,2
  mtime: number,2
  atime: number,2
  ctime: number,2
  birthtime: number,2
|};2
2
export type FileListFiles = Array<FileListFile>;2
2
type FileListProps = {2
  src: string,2
  onError?: ?(err: Error) => React$Node,2
  onLoad?: () => void,2
  onFiles: (files: FileListFiles) => React$Node,2
};2
2
type FileListState = {|2
  files: Map<string, FileListFile>,2
  error: ?Error,2
|};2
2
export default class FileList extends Component<FileListProps, FileListState> {2
  constructor(props: FileListProps, context: Object) {2
    super(props, context);2
    this.state = EMPTY_FILE_LIST_STATE;2
  }2
2
  watcher: ?fs.FSWatcher;2
2
  fetchFile(name: string): Promise<FileListFile> {2
    return new Promise((resolve, reject) => {2
      const loc = path.join(this.props.src, name);2
2
      fs.lstat(loc, (err, stat) => {2
        if (err) {2
          reject(err);2
        } else {2
          const details: FileListFile = {2
            atime: Number(stat.atime),2
            birthtime:2
              typeof stat.birthtime === 'object' ? Number(stat.birthtime) : 0,2
            ctime: Number(stat.ctime),2
            mtime: Number(stat.mtime),2
            name,2
            size: stat.size,2
            src: loc,2
            type: stat.isDirectory() ? 'folder' : 'file',2
          };2
          resolve(details);2
        }2
      });2
    });2
  }2
2
  fetchFiles(callback?: Function) {2
    const {src} = this.props;2
2
    const setState = data => {2
      if (!hasChangedDir()) {2
        this.setState(data);2
      }2
    };2
2
    const hasChangedDir = () => this.props.src !== src;2
2
    fs.readdir(src, (err, files) => {2
      if (err) {2
        setState({error: err, files: EMPTY_MAP});2
        return;2
      }2
2
      const filesSet: Map<string, FileListFile> = new Map();2
      const next = () => {2
        if (hasChangedDir()) {2
          return;2
        }2
2
        if (!files.length) {2
          setState({error: null, files: filesSet});2
          if (callback) {2
            callback();2
          }2
          return;2
        }2
2
        const name = files.shift();2
        this.fetchFile(name)2
          .then(data => {2
            filesSet.set(name, data);2
            next();2
          })2
          .catch(err => {2
            setState({error: err, files: EMPTY_MAP});2
          });2
      };2
2
      next();2
    });2
  }2
2
  componentWillReceiveProps(nextProps: FileListProps) {2
    if (nextProps.src !== this.props.src) {2
      this.initialFetch(nextProps);2
    }2
  }2
2
  componentDidMount() {2
    this.initialFetch(this.props);2
  }2
2
  componentWillUnmount() {2
    this.removeWatcher();2
  }2
2
  initialFetch(props: FileListProps) {2
    this.removeWatcher();2
2
    fs.access(props.src, fs.constants.R_OK, err => {2
      if (err) {2
        this.setState({error: err, files: EMPTY_MAP});2
        return;2
      }2
2
      this.fetchFiles(props.onLoad);2
2
      this.watcher = fs.watch(props.src, () => {2
        this.fetchFiles();2
      });2
2
      this.watcher.on('error', err => {2
        this.setState({error: err, files: EMPTY_MAP});2
        this.removeWatcher();2
      });2
    });2
  }2
2
  removeWatcher() {2
    if (this.watcher) {2
      this.watcher.close();2
    }2
  }2
2
  render() {2
    const {error, files} = this.state;2
    const {onError, onFiles} = this.props;2
    if (error && onError) {2
      return onError(error);2
    } else {2
      return onFiles(Array.from(files.values()));2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import View from './View.js';2
2
export default View.extends(2
  {2
    display: 'flex',2
    flexShrink: props => (props.shrink == null || props.shrink ? 1 : 0),2
  },2
  {2
    ignoreAttributes: ['shrink'],2
  },2
);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import View from './View.js';2
2
export default View.extends({2
  display: 'flex',2
  alignItems: 'center',2
  justifyContent: 'center',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexBox from './FlexBox.js';2
2
export default FlexBox.extends({2
  flexDirection: 'column',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexBox from './FlexBox.js';2
2
export default FlexBox.extends({2
  flexDirection: 'row',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
import Box from './Box.js';2
import {colors} from './colors';2
2
const FocusableBoxBorder = Box.extends(2
  {2
    border: `1px solid ${colors.highlight}`,2
    bottom: '0',2
    left: '0',2
    pointerEvents: 'none',2
    position: 'absolute',2
    right: '0',2
    top: '0',2
  },2
  {2
    ignoreAttributes: [],2
  },2
);2
2
export default class FocusableBox extends Component<2
  Object,2
  {|2
    focused: boolean,2
  |},2
> {2
  constructor(props: Object, context: Object) {2
    super(props, context);2
    this.state = {focused: false};2
  }2
2
  static defaultProps = {2
    focusable: true,2
  };2
2
  onBlur = (e: SyntheticFocusEvent<>) => {2
    const {onBlur} = this.props;2
    if (onBlur) {2
      onBlur(e);2
    }2
    if (this.state.focused) {2
      this.setState({focused: false});2
    }2
  };2
2
  onFocus = (e: SyntheticFocusEvent<>) => {2
    const {onFocus} = this.props;2
    if (onFocus) {2
      onFocus(e);2
    }2
    if (this.props.focusable) {2
      this.setState({focused: true});2
    }2
  };2
2
  render() {2
    const {props} = this;2
2
    return (2
      <Box {...props} onFocus={this.onFocus} onBlur={this.onBlur} tabIndex="0">2
        {props.children}2
        {this.state.focused && <FocusableBoxBorder />}2
      </Box>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
const PropTypes = require('prop-types');2
import {getIconUrl} from '../../utils/icons.js';2
2
const ColoredIconBlack = styled.image(2
  {2
    height: props => props.size,2
    verticalAlign: 'middle',2
    width: props => props.size,2
  },2
  {2
    ignoreAttributes: ['size'],2
  },2
);2
2
const ColoredIconCustom = styled.view(2
  {2
    height: props => props.size,2
    verticalAlign: 'middle',2
    width: props => props.size,2
    backgroundColor: props => props.color,2
    display: 'inline-block',2
    maskImage: props => `url('${props.src}')`,2
    maskSize: '100% 100%',2
    // $FlowFixMe: prefixed property2
    WebkitMaskImage: props => `url('${props.src}')`,2
    // $FlowFixMe: prefixed property2
    WebkitMaskSize: '100% 100%',2
  },2
  {2
    ignoreAttributes: ['color', 'size', 'src'],2
  },2
);2
2
export function ColoredIcon(2
  props: {|2
    name: string,2
    src: string,2
    size?: number,2
    className?: string,2
    color?: string,2
  |},2
  context: {|2
    glyphColor?: string,2
  |},2
) {2
  const {color = context.glyphColor, name, size = 16, src} = props;2
2
  const isBlack =2
    color == null ||2
    color === '#000' ||2
    color === 'black' ||2
    color === '#000000';2
2
  if (isBlack) {2
    return (2
      <ColoredIconBlack2
        alt={name}2
        src={src}2
        size={size}2
        className={props.className}2
      />2
    );2
  } else {2
    return (2
      <ColoredIconCustom2
        color={color}2
        size={size}2
        src={src}2
        className={props.className}2
      />2
    );2
  }2
}2
2
ColoredIcon.contextTypes = {2
  glyphColor: PropTypes.string,2
};2
2
export default class Glyph extends styled.StylablePureComponent<{2
  name: string,2
  size?: 8 | 10 | 12 | 16 | 18 | 20 | 24 | 32,2
  variant?: 'filled' | 'outline',2
  className?: string,2
  color?: string,2
}> {2
  render() {2
    const {name, size, variant, color, className} = this.props;2
2
    return (2
      <ColoredIcon2
        name={name}2
        className={className}2
        color={color}2
        size={size}2
        src={getIconUrl(name, size, variant)}2
      />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
const LargeHeading = styled.view({2
  fontSize: 18,2
  fontWeight: 'bold',2
  lineHeight: '20px',2
  borderBottom: '1px solid #ddd',2
  marginBottom: 10,2
});2
2
const SmallHeading = styled.view({2
  fontSize: 12,2
  color: '#90949c',2
  fontWeight: 'bold',2
  marginBottom: 10,2
  textTransform: 'uppercase',2
});2
2
/**2
 * A heading component.2
 *2
 * @example Heading 12
 *   <Heading level={1}>I'm a heading</Heading>2
 * @example Heading 22
 *   <Heading level={2}>I'm a heading</Heading>2
 * @example Heading 32
 *   <Heading level={3}>I'm a heading</Heading>2
 * @example Heading 42
 *   <Heading level={4}>I'm a heading</Heading>2
 * @example Heading 52
 *   <Heading level={5}>I'm a heading</Heading>2
 * @example Heading 62
 *   <Heading level={6}>I'm a heading</Heading>2
 */2
export default function Heading(props: {2
  /**2
   * Level of the heading. A number from 1-6. Where 1 is the largest heading.2
   */2
  level?: number,2
  /**2
   * Children.2
   */2
  children?: React$Node,2
}) {2
  if (props.level === 1) {2
    return <LargeHeading>{props.children}</LargeHeading>;2
  } else {2
    return <SmallHeading>{props.children}</SmallHeading>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
export default styled.view({2
  backgroundColor: '#c9ced4',2
  height: 1,2
  margin: '5px 0',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import ContextMenu from './ContextMenu.js';2
2
export default class InlineContextMenu extends ContextMenu {2
  render() {2
    return <span>{this.props.children}</span>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {colors} from './colors.js';2
2
export const inputStyle = {2
  border: `1px solid ${colors.light15}`,2
  borderRadius: 4,2
  font: 'inherit',2
  fontSize: '1em',2
  height: (props: Object) => (props.compact ? '17px' : '28px'),2
  lineHeight: (props: Object) => (props.compact ? '17px' : '28px'),2
  marginRight: 5,2
2
  '&:disabled': {2
    backgroundColor: '#ddd',2
    borderColor: '#ccc',2
    cursor: 'not-allowed',2
  },2
};2
2
const Input = styled.textInput(2
  {2
    ...inputStyle,2
    padding: props => (props.compact ? '0 5px' : '0 10px'),2
  },2
  {2
    ignoreAttributes: ['compact'],2
  },2
);2
2
Input.defaultProps = {2
  type: 'text',2
};2
2
export default Input;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Rect} from '../../utils/geometry.js';2
import LowPassFilter from '../../utils/LowPassFilter.js';2
import {2
  getDistanceTo,2
  maybeSnapLeft,2
  maybeSnapTop,2
  SNAP_SIZE,2
} from '../../utils/snap.js';2
import {styled} from 'sonar';2
2
const invariant = require('invariant');2
const React = require('react');2
2
const WINDOW_CURSOR_BOUNDARY = 5;2
2
type CursorState = {|2
  top: number,2
  left: number,2
|};2
2
type ResizingSides = ?{|2
  left?: boolean,2
  top?: boolean,2
  bottom?: boolean,2
  right?: boolean,2
|};2
2
const ALL_RESIZABLE: ResizingSides = {2
  bottom: true,2
  left: true,2
  right: true,2
  top: true,2
};2
2
type InteractiveProps = {|2
  isMovableAnchor?: (event: SyntheticMouseEvent<>) => boolean,2
  onMoveStart?: () => void,2
  onMoveEnd?: () => void,2
  onMove?: (top: number, left: number, event: SyntheticMouseEvent<>) => void,2
  id?: string,2
  movable?: boolean,2
  hidden?: boolean,2
  moving?: boolean,2
  fill?: boolean,2
  siblings?: $Shape<{[key: string]: $Shape<Rect>}>,2
  updateCursor?: (cursor: ?string) => void,2
  zIndex?: number,2
  top?: number,2
  left?: number,2
  minTop: number,2
  minLeft: number,2
  width?: number | string,2
  height?: number | string,2
  minWidth: number,2
  minHeight: number,2
  maxWidth?: number,2
  maxHeight?: number,2
  onCanResize?: (sides: ResizingSides) => void,2
  onResizeStart?: () => void,2
  onResizeEnd?: () => void,2
  onResize?: (width: number, height: number) => void,2
  resizing?: boolean,2
  resizable?: boolean | ResizingSides,2
  innerRef?: (elem: HTMLElement) => void,2
  style?: Object,2
  className?: string,2
  children?: React.Element<*>,2
|};2
2
type InteractiveState = {|2
  moving: boolean,2
  movingInitialProps: ?InteractiveProps,2
  movingInitialCursor: ?CursorState,2
  cursor: ?string,2
  resizingSides: ResizingSides,2
  couldResize: boolean,2
  resizing: boolean,2
  resizingInitialRect: ?Rect,2
  resizingInitialCursor: ?CursorState,2
|};2
2
const InteractiveContainer = styled.view({2
  willChange: 'transform, height, width, z-index',2
});2
2
export default class Interactive extends styled.StylableComponent<2
  InteractiveProps,2
  InteractiveState,2
> {2
  constructor(props: InteractiveProps, context: Object) {2
    super(props, context);2
2
    this.state = {2
      couldResize: false,2
      cursor: null,2
      moving: false,2
      movingInitialCursor: null,2
      movingInitialProps: null,2
      resizing: false,2
      resizingInitialCursor: null,2
      resizingInitialRect: null,2
      resizingSides: null,2
    };2
2
    this.globalMouse = false;2
  }2
2
  globalMouse: boolean;2
  ref: HTMLElement;2
2
  nextTop: ?number;2
  nextLeft: ?number;2
  nextEvent: ?SyntheticMouseEvent<>;2
2
  static defaultProps = {2
    minHeight: 0,2
    minLeft: 0,2
    minTop: 0,2
    minWidth: 0,2
  };2
2
  onMouseMove = (event: SyntheticMouseEvent<>) => {2
    if (this.state.moving) {2
      this.calculateMove(event);2
    } else if (this.state.resizing) {2
      this.calculateResize(event);2
    } else {2
      this.calculateResizable(event);2
    }2
  };2
2
  startAction = (event: SyntheticMouseEvent<>) => {2
    this.globalMouse = true;2
    window.addEventListener('pointerup', this.endAction, {passive: true});2
    window.addEventListener('pointermove', this.onMouseMove, {passive: true});2
2
    const {isMovableAnchor} = this.props;2
    if (isMovableAnchor && isMovableAnchor(event)) {2
      this.startTitleAction(event);2
    } else {2
      this.startWindowAction(event);2
    }2
  };2
2
  startTitleAction(event: SyntheticMouseEvent<>) {2
    if (this.state.couldResize) {2
      this.startResizeAction(event);2
    } else if (this.props.movable === true) {2
      this.startMoving(event);2
    }2
  }2
2
  startMoving(event: SyntheticMouseEvent<>) {2
    const {onMoveStart} = this.props;2
    if (onMoveStart) {2
      onMoveStart();2
    }2
2
    if (this.context.os) {2
      // pause OS timers to avoid lag when dragging2
      this.context.os.timers.pause();2
    }2
2
    const topLpf = new LowPassFilter();2
    const leftLpf = new LowPassFilter();2
2
    this.nextTop = null;2
    this.nextLeft = null;2
    this.nextEvent = null;2
2
    const onFrame = () => {2
      if (!this.state.moving) {2
        return;2
      }2
2
      const {nextEvent, nextTop, nextLeft} = this;2
      if (nextEvent && nextTop != null && nextLeft != null) {2
        if (topLpf.hasFullBuffer()) {2
          const newTop = topLpf.next(nextTop);2
          const newLeft = leftLpf.next(nextLeft);2
          this.move(newTop, newLeft, nextEvent);2
        } else {2
          this.move(nextTop, nextLeft, nextEvent);2
        }2
      }2
2
      requestAnimationFrame(onFrame);2
    };2
2
    this.setState(2
      {2
        cursor: 'move',2
        moving: true,2
        movingInitialCursor: {2
          left: event.clientX,2
          top: event.clientY,2
        },2
        movingInitialProps: this.props,2
      },2
      onFrame,2
    );2
  }2
2
  getPossibleTargetWindows(rect: Rect) {2
    const closeWindows = [];2
2
    const {siblings} = this.props;2
    if (siblings) {2
      for (const key in siblings) {2
        if (key === this.props.id) {2
          // don't target ourselves2
          continue;2
        }2
2
        const win = siblings[key];2
        const distance = getDistanceTo(rect, win);2
        if (distance <= SNAP_SIZE) {2
          closeWindows.push(win);2
        }2
      }2
    }2
2
    return closeWindows;2
  }2
2
  startWindowAction(event: SyntheticMouseEvent<>) {2
    if (this.state.couldResize) {2
      this.startResizeAction(event);2
    }2
  }2
2
  startResizeAction(event: SyntheticMouseEvent<>) {2
    event.stopPropagation();2
    event.preventDefault();2
2
    const {onResizeStart} = this.props;2
    if (onResizeStart) {2
      onResizeStart();2
    }2
2
    this.setState({2
      resizing: true,2
      resizingInitialCursor: {2
        left: event.clientX,2
        top: event.clientY,2
      },2
      resizingInitialRect: this.getRect(),2
    });2
  }2
2
  componentDidUpdate(prevProps: InteractiveProps, prevState: InteractiveState) {2
    if (prevState.cursor !== this.state.cursor) {2
      const {updateCursor} = this.props;2
      if (updateCursor) {2
        updateCursor(this.state.cursor);2
      }2
    }2
  }2
2
  resetMoving() {2
    const {onMoveEnd} = this.props;2
    if (onMoveEnd) {2
      onMoveEnd();2
    }2
2
    if (this.context.os) {2
      // resume os timers2
      this.context.os.timers.resume();2
    }2
2
    this.setState({2
      cursor: undefined,2
      moving: false,2
      movingInitialProps: undefined,2
      resizingInitialCursor: undefined,2
    });2
  }2
2
  resetResizing() {2
    const {onResizeEnd} = this.props;2
    if (onResizeEnd) {2
      onResizeEnd();2
    }2
2
    this.setState({2
      resizing: false,2
      resizingInitialCursor: undefined,2
      resizingInitialRect: undefined,2
      resizingSides: undefined,2
    });2
  }2
2
  componentWillUnmount() {2
    this.endAction();2
  }2
2
  endAction = () => {2
    this.globalMouse = false;2
2
    window.removeEventListener('pointermove', this.onMouseMove);2
    window.removeEventListener('pointerup', this.endAction);2
2
    if (this.state.moving) {2
      this.resetMoving();2
    }2
2
    if (this.state.resizing) {2
      this.resetResizing();2
    }2
  };2
2
  onMouseLeave = () => {2
    if (!this.state.resizing && !this.state.moving) {2
      this.setState({2
        cursor: undefined,2
      });2
    }2
  };2
2
  calculateMove(event: SyntheticMouseEvent<>) {2
    const {movingInitialCursor, movingInitialProps} = this.state;2
2
    invariant(movingInitialProps, 'TODO');2
    invariant(movingInitialCursor, 'TODO');2
2
    const {clientX: cursorLeft, clientY: cursorTop} = event;2
2
    const movedLeft = movingInitialCursor.left - cursorLeft;2
    const movedTop = movingInitialCursor.top - cursorTop;2
2
    let newLeft = (movingInitialProps.left || 0) - movedLeft;2
    let newTop = (movingInitialProps.top || 0) - movedTop;2
2
    if (event.altKey) {2
      const snapProps = this.getRect();2
      const windows = this.getPossibleTargetWindows(snapProps);2
      newLeft = maybeSnapLeft(snapProps, windows, newLeft);2
      newTop = maybeSnapTop(snapProps, windows, newTop);2
    }2
2
    this.nextTop = newTop;2
    this.nextLeft = newLeft;2
    this.nextEvent = event;2
  }2
2
  resize(width: number, height: number) {2
    if (width === this.props.width && height === this.props.height) {2
      // noop2
      return;2
    }2
2
    const {onResize} = this.props;2
    if (!onResize) {2
      return;2
    }2
2
    width = Math.max(this.props.minWidth, width);2
    height = Math.max(this.props.minHeight, height);2
2
    const {maxHeight, maxWidth} = this.props;2
    if (maxWidth != null) {2
      width = Math.min(maxWidth, width);2
    }2
    if (maxHeight != null) {2
      height = Math.min(maxHeight, height);2
    }2
2
    onResize(width, height);2
  }2
2
  move(top: number, left: number, event: SyntheticMouseEvent<>) {2
    top = Math.max(this.props.minTop, top);2
    left = Math.max(this.props.minLeft, left);2
2
    if (top === this.props.top && left === this.props.left) {2
      // noop2
      return;2
    }2
2
    const {onMove} = this.props;2
    if (onMove) {2
      onMove(top, left, event);2
    }2
  }2
2
  calculateResize(event: SyntheticMouseEvent<>) {2
    const {2
      resizingInitialCursor,2
      resizingInitialRect,2
      resizingSides,2
    } = this.state;2
2
    invariant(resizingInitialRect, 'TODO');2
    invariant(resizingInitialCursor, 'TODO');2
    invariant(resizingSides, 'TODO');2
2
    const deltaLeft = resizingInitialCursor.left - event.clientX;2
    const deltaTop = resizingInitialCursor.top - event.clientY;2
2
    let newLeft = resizingInitialRect.left;2
    let newTop = resizingInitialRect.top;2
2
    let newWidth = resizingInitialRect.width;2
    let newHeight = resizingInitialRect.height;2
2
    // right2
    if (resizingSides.right === true) {2
      newWidth -= deltaLeft;2
    }2
2
    // bottom2
    if (resizingSides.bottom === true) {2
      newHeight -= deltaTop;2
    }2
2
    const rect = this.getRect();2
2
    // left2
    if (resizingSides.left === true) {2
      newLeft -= deltaLeft;2
      newWidth += deltaLeft;2
2
      if (this.props.movable === true) {2
        // prevent from being shrunk past the minimum width2
        const right = rect.left + rect.width;2
        const maxLeft = right - this.props.minWidth;2
2
        let cleanLeft = Math.max(0, newLeft);2
        cleanLeft = Math.min(cleanLeft, maxLeft);2
        newWidth -= Math.abs(newLeft - cleanLeft);2
        newLeft = cleanLeft;2
      }2
    }2
2
    // top2
    if (resizingSides.top === true) {2
      newTop -= deltaTop;2
      newHeight += deltaTop;2
2
      if (this.props.movable === true) {2
        // prevent from being shrunk past the minimum height2
        const bottom = rect.top + rect.height;2
        const maxTop = bottom - this.props.minHeight;2
2
        let cleanTop = Math.max(0, newTop);2
        cleanTop = Math.min(cleanTop, maxTop);2
        newHeight += newTop - cleanTop;2
        newTop = cleanTop;2
      }2
    }2
2
    if (event.altKey) {2
      const windows = this.getPossibleTargetWindows(rect);2
2
      if (resizingSides.left === true) {2
        const newLeft2 = maybeSnapLeft(rect, windows, newLeft);2
        newWidth += newLeft - newLeft2;2
        newLeft = newLeft2;2
      }2
2
      if (resizingSides.top === true) {2
        const newTop2 = maybeSnapTop(rect, windows, newTop);2
        newHeight += newTop - newTop2;2
        newTop = newTop2;2
      }2
2
      if (resizingSides.bottom === true) {2
        newHeight = maybeSnapTop(rect, windows, newTop + newHeight) - newTop;2
      }2
2
      if (resizingSides.right === true) {2
        newWidth = maybeSnapLeft(rect, windows, newLeft + newWidth) - newLeft;2
      }2
    }2
2
    this.move(newTop, newLeft, event);2
    this.resize(newWidth, newHeight);2
  }2
2
  getRect(): Rect {2
    const {props, ref} = this;2
    invariant(ref, 'expected ref');2
2
    return {2
      height: ref.offsetHeight || 0,2
      left: props.left || 0,2
      top: props.top || 0,2
      width: ref.offsetWidth || 0,2
    };2
  }2
2
  getResizable(): ResizingSides {2
    const {resizable} = this.props;2
2
    if (resizable === true) {2
      return ALL_RESIZABLE;2
    } else if (resizable == null || resizable === false) {2
      return;2
    } else {2
      return resizable;2
    }2
  }2
2
  checkIfResizable(2
    event: SyntheticMouseEvent<>,2
  ): ?{|2
    left: boolean,2
    right: boolean,2
    top: boolean,2
    bottom: boolean,2
  |} {2
    const canResize = this.getResizable();2
    if (!canResize) {2
      return;2
    }2
2
    const {left: offsetLeft, top: offsetTop} = this.ref.getBoundingClientRect();2
    const {height, width} = this.getRect();2
2
    const x = event.clientX - offsetLeft;2
    const y = event.clientY - offsetTop;2
2
    const atTop: boolean = y <= WINDOW_CURSOR_BOUNDARY;2
    const atBottom: boolean = y >= height - WINDOW_CURSOR_BOUNDARY;2
2
    const atLeft: boolean = x <= WINDOW_CURSOR_BOUNDARY;2
    const atRight: boolean = x >= width - WINDOW_CURSOR_BOUNDARY;2
2
    return {2
      bottom: canResize.bottom === true && atBottom,2
      left: canResize.left === true && atLeft,2
      right: canResize.right === true && atRight,2
      top: canResize.top === true && atTop,2
    };2
  }2
2
  calculateResizable(event: SyntheticMouseEvent<>) {2
    const resizing = this.checkIfResizable(event);2
    if (!resizing) {2
      return;2
    }2
2
    const canResize = this.getResizable();2
    if (!canResize) {2
      return;2
    }2
2
    const {bottom, left, right, top} = resizing;2
    let newCursor;2
2
    const movingHorizontal = left || right;2
    const movingVertical = top || left;2
2
    // left2
    if (left) {2
      newCursor = 'ew-resize';2
    }2
2
    // right2
    if (right) {2
      newCursor = 'ew-resize';2
    }2
2
    // if resizing vertically and one side can't be resized then use different cursor2
    if (2
      movingHorizontal &&2
      (canResize.left !== true || canResize.right !== true)2
    ) {2
      newCursor = 'col-resize';2
    }2
2
    // top2
    if (top) {2
      newCursor = 'ns-resize';2
2
      // top left2
      if (left) {2
        newCursor = 'nwse-resize';2
      }2
2
      // top right2
      if (right) {2
        newCursor = 'nesw-resize';2
      }2
    }2
2
    // bottom2
    if (bottom) {2
      newCursor = 'ns-resize';2
2
      // bottom left2
      if (left) {2
        newCursor = 'nesw-resize';2
      }2
2
      // bottom right2
      if (right) {2
        newCursor = 'nwse-resize';2
      }2
    }2
2
    // if resizing horziontally and one side can't be resized then use different cursor2
    if (2
      movingVertical &&2
      !movingHorizontal &&2
      (canResize.top !== true || canResize.bottom !== true)2
    ) {2
      newCursor = 'row-resize';2
    }2
2
    const resizingSides = {2
      bottom,2
      left,2
      right,2
      top,2
    };2
2
    const {onCanResize} = this.props;2
    if (onCanResize) {2
      onCanResize();2
    }2
2
    this.setState({2
      couldResize: Boolean(newCursor),2
      cursor: newCursor,2
      resizingSides,2
    });2
  }2
2
  setRef = (ref: HTMLElement) => {2
    this.ref = ref;2
2
    const {innerRef} = this.props;2
    if (innerRef) {2
      innerRef(ref);2
    }2
  };2
2
  onLocalMouseMove = (event: SyntheticMouseEvent<>) => {2
    if (!this.globalMouse) {2
      this.onMouseMove(event);2
    }2
  };2
2
  render() {2
    const {fill, height, left, movable, top, width, zIndex} = this.props;2
2
    const style: Object = {2
      cursor: this.state.cursor,2
      zIndex: zIndex == null ? 'auto' : zIndex,2
    };2
2
    if (movable === true || top != null || left != null) {2
      if (fill === true) {2
        style.left = left || 0;2
        style.top = top || 0;2
      } else {2
        style.transform = `translate3d(${left || 0}px, ${top || 0}px, 0)`;2
      }2
    }2
2
    if (fill === true) {2
      style.right = 0;2
      style.bottom = 0;2
      style.width = '100%';2
      style.height = '100%';2
    } else {2
      style.width = width == null ? 'auto' : width;2
      style.height = height == null ? 'auto' : height;2
    }2
2
    if (this.props.style) {2
      Object.assign(style, this.props.style);2
    }2
2
    return (2
      <InteractiveContainer2
        className={this.props.className}2
        hidden={this.props.hidden}2
        innerRef={this.setRef}2
        onMouseDown={this.startAction}2
        onMouseMove={this.onLocalMouseMove}2
        onMouseLeave={this.onMouseLeave} // eslint-disable-next-line2
        style={style}>2
        {this.props.children}2
      </InteractiveContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
export default styled.view({2
  fontSize: 12,2
  fontWeight: 'bold',2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {colors} from './colors.js';2
import {Component} from 'react';2
import {shell} from 'electron';2
2
const StyledLink = styled.text(2
  {2
    color: colors.highlight,2
    '&:hover': {2
      cursor: 'pointer',2
      textDecoration: 'underline',2
    },2
  },2
  {2
    ignoreAttributes: [],2
  },2
);2
2
export default class Link extends Component<{2
  href: string,2
  children?: React$Node,2
}> {2
  onClick = () => {2
    shell.openExternal(this.props.href);2
  };2
2
  render() {2
    return (2
      <StyledLink onClick={this.onClick}>{this.props.children}</StyledLink>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {StyledComponent} from '../styled/index.js';2
import styled from '../styled/index.js';2
2
const animation = styled.keyframes({2
  '0%': {2
    transform: 'rotate(0deg)',2
  },2
  '100%': {2
    transform: 'rotate(360deg)',2
  },2
});2
2
const LoadingIndicator: StyledComponent<{2
  size?: number,2
}> = styled.view(2
  {2
    animation: `${animation} 1s infinite linear`,2
    width: props => props.size,2
    height: props => props.size,2
    minWidth: props => props.size,2
    minHeight: props => props.size,2
    borderRadius: '50%',2
    border: props => `${props.size / 6}px solid rgba(0, 0, 0, 0.2)`,2
    borderLeftColor: 'rgba(0, 0, 0, 0.4)',2
  },2
  {2
    ignoreAttributes: ['size'],2
  },2
);2
2
LoadingIndicator.defaultProps = {2
  size: 50,2
};2
2
export default LoadingIndicator;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const Overlay = styled.view({2
  alignItems: 'center',2
  backgroundColor: 'rgba(0, 0, 0, 0.6)',2
  bottom: 0,2
  display: 'flex',2
  justifyContent: 'center',2
  left: 0,2
  position: 'absolute',2
  right: 0,2
  top: 0,2
  zIndex: 99999,2
});2
2
export default class ModalOverlay extends Component<{2
  onClose: () => void,2
  children?: React$Node,2
}> {2
  ref: HTMLElement;2
2
  setRef = (ref: HTMLElement) => {2
    this.ref = ref;2
  };2
2
  onClick = (e: SyntheticMouseEvent<>) => {2
    if (e.target === this.ref) {2
      this.props.onClose();2
    }2
  };2
2
  render() {2
    const {props} = this;2
2
    return (2
      <Overlay innerRef={this.setRef} onClick={this.onClick}>2
        {props.children}2
      </Overlay>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Rect} from '../../utils/geometry.js';2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const React = require('react');2
2
export type OrderableOrder = Array<string>;2
2
type OrderableOrientation = 'horizontal' | 'vertical';2
2
type OrderableProps = {2
  items: {[key: string]: React.Element<*>},2
  orientation: OrderableOrientation,2
  onChange?: (order: OrderableOrder, key: string) => void,2
  order?: ?OrderableOrder,2
  className?: string,2
  reverse?: boolean,2
  altKey?: boolean,2
  moveDelay?: number,2
  dragOpacity?: number,2
  ignoreChildEvents?: boolean,2
};2
2
type OrderableState = {|2
  order?: ?OrderableOrder,2
  movingOrder?: ?OrderableOrder,2
|};2
2
type TabSizes = {2
  [key: string]: Rect,2
};2
2
const OrderableContainer = styled.view({2
  position: 'relative',2
});2
2
const OrderableItemContainer = styled.view(2
  {2
    display: props =>2
      props.orientation === 'vertical' ? 'block' : 'inline-block',2
  },2
  {2
    ignoreAttributes: ['orientation'],2
  },2
);2
2
class OrderableItem extends Component<{2
  orientation: OrderableOrientation,2
  id: string,2
  children?: React$Node,2
  addRef: (key: string, ref: HTMLElement) => void,2
  startMove: (KEY: string, event: SyntheticMouseEvent<>) => void,2
}> {2
  addRef = (ref: HTMLElement) => {2
    this.props.addRef(this.props.id, ref);2
  };2
2
  startMove = (event: SyntheticMouseEvent<>) => {2
    this.props.startMove(this.props.id, event);2
  };2
2
  render() {2
    return (2
      <OrderableItemContainer2
        orientation={this.props.orientation}2
        key={this.props.id}2
        innerRef={this.addRef}2
        onMouseDown={this.startMove}>2
        {this.props.children}2
      </OrderableItemContainer>2
    );2
  }2
}2
2
export default class Orderable extends styled.StylableComponent<2
  OrderableProps,2
  OrderableState,2
> {2
  constructor(props: OrderableProps, context: Object) {2
    super(props, context);2
    this.tabRefs = {};2
    this.state = {order: props.order};2
    this.setProps(props);2
  }2
2
  _mousemove: ?Function;2
  _mouseup: ?Function;2
  timer: any;2
2
  sizeKey: 'width' | 'height';2
  offsetKey: 'left' | 'top';2
  mouseKey: 'offsetX' | 'offsetY';2
  screenKey: 'screenX' | 'screenY';2
2
  containerRef: ?HTMLElement;2
  tabRefs: {2
    [key: string]: ?HTMLElement,2
  };2
2
  static defaultProps = {2
    dragOpacity: 1,2
    moveDelay: 50,2
  };2
2
  setProps(props: OrderableProps) {2
    const {orientation} = props;2
    this.sizeKey = orientation === 'horizontal' ? 'width' : 'height';2
    this.offsetKey = orientation === 'horizontal' ? 'left' : 'top';2
    this.mouseKey = orientation === 'horizontal' ? 'offsetX' : 'offsetY';2
    this.screenKey = orientation === 'horizontal' ? 'screenX' : 'screenY';2
  }2
2
  shouldComponentUpdate() {2
    return !this.state.movingOrder;2
  }2
2
  componentWillReceiveProps(nextProps: OrderableProps) {2
    this.setState({2
      order: nextProps.order,2
    });2
    this.setProps(nextProps);2
  }2
2
  startMove = (key: string, event: SyntheticMouseEvent<*>) => {2
    if (this.props.altKey === true && event.altKey === false) {2
      return;2
    }2
2
    if (this.props.ignoreChildEvents === true) {2
      const tabRef = this.tabRefs[key];2
      // $FlowFixMe parentNode not implemented2
      if (event.target !== tabRef && event.target.parentNode !== tabRef) {2
        return;2
      }2
    }2
2
    this.reset();2
    event.persist();2
2
    const {moveDelay} = this.props;2
    if (moveDelay == null) {2
      this._startMove(key, event);2
    } else {2
      const cancel = () => {2
        clearTimeout(this.timer);2
        document.removeEventListener('mouseup', cancel);2
      };2
      document.addEventListener('mouseup', cancel);2
2
      this.timer = setTimeout(() => {2
        cancel();2
        this._startMove(key, event);2
      }, moveDelay);2
    }2
  };2
2
  _startMove(activeKey: string, event: SyntheticMouseEvent<>) {2
    // $FlowFixMe2
    const clickOffset = event.nativeEvent[this.mouseKey];2
2
    // calculate offsets before we start moving element2
    const sizes: TabSizes = {};2
    for (const key in this.tabRefs) {2
      const elem = this.tabRefs[key];2
      if (elem) {2
        const rect: Rect = elem.getBoundingClientRect();2
        sizes[key] = {2
          height: rect.height,2
          left: elem.offsetLeft,2
          top: elem.offsetTop,2
          width: rect.width,2
        };2
      }2
    }2
2
    const {containerRef} = this;2
    if (containerRef) {2
      containerRef.style.height = `${containerRef.offsetHeight}px`;2
      containerRef.style.width = `${containerRef.offsetWidth}px`;2
    }2
2
    for (const key in this.tabRefs) {2
      const elem = this.tabRefs[key];2
      if (elem) {2
        const size = sizes[key];2
        elem.style.position = 'absolute';2
        elem.style.top = `${size.top}px`;2
        elem.style.left = `${size.left}px`;2
        elem.style.height = `${size.height}px`;2
        elem.style.width = `${size.width}px`;2
      }2
    }2
2
    document.addEventListener(2
      'mouseup',2
      (this._mouseup = () => {2
        this.stopMove(activeKey, sizes);2
      }),2
      {passive: true},2
    );2
2
    // $FlowFixMe2
    const screenClickPos = event.nativeEvent[this.screenKey];2
2
    document.addEventListener(2
      'mousemove',2
      (this._mousemove = (event: MouseEvent) => {2
        // $FlowFixMe2
        const goingOpposite = event[this.screenKey] < screenClickPos;2
        this.possibleMove(activeKey, goingOpposite, event, clickOffset, sizes);2
      }),2
      {passive: true},2
    );2
  }2
2
  possibleMove(2
    activeKey: string,2
    goingOpposite: boolean,2
    event: MouseEvent,2
    cursorOffset: number,2
    sizes: TabSizes,2
  ) {2
    // update moving tab position2
    const {containerRef} = this;2
    const movingSize = sizes[activeKey];2
    const activeTab = this.tabRefs[activeKey];2
    if (containerRef) {2
      const containerRect: Rect = containerRef.getBoundingClientRect();2
2
      let newActivePos = // $FlowFixMe2
        event[this.screenKey] - containerRect[this.offsetKey] - cursorOffset;2
      newActivePos = Math.max(-1, newActivePos);2
      newActivePos = Math.min(2
        newActivePos,2
        containerRect[this.sizeKey] - movingSize[this.sizeKey],2
      );2
2
      movingSize[this.offsetKey] = newActivePos;2
2
      if (activeTab) {2
        activeTab.style.setProperty(this.offsetKey, `${newActivePos}px`);2
2
        const {dragOpacity} = this.props;2
        if (dragOpacity != null && dragOpacity !== 1) {2
          activeTab.style.opacity = `${dragOpacity}`;2
        }2
      }2
    }2
2
    // figure out new order2
    const zipped: Array<[string, number]> = [];2
    for (const key in sizes) {2
      const rect = sizes[key];2
      let offset = rect[this.offsetKey];2
      let size = rect[this.sizeKey];2
2
      if (goingOpposite) {2
        // when dragging opposite add the size to the offset2
        if (key === activeKey) {2
          // calculate the active tab to be a quarter of the actual size so when dragging in the opposite2
          // direction, you need to cover 75% of the previous tab to trigger a movement2
          size *= 0.25;2
        }2
        offset += size;2
      } else if (key === activeKey) {2
        // if not dragging in the opposite direction and we're the active tab, require covering 25% of the2
        // next tab in roder to trigger a movement2
        offset += size * 0.75;2
      }2
2
      zipped.push([key, offset]);2
    }2
2
    // calculate ordering2
    const order = zipped2
      .sort(([, a], [, b]) => {2
        return Number(a > b);2
      })2
      .map(([key]) => key);2
2
    this.moveTabs(order, activeKey, sizes);2
    this.setState({movingOrder: order});2
  }2
2
  moveTabs(order: OrderableOrder, activeKey: ?string, sizes: TabSizes) {2
    let offset = 0;2
    for (const key of order) {2
      const size = sizes[key];2
      const tab = this.tabRefs[key];2
      if (tab) {2
        let newZIndex = key === activeKey ? 2 : 1;2
        const prevZIndex = tab.style.zIndex;2
        if (prevZIndex) {2
          newZIndex += Number(prevZIndex);2
        }2
        tab.style.zIndex = String(newZIndex);2
2
        if (key === activeKey) {2
          tab.style.transition = 'opacity 100ms ease-in-out';2
        } else {2
          tab.style.transition = `${this.offsetKey} 300ms ease-in-out`;2
          tab.style.setProperty(this.offsetKey, `${offset}px`);2
        }2
        offset += size[this.sizeKey];2
      }2
    }2
  }2
2
  getMidpoint(rect: Rect) {2
    return rect[this.offsetKey] + rect[this.sizeKey] / 2;2
  }2
2
  stopMove(activeKey: string, sizes: TabSizes) {2
    const {movingOrder} = this.state;2
2
    const {onChange} = this.props;2
    if (onChange && movingOrder) {2
      const activeTab = this.tabRefs[activeKey];2
      if (activeTab) {2
        activeTab.style.opacity = '';2
2
        const transitionend = () => {2
          activeTab.removeEventListener('transitionend', transitionend);2
          this.reset();2
        };2
        activeTab.addEventListener('transitionend', transitionend);2
      }2
2
      this.resetListeners();2
      this.moveTabs(movingOrder, null, sizes);2
      onChange(movingOrder, activeKey);2
    } else {2
      this.reset();2
    }2
2
    this.setState({movingOrder: null});2
  }2
2
  resetListeners() {2
    clearTimeout(this.timer);2
2
    const {_mousemove, _mouseup} = this;2
    if (_mouseup) {2
      document.removeEventListener('mouseup', _mouseup);2
    }2
    if (_mousemove) {2
      document.removeEventListener('mousemove', _mousemove);2
    }2
  }2
2
  reset() {2
    this.resetListeners();2
2
    const {containerRef} = this;2
    if (containerRef) {2
      containerRef.removeAttribute('style');2
    }2
2
    for (const key in this.tabRefs) {2
      const elem = this.tabRefs[key];2
      if (elem) {2
        elem.removeAttribute('style');2
      }2
    }2
  }2
2
  componentWillUnmount() {2
    this.reset();2
  }2
2
  addRef = (key: string, elem: ?HTMLElement) => {2
    this.tabRefs[key] = elem;2
  };2
2
  setContainerRef = (ref: HTMLElement) => {2
    this.containerRef = ref;2
  };2
2
  render() {2
    const {items} = this.props;2
2
    // calculate order of elements2
    let {order} = this.state;2
    if (!order) {2
      order = Object.keys(items);2
    }2
    for (const key in items) {2
      if (order.indexOf(key) < 0) {2
        if (this.props.reverse === true) {2
          order.unshift(key);2
        } else {2
          order.push(key);2
        }2
      }2
    }2
2
    return (2
      <OrderableContainer2
        className={this.props.className}2
        innerRef={this.setContainerRef}>2
        {order.map(key => {2
          const item = items[key];2
          if (item) {2
            return (2
              <OrderableItem2
                orientation={this.props.orientation}2
                key={key}2
                id={key}2
                addRef={this.addRef}2
                startMove={this.startMove}>2
                {item}2
              </OrderableItem>2
            );2
          } else {2
            return null;2
          }2
        })}2
      </OrderableContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexColumn from './FlexColumn.js';2
2
import styled from '../styled/index.js';2
import FlexBox from './FlexBox.js';2
2
import {colors} from './colors.js';2
import Glyph from './Glyph.js';2
2
const BORDER = '1px solid #dddfe2';2
const ignoreAttributes = ['floating', 'padded'];2
2
const Chevron = Glyph.extends({2
  marginRight: 4,2
  marginLeft: -2,2
  marginBottom: 1,2
});2
2
/**2
 * A Panel component.2
 */2
export default class Panel extends styled.StylableComponent<2
  {|2
    /**2
     * Class name to customise styling.2
     */2
    className?: string,2
    /**2
     * Whether this panel is floating from the rest of the UI. ie. if it has2
     * margin and a border.2
     */2
    floating?: boolean,2
    /**2
     * Whether the panel takes up all the space it can. Equivalent to the following CSS:2
     *2
     *  height: 100%;2
     *  width: 100%;2
     */2
    fill?: boolean,2
    /**2
     * Heading for this panel. If this is anything other than a string then no2
     * padding is applied to the heading.2
     */2
    heading: React$Node,2
    /**2
     * Contents of the panel.2
     */2
    children?: React$Node,2
    /**2
     * Whether the panel header and body have padding.2
     */2
    padded?: boolean,2
    /**2
     * Whether the panel can be collapsed. Defaults to true2
     */2
    collapsable: boolean,2
    /**2
     * Initial state for panel if it is collapsable2
     */2
    collapsed?: boolean,2
    /**2
     * Heading for this panel. If this is anything other than a string then no2
     * padding is applied to the heading.2
     */2
    accessory?: React$Node,2
  |},2
  {2
    collapsed: boolean,2
  },2
> {2
  static defaultProps: {|2
    floating: boolean,2
    fill: boolean,2
    collapsable: boolean,2
  |} = {2
    fill: false,2
    floating: true,2
    collapsable: true,2
  };2
2
  static PanelContainer = FlexColumn.extends(2
    {2
      flexShrink: 0,2
      padding: props => (props.floating ? 10 : 0),2
      borderBottom: props => (props.collapsed ? 'none' : BORDER),2
    },2
    {ignoreAttributes: ['collapsed', ...ignoreAttributes]},2
  );2
2
  static PanelHeader = FlexBox.extends(2
    {2
      backgroundColor: '#f6f7f9',2
      border: props => (props.floating ? BORDER : 'none'),2
      borderBottom: BORDER,2
      borderTopLeftRadius: 2,2
      borderTopRightRadius: 2,2
      justifyContent: 'space-between',2
      lineHeight: '27px',2
      fontWeight: 500,2
      flexShrink: 0,2
      padding: props => (props.padded ? '0 10px' : 0),2
      '&:not(:first-child)': {2
        borderTop: BORDER,2
      },2
    },2
    {ignoreAttributes},2
  );2
2
  static PanelBody = FlexColumn.extends(2
    {2
      backgroundColor: '#fff',2
      border: props => (props.floating ? BORDER : 'none'),2
      borderBottomLeftRadius: 2,2
      borderBottomRightRadius: 2,2
      borderTop: 'none',2
      flexGrow: 1,2
      padding: props => (props.padded ? 10 : 0),2
    },2
    {ignoreAttributes},2
  );2
  state = {2
    collapsed: this.props.collapsed == null ? false : this.props.collapsed,2
  };2
2
  onClick = () => this.setState({collapsed: !this.state.collapsed});2
2
  render() {2
    const {2
      padded,2
      children,2
      className,2
      fill,2
      floating,2
      heading,2
      collapsable,2
      accessory,2
    } = this.props;2
    const {collapsed} = this.state;2
    return (2
      <Panel.PanelContainer2
        className={className}2
        floating={floating}2
        fill={fill}2
        collapsed={collapsed}>2
        <Panel.PanelHeader2
          floating={floating}2
          padded={typeof heading === 'string'}2
          onClick={this.onClick}>2
          <span>2
            {collapsable && (2
              <Chevron2
                color={colors.macOSTitleBarIcon}2
                name={collapsed ? 'triangle-right' : 'triangle-down'}2
                size={12}2
              />2
            )}2
            {heading}2
          </span>2
          {accessory}2
        </Panel.PanelHeader>2
2
        {children == null || (collapsable && collapsed) ? null : (2
          <Panel.PanelBody2
            fill={fill}2
            padded={padded == null ? true : padded}2
            floating={floating}>2
            {children}2
          </Panel.PanelBody>2
        )}2
      </Panel.PanelContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import ButtonGroup from './ButtonGroup.js';2
import {Component} from 'react';2
import Button from './Button.js';2
2
const path = require('path');2
2
class PathBreadcrumbsItem extends Component<{2
  name: string,2
  path: string,2
  isFolder: boolean,2
  onClick: (path: string) => void,2
}> {2
  onClick = () => {2
    this.props.onClick(this.props.path);2
  };2
2
  render() {2
    return <Button onClick={this.onClick}>{this.props.name}</Button>;2
  }2
}2
2
export default function PathBreadcrumbs(props: {|2
  path: string,2
  isFile?: boolean,2
  onClick: (path: string) => void,2
|}) {2
  const parts = props.path === path.sep ? [''] : props.path.split(path.sep);2
  const {onClick} = props;2
2
  return (2
    <ButtonGroup>2
      {parts.map((part, i) => {2
        const fullPath = parts.slice(0, i + 1).join(path.sep) || path.sep;2
        return (2
          <PathBreadcrumbsItem2
            key={`${i}:${part}`}2
            name={part || fullPath}2
            path={fullPath}2
            isFolder={!(props.isFile === true && i === parts.length - 1)}2
            onClick={onClick}2
          />2
        );2
      })}2
    </ButtonGroup>2
  );2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {PureComponent} from 'react';2
import FlexColumn from './FlexColumn.js';2
import styled from '../styled/index.js';2
import {colors} from './colors.js';2
2
const Anchor = styled.image({2
  zIndex: 6,2
  position: 'absolute',2
  bottom: 0,2
  left: '50%',2
  transform: 'translate(-50%, calc(100% + 2px))',2
});2
2
const PopoverContainer = FlexColumn.extends({2
  backgroundColor: colors.white,2
  borderRadius: 7,2
  border: '1px solid rgba(0,0,0,0.3)',2
  boxShadow: '0 2px 10px 0 rgba(0,0,0,0.3)',2
  position: 'absolute',2
  zIndex: 5,2
  bottom: 0,2
  marginTop: 15,2
  left: '50%',2
  transform: 'translate(-50%, calc(100% + 15px))',2
  overflow: 'hidden',2
  '&::before': {2
    content: '""',2
    display: 'block',2
    position: 'absolute',2
    left: '50%',2
    transform: 'translateX(-50%)',2
    height: 13,2
    top: -13,2
    width: 26,2
    backgroundColor: colors.white,2
  },2
});2
2
type Props = {|2
  children: React.Node,2
  onDismiss: Function,2
|};2
2
export default class Popover extends PureComponent<Props> {2
  _ref: ?Element;2
2
  componentDidMount() {2
    window.document.addEventListener('click', this.handleClick);2
    window.document.addEventListener('keydown', this.handleKeydown);2
  }2
2
  componentWillUnmount() {2
    window.document.addEventListener('click', this.handleClick);2
    window.document.addEventListener('keydown', this.handleKeydown);2
  }2
2
  handleClick = (e: SyntheticMouseEvent<>) => {2
    // $FlowFixMe2
    if (this._ref && !this._ref.contains(e.target)) {2
      this.props.onDismiss();2
    }2
  };2
2
  handleKeydown = (e: SyntheticKeyboardEvent<>) => {2
    if (e.key === 'Escape') {2
      this.props.onDismiss();2
    }2
  };2
2
  _setRef = (ref: ?Element) => {2
    this._ref = ref;2
  };2
2
  render() {2
    return [2
      <Anchor src="./anchor.svg" key="anchor" />,2
      <PopoverContainer innerRef={this._setRef} key="popup">2
        {this.props.children}2
      </PopoverContainer>,2
    ];2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const IFrame = styled.customHTMLTag('iframe', {2
  height: '100%',2
  width: '100%',2
  border: 'none',2
  background: 'transparent',2
  position: 'absolute',2
  zIndex: -1,2
  top: 0,2
  left: 0,2
});2
2
export default class ResizeSensor extends Component<{2
  onResize: (e: UIEvent) => void,2
}> {2
  iframe: ?HTMLIFrameElement;2
2
  setRef = (ref: ?HTMLIFrameElement) => {2
    this.iframe = ref;2
  };2
2
  render() {2
    return <IFrame innerRef={this.setRef} />;2
  }2
2
  componentDidMount() {2
    const {iframe} = this;2
    if (iframe != null) {2
      iframe.contentWindow.addEventListener('resize', this.handleResize);2
    }2
  }2
2
  componentWillUnmount() {2
    const {iframe} = this;2
    if (iframe != null) {2
      iframe.contentWindow.removeEventListener('resize', this.handleResize);2
    }2
  }2
2
  handleResize = () => {2
    window.requestAnimationFrame(this.props.onResize);2
  };2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
2
export default class Select extends Component<{2
  className?: string,2
  options: {2
    [key: string]: string,2
  },2
  onChange: (key: string) => void,2
  selected?: ?string,2
}> {2
  render() {2
    const {className, options, selected} = this.props;2
2
    return (2
      <select onChange={this.props.onChange} className={className}>2
        {Object.keys(options).map(key => (2
          <option selected={key === selected}>{options[key]}</option>2
        ))}2
      </select>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {StyledComponent} from '../styled/index.js';2
import Interactive from './Interactive.js';2
import FlexColumn from './FlexColumn.js';2
import {Component} from 'react';2
2
const SidebarInteractiveContainer = Interactive.extends({2
  flex: 'none',2
});2
2
type SidebarPosition = 'left' | 'top' | 'right' | 'bottom';2
2
const SidebarContainer: StyledComponent<{2
  position: SidebarPosition,2
  overflow?: boolean,2
}> = FlexColumn.extends(2
  {2
    backgroundColor: props => props.backgroundColor || '#f7f7f7',2
    borderLeft: props =>2
      props.position === 'right' ? '1px solid #b3b3b3' : 'none',2
    borderTop: props =>2
      props.position === 'bottom' ? '1px solid #b3b3b3' : 'none',2
    borderRight: props =>2
      props.position === 'left' ? '1px solid #b3b3b3' : 'none',2
    borderBottom: props =>2
      props.position === 'top' ? '1px solid #b3b3b3' : 'none',2
    height: '100%',2
    overflowX: 'hidden',2
    overflowY: 'auto',2
    textOverflow: props => (props.overflow ? 'ellipsis' : 'auto'),2
    whiteSpace: props => (props.overflow ? 'nowrap' : 'normal'),2
  },2
  {2
    ignoreAttributes: ['backgroundColor', 'position'],2
  },2
);2
2
type SidebarProps = {2
  /**2
   * Position of the sidebar.2
   */2
  position: SidebarPosition,2
2
  /**2
   * Default width of the sidebar.  Only used for left/right sidebars.2
   */2
  width?: number,2
  /**2
   * Minimum sidebar width. Only used for left/right sidebars.2
   */2
  minWidth?: number,2
  /**2
   * Maximum sidebar width. Only used for left/right sidebars.2
   */2
  maxWidth?: number,2
2
  /**2
   * Default height of the sidebar.2
   */2
  height?: number,2
  /**2
   * Minimum sidebar height. Only used for top/bottom sidebars.2
   */2
  minHeight?: number,2
  /**2
   * Maximum sidebar height. Only used for top/bottom sidebars.2
   */2
  maxHeight?: number,2
2
  /**2
   * Background color.2
   */2
  backgroundColor?: string,2
  /**2
   * Callback when the sidebar size ahs changed.2
   */2
  onResize?: (width: number, height: number) => void,2
  /**2
   * Contents of the sidebar.2
   */2
  children?: React$Node,2
  /**2
   * Class name to customise styling.2
   */2
  className?: string,2
};2
2
type SidebarState = {|2
  width?: number,2
  height?: number,2
  userChange: boolean,2
|};2
2
/**2
 * A resizable sidebar.2
 */2
export default class Sidebar extends Component<SidebarProps, SidebarState> {2
  constructor(props: SidebarProps, context: Object) {2
    super(props, context);2
    this.state = {userChange: false, width: props.width, height: props.height};2
  }2
2
  static defaultProps = {2
    position: 'left',2
  };2
2
  componentWillReceiveProps(nextProps: SidebarProps) {2
    if (!this.state.userChange) {2
      this.setState({width: nextProps.width, height: nextProps.height});2
    }2
  }2
2
  onResize = (width: number, height: number) => {2
    const {onResize} = this.props;2
    if (onResize) {2
      onResize(width, height);2
    } else {2
      this.setState({userChange: true, width, height});2
    }2
  };2
2
  render() {2
    const {backgroundColor, onResize, position, children} = this.props;2
    let height, minHeight, maxHeight, width, minWidth, maxWidth;2
2
    const resizable: {[key: string]: boolean} = {};2
    if (position === 'left') {2
      resizable.right = true;2
      ({width, minWidth, maxWidth} = this.props);2
    } else if (position === 'top') {2
      resizable.bottom = true;2
      ({height, minHeight, maxHeight} = this.props);2
    } else if (position === 'right') {2
      resizable.left = true;2
      ({width, minWidth, maxWidth} = this.props);2
    } else if (position === 'bottom') {2
      resizable.top = true;2
      ({height, minHeight, maxHeight} = this.props);2
    }2
2
    const horizontal = position === 'left' || position === 'right';2
2
    if (horizontal) {2
      width = width == null ? 200 : width;2
      minWidth = minWidth == null ? 100 : minWidth;2
      maxWidth = maxWidth == null ? 600 : maxWidth;2
    } else {2
      height = height == null ? 200 : height;2
      minHeight = minHeight == null ? 100 : minHeight;2
      maxHeight = maxHeight == null ? 600 : maxHeight;2
    }2
2
    return (2
      <SidebarInteractiveContainer2
        className={this.props.className}2
        minWidth={minWidth}2
        maxWidth={maxWidth}2
        width={horizontal ? (onResize ? width : this.state.width) : undefined}2
        minHeight={minHeight}2
        maxHeight={maxHeight}2
        height={2
          !horizontal ? (onResize ? height : this.state.height) : undefined2
        }2
        resizable={resizable}2
        onResize={this.onResize}>2
        <SidebarContainer position={position} backgroundColor={backgroundColor}>2
          {children}2
        </SidebarContainer>2
      </SidebarInteractiveContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {colors} from './colors.js';2
import Label from './Label.js';2
2
export default Label.extends({2
  color: colors.blackAlpha30,2
  fontSize: 12,2
  padding: 10,2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
export default function Tab(props: {|2
  /**2
   * Label of this tab to show in the tab list.2
   */2
  label: React$Node,2
  /**2
   * Whether this tab is closable.2
   */2
  closable?: boolean,2
  /**2
   * Whether this tab is hidden. Useful for when you want a tab to be2
   * inaccessible via the user but you want to manually set the `active` props2
   * yourself.2
   */2
  hidden?: boolean,2
  /**2
   * Whether this tab should always be included in the DOM and have it's2
   * visibility toggled.2
   */2
  persist?: boolean,2
  /**2
   * Callback for when tab is closed.2
   */2
  onClose?: () => void,2
  /**2
   * Contents of this tab.2
   */2
  children?: React$Node,2
|}) {2
  throw new Error("don't render me");2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexColumn from './FlexColumn.js';2
import styled from '../styled/index.js';2
import Orderable from './Orderable.js';2
import FlexRow from './FlexRow.js';2
import {colors} from './colors.js';2
import Tab from './Tab.js';2
2
const TabList = FlexRow.extends({2
  alignItems: 'stretch',2
});2
2
const TabListItem = styled.view(2
  {2
    backgroundColor: props => (props.active ? colors.light15 : colors.light02),2
    borderBottom: '1px solid #dddfe2',2
    boxShadow: props =>2
      props.active ? 'inset 0px 0px 3px rgba(0,0,0,0.25)' : 'none',2
    color: colors.dark80,2
    flex: 1,2
    fontSize: 13,2
    lineHeight: '28px',2
    overflow: 'hidden',2
    padding: '0 10px',2
    position: 'relative',2
    textAlign: 'center',2
    textOverflow: 'ellipsis',2
    whiteSpace: 'nowrap',2
2
    '&:hover': {2
      backgroundColor: props =>2
        props.active ? colors.light15 : colors.light05,2
    },2
  },2
  {2
    ignoreAttributes: ['active'],2
  },2
);2
2
const TabListAddItem = TabListItem.extends({2
  borderRight: 'none',2
  flex: 0,2
  flexGrow: 0,2
  fontWeight: 'bold',2
});2
2
const CloseButton = styled.view({2
  color: '#000',2
  float: 'right',2
  fontSize: 10,2
  fontWeight: 'bold',2
  textAlign: 'center',2
  marginLeft: 6,2
  marginTop: 6,2
  width: 16,2
  height: 16,2
  lineHeight: '16px',2
  borderRadius: '50%',2
2
  '&:hover': {2
    backgroundColor: colors.cherry,2
    color: '#fff',2
  },2
});2
2
const OrderableContainer = styled.view({2
  display: 'inline-block',2
});2
2
const TabContent = styled.view({2
  height: '100%',2
  overflow: 'auto',2
  width: '100%',2
});2
2
/**2
 * A Tabs component.2
 */2
export default function Tabs(props: {|2
  /**2
   * Callback for when the active tab has changed.2
   */2
  onActive?: (key: ?string) => void,2
  /**2
   * The key of the default active tab.2
   */2
  defaultActive?: string,2
  /**2
   * The key of the currently active tab.2
   */2
  active?: ?string,2
  /**2
   * Tab elements.2
   */2
  children?: Array<React$Element<any>>,2
  /**2
   * Whether the tabs can be reordered by the user.2
   */2
  orderable?: boolean,2
  /**2
   * Callback when the tab order changes.2
   */2
  onOrder?: (order: Array<string>) => void,2
  /**2
   * Order of tabs.2
   */2
  order?: Array<string>,2
  /**2
   * Whether to include the contents of every tab in the DOM and just toggle2
   * it's visibility.2
   */2
  persist?: boolean,2
  /**2
   * Whether to include a button to create additional items.2
   */2
  newable?: boolean,2
  /**2
   * Callback for when the new button is clicked.2
   */2
  onNew?: () => void,2
  /**2
   * Elements to insert before all tabs in the tab list.2
   */2
  before?: Array<React$Node>,2
  /**2
   * Elements to insert after all tabs in the tab list.2
   */2
  after?: Array<React$Node>,2
|}) {2
  const {onActive} = props;2
  const active: ?string =2
    props.active == null ? props.defaultActive : props.active;2
2
  // array of other components that aren't tabs2
  const before = props.before || [];2
  const after = props.after || [];2
2
  //2
  const tabs = {};2
2
  // a list of keys2
  const keys = props.order ? props.order.slice() : [];2
2
  const tabContents = [];2
  const tabSiblings = [];2
2
  function add(comps) {2
    for (const comp of [].concat(comps || [])) {2
      if (Array.isArray(comp)) {2
        add(comp);2
        continue;2
      }2
2
      if (!comp) {2
        continue;2
      }2
2
      if (comp.type !== Tab) {2
        // if element isn't a tab then just push it into the tab list2
        tabSiblings.push(comp);2
        continue;2
      }2
2
      const {children, closable, label, onClose, width} = comp.props;2
2
      const key = comp.key == null ? label : comp.key;2
      if (typeof key !== 'string') {2
        throw new Error('tab needs a string key or a label');2
      }2
      if (!keys.includes(key)) {2
        keys.push(key);2
      }2
2
      const isActive: boolean = active === key;2
      if (isActive || props.persist === true || comp.props.persist === true) {2
        tabContents.push(2
          <TabContent key={key} hidden={!isActive}>2
            {children}2
          </TabContent>,2
        );2
      }2
2
      // this tab has been hidden from the tab bar but can still be selected if it's key is active2
      if (comp.props.hidden) {2
        continue;2
      }2
2
      let closeButton;2
2
      tabs[key] = (2
        <TabListItem2
          key={key}2
          width={width}2
          active={isActive}2
          onMouseDown={2
            !isActive &&2
            onActive &&2
            ((event: SyntheticMouseEvent<>) => {2
              if (event.target !== closeButton) {2
                onActive(key);2
              }2
            })2
          }>2
          {comp.props.label}2
          {closable && (2
            <CloseButton // eslint-disable-next-line react/jsx-no-bind2
              innerRef={ref => (closeButton = ref)} // eslint-disable-next-line react/jsx-no-bind2
              onMouseDown={() => {2
                if (isActive && onActive) {2
                  const index = keys.indexOf(key);2
                  const newActive = keys[index + 1] || keys[index - 1] || null;2
                  onActive(newActive);2
                }2
2
                onClose();2
              }}>2
              X2
            </CloseButton>2
          )}2
        </TabListItem>2
      );2
    }2
  }2
2
  add(props.children);2
2
  let tabList;2
  if (props.orderable === true) {2
    tabList = (2
      <OrderableContainer key="orderable-list">2
        <Orderable2
          orientation="horizontal"2
          items={tabs}2
          onChange={props.onOrder}2
          order={keys}2
        />2
      </OrderableContainer>2
    );2
  } else {2
    tabList = [];2
    for (const key in tabs) {2
      tabList.push(tabs[key]);2
    }2
  }2
2
  if (props.newable === true) {2
    after.push(2
      <TabListAddItem key={keys.length} onMouseDown={props.onNew}>2
        +2
      </TabListAddItem>,2
    );2
  }2
2
  return (2
    <FlexColumn fill={true}>2
      <TabList>2
        {before}2
        {tabList}2
        {after}2
      </TabList>2
      {tabContents}2
      {tabSiblings}2
    </FlexColumn>2
  );2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {StyledComponent} from '../styled/index.js';2
import styled from '../styled/index.js';2
2
/**2
 * A Text component.2
 */2
const Text: StyledComponent<{2
  /**2
   * Color of text.2
   */2
  color?: string,2
  /**2
   * Whether this text is bold. Equivalent to the following CSS:2
   *2
   *  font-weight: bold;2
   */2
  bold?: boolean,2
  /**2
   * Whether this text is italic. Equivalent to the following CSS:2
   *2
   *  font-style: italic;2
   */2
  italic?: boolean,2
  /**2
   * Whether to format the text as code. Equivalent to the following CSS:2
   *2
   *  font-size: Andale Mono, monospace;2
   *  overflow: auto;2
   *  user-select: text;2
   *  white-space: pre-wrap;2
   *  word-wrap: break-word;2
   */2
  code?: boolean,2
  /**2
   * Whether this text is underlined. Equivalent to the following CSS:2
   *2
   *  text-decoration: underline;2
   */2
  underline?: boolean,2
  /**2
   * Whether this text is striked. Equivalent to the following CSS:2
   *2
   *  text-decoration: line-through;2
   */2
  strike?: boolean,2
  /**2
   * Whether this text is selectable by the cursor. Equivalent to the following CSS:2
   *2
   *  user-select: text;2
   */2
  selectable?: boolean,2
  /**2
   * Alignment of the text. Equivalent to the `text-align` CSS rule.2
   */2
  align?: 'left' | 'center' | 'right',2
  /**2
   * Font size to use. Equivalent to the `font-size` CSS rule.2
   */2
  size?: string | number,2
  /**2
   * Font family to use. Equivalent to the `font-family` CSS rule.2
   */2
  family?: string,2
  /**2
   * Word wrap to use. Equivalent to the `word-wrap` CSS rule.2
   */2
  wordWrap?: string,2
  /**2
   * White space to use. Equivalent to the `white-space` CSS rule.2
   */2
  whiteSpace?: string,2
}> = styled.text(2
  {2
    color: props => (props.color ? props.color : 'inherit'),2
    display: 'inline',2
    fontWeight: props => (props.bold ? 'bold' : 'inherit'),2
    fontStyle: props => (props.italic ? 'italic' : 'normal'),2
    textAlign: props => props.align || 'left',2
    fontSize: props => {2
      if (props.size == null && props.code) {2
        return 12;2
      } else {2
        return props.size;2
      }2
    },2
    fontFamily: props => {2
      if (props.code) {2
        return 'SF Mono, Monaco, Andale Mono, monospace';2
      } else {2
        return props.family;2
      }2
    },2
    overflow: props => {2
      if (props.code) {2
        return 'auto';2
      } else {2
        return 'visible';2
      }2
    },2
    textDecoration: props => {2
      if (props.underline) {2
        return 'underline';2
      } else if (props.strike) {2
        return 'line-through';2
      } else {2
        return 'none';2
      }2
    },2
    userSelect: props => {2
      if (2
        props.selectable ||2
        (props.code && typeof props.selectable === 'undefined')2
      ) {2
        return 'text';2
      } else {2
        return 'none';2
      }2
    },2
    wordWrap: props => {2
      if (props.code) {2
        return 'break-word';2
      } else {2
        return props.wordWrap;2
      }2
    },2
    whiteSpace: props => {2
      if (props.code && typeof props.whiteSpace === 'undefined') {2
        return 'pre';2
      } else {2
        return props.whiteSpace;2
      }2
    },2
  },2
  {2
    ignoreAttributes: [2
      'selectable',2
      'whiteSpace',2
      'wordWrap',2
      'align',2
      'code',2
      'family',2
      'size',2
      'bold',2
      'italic',2
      'strike',2
      'underline',2
      'color',2
    ],2
  },2
);2
2
export default Text;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {inputStyle} from './Input.js';2
2
export default styled.customHTMLTag(2
  'textarea',2
  {2
    ...inputStyle,2
    lineHeight: 'normal',2
    padding: props => (props.compact ? '5px' : '8px'),2
    resize: 'none',2
  },2
  {2
    ignoreAttributes: ['compact'],2
  },2
);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
/**2
 * A TextParagraph component.2
 */2
const TextParagraph = styled.view({2
  marginBottom: 10,2
2
  '&:last-child': {2
    marginBottom: 0,2
  },2
});2
2
export default TextParagraph;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import React from 'react';2
import styled from '../styled/index.js';2
import {colors} from './colors.js';2
2
export const StyledButton = styled.view({2
  cursor: 'pointer',2
  width: '30px',2
  height: '16px',2
  background: props => (props.toggled ? colors.green : colors.grey),2
  display: 'block',2
  borderRadius: '100px',2
  position: 'relative',2
  marginLeft: '15px',2
  '&::after': {2
    content: `''`,2
    position: 'absolute',2
    top: '3px',2
    left: props => (props.toggled ? '18px' : '3px'),2
    width: '10px',2
    height: '10px',2
    background: 'white',2
    borderRadius: '100px',2
    transition: 'all cubic-bezier(0.3, 1.5, 0.7, 1) 0.3s',2
  },2
});2
2
type Props = {2
  /**2
   * onClick handler.2
   */2
  onClick?: (event: SyntheticMouseEvent<>) => void,2
  /**2
   * whether the button is toggled2
   */2
  toggled?: boolean,2
};2
2
/**2
 * Toggle Button.2
 *2
 * **Usage**2
 *2
 * ```jsx2
 * import {ToggleButton} from 'sonar';2
 * <ToggleButton onClick={handler} toggled={boolean}/>2
 * ```2
 */2
export default class ToggleButton extends styled.StylableComponent<Props> {2
  render() {2
    return (2
      <StyledButton toggled={this.props.toggled} onClick={this.props.onClick} />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {StyledComponent} from '../styled/index.js';2
import {colors} from './colors.js';2
import FlexRow from './FlexRow.js';2
import FlexBox from './FlexBox.js';2
2
/**2
 * A toolbar.2
 */2
const Toolbar: StyledComponent<{2
  /**2
   * Position of the toolbar. Dictates the location of the border.2
   */2
  position?: 'top' | 'bottom',2
  compact?: boolean,2
}> = FlexRow.extends(2
  {2
    backgroundColor: colors.light02,2
    borderBottom: props =>2
      props.position === 'bottom'2
        ? 'none'2
        : `1px solid ${colors.sectionHeaderBorder}`,2
    borderTop: props =>2
      props.position === 'bottom'2
        ? `1px solid ${colors.sectionHeaderBorder}`2
        : 'none',2
    flexShrink: 0,2
    height: props => (props.compact ? 28 : 42),2
    lineHeight: '32px',2
    alignItems: 'center',2
    padding: 6,2
    width: '100%',2
  },2
  {2
    ignoreAttributes: ['position'],2
  },2
);2
2
export const Spacer = FlexBox.extends({2
  flexGrow: 1,2
});2
2
export default Toolbar;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type TooltipProvider from './TooltipProvider.js';2
2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const PropTypes = require('prop-types');2
2
const TooltipContainer = styled.view({2
  display: 'contents',2
});2
2
type TooltipProps = {2
  title: React$Node,2
  children: React$Node,2
};2
2
type TooltipState = {2
  open: boolean,2
};2
2
export default class Tooltip extends Component<TooltipProps, TooltipState> {2
  static contextTypes = {2
    TOOLTIP_PROVIDER: PropTypes.object,2
  };2
2
  context: {2
    TOOLTIP_PROVIDER: TooltipProvider,2
  };2
2
  ref: ?HTMLDivElement;2
2
  state = {2
    open: false,2
  };2
2
  componentWillUnmount() {2
    if (this.state.open === true) {2
      this.context.TOOLTIP_PROVIDER.close();2
    }2
  }2
2
  onMouseEnter = () => {2
    if (this.ref != null) {2
      this.context.TOOLTIP_PROVIDER.open(this.ref, this.props.title);2
      this.setState({open: true});2
    }2
  };2
2
  onMouseLeave = () => {2
    this.context.TOOLTIP_PROVIDER.close();2
    this.setState({open: false});2
  };2
2
  setRef = (ref: ?HTMLDivElement) => {2
    this.ref = ref;2
  };2
2
  render() {2
    return (2
      <TooltipContainer2
        innerRef={this.setRef}2
        onMouseEnter={this.onMouseEnter}2
        onMouseLeave={this.onMouseLeave}>2
        {this.props.children}2
      </TooltipContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
import {Component} from 'react';2
2
const PropTypes = require('prop-types');2
2
const TooltipBubble = styled.view(2
  {2
    backgroundColor: '#000',2
    lineHeight: '25px',2
    padding: '0 6px',2
    borderRadius: 4,2
    position: 'absolute',2
    width: 'auto',2
    top: props => props.top,2
    left: props => props.left,2
    zIndex: 99999999999,2
    pointerEvents: 'none',2
    color: '#fff',2
    marginTop: '-30px',2
  },2
  {2
    ignoreAttributes: ['top', 'left'],2
  },2
);2
2
type TooltipProps = {2
  children: React$Node,2
};2
2
type TooltipState = {2
  tooltip: ?{2
    rect: ClientRect,2
    title: React$Node,2
  },2
};2
2
export default class TooltipProvider extends Component<2
  TooltipProps,2
  TooltipState,2
> {2
  static childContextTypes = {2
    TOOLTIP_PROVIDER: PropTypes.object,2
  };2
2
  state = {2
    tooltip: null,2
  };2
2
  getChildContext() {2
    return {TOOLTIP_PROVIDER: this};2
  }2
2
  open(container: HTMLDivElement, title: React$Node) {2
    const node = container.childNodes[0];2
    if (node == null || !(node instanceof HTMLElement)) {2
      return;2
    }2
2
    this.setState({2
      tooltip: {2
        rect: node.getBoundingClientRect(),2
        title,2
      },2
    });2
  }2
2
  close() {2
    this.setState({tooltip: null});2
  }2
2
  render() {2
    const {tooltip} = this.state;2
2
    let tooltipElem = null;2
    if (tooltip != null) {2
      tooltipElem = (2
        <TooltipBubble top={tooltip.rect.top} left={tooltip.rect.left}>2
          {tooltip.title}2
        </TooltipBubble>2
      );2
    }2
2
    return [tooltipElem, this.props.children];2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled from '../styled/index.js';2
2
const View = styled.view(2
  {2
    height: props => (props.fill ? '100%' : 'auto'),2
    overflow: props => (props.scrollable ? 'auto' : 'visible'),2
    position: 'relative',2
    width: props => (props.fill ? '100%' : 'auto'),2
  },2
  {2
    ignoreAttributes: ['fill', 'scrollable'],2
  },2
);2
2
export default View;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
2
type ViewWithSizeProps = {2
  onSize: (width: number, height: number) => any,2
};2
2
type ViewWithSizeState = {|2
  width: number,2
  height: number,2
|};2
2
export default class ViewWithSize extends Component<2
  ViewWithSizeProps,2
  ViewWithSizeState,2
> {2
  constructor(props: ViewWithSizeProps, context: Object) {2
    super(props, context);2
    this.state = {height: window.innerHeight, width: window.innerWidth};2
  }2
2
  _onResize: Function;2
2
  componentDidMount() {2
    this._onResize = () => {2
      this.setState({height: window.innerHeight, width: window.innerWidth});2
    };2
    window.addEventListener('resize', this._onResize);2
  }2
2
  componentWillUnmount() {2
    window.removeEventListener('resize', this._onResize);2
  }2
2
  render() {2
    return this.props.onSize(this.state.width, this.state.height);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import FlexColumn from './FlexColumn.js';2
import {Component} from 'react';2
import View from './View.js';2
2
const Inner = FlexColumn.extends(2
  {2
    alignItems: 'flex-start',2
    height: props => props.height,2
    minHeight: '100%',2
    minWidth: '100%',2
    overflow: 'visible',2
    width: '100%',2
  },2
  {2
    ignoreAttributes: ['height'],2
  },2
);2
2
const Content = FlexColumn.extends(2
  {2
    alignItems: 'flex-start',2
    height: '100%',2
    marginTop: props => props.top,2
    minWidth: '100%',2
    overflow: 'visible',2
  },2
  {2
    ignoreAttributes: ['top'],2
  },2
);2
2
type VirtualListProps = {|2
  data: Array<any>,2
  renderRow: (data: any, i: number) => any,2
  rowHeight: number,2
  overscanCount: number,2
  sync?: number,2
  wrapInner?: (data: any) => any,2
|};2
2
type VirtualListState = {|2
  offset: number,2
  height: number,2
|};2
2
export default class VirtualList extends Component<2
  VirtualListProps,2
  VirtualListState,2
> {2
  constructor(props: VirtualListProps, context: Object) {2
    super(props, context);2
    this.state = {2
      height: 0,2
      offset: 0,2
    };2
  }2
2
  static defaultProps = {2
    overscanCount: 10,2
  };2
2
  ref: HTMLElement;2
2
  setRef = (ref: HTMLElement) => {2
    this.ref = ref;2
  };2
2
  resize = () => {2
    if (this.ref && this.state.height !== this.ref.offsetHeight) {2
      this.setState({height: this.ref.offsetHeight});2
    }2
  };2
2
  handleScroll = () => {2
    this.setState({offset: this.ref.scrollTop});2
    if (this.props.sync === true) {2
      this.forceUpdate();2
    }2
  };2
2
  componentDidUpdate() {2
    this.resize();2
  }2
2
  componentDidMount() {2
    this.resize();2
    window.addEventListener('resize', this.resize);2
  }2
2
  componentWillUnmount() {2
    window.removeEventListener('resize', this.resize);2
  }2
2
  render() {2
    const {data, overscanCount, renderRow, rowHeight, wrapInner} = this.props;2
    const {height, offset} = this.state;2
2
    // first visible row index2
    // eslint-disable-next-line no-bitwise2
    let start = (offset / rowHeight) | 0;2
2
    // actual number of visible rows (without overscan)2
    // eslint-disable-next-line no-bitwise2
    let visibleRowCount = (height / rowHeight) | 0;2
2
    // Overscan: render blocks of rows modulo an overscan row count2
    // This dramatically reduces DOM writes during scrolling2
    if (overscanCount) {2
      start = Math.max(0, start - (start % overscanCount));2
      visibleRowCount += overscanCount;2
    }2
2
    // last visible + overscan row index2
    const end = start + 1 + visibleRowCount;2
2
    // data slice currently in viewport plus overscan items2
    const selection = data.slice(start, end);2
2
    let inner = (2
      <Inner height={data.length * rowHeight}>2
        <Content top={start * rowHeight}>{selection.map(renderRow)}</Content>2
      </Inner>2
    );2
2
    if (wrapInner) {2
      inner = wrapInner(inner);2
    }2
2
    return (2
      <View2
        fill={true}2
        onScroll={this.handleScroll}2
        innerRef={this.setRef}2
        scrollable={true}>2
        {inner}2
      </View>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {DataInspectorSetValue} from './DataInspector.js';2
import {PureComponent} from 'react';2
import styled from '../../styled/index.js';2
import {SketchPicker} from 'react-color';2
import {Component} from 'react';2
import Popover from '../Popover.js';2
import {colors} from '../colors.js';2
import Input from '../Input.js';2
2
const NullValue = styled.text({2
  color: 'rgb(128, 128, 128)',2
});2
2
const UndefinedValue = styled.text({2
  color: 'rgb(128, 128, 128)',2
});2
2
const StringValue = styled.text({2
  color: colors.cherryDark1,2
});2
2
const ColorValue = styled.text({2
  color: colors.blueGrey,2
});2
2
const SymbolValue = styled.text({2
  color: 'rgb(196, 26, 22)',2
});2
2
const NumberValue = styled.text({2
  color: colors.tealDark1,2
});2
2
const ColorBox = styled.text(2
  {2
    backgroundColor: props => props.color,2
    boxShadow: 'inset 0 0 1px rgba(0, 0, 0, 1)',2
    display: 'inline-block',2
    height: 12,2
    marginRight: 5,2
    verticalAlign: 'middle',2
    width: 12,2
  },2
  {2
    ignoreAttributes: ['color'],2
  },2
);2
2
const FunctionKeyword = styled.text({2
  color: 'rgb(170, 13, 145)',2
  fontStyle: 'italic',2
});2
2
const FunctionName = styled.text({2
  fontStyle: 'italic',2
});2
2
const ColorPickerDescription = styled.view({2
  display: 'inline',2
  position: 'relative',2
});2
2
type DataDescriptionProps = {|2
  path?: Array<string>,2
  type: string,2
  value: any,2
  setValue: ?DataInspectorSetValue,2
|};2
2
type DescriptionCommitOptions = {|2
  value: any,2
  keep: boolean,2
  clear: boolean,2
|};2
2
class NumberTextEditor extends PureComponent<{2
  commit: (opts: DescriptionCommitOptions) => void,2
  type: string,2
  value: any,2
  origValue: any,2
}> {2
  onNumberTextInputChange = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    const val =2
      this.props.type === 'number'2
        ? parseFloat(e.target.value)2
        : e.target.value;2
    this.props.commit({2
      clear: false,2
      keep: true,2
      value: val,2
    });2
  };2
2
  onNumberTextInputKeyDown = (e: SyntheticKeyboardEvent<*>) => {2
    if (e.key === 'Enter') {2
      const val =2
        this.props.type === 'number'2
          ? parseFloat(this.props.value)2
          : this.props.value;2
      this.props.commit({clear: true, keep: true, value: val});2
    } else if (e.key === 'Escape') {2
      this.props.commit({2
        clear: true,2
        keep: false,2
        value: this.props.origValue,2
      });2
    }2
  };2
2
  onNumberTextRef = (ref: ?HTMLElement) => {2
    if (ref) {2
      ref.focus();2
    }2
  };2
2
  onNumberTextBlur = () => {2
    this.props.commit({clear: true, keep: true, value: this.props.value});2
  };2
2
  render() {2
    const extraProps: Object = {};2
    if (this.props.type === 'number') {2
      // render as a HTML number input2
      extraProps.type = 'number';2
2
      // step="any" allows any sort of float to be input, otherwise we're limited2
      // to decimal2
      extraProps.step = 'any';2
    }2
2
    return (2
      <Input2
        key="input"2
        {...extraProps}2
        compact={true}2
        onChange={this.onNumberTextInputChange}2
        onKeyDown={this.onNumberTextInputKeyDown}2
        innerRef={this.onNumberTextRef}2
        onBlur={this.onNumberTextBlur}2
        value={this.props.value}2
      />2
    );2
  }2
}2
2
type DataDescriptionState = {|2
  editing: boolean,2
  origValue: any,2
  value: any,2
|};2
2
export default class DataDescription extends PureComponent<2
  DataDescriptionProps,2
  DataDescriptionState,2
> {2
  constructor(props: DataDescriptionProps, context: Object) {2
    super(props, context);2
2
    this.state = {2
      editing: false,2
      origValue: '',2
      value: '',2
    };2
  }2
2
  commit = (opts: DescriptionCommitOptions) => {2
    const {path, setValue} = this.props;2
    if (opts.keep && setValue && path) {2
      const val = opts.value;2
      this.setState({value: val});2
      setValue(path, val);2
    }2
2
    if (opts.clear) {2
      this.setState({2
        editing: false,2
        origValue: '',2
        value: '',2
      });2
    }2
  };2
2
  _renderEditing() {2
    const {type} = this.props;2
    const {origValue, value} = this.state;2
2
    if (2
      type === 'string' ||2
      type === 'text' ||2
      type === 'number' ||2
      type === 'enum'2
    ) {2
      return (2
        <NumberTextEditor2
          type={type}2
          value={value}2
          origValue={origValue}2
          commit={this.commit}2
        />2
      );2
    }2
2
    if (type === 'color') {2
      return <ColorEditor value={value} commit={this.commit} />;2
    }2
2
    return null;2
  }2
2
  _hasEditUI() {2
    const {type} = this.props;2
    return (2
      type === 'string' ||2
      type === 'text' ||2
      type === 'number' ||2
      type === 'enum' ||2
      type === 'color'2
    );2
  }2
2
  onEditStart = () => {2
    this.setState({2
      editing: this._hasEditUI(),2
      origValue: this.props.value,2
      value: this.props.value,2
    });2
  };2
2
  render(): any {2
    if (this.state.editing) {2
      return this._renderEditing();2
    } else {2
      return (2
        <DataDescriptionPreview2
          type={this.props.type}2
          value={this.props.value}2
          editable={Boolean(this.props.setValue)}2
          commit={this.commit}2
          onEdit={this.onEditStart}2
        />2
      );2
    }2
  }2
}2
2
class ColorEditor extends Component<{2
  value: any,2
  commit: (opts: DescriptionCommitOptions) => void,2
}> {2
  onBlur = () => {2
    this.props.commit({clear: true, keep: false, value: this.props.value});2
  };2
2
  onChange = ({2
    hex,2
    rgb: {a, b, g, r},2
  }: {2
    hex: string,2
    rgb: {a: number, b: number, g: number, r: number},2
  }) => {2
    const prev = this.props.value;2
2
    let val;2
    if (typeof prev === 'string') {2
      if (a === 1) {2
        // hex is fine and has an implicit 100% alpha2
        val = hex;2
      } else {2
        // turn into a css rgba value2
        val = `rgba(${r}, ${g}, ${b}, ${a})`;2
      }2
    } else if (typeof prev === 'number') {2
      // compute RRGGBBAA value2
      val = (Math.round(a * 255) & 0xff) << 24;2
      val |= (r & 0xff) << 16;2
      val |= (g & 0xff) << 8;2
      val |= b & 0xff;2
2
      const prevClear = ((prev >> 24) & 0xff) === 0;2
      const onlyAlphaChanged = (prev & 0x00ffffff) === (val & 0x00ffffff);2
2
      if (!onlyAlphaChanged && prevClear) {2
        val = 0xff000000 | (val & 0x00ffffff);2
      }2
    } else {2
      return;2
    }2
2
    this.props.commit({clear: false, keep: true, value: val});2
  };2
2
  render() {2
    const colorInfo = parseColor(this.props.value);2
    if (!colorInfo) {2
      return;2
    }2
2
    return (2
      <ColorPickerDescription>2
        <DataDescriptionPreview2
          type="color"2
          value={this.props.value}2
          editable={false}2
          commit={this.props.commit}2
        />2
        <Popover onDismiss={this.onBlur}>2
          <SketchPicker2
            color={colorInfo}2
            presetColors={[2
              colors.blue,2
              colors.green,2
              colors.red,2
              colors.blueGrey,2
              colors.slate,2
              colors.aluminum,2
              colors.seaFoam,2
              colors.teal,2
              colors.lime,2
              colors.lemon,2
              colors.orange,2
              colors.tomato,2
              colors.cherry,2
              colors.pink,2
              colors.grape,2
            ]}2
            onChange={this.onChange}2
          />2
        </Popover>2
      </ColorPickerDescription>2
    );2
  }2
}2
2
class DataDescriptionPreview extends Component<{2
  type: string,2
  value: any,2
  editable: boolean,2
  commit: (opts: DescriptionCommitOptions) => void,2
  onEdit?: () => void,2
}> {2
  onClick = () => {2
    const {onEdit} = this.props;2
    if (this.props.editable && onEdit) {2
      onEdit();2
    }2
  };2
2
  render() {2
    const {type, value} = this.props;2
2
    const description = (2
      <DataDescriptionContainer2
        type={type}2
        value={value}2
        editable={this.props.editable}2
        commit={this.props.commit}2
      />2
    );2
2
    // booleans are always editable so don't require the onEditStart handler2
    if (type === 'boolean') {2
      return description;2
    }2
2
    return (2
      <span onClick={this.onClick} role="button" tabIndex={-1}>2
        {description}2
      </span>2
    );2
  }2
}2
2
function parseColor(2
  val: string | number,2
): ?{|2
  r: number,2
  g: number,2
  b: number,2
  a: number,2
|} {2
  if (typeof val === 'number') {2
    const a = ((val >> 24) & 0xff) / 255;2
    const r = (val >> 16) & 0xff;2
    const g = (val >> 8) & 0xff;2
    const b = val & 0xff;2
    return {a, b, g, r};2
  }2
  if (typeof val !== 'string') {2
    return;2
  }2
  if (val[0] !== '#') {2
    return;2
  }2
2
  // remove leading hash2
  val = val.slice(1);2
2
  // only allow RGB and ARGB hex values2
  if (val.length !== 3 && val.length !== 6 && val.length !== 8) {2
    return;2
  }2
2
  // split every 2 characters2
  const parts = val.match(/.{1,2}/g);2
  if (!parts) {2
    return;2
  }2
2
  // get the alpha value2
  let a = 1;2
2
  // extract alpha if passed AARRGGBB2
  if (val.length === 8) {2
    a = parseInt(parts.shift(), 16) / 255;2
  }2
2
  const size = val.length;2
  const [r, g, b] = parts.map(num => {2
    if (size === 3) {2
      return parseInt(num + num, 16);2
    } else {2
      return parseInt(num, 16);2
    }2
  });2
2
  return {a, b, g, r};2
}2
2
class DataDescriptionContainer extends Component<{2
  type: string,2
  value: any,2
  editable: boolean,2
  commit: (opts: DescriptionCommitOptions) => void,2
}> {2
  onChangeCheckbox = (e: SyntheticInputEvent<HTMLInputElement>) => {2
    this.props.commit({clear: true, keep: true, value: e.target.checked});2
  };2
2
  render(): any {2
    const {type, editable, value: val} = this.props;2
2
    switch (type) {2
      case 'number':2
        return <NumberValue>{Number(val)}</NumberValue>;2
2
      case 'color': {2
        const colorInfo = parseColor(val);2
        if (colorInfo) {2
          const {a, b, g, r} = colorInfo;2
          return [2
            <ColorBox key="color-box" color={`rgba(${r}, ${g}, ${b}, ${a})`} />,2
            <ColorValue key="value">2
              rgba({r}, {g}, {b}, {a === 1 ? '1' : a.toFixed(2)})2
            </ColorValue>,2
          ];2
        } else {2
          return <span>Malformed color</span>;2
        }2
      }2
2
      case 'text':2
      case 'string':2
        return <StringValue>"{String(val || '')}"</StringValue>;2
2
      case 'enum':2
        return <StringValue>{String(val)}</StringValue>;2
2
      case 'boolean':2
        return editable ? (2
          <input2
            type="checkbox"2
            checked={Boolean(val)}2
            disabled={!editable}2
            onChange={this.onChangeCheckbox}2
          />2
        ) : (2
          <StringValue>{String(val)}</StringValue>2
        );2
2
      case 'undefined':2
        return <UndefinedValue>undefined</UndefinedValue>;2
2
      case 'date':2
        if (Object.prototype.toString.call(val) === '[object Date]') {2
          return <span>{val.toString()}</span>;2
        } else {2
          return <span>{val}</span>;2
        }2
2
      case 'null':2
        return <NullValue>null</NullValue>;2
2
      case 'array':2
      case 'object':2
        // no description necessary as we'll typically wrap it in [] or {} which already denotes the2
        // type2
        return null;2
2
      case 'function':2
        return (2
          <span>2
            <FunctionKeyword>function</FunctionKeyword>2
            <FunctionName>&nbsp;{val.name}()</FunctionName>2
          </span>2
        );2
2
      case 'symbol':2
        return <SymbolValue>Symbol()</SymbolValue>;2
2
      default:2
        return <span>Unknown type "{type}"</span>;2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import DataDescription from './DataDescription.js';2
import {Component} from 'react';2
import ContextMenu from '../ContextMenu.js';2
import styled from '../../styled/index.js';2
import DataPreview from './DataPreview.js';2
import createPaste from '../../../utils/createPaste.js';2
import {reportInteraction} from '../../../utils/InteractionTracker.js';2
import {getSortedKeys} from './utils.js';2
import {colors} from '../colors.js';2
import {clipboard} from 'electron';2
2
const deepEqual = require('deep-equal');2
2
const BaseContainer = styled.view(2
  {2
    fontFamily: 'Menlo, monospace',2
    fontSize: 11,2
    lineHeight: '17px',2
    filter: props => (props.disabled ? 'grayscale(100%)' : ''),2
    margin: props => (props.depth === 0 ? '7.5px 0' : '0'),2
    paddingLeft: 10,2
    userSelect: 'text',2
  },2
  {2
    ignoreAttributes: ['depth', 'disabled'],2
  },2
);2
2
const RecursiveBaseWrapper = styled.text({2
  color: colors.red,2
});2
2
const Wrapper = styled.text({2
  color: '#555',2
});2
2
const PropertyContainer = styled.text({2
  paddingTop: '2px',2
});2
2
const ExpandControl = styled.text({2
  color: '#6e6e6e',2
  fontSize: 10,2
  marginLeft: -11,2
  marginRight: 5,2
  whiteSpace: 'pre',2
});2
2
export const InspectorName = styled.text({2
  color: colors.grapeDark1,2
});2
2
export type DataValueExtractor = (2
  value: any,2
  depth: number,2
) => ?{|2
  mutable: boolean,2
  type: string,2
  value: any,2
|};2
2
export type DataInspectorSetValue = (path: Array<string>, val: any) => void;2
2
export type DataInspectorExpanded = {2
  [key: string]: boolean,2
};2
2
export type DiffMetadataExtractor = (2
  data: any,2
  diff: any,2
  key: string,2
) => Array<{|2
  data: any,2
  diff?: any,2
  status?: 'added' | 'removed',2
|}>;2
2
type DataInspectorProps = {2
  /**2
   * Object to inspect.2
   */2
  data: any,2
  /**2
   * Object to compare with the provided `data` property.2
   * Differences will be styled accordingly in the UI.2
   */2
  diff?: any,2
  /**2
   * Current name of this value.2
   */2
  name?: string,2
  /**2
   * Current depth.2
   */2
  depth: number,2
  /**2
   * An array containing the current location of the data relative to it's root.2
   */2
  path: Array<string>,2
  /**2
   * Whether to expand the root by default.2
   */2
  expandRoot?: boolean,2
  /**2
   * An array of paths that are currently expanded.2
   */2
  expanded: DataInspectorExpanded,2
  /**2
   * An optional callback that will explode a value into it's type and value.2
   * Useful for inspecting serialised data.2
   */2
  extractValue?: DataValueExtractor,2
  /**2
   * Callback whenever the current expanded paths is changed.2
   */2
  onExpanded?: ?(expanded: DataInspectorExpanded) => void,2
  /**2
   * Callback when a value is edited.2
   */2
  setValue?: ?DataInspectorSetValue,2
  /**2
   * Whether all objects and arrays should be collapsed by default.2
   */2
  collapsed?: boolean,2
  /**2
   * Ancestry of parent objects, used to avoid recursive objects.2
   */2
  ancestry: Array<Object>,2
};2
2
const defaultValueExtractor: DataValueExtractor = (value: any) => {2
  const type = typeof value;2
2
  if (type === 'number') {2
    return {mutable: true, type: 'number', value};2
  }2
2
  if (type === 'string') {2
    return {mutable: true, type: 'string', value};2
  }2
2
  if (type === 'boolean') {2
    return {mutable: true, type: 'boolean', value};2
  }2
2
  if (type === 'undefined') {2
    return {mutable: true, type: 'undefined', value};2
  }2
2
  if (value === null) {2
    return {mutable: true, type: 'null', value};2
  }2
2
  if (Array.isArray(value)) {2
    return {mutable: true, type: 'array', value};2
  }2
2
  if (Object.prototype.toString.call(value) === '[object Date]') {2
    return {mutable: true, type: 'date', value};2
  }2
2
  if (type === 'object') {2
    return {mutable: true, type: 'object', value};2
  }2
};2
2
const rootContextMenuCache: WeakMap<2
  Object,2
  Array<Electron$MenuItemOptions>,2
> = new WeakMap();2
2
function getRootContextMenu(data: Object): Array<Electron$MenuItemOptions> {2
  const cached = rootContextMenuCache.get(data);2
  if (cached != null) {2
    return cached;2
  }2
2
  const stringValue = JSON.stringify(data, null, 2);2
  const menu: Array<Electron$MenuItemOptions> = [2
    {2
      label: 'Copy entire tree',2
      click: () => clipboard.writeText(stringValue),2
    },2
    {2
      type: 'separator',2
    },2
    {2
      label: 'Create paste',2
      click: () => {2
        createPaste(stringValue);2
      },2
    },2
  ];2
  rootContextMenuCache.set(data, menu);2
  return menu;2
}2
2
function isPureObject(obj: Object) {2
  return (2
    Object.prototype.toString.call(obj) !== '[object Date]' &&2
    typeof obj === 'object'2
  );2
}2
2
const diffMetadataExtractor: DiffMetadataExtractor = (2
  data: any,2
  diff?: any,2
  key: string,2
) => {2
  if (diff == null) {2
    return [{data: data[key]}];2
  }2
2
  const val = data[key];2
  const diffVal = diff[key];2
  if (!data.hasOwnProperty(key)) {2
    return [{data: diffVal, status: 'added'}];2
  }2
  if (!diff.hasOwnProperty(key)) {2
    return [{data: val, status: 'removed'}];2
  }2
2
  if (isPureObject(diffVal) && isPureObject(val)) {2
    return [{data: val, diff: diffVal}];2
  }2
2
  if (diffVal !== val) {2
    // Check if there's a difference between the original value and2
    // the value from the diff prop2
    // The property name still exists, but the values may be different.2
    return [{data: diffVal, status: 'added'}, {data: val, status: 'removed'}];2
  }2
2
  return Object.prototype.hasOwnProperty.call(data, key) ? [{data: val}] : [];2
};2
2
function isComponentExpanded(2
  data: any,2
  diffType: string,2
  diffValue: any,2
  isExpanded: boolean,2
) {2
  if (isExpanded) {2
    return true;2
  }2
2
  if (diffValue == null) {2
    return false;2
  }2
2
  if (diffType === 'object') {2
    const sortedDataValues = Object.keys(data)2
      .sort()2
      .map(key => data[key]);2
    const sortedDiffValues = Object.keys(diffValue)2
      .sort()2
      .map(key => diffValue[key]);2
    if (JSON.stringify(sortedDataValues) !== JSON.stringify(sortedDiffValues)) {2
      return true;2
    }2
  } else {2
    if (data !== diffValue) {2
      return true;2
    }2
  }2
  return false;2
}2
2
/**2
 * An expandable data inspector.2
 *2
 * This component is fairly low level. It's likely you're looking for2
 * [`<ManagedDataInspector>`]().2
 */2
export default class DataInspector extends Component<DataInspectorProps> {2
  static defaultProps: {|2
    expanded: DataInspectorExpanded,2
    depth: number,2
    path: Array<string>,2
    ancestry: Array<Object>,2
  |} = {2
    expanded: {},2
    depth: 0,2
    path: [],2
    ancestry: [],2
  };2
2
  interaction: (name: string) => void;2
2
  constructor(props: DataInspectorProps) {2
    super();2
    this.interaction = reportInteraction('DataInspector', props.path.join(':'));2
  }2
2
  static isExpandable(data: any) {2
    return (2
      typeof data === 'object' && data !== null && Object.keys(data).length > 02
    );2
  }2
2
  shouldComponentUpdate(nextProps: DataInspectorProps) {2
    const {props} = this;2
2
    // check if any expanded paths effect this subtree2
    if (nextProps.expanded !== props.expanded) {2
      const path = nextProps.path.join('.');2
2
      for (const key in nextProps.expanded) {2
        if (key.startsWith(path) === false) {2
          // this key doesn't effect us2
          continue;2
        }2
2
        if (nextProps.expanded[key] !== props.expanded[key]) {2
          return true;2
        }2
      }2
    }2
2
    // basic equality checks for the rest2
    return (2
      nextProps.data !== props.data ||2
      nextProps.diff !== props.diff ||2
      nextProps.name !== props.name ||2
      nextProps.depth !== props.depth ||2
      !deepEqual(nextProps.path, props.path) ||2
      nextProps.onExpanded !== props.onExpanded ||2
      nextProps.setValue !== props.setValue2
    );2
  }2
2
  isExpanded(pathParts: Array<string>) {2
    const {expanded} = this.props;2
2
    // if we no expanded object then expand everything2
    if (expanded == null) {2
      return true;2
    }2
2
    const path = pathParts.join('.');2
2
    // check if there's a setting for this path2
    if (Object.prototype.hasOwnProperty.call(expanded, path)) {2
      return expanded[path];2
    }2
2
    // check if all paths are collapsed2
    if (this.props.collapsed === true) {2
      return false;2
    }2
2
    // by default all items are expanded2
    return true;2
  }2
2
  setExpanded(pathParts: Array<string>, isExpanded: boolean) {2
    const {expanded, onExpanded} = this.props;2
    if (!onExpanded || !expanded) {2
      return;2
    }2
2
    const path = pathParts.join('.');2
2
    onExpanded({2
      ...expanded,2
      [path]: isExpanded,2
    });2
  }2
2
  handleClick = () => {2
    const isExpanded = this.isExpanded(this.props.path);2
    this.interaction(isExpanded ? 'collapsed' : 'expanded');2
    this.setExpanded(this.props.path, !isExpanded);2
  };2
2
  extractValue = (data: any, depth: number) => {2
    let res;2
2
    const {extractValue} = this.props;2
    if (extractValue) {2
      res = extractValue(data, depth);2
    }2
2
    if (!res) {2
      res = defaultValueExtractor(data, depth);2
    }2
2
    return res;2
  };2
2
  render(): any {2
    const {2
      data,2
      diff,2
      depth,2
      expanded: expandedPaths,2
      expandRoot,2
      extractValue,2
      name,2
      onExpanded,2
      path,2
      ancestry,2
      collapsed,2
    } = this.props;2
2
    // the data inspector makes values read only when setValue isn't set so we just need to set it2
    // to null and the readOnly status will be propagated to all children2
    let {setValue} = this.props;2
2
    const res = this.extractValue(data, depth);2
    const resDiff = this.extractValue(diff, depth);2
2
    let type;2
    let value;2
    if (res) {2
      if (!res.mutable) {2
        setValue = null;2
      }2
2
      ({type, value} = res);2
    } else {2
      return null;2
    }2
2
    if (ancestry.includes(value)) {2
      return <RecursiveBaseWrapper>Recursive</RecursiveBaseWrapper>;2
    }2
2
    const isExpandable = DataInspector.isExpandable(value);2
    const isExpanded =2
      isExpandable &&2
      (resDiff != null2
        ? isComponentExpanded(2
            value,2
            resDiff.type,2
            resDiff.value,2
            expandRoot === true || this.isExpanded(path),2
          )2
        : expandRoot === true || this.isExpanded(path));2
2
    let expandGlyph = '';2
    if (isExpandable) {2
      if (isExpanded) {2
        expandGlyph = '▼';2
      } else {2
        expandGlyph = '▶';2
      }2
    } else {2
      if (depth !== 0) {2
        expandGlyph = ' ';2
      }2
    }2
2
    let propertyNodesContainer;2
    if (isExpandable && isExpanded) {2
      const propertyNodes = [];2
2
      // ancestry of children, including it's owner object2
      const childAncestry = ancestry.concat([value]);2
2
      const diffValue = diff && resDiff ? resDiff.value : null;2
2
      const keys = getSortedKeys({...value, ...diffValue});2
2
      const Added = styled.view({2
        backgroundColor: colors.tealTint70,2
      });2
      const Removed = styled.view({2
        backgroundColor: colors.cherryTint70,2
      });2
2
      for (const key of keys) {2
        const diffMetadataArr = diffMetadataExtractor(value, diffValue, key);2
        for (const metadata of diffMetadataArr) {2
          const dataInspectorNode = (2
            <DataInspector2
              ancestry={childAncestry}2
              extractValue={extractValue}2
              setValue={setValue}2
              expanded={expandedPaths}2
              collapsed={collapsed}2
              onExpanded={onExpanded}2
              path={path.concat(key)}2
              depth={depth + 1}2
              key={key}2
              name={key}2
              data={metadata.data}2
              diff={metadata.diff}2
            />2
          );2
2
          switch (metadata.status) {2
            case 'added':2
              propertyNodes.push(<Added>{dataInspectorNode}</Added>);2
              break;2
            case 'removed':2
              propertyNodes.push(<Removed>{dataInspectorNode}</Removed>);2
              break;2
            default:2
              propertyNodes.push(dataInspectorNode);2
          }2
        }2
      }2
2
      propertyNodesContainer = propertyNodes;2
    }2
2
    if (expandRoot === true) {2
      return (2
        <ContextMenu component="span" items={getRootContextMenu(data)}>2
          {propertyNodesContainer}2
        </ContextMenu>2
      );2
    }2
2
    // create name components2
    const nameElems = [];2
    if (typeof name !== 'undefined') {2
      nameElems.push(<InspectorName key="name">{name}</InspectorName>);2
      nameElems.push(<span key="sep">: </span>);2
    }2
2
    // create description or preview2
    let descriptionOrPreview;2
    if (isExpanded || !isExpandable) {2
      descriptionOrPreview = (2
        <DataDescription2
          path={path}2
          setValue={setValue}2
          type={type}2
          value={value}2
        />2
      );2
    } else {2
      descriptionOrPreview = (2
        <DataPreview2
          type={type}2
          value={value}2
          setValue={setValue}2
          extractValue={this.extractValue}2
          depth={depth}2
        />2
      );2
    }2
    descriptionOrPreview = (2
      <span>2
        {nameElems}2
        {descriptionOrPreview}2
      </span>2
    );2
2
    let wrapperStart;2
    let wrapperEnd;2
    if (isExpanded) {2
      if (type === 'object') {2
        wrapperStart = <Wrapper>{'{'}</Wrapper>;2
        wrapperEnd = <Wrapper>{'}'}</Wrapper>;2
      }2
2
      if (type === 'array') {2
        wrapperStart = <Wrapper>{'['}</Wrapper>;2
        wrapperEnd = <Wrapper>{']'}</Wrapper>;2
      }2
    }2
2
    const contextMenuItems = [];2
2
    if (isExpandable) {2
      contextMenuItems.push(2
        {2
          label: isExpanded ? 'Collapse' : 'Expand',2
          click: this.handleClick,2
        },2
        {2
          type: 'separator',2
        },2
      );2
    }2
2
    contextMenuItems.push(2
      {2
        label: 'Copy',2
        click: () => clipboard.writeText(window.getSelection().toString()),2
      },2
      {2
        label: 'Copy value',2
        click: () => clipboard.writeText(JSON.stringify(data, null, 2)),2
      },2
    );2
2
    return (2
      <BaseContainer2
        depth={depth}2
        disabled={2
          Boolean(this.props.setValue) === true && Boolean(setValue) === false2
        }>2
        <ContextMenu component="span" items={contextMenuItems}>2
          <PropertyContainer onClick={isExpandable ? this.handleClick : null}>2
            {expandedPaths && <ExpandControl>{expandGlyph}</ExpandControl>}2
            {descriptionOrPreview}2
            {wrapperStart}2
          </PropertyContainer>2
        </ContextMenu>2
        {propertyNodesContainer}2
        {wrapperEnd}2
      </BaseContainer>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {DataValueExtractor} from './DataInspector.js';2
import DataDescription from './DataDescription.js';2
import {InspectorName} from './DataInspector.js';2
import styled from '../../styled/index.js';2
import {getSortedKeys} from './utils.js';2
import {PureComponent} from 'react';2
2
const PreviewContainer = styled.text({2
  fontStyle: 'italic',2
});2
2
function intersperse(arr, sep) {2
  if (arr.length === 0) {2
    return [];2
  }2
2
  return arr.slice(1).reduce(2
    (xs, x, i) => {2
      return xs.concat([sep, x]);2
    },2
    [arr[0]],2
  );2
}2
2
export default class DataPreview extends PureComponent<{2
  type: string,2
  value: any,2
  depth: number,2
  extractValue: DataValueExtractor,2
  maxProperties: number,2
}> {2
  static defaultProps = {2
    maxProperties: 5,2
  };2
2
  render() {2
    const {depth, extractValue, type, value} = this.props;2
2
    if (type === 'array') {2
      return (2
        <PreviewContainer>2
          {'['}2
          {intersperse(2
            value.map((element, index) => {2
              const res = extractValue(element, depth + 1);2
              if (!res) {2
                return null;2
              }2
2
              const {type, value} = res;2
              return (2
                <DataDescription2
                  key={index}2
                  type={type}2
                  value={value}2
                  setValue={null}2
                />2
              );2
            }),2
            ', ',2
          )}2
          {']'}2
        </PreviewContainer>2
      );2
    } else if (type === 'date') {2
      return <span>{value.toString()}</span>;2
    } else if (type === 'object') {2
      const propertyNodes = [];2
2
      const keys = getSortedKeys(value);2
      let i = 0;2
      for (const key of keys) {2
        let ellipsis;2
        i++;2
        if (i >= this.props.maxProperties) {2
          ellipsis = <span key={'ellipsis'}>…</span>;2
        }2
2
        propertyNodes.push(2
          <span key={key}>2
            <InspectorName>{key}</InspectorName>2
            {ellipsis}2
          </span>,2
        );2
2
        if (ellipsis) {2
          break;2
        }2
      }2
2
      return (2
        <PreviewContainer>2
          {'{'}2
          {intersperse(propertyNodes, ', ')}2
          {'}'}2
        </PreviewContainer>2
      );2
    } else {2
      return null;2
    }2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  DataValueExtractor,2
  DataInspectorExpanded,2
} from './DataInspector.js';2
import {PureComponent} from 'react';2
import DataInspector from './DataInspector.js';2
2
type ManagedDataInspectorProps = {|2
  /**2
   * Object to inspect.2
   */2
  data: any,2
  /**2
   * Object to compare with the provided `data` property.2
   * Differences will be styled accordingly in the UI.2
   */2
  diff?: any,2
  /**2
   * Whether to expand the root by default.2
   */2
  expandRoot?: boolean,2
  /**2
   * An optional callback that will explode a value into it's type and value.2
   * Useful for inspecting serialised data.2
   */2
  extractValue?: DataValueExtractor,2
  /**2
   * Callback when a value is edited.2
   */2
  setValue?: (path: Array<string>, val: any) => void,2
  /**2
   * Whether all objects and arrays should be collapsed by default.2
   */2
  collapsed?: boolean,2
|};2
2
type ManagedDataInspectorState = {|2
  expanded: DataInspectorExpanded,2
|};2
2
/**2
 * Wrapper around `DataInspector` that handles expanded state.2
 *2
 * If you require lower level access to the state then use `DataInspector`2
 * directly.2
 *2
 * @example Plain object2
 *   <ManagedDataInspector data={{2
 *     a: '',2
 *     b: [1, 2, 3, 4],2
 *     c: {foo: 'bar'},2
 *     d: 4,2
 *   }} />2
 * @example Expanded root2
 *   <ManagedDataInspector expandRoot={true} data={{2
 *     a: '',2
 *     b: [1, 2, 3, 4],2
 *     c: {foo: 'bar'},2
 *     d: 4,2
 *   }} />2
 * @example Editable2
 *   <ManagedDataInspector setValue={() => {}} data={{2
 *     a: '',2
 *     b: [1, 2, 3, 4],2
 *     c: {foo: 'bar'},2
 *     d: 4,2
 *   }} />2
 */2
export default class ManagedDataInspector extends PureComponent<2
  ManagedDataInspectorProps,2
  ManagedDataInspectorState,2
> {2
  constructor(props: ManagedDataInspectorProps, context: Object) {2
    super(props, context);2
    this.state = {2
      expanded: {},2
    };2
  }2
2
  onExpanded = (expanded: DataInspectorExpanded) => {2
    this.setState({expanded});2
  };2
2
  render() {2
    return (2
      <DataInspector2
        data={this.props.data}2
        diff={this.props.diff}2
        extractValue={this.props.extractValue}2
        setValue={this.props.setValue}2
        expanded={this.state.expanded}2
        onExpanded={this.onExpanded}2
        expandRoot={this.props.expandRoot}2
        collapsed={this.props.collapsed}2
      />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const naturalCompare = require('string-natural-compare');2
2
export function getSortedKeys(obj: Object): Array<string> {2
  return Object.keys(obj).sort(naturalCompare);2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  ElementID,2
  Element,2
  ElementSearchResultSet,2
} from './ElementsInspector.js';2
import {reportInteraction} from '../../../utils/InteractionTracker';2
import ContextMenu from '../ContextMenu.js';2
import {PureComponent} from 'react';2
import FlexRow from '../FlexRow.js';2
import FlexColumn from '../FlexColumn.js';2
import Glyph from '../Glyph.js';2
import {colors} from '../colors.js';2
import Text from '../Text.js';2
import styled from '../../styled/index.js';2
import {FixedList} from '../../virtualized/index.js';2
import {clipboard} from 'electron';2
2
const ROW_HEIGHT = 23;2
2
const ElementsRowContainer = ContextMenu.extends(2
  {2
    flexDirection: 'row',2
    alignItems: 'center',2
    backgroundColor: props => {2
      if (props.selected) {2
        return colors.macOSTitleBarIconSelected;2
      } else if (props.even) {2
        return colors.light02;2
      } else {2
        return '';2
      }2
    },2
    color: props => (props.selected ? colors.white : colors.grapeDark3),2
    flexShrink: 0,2
    flexWrap: 'nowrap',2
    height: ROW_HEIGHT,2
    minWidth: '100%',2
    paddingLeft: props => (props.level - 1) * 12,2
    paddingRight: 20,2
    position: 'relative',2
2
    '& *': {2
      color: props => (props.selected ? `${colors.white} !important` : ''),2
    },2
2
    '&:hover': {2
      backgroundColor: props =>2
        props.selected ? colors.macOSTitleBarIconSelected : '#EBF1FB',2
    },2
  },2
  {2
    ignoreAttributes: ['level', 'selected', 'even'],2
  },2
);2
2
const ElementsRowDecoration = FlexRow.extends({2
  flexShrink: 0,2
  justifyContent: 'flex-end',2
  alignItems: 'center',2
  marginRight: 4,2
  position: 'relative',2
  width: 16,2
  top: -1,2
});2
2
const ElementsLine = styled.view(2
  {2
    backgroundColor: colors.light20,2
    height: props => props.childrenCount * ROW_HEIGHT - 4,2
    position: 'absolute',2
    right: 3,2
    top: ROW_HEIGHT - 3,2
    zIndex: 2,2
    width: 2,2
    borderRadius: '999em',2
  },2
  {2
    ignoreAttributes: ['childrenCount'],2
  },2
);2
2
const DecorationImage = styled.image({2
  height: 12,2
  marginRight: 5,2
  width: 12,2
});2
2
const NoShrinkText = Text.extends({2
  flexShrink: 0,2
  flexWrap: 'nowrap',2
  overflow: 'hidden',2
  userSelect: 'none',2
  fontWeight: 400,2
});2
2
const ElementsRowAttributeContainer = NoShrinkText.extends({2
  color: colors.dark80,2
  fontWeight: 300,2
  marginLeft: 5,2
});2
2
const ElementsRowAttributeKey = styled.text({2
  color: colors.tomato,2
});2
2
const ElementsRowAttributeValue = styled.text({2
  color: colors.slateDark3,2
});2
2
class PartialHighlight extends PureComponent<{2
  selected: boolean,2
  highlighted: ?string,2
  content: string,2
}> {2
  static HighlightedText = styled.text({2
    backgroundColor: '#ffff33',2
    color: props =>2
      props.selected ? `${colors.grapeDark3} !important` : 'auto',2
  });2
2
  render() {2
    const {highlighted, content, selected} = this.props;2
    let renderedValue;2
    if (2
      content &&2
      highlighted != null &&2
      highlighted != '' &&2
      content.toLowerCase().includes(highlighted.toLowerCase())2
    ) {2
      const highlightStart = content2
        .toLowerCase()2
        .indexOf(highlighted.toLowerCase());2
      const highlightEnd = highlightStart + highlighted.length;2
      const before = content.substring(0, highlightStart);2
      const match = content.substring(highlightStart, highlightEnd);2
      const after = content.substring(highlightEnd);2
      renderedValue = [2
        <span>2
          {before}2
          <PartialHighlight.HighlightedText selected={selected}>2
            {match}2
          </PartialHighlight.HighlightedText>2
          {after}2
        </span>,2
      ];2
    } else {2
      renderedValue = <span>{content}</span>;2
    }2
    return renderedValue;2
  }2
}2
2
class ElementsRowAttribute extends PureComponent<{2
  name: string,2
  value: string,2
  matchingSearchQuery: ?string,2
  selected: boolean,2
}> {2
  render() {2
    const {name, value, matchingSearchQuery, selected} = this.props;2
    return (2
      <ElementsRowAttributeContainer code={true}>2
        <ElementsRowAttributeKey>{name}</ElementsRowAttributeKey>2
        =2
        <ElementsRowAttributeValue>2
          <PartialHighlight2
            content={value}2
            highlighted={2
              name === 'id' || name === 'addr' ? matchingSearchQuery : ''2
            }2
            selected={selected}2
          />2
        </ElementsRowAttributeValue>2
      </ElementsRowAttributeContainer>2
    );2
  }2
}2
2
type FlatElement = {|2
  key: ElementID,2
  element: Element,2
  level: number,2
|};2
2
type FlatElements = Array<FlatElement>;2
2
type ElementsRowProps = {2
  id: ElementID,2
  level: number,2
  selected: boolean,2
  matchingSearchQuery: ?string,2
  element: Element,2
  even: boolean,2
  onElementSelected: (key: ElementID) => void,2
  onElementExpanded: (key: ElementID, deep: boolean) => void,2
  childrenCount: number,2
  onElementHovered: ?(key: ?ElementID) => void,2
  style: ?Object,2
};2
2
type ElementsRowState = {|2
  hovered: boolean,2
|};2
2
class ElementsRow extends PureComponent<ElementsRowProps, ElementsRowState> {2
  constructor(props: ElementsRowProps, context: Object) {2
    super(props, context);2
    this.state = {hovered: false};2
    this.interaction = reportInteraction('ElementsRow', props.element.name);2
  }2
2
  interaction: (name: string, data: any) => void;2
2
  getContextMenu = (): Array<Electron$MenuItemOptions> => {2
    const {props} = this;2
    return [2
      {2
        type: 'separator',2
      },2
      {2
        label: 'Copy',2
        click: () => {2
          clipboard.writeText(props.element.name);2
        },2
      },2
      {2
        label: props.element.expanded ? 'Collapse' : 'Expand',2
        click: () => {2
          this.props.onElementExpanded(this.props.id, false);2
        },2
      },2
    ];2
  };2
2
  onClick = () => {2
    this.props.onElementSelected(this.props.id);2
    this.interaction('selected', {level: this.props.level});2
  };2
2
  onDoubleClick = (event: SyntheticMouseEvent<*>) => {2
    this.props.onElementExpanded(this.props.id, event.altKey);2
  };2
2
  onMouseEnter = () => {2
    this.setState({hovered: true});2
    if (this.props.onElementHovered) {2
      this.props.onElementHovered(this.props.id);2
    }2
  };2
2
  onMouseLeave = () => {2
    this.setState({hovered: false});2
    if (this.props.onElementHovered) {2
      this.props.onElementHovered(null);2
    }2
  };2
2
  render() {2
    const {2
      element,2
      id,2
      level,2
      selected,2
      style,2
      even,2
      matchingSearchQuery,2
    } = this.props;2
    const hasChildren = element.children && element.children.length > 0;2
2
    let arrow;2
    if (hasChildren) {2
      arrow = (2
        <span onClick={this.onDoubleClick} role="button" tabIndex={-1}>2
          <Glyph2
            size={8}2
            name={element.expanded ? 'chevron-down' : 'chevron-right'}2
            color={selected ? 'white' : colors.light80}2
          />2
        </span>2
      );2
    }2
2
    const attributes = element.attributes2
      ? element.attributes.map(attr => (2
          <ElementsRowAttribute2
            key={attr.name}2
            name={attr.name}2
            value={attr.value}2
            matchingSearchQuery={matchingSearchQuery}2
            selected={selected}2
          />2
        ))2
      : [];2
2
    const decoration = (() => {2
      switch (element.decoration) {2
        case 'litho':2
          return <DecorationImage src="icons/litho-logo.png" />;2
        case 'componentkit':2
          return <DecorationImage src="icons/componentkit-logo.png" />;2
        case 'componentscript':2
          return <DecorationImage src="icons/componentscript-logo.png" />;2
        default:2
          return null;2
      }2
    })();2
2
    // when we hover over or select an expanded element with children, we show a line from the2
    // bottom of the element to the next sibling2
    let line;2
    const shouldShowLine =2
      (selected || this.state.hovered) && hasChildren && element.expanded;2
    if (shouldShowLine) {2
      line = <ElementsLine childrenCount={this.props.childrenCount} />;2
    }2
2
    return (2
      <ElementsRowContainer2
        buildItems={this.getContextMenu}2
        key={id}2
        level={level}2
        selected={selected}2
        matchingSearchQuery={matchingSearchQuery}2
        even={even}2
        onClick={this.onClick}2
        onDoubleClick={this.onDoubleClick}2
        onMouseEnter={this.onMouseEnter}2
        onMouseLeave={this.onMouseLeave}2
        style={style}>2
        <ElementsRowDecoration>2
          {line}2
          {arrow}2
        </ElementsRowDecoration>2
        <NoShrinkText code={true}>2
          {decoration}2
          <PartialHighlight2
            content={element.name}2
            highlighted={matchingSearchQuery}2
            selected={selected}2
          />2
        </NoShrinkText>2
        {attributes}2
      </ElementsRowContainer>2
    );2
  }2
}2
2
const ElementsContainer = FlexColumn.extends({2
  backgroundColor: colors.white,2
  minHeight: '100%',2
  minWidth: '100%',2
  overflow: 'auto',2
});2
2
const ElementsBox = FlexColumn.extends({2
  alignItems: 'flex-start',2
  flex: 1,2
  overflow: 'auto',2
});2
2
type ElementsProps = {|2
  root: ?ElementID,2
  selected: ?ElementID,2
  searchResults: ?ElementSearchResultSet,2
  elements: {[key: ElementID]: Element},2
  onElementSelected: (key: ElementID) => void,2
  onElementExpanded: (key: ElementID, deep: boolean) => void,2
  onElementHovered: ?(key: ?ElementID) => void,2
|};2
2
type ElementsState = {|2
  flatKeys: Array<ElementID>,2
  flatElements: FlatElements,2
  maxDepth: number,2
|};2
2
export class Elements extends PureComponent<ElementsProps, ElementsState> {2
  constructor(props: ElementsProps, context: Object) {2
    super(props, context);2
    this.state = {2
      flatElements: [],2
      flatKeys: [],2
      maxDepth: 0,2
    };2
  }2
2
  componentDidMount() {2
    this.setProps(this.props, true);2
  }2
2
  componentWillReceiveProps(nextProps: ElementsProps) {2
    this.setProps(nextProps);2
  }2
2
  setProps(props: ElementsProps, force?: boolean) {2
    const flatElements: FlatElements = [];2
    const flatKeys = [];2
2
    let maxDepth = 0;2
2
    function seed(key: ElementID, level: number) {2
      const element = props.elements[key];2
      if (!element) {2
        return;2
      }2
2
      maxDepth = Math.max(maxDepth, level);2
2
      flatElements.push({2
        element,2
        key,2
        level,2
      });2
2
      flatKeys.push(key);2
2
      if (2
        element.children != null &&2
        element.children.length > 0 &&2
        element.expanded2
      ) {2
        for (const key of element.children) {2
          seed(key, level + 1);2
        }2
      }2
    }2
2
    if (props.root != null) {2
      seed(props.root, 1);2
    }2
2
    this.setState({flatElements, flatKeys, maxDepth});2
  }2
2
  selectElement = (key: ElementID) => {2
    this.props.onElementSelected(key);2
  };2
2
  onKeyDown = (e: SyntheticKeyboardEvent<*>) => {2
    const {selected} = this.props;2
    if (selected == null) {2
      return;2
    }2
2
    const {props} = this;2
    const {flatElements, flatKeys} = this.state;2
2
    const selectedIndex = flatKeys.indexOf(selected);2
    if (selectedIndex < 0) {2
      return;2
    }2
2
    const selectedElement = props.elements[selected];2
    if (!selectedElement) {2
      return;2
    }2
2
    if (2
      e.key === 'c' &&2
      ((e.metaKey && process.platform === 'darwin') ||2
        (e.ctrlKey && process.platform !== 'darwin'))2
    ) {2
      e.preventDefault();2
      clipboard.writeText(selectedElement.name);2
      return;2
    }2
2
    if (e.key === 'ArrowUp') {2
      if (selectedIndex === 0 || flatKeys.length === 1) {2
        return;2
      }2
2
      e.preventDefault();2
      this.selectElement(flatKeys[selectedIndex - 1]);2
    }2
2
    if (e.key === 'ArrowDown') {2
      if (selectedIndex === flatKeys.length - 1) {2
        return;2
      }2
2
      e.preventDefault();2
      this.selectElement(flatKeys[selectedIndex + 1]);2
    }2
2
    if (e.key === 'ArrowLeft') {2
      e.preventDefault();2
      if (selectedElement.expanded) {2
        // unexpand2
        props.onElementExpanded(selected, false);2
      } else {2
        // jump to parent2
        let parentKey;2
        const targetLevel = flatElements[selectedIndex].level - 1;2
        for (let i = selectedIndex; i >= 0; i--) {2
          const {level} = flatElements[i];2
          if (level === targetLevel) {2
            parentKey = flatKeys[i];2
            break;2
          }2
        }2
2
        if (parentKey) {2
          this.selectElement(parentKey);2
        }2
      }2
    }2
2
    if (e.key === 'ArrowRight' && selectedElement.children.length > 0) {2
      e.preventDefault();2
      if (selectedElement.expanded) {2
        // go to first child2
        this.selectElement(selectedElement.children[0]);2
      } else {2
        // expand2
        props.onElementExpanded(selected, false);2
      }2
    }2
  };2
2
  buildRow = ({index, style}: {index: number, style: Object}) => {2
    const {2
      elements,2
      onElementExpanded,2
      onElementHovered,2
      onElementSelected,2
      selected,2
      searchResults,2
    } = this.props;2
    const {flatElements} = this.state;2
    const row = flatElements[index];2
2
    let childrenCount = 0;2
    for (let i = index + 1; i < flatElements.length; i++) {2
      const child = flatElements[i];2
      if (child.level <= row.level) {2
        break;2
      } else {2
        childrenCount++;2
      }2
    }2
2
    return (2
      <ElementsRow2
        level={row.level}2
        id={row.key}2
        key={row.key}2
        even={index % 2 === 0}2
        onElementExpanded={onElementExpanded}2
        onElementHovered={onElementHovered}2
        onElementSelected={onElementSelected}2
        selected={selected === row.key}2
        matchingSearchQuery={2
          searchResults && searchResults.matches.has(row.key)2
            ? searchResults.query2
            : null2
        }2
        element={row.element}2
        elements={elements}2
        childrenCount={childrenCount}2
        style={style}2
      />2
    );2
  };2
2
  keyMapper = (index: number): string => {2
    return this.state.flatElements[index].key;2
  };2
2
  render() {2
    const items = this.state.flatElements;2
2
    return (2
      <ElementsBox>2
        <ElementsContainer tabIndex="0" onKeyDown={this.onKeyDown}>2
          <FixedList2
            pureData={items}2
            keyMapper={this.keyMapper}2
            rowCount={items.length}2
            rowHeight={ROW_HEIGHT}2
            rowRenderer={this.buildRow}2
            sideScrollable={true}2
          />2
        </ElementsContainer>2
      </ElementsBox>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {Component} from 'react';2
import FlexRow from '../FlexRow.js';2
import {Elements} from './elements.js';2
2
export type ElementID = string;2
2
export type ElementSearchResultSet = {|2
  query: string,2
  matches: Set<ElementID>,2
|};2
2
export type ElementData = {2
  [name: ElementID]: {2
    [key: string]:2
      | string2
      | number2
      | boolean2
      | {|2
          __type__: string,2
          value: any,2
        |},2
  },2
};2
2
export type ElementAttribute = {|2
  name: string,2
  value: string,2
|};2
2
export type Element = {|2
  id: ElementID,2
  name: string,2
  expanded: boolean,2
  children: Array<ElementID>,2
  attributes: Array<ElementAttribute>,2
  data: ElementData,2
  decoration: string,2
|};2
2
export default class ElementsInspector extends Component<{2
  onElementExpanded: (key: ElementID, deep: boolean) => void,2
  onElementSelected: (key: ElementID) => void,2
  onElementHovered: ?(key: ?ElementID) => void,2
  onValueChanged: ?(path: Array<string>, val: any) => void,2
  selected: ?ElementID,2
  searchResults?: ?ElementSearchResultSet,2
  root: ?ElementID,2
  elements: {[key: ElementID]: Element},2
  useAppSidebar?: boolean,2
}> {2
  render() {2
    const {2
      selected,2
      elements,2
      root,2
      onElementExpanded,2
      onElementSelected,2
      onElementHovered,2
      searchResults,2
    } = this.props;2
2
    return (2
      <FlexRow fill={true}>2
        <Elements2
          onElementExpanded={onElementExpanded}2
          onElementSelected={onElementSelected}2
          onElementHovered={onElementHovered}2
          selected={selected}2
          searchResults={searchResults}2
          root={root}2
          elements={elements}2
        />2
      </FlexRow>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Element} from './ElementsInspector.js';2
import type {PluginClient} from '../../../plugin';2
import Panel from '../Panel.js';2
import ManagedDataInspector from '../data-inspector/ManagedDataInspector.js';2
import {Component} from 'react';2
import {Console} from '../console';2
import {GK} from 'sonar';2
2
const deepEqual = require('deep-equal');2
2
type OnValueChanged = (path: Array<string>, val: any) => void;2
2
type InspectorSidebarSectionProps = {2
  data: any,2
  id: string,2
  onValueChanged: ?OnValueChanged,2
};2
2
class InspectorSidebarSection extends Component<InspectorSidebarSectionProps> {2
  setValue = (path: Array<string>, value: any) => {2
    if (this.props.onValueChanged) {2
      this.props.onValueChanged([this.props.id, ...path], value);2
    }2
  };2
2
  shouldComponentUpdate(nextProps: InspectorSidebarSectionProps) {2
    return (2
      !deepEqual(nextProps, this.props) ||2
      this.props.id !== nextProps.id ||2
      this.props.onValueChanged !== nextProps.onValueChanged2
    );2
  }2
2
  extractValue = (val: any, depth: number) => {2
    if (val && val.__type__) {2
      return {2
        mutable: Boolean(val.__mutable__),2
        type: val.__type__ === 'auto' ? typeof val.value : val.__type__,2
        value: val.value,2
      };2
    } else {2
      return {2
        mutable: typeof val === 'object',2
        type: typeof val,2
        value: val,2
      };2
    }2
  };2
2
  render() {2
    const {id} = this.props;2
    return (2
      <Panel heading={id} floating={false} fill={false}>2
        <ManagedDataInspector2
          data={this.props.data}2
          setValue={this.props.onValueChanged ? this.setValue : undefined}2
          extractValue={this.extractValue}2
          expandRoot={true}2
          collapsed={true}2
        />2
      </Panel>2
    );2
  }2
}2
2
type Props = {|2
  element: ?Element,2
  onValueChanged: ?OnValueChanged,2
  client: PluginClient,2
|};2
type State = {|2
  isConsoleEnabled: boolean,2
|};2
2
export class InspectorSidebar extends Component<Props, State> {2
  state = {2
    isConsoleEnabled: false,2
  };2
2
  constructor(props: Props) {2
    super(props);2
    this.checkIfConsoleIsEnabled();2
  }2
2
  componentDidUpdate(prevProps: Props, prevState: State) {2
    if (prevProps.client !== this.props.client) {2
      this.checkIfConsoleIsEnabled();2
    }2
  }2
2
  checkIfConsoleIsEnabled() {2
    this.props.client2
      .call('isConsoleEnabled')2
      .then((result: {isEnabled: boolean}) => {2
        this.setState({isConsoleEnabled: result.isEnabled});2
      });2
  }2
2
  render() {2
    const {element} = this.props;2
    if (!element || !element.data) {2
      return null;2
    }2
2
    const sections = [];2
    for (const key in element.data) {2
      sections.push(2
        <InspectorSidebarSection2
          key={key}2
          id={key}2
          data={element.data[key]}2
          onValueChanged={this.props.onValueChanged}2
        />,2
      );2
    }2
2
    if (GK.get('sonar_show_console_plugin') && this.state.isConsoleEnabled) {2
      sections.push(2
        <Panel heading="JS Console" floating={false} fill={false}>2
          <Console client={this.props.client} getContext={() => element.id} />2
        </Panel>,2
      );2
    }2
2
    return sections;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Filter} from './types.js';2
import {PureComponent} from 'react';2
import ContextMenu from '../ContextMenu.js';2
import textContent from '../../../utils/textContent.js';2
import styled from '../../styled/index.js';2
import {colors} from '../colors.js';2
2
const FilterText = styled.view(2
  {2
    display: 'flex',2
    alignSelf: 'baseline',2
    userSelect: 'none',2
    cursor: 'pointer',2
    position: 'relative',2
    maxWidth: '100%',2
    '&:hover': {2
      color: colors.white,2
    },2
    '&:hover::after': {2
      content: '""',2
      position: 'absolute',2
      top: 3,2
      bottom: -2,2
      left: -6,2
      right: -6,2
      borderRadius: '999em',2
      backgroundColor: 'rgba(0, 0, 0, 0.3)',2
    },2
    '&:hover *': {2
      color: `${colors.white} !important`,2
      zIndex: 2,2
    },2
  },2
  {2
    ignoreAttributes: ['filterKey', 'addFilter'],2
  },2
);2
2
type Props = {2
  children: React.Node,2
  addFilter: (filter: Filter) => void,2
  filterKey: string,2
};2
2
export default class FilterRow extends PureComponent<Props> {2
  onClick = (e: SyntheticMouseEvent<>) => {2
    if (e.button === 0) {2
      this.props.addFilter({2
        type: e.metaKey || e.altKey ? 'exclude' : 'include',2
        key: this.props.filterKey,2
        value: textContent(this.props.children),2
      });2
    }2
  };2
2
  menuItems = [2
    {2
      label: 'Filter this value',2
      click: () =>2
        this.props.addFilter({2
          type: 'include',2
          key: this.props.filterKey,2
          value: textContent(this.props.children),2
        }),2
    },2
  ];2
2
  render() {2
    const {children, ...props} = this.props;2
2
    return (2
      <ContextMenu2
        items={this.menuItems}2
        component={FilterText}2
        onClick={this.onClick}2
        {...props}>2
        {children}2
      </ContextMenu>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type Filter =2
  | {2
      key: string,2
      value: string,2
      type: 'include' | 'exclude',2
    }2
  | {2
      key: string,2
      value: Array<string>,2
      type: 'enum',2
      enum: Array<{2
        label: string,2
        color: string,2
        value: string,2
      }>,2
      persistent?: boolean,2
    };2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {2
  FlexBox,2
  FlexColumn,2
  FlexRow,2
  Text,2
  View,2
  styled,2
  Glyph,2
  colors,2
  brandColors,2
  PureComponent,2
} from 'sonar';2
2
const Containter = FlexColumn.extends({2
  fontSize: 17,2
  justifyContent: 'center',2
  marginLeft: 60,2
  marginRight: 60,2
  width: 'auto',2
  fontWeight: 300,2
  lineHeight: '140%',2
  maxWidth: 700,2
  minWidth: 450,2
});2
2
const TitleRow = FlexRow.extends({2
  alignItems: 'center',2
  marginBottom: 40,2
});2
2
const Icon = FlexBox.extends({2
  justifyContent: 'center',2
  alignItems: 'center',2
  backgroundColor: brandColors.Sonar,2
  width: 32,2
  height: 32,2
  flexShrink: 0,2
  borderRadius: 6,2
});2
2
const Title = Text.extends({2
  fontSize: 30,2
  fontWeight: 300,2
  paddingLeft: 10,2
});2
2
const Button = View.extends({2
  marginTop: 40,2
  marginBottom: 30,2
  borderRadius: 6,2
  color: colors.white,2
  border: 'none',2
  background: brandColors.Sonar,2
  padding: '10px 30px',2
  fontWeight: 500,2
  fontSize: '1em',2
  alignSelf: 'flex-start',2
});2
2
const Screenshot = styled.customHTMLTag('img', {2
  alignSelf: 'center',2
  boxShadow: '0 5px 35px rgba(0,0,0,0.3)',2
  borderRadius: 5,2
  border: `1px solid ${colors.macOSTitleBarBorder}`,2
  transform: 'translateX(5px)',2
  overflow: 'hidden',2
  maxHeight: '80%',2
  flexShrink: 0,2
});2
2
type Props = {2
  title: string,2
  icon?: string,2
  screenshot?: ?string,2
  children: React.Node,2
  onDismiss: () => void,2
};2
2
export default class Intro extends PureComponent<Props> {2
  render() {2
    const {icon, children, title, onDismiss, screenshot} = this.props;2
    return (2
      <FlexRow fill={true}>2
        <Containter>2
          <TitleRow>2
            {icon != null && (2
              <Icon>2
                <Glyph name={icon} size={24} color={colors.white} />2
              </Icon>2
            )}2
            <Title>{title}</Title>2
          </TitleRow>2
          {children}2
          <Button onClick={onDismiss}>Let's go</Button>2
        </Containter>2
        {screenshot != null && <Screenshot src={screenshot} />}2
      </FlexRow>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Filter} from 'sonar';2
import {PureComponent} from 'react';2
import Text from '../Text.js';2
import styled from '../../styled/index.js';2
import {findDOMNode} from 'react-dom';2
import {colors} from '../colors.js';2
import electron from 'electron';2
2
const Token = Text.extends(2
  {2
    display: 'inline-flex',2
    alignItems: 'center',2
    backgroundColor: props =>2
      props.focused2
        ? colors.macOSHighlightActive2
        : props.color || colors.macOSHighlight,2
    borderRadius: 4,2
    marginRight: 4,2
    padding: 4,2
    paddingLeft: 6,2
    height: 21,2
    color: props => (props.focused ? 'white' : 'inherit'),2
    '&:active': {2
      backgroundColor: colors.macOSHighlightActive,2
      color: colors.white,2
    },2
    '&:first-of-type': {2
      marginLeft: 3,2
    },2
  },2
  {2
    ignoreAttributes: ['focused', 'color'],2
  },2
);2
2
const Key = Text.extends(2
  {2
    position: 'relative',2
    fontWeight: 500,2
    paddingRight: 12,2
    textTransform: 'capitalize',2
    lineHeight: '21px',2
    '&:after': {2
      content: props => (props.type === 'exclude' ? '"≠"' : '"="'),2
      paddingLeft: 5,2
      position: 'absolute',2
      top: -1,2
      right: 0,2
      fontSize: 14,2
    },2
    '&:active:after': {2
      backgroundColor: colors.macOSHighlightActive,2
    },2
  },2
  {2
    ignoreAttributes: ['type', 'focused'],2
  },2
);2
2
const Value = Text.extends({2
  whiteSpace: 'nowrap',2
  maxWidth: 160,2
  overflow: 'hidden',2
  textOverflow: 'ellipsis',2
  lineHeight: '21px',2
  paddingLeft: 3,2
});2
2
const Chevron = styled.view(2
  {2
    border: 0,2
    paddingLeft: 3,2
    paddingRight: 1,2
    marginRight: 0,2
    fontSize: 16,2
    backgroundColor: 'transparent',2
    position: 'relative',2
    top: -2,2
    height: 'auto',2
    lineHeight: 'initial',2
    color: props => (props.focused ? colors.white : 'inherit'),2
    '&:hover, &:active, &:focus': {2
      color: 'inherit',2
      border: 0,2
      backgroundColor: 'transparent',2
    },2
  },2
  {2
    ignoreAttributes: ['focused'],2
  },2
);2
2
type Props = {|2
  filter: Filter,2
  focused: boolean,2
  index: number,2
  onFocus: (focusedToken: number) => void,2
  onBlur: () => void,2
  onDelete: (deletedToken: number) => void,2
  onReplace: (index: number, filter: Filter) => void,2
|};2
2
export default class FilterToken extends PureComponent<Props> {2
  _ref: ?Element;2
2
  onMouseDown = () => {2
    if (2
      this.props.filter.persistent == null ||2
      this.props.filter.persistent === false2
    ) {2
      this.props.onFocus(this.props.index);2
    }2
    this.showDetails();2
  };2
2
  showDetails = () => {2
    const menuTemplate = [];2
2
    if (this.props.filter.type === 'enum') {2
      menuTemplate.push(2
        ...this.props.filter.enum.map(({value, label}) => ({2
          label,2
          click: () => this.changeEnum(value),2
          type: 'checkbox',2
          checked: this.props.filter.value.indexOf(value) > -1,2
        })),2
      );2
    } else {2
      if (this.props.filter.value.length > 23) {2
        menuTemplate.push(2
          {2
            label: this.props.filter.value,2
            enabled: false,2
          },2
          {2
            type: 'separator',2
          },2
        );2
      }2
2
      menuTemplate.push(2
        {2
          label:2
            this.props.filter.type === 'include'2
              ? `Entries excluding "${this.props.filter.value}"`2
              : `Entries including "${this.props.filter.value}"`,2
          click: this.toggleFilter,2
        },2
        {2
          label: 'Remove this filter',2
          click: () => this.props.onDelete(this.props.index),2
        },2
      );2
    }2
    const menu = electron.remote.Menu.buildFromTemplate(menuTemplate);2
    const {bottom, left} = this._ref ? this._ref.getBoundingClientRect() : {};2
    menu.popup(electron.remote.getCurrentWindow(), {2
      async: true,2
      x: parseInt(left, 10),2
      y: parseInt(bottom, 10) + 8,2
    });2
  };2
2
  toggleFilter = () => {2
    const {filter, index} = this.props;2
    if (filter.type !== 'enum') {2
      const newFilter: Filter = {2
        ...filter,2
        type: filter.type === 'include' ? 'exclude' : 'include',2
      };2
      this.props.onReplace(index, newFilter);2
    }2
  };2
2
  changeEnum = (newValue: string) => {2
    const {filter, index} = this.props;2
    if (filter.type === 'enum') {2
      let {value} = filter;2
      if (value.indexOf(newValue) > -1) {2
        value = value.filter(v => v !== newValue);2
      } else {2
        value = value.concat([newValue]);2
      }2
      if (value.length === filter.enum.length) {2
        value = [];2
      }2
      const newFilter: Filter = {2
        type: 'enum',2
        ...filter,2
        value,2
      };2
      this.props.onReplace(index, newFilter);2
    }2
  };2
2
  setRef = (ref: React.ElementRef<*>) => {2
    const element = findDOMNode(ref);2
    if (element instanceof HTMLElement) {2
      this._ref = element;2
    }2
  };2
2
  render() {2
    const {filter} = this.props;2
    let color;2
    let value = '';2
2
    if (filter.type === 'enum') {2
      const getEnum = value => filter.enum.find(e => e.value === value);2
      const firstValue = getEnum(filter.value[0]);2
      const secondValue = getEnum(filter.value[1]);2
      if (filter.value.length === 0) {2
        value = 'All';2
      } else if (filter.value.length === 2 && firstValue && secondValue) {2
        value = `${firstValue.label} or ${secondValue.label}`;2
      } else if (filter.value.length === 1 && firstValue) {2
        value = firstValue.label;2
        color = firstValue.color;2
      } else if (firstValue) {2
        value = `${firstValue.label} or ${filter.value.length - 1} others`;2
      }2
    } else {2
      value = filter.value;2
    }2
2
    return (2
      <Token2
        key={`${filter.key}:${value}=${filter.type}`}2
        tabIndex={-1}2
        onMouseDown={this.onMouseDown}2
        focused={this.props.focused}2
        color={color}2
        innerRef={this.setRef}>2
        <Key type={this.props.filter.type} focused={this.props.focused}>2
          {filter.key}2
        </Key>2
        <Value>{value}</Value>2
        <Chevron tabIndex={-1} focused={this.props.focused}>2
          &#8964;2
        </Chevron>2
      </Token>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Filter} from 'sonar';2
import {PureComponent} from 'react';2
import Toolbar from '../Toolbar.js';2
import FlexRow from '../FlexRow.js';2
import Input from '../Input.js';2
import {colors} from '../colors.js';2
import Text from '../Text.js';2
import FlexBox from '../FlexBox.js';2
import Glyph from '../Glyph.js';2
import FilterToken from './FilterToken.js';2
import PropTypes from 'prop-types';2
2
const SEARCHABLE_STORAGE_KEY = (key: string) => `SEARCHABLE_STORAGE_KEY_${key}`;2
2
const SearchBar = Toolbar.extends({2
  height: 42,2
  padding: 6,2
});2
2
export const SearchBox = FlexBox.extends({2
  backgroundColor: colors.white,2
  borderRadius: '999em',2
  border: `1px solid ${colors.light15}`,2
  height: '100%',2
  width: '100%',2
  alignItems: 'center',2
  paddingLeft: 4,2
});2
2
export const SearchInput = Input.extends({2
  border: props => (props.focus ? '1px solid black' : 0),2
  padding: 0,2
  fontSize: '1em',2
  flexGrow: 1,2
  height: 'auto',2
  lineHeight: '100%',2
  marginLeft: 2,2
  width: '100%',2
  '&::-webkit-input-placeholder': {2
    color: colors.placeholder,2
    fontWeight: 300,2
  },2
});2
2
const Clear = Text.extends({2
  position: 'absolute',2
  right: 6,2
  top: '50%',2
  marginTop: -9,2
  fontSize: 16,2
  width: 17,2
  height: 17,2
  borderRadius: 999,2
  lineHeight: '15.5px',2
  textAlign: 'center',2
  backgroundColor: 'rgba(0,0,0,0.1)',2
  color: colors.white,2
  display: 'block',2
  '&:hover': {2
    backgroundColor: 'rgba(0,0,0,0.15)',2
  },2
});2
2
export const SearchIcon = Glyph.extends({2
  marginRight: 3,2
  marginLeft: 3,2
  marginTop: -1,2
  minWidth: 16,2
});2
2
const Actions = FlexRow.extends({2
  marginLeft: 8,2
  flexShrink: 0,2
});2
2
export type SearchableProps = {|2
  addFilter: (filter: Filter) => void,2
  searchTerm: string,2
  filters: Array<Filter>,2
|};2
2
type Props = {|2
  placeholder?: string,2
  actions: React.Node,2
  tableKey: string,2
  onFilterChange: (filters: Array<Filter>) => void,2
  defaultFilters: Array<Filter>,2
|};2
2
type State = {2
  filters: Array<Filter>,2
  focusedToken: number,2
  searchTerm: string,2
  hasFocus: boolean,2
};2
2
const Searchable = (2
  Component: React.ComponentType<any>,2
): React.ComponentType<any> =>2
  class extends PureComponent<Props, State> {2
    static defaultProps = {2
      placeholder: 'Search...',2
    };2
2
    static contextTypes = {2
      plugin: PropTypes.string,2
    };2
2
    state = {2
      filters: [],2
      focusedToken: -1,2
      searchTerm: '',2
      hasFocus: false,2
    };2
2
    _inputRef: ?HTMLInputElement;2
2
    componentDidMount() {2
      window.document.addEventListener('keydown', this.onKeyDown);2
      const {defaultFilters} = this.props;2
      let savedState;2
      let key = this.context.plugin + this.props.tableKey;2
      try {2
        savedState = JSON.parse(2
          window.localStorage.getItem(SEARCHABLE_STORAGE_KEY(key)) || 'null',2
        );2
      } catch (e) {2
        window.localStorage.removeItem(SEARCHABLE_STORAGE_KEY(key));2
      }2
      if (savedState) {2
        if (this.props.onFilterChange != null) {2
          this.props.onFilterChange(savedState.filters);2
        }2
        if (defaultFilters != null) {2
          const savedStateFilters = savedState.filters;2
          defaultFilters.forEach(defaultFilter => {2
            const filterIndex = savedStateFilters.findIndex(2
              f => f.key === defaultFilter.key,2
            );2
            if (filterIndex > -1) {2
              const defaultFilter: Filter = defaultFilters[filterIndex];2
              if (defaultFilter.type === 'enum') {2
                savedStateFilters[filterIndex].enum = defaultFilter.enum;2
              }2
              const filters = new Set(2
                savedStateFilters[filterIndex].enum.map(filter => filter.value),2
              );2
              savedStateFilters[filterIndex].value = savedStateFilters[2
                filterIndex2
              ].value.filter(value => filters.has(value));2
            }2
          });2
        }2
        this.setState({2
          searchTerm: savedState.searchTerm || '',2
          filters: savedState.filters || [],2
        });2
      }2
    }2
2
    componentDidUpdate(prevProps: Props, prevState: State) {2
      if (2
        this.context.plugin &&2
        (prevState.searchTerm !== this.state.searchTerm ||2
          prevState.filters !== this.state.filters)2
      ) {2
        let key = this.context.plugin + this.props.tableKey;2
        window.localStorage.setItem(2
          SEARCHABLE_STORAGE_KEY(key),2
          JSON.stringify({2
            searchTerm: this.state.searchTerm,2
            filters: this.state.filters,2
          }),2
        );2
        if (this.props.onFilterChange != null) {2
          this.props.onFilterChange(this.state.filters);2
        }2
      }2
    }2
2
    componentWillUnmount() {2
      window.document.removeEventListener('keydown', this.onKeyDown);2
    }2
2
    onKeyDown = (e: SyntheticKeyboardEvent<>) => {2
      const ctrlOrCmd = e =>2
        (e.metaKey && process.platform === 'darwin') ||2
        (e.ctrlKey && process.platform !== 'darwin');2
2
      if (e.key === 'f' && ctrlOrCmd(e) && this._inputRef) {2
        e.preventDefault();2
        if (this._inputRef) {2
          this._inputRef.focus();2
        }2
      } else if (e.key === 'Escape' && this._inputRef) {2
        this._inputRef.blur();2
        this.setState({searchTerm: ''});2
      } else if (e.key === 'Backspace' && this.hasFocus()) {2
        if (2
          this.state.focusedToken === -1 &&2
          this.state.searchTerm === '' &&2
          this._inputRef &&2
          !this.state.filters[this.state.filters.length - 1].persistent2
        ) {2
          this._inputRef.blur();2
          this.setState({focusedToken: this.state.filters.length - 1});2
        } else {2
          this.removeFilter(this.state.focusedToken);2
        }2
      } else if (2
        e.key === 'Delete' &&2
        this.hasFocus() &&2
        this.state.focusedToken > -12
      ) {2
        this.removeFilter(this.state.focusedToken);2
      } else if (e.key === 'Enter' && this.hasFocus() && this._inputRef) {2
        this.matchTags(this._inputRef.value, true);2
      }2
    };2
2
    onChangeSearchTerm = (e: SyntheticInputEvent<HTMLInputElement>) =>2
      this.matchTags(e.target.value, false);2
2
    matchTags = (searchTerm: string, matchEnd: boolean) => {2
      const filterPattern = matchEnd2
        ? /([a-z][a-z0-9]*[!]?[:=][^\s]+)($|\s)/gi2
        : /([a-z][a-z0-9]*[!]?[:=][^\s]+)\s/gi;2
      const match = searchTerm.match(filterPattern);2
      if (match && match.length > 0) {2
        match.forEach((filter: string) => {2
          const separator =2
            filter.indexOf(':') > filter.indexOf('=') ? ':' : '=';2
          let [key, ...value] = filter.split(separator);2
          value = value.join(separator).trim();2
          let type = 'include';2
          // if value starts with !, it's an exclude filter2
          if (value.indexOf('!') === 0) {2
            type = 'exclude';2
            value = value.substring(1);2
          }2
          // if key ends with !, it's an exclude filter2
          if (key.indexOf('!') === key.length - 1) {2
            type = 'exclude';2
            key = key.slice(0, -1);2
          }2
          this.addFilter({2
            type,2
            key,2
            value,2
          });2
        });2
2
        searchTerm = searchTerm.replace(filterPattern, '');2
      }2
      this.setState({searchTerm});2
    };2
2
    setInputRef = (ref: ?HTMLInputElement) => {2
      this._inputRef = ref;2
    };2
2
    addFilter = (filter: Filter) => {2
      const filterIndex = this.state.filters.findIndex(2
        f => f.key === filter.key,2
      );2
      if (filterIndex > -1) {2
        const filters = [...this.state.filters];2
        const defaultFilter: Filter = this.props.defaultFilters[filterIndex];2
        if (2
          defaultFilter != null &&2
          defaultFilter.type === 'enum' &&2
          filters[filterIndex].type === 'enum'2
        ) {2
          filters[filterIndex].enum = defaultFilter.enum;2
        }2
        this.setState({filters});2
        // filter for this key already exists2
        return;2
      }2
      // persistent filters are always at the front2
      const filters =2
        filter.persistent === true2
          ? [filter, ...this.state.filters]2
          : this.state.filters.concat(filter);2
      this.setState({2
        filters,2
        focusedToken: -1,2
      });2
    };2
2
    removeFilter = (index: number) => {2
      const filters = this.state.filters.filter((_, i) => i !== index);2
      const focusedToken = -1;2
      this.setState({filters, focusedToken}, () => {2
        if (this._inputRef) {2
          this._inputRef.focus();2
        }2
      });2
    };2
2
    replaceFilter = (index: number, filter: Filter) => {2
      const filters = [...this.state.filters];2
      filters.splice(index, 1, filter);2
      this.setState({filters});2
    };2
2
    onInputFocus = () =>2
      this.setState({2
        focusedToken: -1,2
        hasFocus: true,2
      });2
2
    onInputBlur = () =>2
      setTimeout(2
        () =>2
          this.setState({2
            hasFocus: false,2
          }),2
        100,2
      );2
2
    onTokenFocus = (focusedToken: number) => this.setState({focusedToken});2
2
    onTokenBlur = () => this.setState({focusedToken: -1});2
2
    hasFocus = (): boolean => {2
      return this.state.focusedToken !== -1 || this.state.hasFocus;2
    };2
2
    clear = () =>2
      this.setState({2
        filters: this.state.filters.filter(2
          f => f.persistent != null && f.persistent === true,2
        ),2
        searchTerm: '',2
      });2
2
    render(): React.Node {2
      const {placeholder, actions, ...props} = this.props;2
      return [2
        <SearchBar position="top" key="searchbar">2
          <SearchBox tabIndex={-1}>2
            <SearchIcon2
              name="magnifying-glass"2
              color={colors.macOSTitleBarIcon}2
              size={16}2
            />2
            {this.state.filters.map((filter, i) => (2
              <FilterToken2
                key={`${filter.key}:${filter.type}`}2
                index={i}2
                filter={filter}2
                focused={i === this.state.focusedToken}2
                onFocus={this.onTokenFocus}2
                onDelete={this.removeFilter}2
                onReplace={this.replaceFilter}2
                onBlur={this.onTokenBlur}2
              />2
            ))}2
            <SearchInput2
              placeholder={placeholder}2
              onChange={this.onChangeSearchTerm}2
              value={this.state.searchTerm}2
              innerRef={this.setInputRef}2
              onFocus={this.onInputFocus}2
              onBlur={this.onInputBlur}2
            />2
            {(this.state.searchTerm || this.state.filters.length > 0) && (2
              <Clear onClick={this.clear}>&times;</Clear>2
            )}2
          </SearchBox>2
          {actions != null && <Actions>{actions}</Actions>}2
        </SearchBar>,2
        <Component2
          {...props}2
          key="table"2
          addFilter={this.addFilter}2
          searchTerm={this.state.searchTerm}2
          filters={this.state.filters}2
        />,2
      ];2
    }2
  };2
2
export default Searchable;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {ManagedTableProps, TableBodyRow, Filter} from 'sonar';2
import type {SearchableProps} from './Searchable.js';2
import {PureComponent} from 'react';2
import ManagedTable from '../table/ManagedTable.js';2
2
import textContent from '../../../utils/textContent.js';2
import Searchable from './Searchable.js';2
import deepEqual from 'deep-equal';2
2
type Props = {|2
  ...ManagedTableProps,2
  ...SearchableProps,2
  innerRef?: (ref: React.ElementRef<*>) => void,2
  defaultFilters: Array<Filter>,2
  filter: empty,2
  filterValue: empty,2
|};2
2
type State = {2
  filterRows: (row: TableBodyRow) => boolean,2
};2
2
const filterRowsFactory = (filters: Array<Filter>, searchTerm: string) => (2
  row: TableBodyRow,2
): boolean =>2
  filters2
    .map((filter: Filter) => {2
      if (filter.type === 'enum' && row.type != null) {2
        return filter.value.length === 0 || filter.value.indexOf(row.type) > -1;2
      } else if (filter.type === 'include') {2
        return (2
          textContent(row.columns[filter.key].value).toLowerCase() ===2
          filter.value.toLowerCase()2
        );2
      } else if (filter.type === 'exclude') {2
        return (2
          textContent(row.columns[filter.key].value).toLowerCase() !==2
          filter.value.toLowerCase()2
        );2
      } else {2
        return true;2
      }2
    })2
    .reduce((acc, cv) => acc && cv, true) &&2
  (searchTerm != null && searchTerm.length > 02
    ? Object.keys(row.columns)2
        .map(key => textContent(row.columns[key].value))2
        .join('~~') // prevent from matching text spanning multiple columns2
        .toLowerCase()2
        .includes(searchTerm.toLowerCase())2
    : true);2
2
class SearchableManagedTable extends PureComponent<Props, State> {2
  static defaultProps = {2
    defaultFilters: [],2
  };2
2
  state = {2
    filterRows: filterRowsFactory(this.props.filters, this.props.searchTerm),2
  };2
2
  componentDidMount() {2
    this.props.defaultFilters.map(this.props.addFilter);2
  }2
2
  componentWillReceiveProps(nextProps: Props) {2
    // ManagedTable is a PureComponent and does not update when this.filterRows2
    // would return a different value. This is why we update the funtion reference2
    // once the results of the function changed.2
    if (2
      nextProps.searchTerm !== this.props.searchTerm ||2
      !deepEqual(this.props.filters, nextProps.filters)2
    ) {2
      this.setState({2
        filterRows: filterRowsFactory(nextProps.filters, nextProps.searchTerm),2
      });2
    }2
  }2
2
  render() {2
    const {2
      addFilter,2
      searchTerm: _searchTerm,2
      filters: _filters,2
      innerRef,2
      ...props2
    } = this.props;2
    return (2
      // $FlowFixMe2
      <ManagedTable2
        {...props}2
        filter={this.state.filterRows}2
        onAddFilter={addFilter}2
        ref={innerRef}2
      />2
    );2
  }2
}2
2
export default Searchable(SearchableManagedTable);2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableColumnRawOrder,2
  TableColumnOrder,2
  TableColumnSizes,2
  TableColumns,2
  TableHighlightedRows,2
  TableRowSortOrder,2
  TableRows,2
  TableBodyRow,2
  TableOnAddFilter,2
} from './types.js';2
import styled from '../../styled/index.js';2
import Table from './Table.js';2
2
export type ManagedTableProps = {|2
  /**2
   * Column definitions.2
   */2
  columns: TableColumns,2
  /**2
   * Row definitions.2
   */2
  rows: TableRows,2
  /**2
   * Whether to use a virtual list. Items visible in the viewport are the only2
   * included in the DOM. This can have a noticable performance improvement.2
   */2
  virtual?: boolean,2
  /**2
   * Whether the table has a border.2
   */2
  floating?: boolean,2
  /**2
   * Whether a row can span over multiple lines. Otherwise lines cannot wrap and2
   * are truncated.2
   */2
  multiline?: boolean,2
  /**2
   * Whether the body is scrollable. When this is set to `true` then the table2
   * is not scrollable.2
   */2
  autoHeight?: boolean,2
  /**2
   * Order of columns.2
   */2
  columnOrder?: ?TableColumnRawOrder,2
  /**2
   * Size of the columns.2
   */2
  columnSizes?: TableColumnSizes,2
  /**2
   * Value to filter rows on. Alternative to the `filter` prop.2
   */2
  filterValue?: string,2
  /**2
   * Callback to filter rows.2
   */2
  filter?: (row: TableBodyRow) => boolean,2
  /**2
   * Callback when the highlighted rows change.2
   */2
  onRowHighlighted?: (keys: TableHighlightedRows) => void,2
  /**2
   * Whether rows can be highlighted or not.2
   */2
  highlightableRows?: boolean,2
  /**2
   * Whether multiple rows can be highlighted or not.2
   */2
  multiHighlight?: boolean,2
  /**2
   * Height of each row.2
   */2
  rowLineHeight?: number,2
  /**2
   * This makes it so the scroll position sticks to the bottom of the window.2
   * Useful for streaming data like requests, logs etc.2
   */2
  stickyBottom?: boolean,2
  /**2
   * Used by SearchableTable to add filters for rows2
   */2
  onAddFilter?: TableOnAddFilter,2
  /**2
   * Enable or disable zebra striping2
   */2
  zebra?: boolean,2
  /**2
   * Whether to hide the column names at the top of the table.2
   */2
  hideHeader?: boolean,2
|};2
2
type ManagedTableState = {|2
  highlightedRows: TableHighlightedRows,2
  sortOrder: ?TableRowSortOrder,2
  columnOrder: ?TableColumnRawOrder,2
  columnSizes: ?TableColumnSizes,2
|};2
2
/**2
 * Wrapper around `Table` that handles row state.2
 *2
 * If you require lower level access to the state then use [`<Table>`]()2
 * directly.2
 */2
export default class ManagedTable extends styled.StylablePureComponent<2
  ManagedTableProps,2
  ManagedTableState,2
> {2
  getTableKey = (): string => {2
    return (2
      'TABLE_COLUMNS_' +2
      Object.keys(this.props.columns)2
        .join('_')2
        .toUpperCase()2
    );2
  };2
2
  state = {2
    columnOrder:2
      JSON.parse(window.localStorage.getItem(this.getTableKey()) || 'null') ||2
      this.props.columnOrder,2
    columnSizes: this.props.columnSizes,2
    highlightedRows: [],2
    sortOrder: null,2
  };2
2
  tableRef: ?Table;2
2
  componentWillReceiveProps(nextProps: ManagedTableProps) {2
    // if columnSizes has changed2
    if (nextProps.columnSizes !== this.props.columnSizes) {2
      this.setState({2
        columnSizes: {2
          ...(this.state.columnSizes || {}),2
          ...nextProps.columnSizes,2
        },2
      });2
    }2
2
    // if columnOrder has changed2
    if (nextProps.columnOrder !== this.props.columnOrder) {2
      this.setState({2
        columnOrder: nextProps.columnOrder,2
      });2
    }2
  }2
2
  onHighlight = (highlightedRows: TableHighlightedRows) => {2
    if (this.props.highlightableRows === false) {2
      return;2
    }2
    if (this.props.multiHighlight !== true) {2
      highlightedRows = highlightedRows.slice(0, 1);2
    }2
2
    this.setState({highlightedRows});2
2
    if (this.props.onRowHighlighted) {2
      this.props.onRowHighlighted(highlightedRows);2
    }2
  };2
2
  onSort = (sortOrder: TableRowSortOrder) => {2
    this.setState({sortOrder});2
  };2
2
  onColumnOrder = (columnOrder: TableColumnOrder) => {2
    // $FlowFixMe2
    this.setState({columnOrder});2
    // persist column order2
    window.localStorage.setItem(2
      this.getTableKey(),2
      JSON.stringify(columnOrder),2
    );2
  };2
2
  onColumnResize = (columnSizes: TableColumnSizes) => {2
    this.setState({columnSizes});2
  };2
2
  setRef = (table: ?Table) => {2
    this.tableRef = table;2
  };2
2
  scrollToBottom() {2
    const {tableRef} = this;2
    if (tableRef) {2
      tableRef.scrollToBottom();2
    }2
  }2
2
  render() {2
    const {props, state} = this;2
2
    return (2
      <Table2
        ref={this.setRef}2
        virtual={props.virtual}2
        floating={props.floating}2
        multiline={props.multiline}2
        columns={props.columns}2
        rows={props.rows}2
        rowLineHeight={props.rowLineHeight}2
        autoHeight={props.autoHeight}2
        filter={props.filter}2
        filterValue={props.filterValue}2
        highlightedRows={state.highlightedRows}2
        onHighlight={this.onHighlight}2
        sortOrder={state.sortOrder}2
        onSort={this.onSort}2
        columnOrder={state.columnOrder}2
        onColumnOrder={this.onColumnOrder}2
        columnSizes={state.columnSizes}2
        onColumnResize={this.onColumnResize}2
        stickyBottom={props.stickyBottom}2
        onAddFilter={props.onAddFilter}2
        zebra={props.zebra}2
        hideHeader={props.hideHeader}2
      />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableColumnRawOrder,2
  TableColumnKeys,2
  TableColumnOrder,2
  TableColumnSizes,2
  TableColumns,2
  TableHighlightedRows,2
  TableOnColumnOrder,2
  TableOnColumnResize,2
  TableOnHighlight,2
  TableOnSort,2
  TableRowSortOrder,2
  TableBodyRow,2
  TableRows,2
  TableOnAddFilter,2
} from './types.js';2
import {PureComponent} from 'react';2
import FlexColumn from '../FlexColumn.js';2
import TableHead from './TableHead.js';2
import TableBody from './TableBody.js';2
import FlexBox from '../FlexBox.js';2
import createPaste from '../../../utils/createPaste.js';2
import textContent from '../../../utils/textContent.js';2
import {clipboard} from 'electron';2
2
const TableInner = FlexColumn.extends(2
  {2
    minWidth: props => props.minWidth || '0',2
    position: 'relative',2
    width: '100%',2
  },2
  {2
    ignoreAttributes: ['minWidth'],2
  },2
);2
2
const TableOuter = FlexBox.extends(2
  {2
    width: '100%',2
    backgroundColor: '#fff',2
    border: props => (props.floating ? '1px solid #c9ced4' : 'none'),2
    borderRadius: props => (props.floating ? 2 : 'none'),2
    height: props => (props.autoHeight ? 'auto' : '100%'),2
    overflow: props => (props.autoHeight ? 'visible' : 'auto'),2
  },2
  {2
    ignoreAttributes: ['floating', 'autoHeight'],2
  },2
);2
2
function getColumnOrder(2
  colOrder: ?TableColumnRawOrder,2
  cols: TableColumns,2
): TableColumnOrder {2
  // we have a specific column order, let's validate it2
  if (colOrder) {2
    const computedOrder = [];2
    for (const obj of colOrder) {2
      if (typeof obj === 'string') {2
        computedOrder.push({key: obj, visible: true});2
      } else {2
        computedOrder.push(obj);2
      }2
    }2
    return computedOrder;2
  }2
2
  // produce a column order2
  const keys = Object.keys(cols);2
  const computedOrder = [];2
  for (const key of keys) {2
    computedOrder.push({key, visible: true});2
  }2
  return computedOrder;2
}2
2
const sortedBodyCache: WeakMap<2
  TableRows,2
  {2
    sortOrder: TableRowSortOrder,2
    rows: TableRows,2
  },2
> = new WeakMap();2
function getSortedRows(2
  maybeSortOrder: ?TableRowSortOrder,2
  rows: TableRows,2
): TableRows {2
  if (!maybeSortOrder) {2
    return rows;2
  }2
2
  const sortOrder: TableRowSortOrder = maybeSortOrder;2
2
  const cached = sortedBodyCache.get(rows);2
  if (cached && cached.sortOrder === sortOrder) {2
    return cached.rows;2
  }2
2
  let sortedRows = rows.sort((a, b) => {2
    const aVal = a.columns[sortOrder.key].sortValue;2
    const bVal = b.columns[sortOrder.key].sortValue;2
2
    if (typeof aVal === 'string' && typeof bVal === 'string') {2
      return aVal.localeCompare(bVal);2
    } else if (typeof aVal === 'number' && typeof bVal === 'number') {2
      return aVal - bVal;2
    } else {2
      throw new Error('Unsure how to sort this');2
    }2
  });2
2
  if (sortOrder.direction === 'up') {2
    sortedRows = sortedRows.reverse();2
  }2
2
  sortedBodyCache.set(rows, {2
    rows: sortedRows,2
    sortOrder,2
  });2
2
  return sortedRows;2
}2
2
const getRowsInRange = (2
  from: string,2
  to: string,2
  rows: TableRows,2
): TableHighlightedRows => {2
  let fromFound = false;2
  let toFound = false;2
  const range = [];2
  if (from === to) {2
    return [from];2
  }2
  for (const {key} of rows) {2
    if (key === from) {2
      fromFound = true;2
    } else if (key === to) {2
      toFound = true;2
    }2
2
    if (fromFound && !toFound) {2
      // range going downwards2
      range.push(key);2
    } else if (toFound && !fromFound) {2
      // range going upwards2
      range.unshift(key);2
    } else if (fromFound && toFound) {2
      // add last item2
      if (key === from) {2
        range.unshift(key);2
      } else {2
        range.push(key);2
      }2
      // we're done2
      break;2
    }2
  }2
  return range;2
};2
2
const filterRows = (2
  rows: TableRows,2
  filterValue: ?string,2
  filter: ?(row: TableBodyRow) => boolean,2
): TableRows => {2
  // check that we don't have a filter2
  const hasFilterValue = filterValue !== '' && filterValue != null;2
  const hasFilter = hasFilterValue || typeof filter === 'function';2
  if (!hasFilter) {2
    return rows;2
  }2
2
  let filteredRows = [];2
2
  if (hasFilter) {2
    for (const row of rows) {2
      let keep = false;2
2
      // check if this row's filterValue contains the current filter2
      if (filterValue != null && row.filterValue != null) {2
        keep = row.filterValue.includes(filterValue);2
      }2
2
      // call filter() prop2
      if (keep === false && typeof filter === 'function') {2
        keep = filter(row);2
      }2
2
      if (keep) {2
        filteredRows.push(row);2
      }2
    }2
  } else {2
    filteredRows = rows;2
  }2
2
  return filteredRows;2
};2
2
type TableProps = {|2
  /**2
   * Column definitions.2
   */2
  columns: TableColumns,2
  /**2
   * Row definitions.2
   */2
  rows: TableRows,2
2
  /**2
   * Minimum width of the table. If the table is sized smaller than this then2
   * it's scrollable.2
   */2
  minWidth?: number,2
2
  /**2
   * Whether to use a virtual list. Items visible in the viewport are the only2
   * included in the DOM. This can have a noticable performance improvement.2
   */2
  virtual?: boolean,2
  /**2
   * Whether the table has a border.2
   */2
  floating?: boolean,2
  /**2
   * Whether a row can span over multiple lines. Otherwise lines cannot wrap and2
   * are truncated.2
   */2
  multiline?: boolean,2
  /**2
   * Height of each row.2
   */2
  rowLineHeight?: number,2
  /**2
   * Whether the body is scrollable. When this is set to `true` then the table2
   * is not scrollable.2
   */2
  autoHeight?: boolean,2
  /**2
   * Highlighted rows.2
   */2
  highlightedRows?: ?TableHighlightedRows,2
  /**2
   * Callback when the highlighted rows change.2
   */2
  onHighlight?: ?TableOnHighlight,2
  /**2
   * Enable or disable zebra striping2
   */2
  zebra?: boolean,2
  /**2
   * Value to filter rows on. Alternative to the `filter` prop.2
   */2
  filterValue?: string,2
  /**2
   * Callback to filter rows.2
   */2
  filter?: (row: TableBodyRow) => boolean,2
2
  /**2
   * Sort order.2
   */2
  sortOrder?: ?TableRowSortOrder,2
  /**2
   * Callback when the sort order changes.2
   */2
  onSort?: ?TableOnSort,2
2
  /**2
   * Order of columns.2
   */2
  columnOrder?: ?TableColumnRawOrder,2
  /**2
   * Callback when a column is reordered or visibility changed.2
   */2
  onColumnOrder?: ?TableOnColumnOrder,2
2
  /**2
   * Size of the columns.2
   */2
  columnSizes?: ?TableColumnSizes,2
  /**2
   * Callback for when a column size changes.2
   */2
  onColumnResize?: ?TableOnColumnResize,2
  /**2
   * This makes it so the scroll position sticks to the bottom of the window.2
   * Useful for streaming data like requests, logs etc.2
   */2
  stickyBottom?: ?boolean,2
  /**2
   * Used by SearchableTable to add filters for rows.2
   */2
  onAddFilter?: TableOnAddFilter,2
  /**2
   * Whether to hide the column names at the top of the table.2
   */2
  hideHeader?: boolean,2
|};2
2
type TableState = {2
  columnOrder: TableColumnOrder,2
  columnSizes: TableColumnSizes,2
  columnKeys: TableColumnKeys,2
  sortedRows: TableRows,2
  dragStartingKey?: ?string,2
};2
2
const NO_COLUMN_SIZE: TableColumnSizes = {};2
2
/**2
 * A table component with all the native features you would expect.2
 *2
 *  - Row sorting2
 *  - Row filtering2
 *  - Row highlight2
 *  - Row keyboard navigation2
 *  - Column reordering2
 *  - Column visibility2
 *2
 * This component is fairly low level. It's likely you're looking for2
 * [`<ManagedTable>`]().2
 */2
export default class Table extends PureComponent<TableProps, TableState> {2
  constructor(props: TableProps, context: Object) {2
    super(props, context);2
    this.state = this.deriveState(props);2
  }2
2
  static defaultProps = {2
    floating: true,2
    virtual: true,2
  };2
2
  componentDidMount() {2
    // listning to mouseUp event on document to catch events even when2
    // the cursor moved outside the table while dragging2
    document.addEventListener('mouseup', this.onMouseUp);2
  }2
2
  componentWillUnmount() {2
    document.removeEventListener('mouseup', this.onMouseUp);2
  }2
2
  deriveState(props: TableProps): TableState {2
    const columnSizes: TableColumnSizes = props.columnSizes || NO_COLUMN_SIZE;2
    const columnOrder: TableColumnOrder = getColumnOrder(2
      props.columnOrder,2
      props.columns,2
    );2
2
    let columnKeys;2
    if (this.state && this.state.columnOrder === columnOrder) {2
      columnKeys = this.state.columnKeys;2
    } else {2
      columnKeys = [];2
      for (const {key, visible} of columnOrder) {2
        if (visible) {2
          columnKeys.push(key);2
        }2
      }2
    }2
2
    let sortedRows = [];2
    if (2
      !this.state ||2
      this.props.filter !== props.filter ||2
      this.props.filterValue !== props.filterValue ||2
      this.props.sortOrder !== props.sortOrder ||2
      this.props.rows !== props.rows2
    ) {2
      // need to reorder or refilter the rows2
      sortedRows = getSortedRows(2
        props.sortOrder,2
        filterRows(props.rows, props.filterValue, props.filter),2
      );2
    } else {2
      sortedRows = this.state.sortedRows;2
    }2
2
    return {2
      columnKeys,2
      columnOrder,2
      columnSizes,2
      sortedRows,2
    };2
  }2
2
  componentWillReceiveProps(nextProps: TableProps) {2
    this.setState(this.deriveState(nextProps));2
  }2
2
  onMouseUp = () => this.setState({dragStartingKey: null});2
2
  onKeyDown = (e: SyntheticKeyboardEvent<HTMLElement>) => {2
    const {onHighlight, highlightedRows} = this.props;2
    const {sortedRows} = this.state;2
    const currentlyHighlightedRows = highlightedRows || [];2
    let selectedRow: ?string;2
2
    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {2
      e.preventDefault();2
      if (currentlyHighlightedRows.length === 0) {2
        // no selection yet2
        const index = e.key === 'ArrowUp' ? sortedRows.length - 1 : 0;2
        selectedRow = sortedRows[index].key;2
      } else {2
        // determine sibling row to select2
        const prevRowFinder = (row, index) =>2
          index < sortedRows.length - 12
            ? sortedRows[index + 1].key ===2
              currentlyHighlightedRows[currentlyHighlightedRows.length - 1]2
            : false;2
2
        const nextRowFinder = (row, index) =>2
          index > 02
            ? sortedRows[index - 1].key ===2
              currentlyHighlightedRows[currentlyHighlightedRows.length - 1]2
            : false;2
2
        const siblingRow = sortedRows.find(2
          e.key === 'ArrowUp' ? prevRowFinder : nextRowFinder,2
        );2
        if (siblingRow) {2
          selectedRow = siblingRow.key;2
        }2
      }2
2
      if (onHighlight && selectedRow != null) {2
        // scroll into view2
        const index = sortedRows.findIndex(row => row.key === selectedRow);2
        if (this.tableBodyRef && index) {2
          this.tableBodyRef.scrollRowIntoView(index);2
        }2
2
        if (e.shiftKey) {2
          onHighlight(2
            currentlyHighlightedRows2
              .filter(row => selectedRow !== row)2
              .concat([selectedRow]),2
            e,2
          );2
        } else {2
          onHighlight([selectedRow], e);2
        }2
      }2
    } else if (2
      highlightedRows &&2
      e.key === 'c' &&2
      ((e.metaKey && process.platform === 'darwin') ||2
        (e.ctrlKey && process.platform !== 'darwin'))2
    ) {2
      e.preventDefault();2
      this.onCopyRows();2
    }2
  };2
2
  getRowText = (): string => {2
    const {highlightedRows} = this.props;2
    const {sortedRows} = this.state;2
    const visibleColums = this.state.columnOrder2
      .filter(({visible}) => visible)2
      .map(({key}) => key);2
2
    const rows =2
      !highlightedRows || highlightedRows.length === 02
        ? sortedRows2
        : sortedRows.filter(row => highlightedRows.indexOf(row.key) > -1);2
2
    return rows2
      .map(2
        row =>2
          row.copyText != null2
            ? row.copyText2
            : visibleColums2
                .map(col => textContent(row.columns[col].value))2
                .filter(Boolean)2
                .join('\t'),2
      )2
      .join('\n');2
  };2
2
  onCopyRows = () => {2
    clipboard.writeText(this.getRowText());2
  };2
2
  onCreatePaste = () => {2
    createPaste(this.getRowText());2
  };2
2
  onHighlight = (2
    newHighlightedRows: TableHighlightedRows,2
    e: SyntheticKeyboardEvent<*>,2
  ) => {2
    const {onHighlight, highlightedRows} = this.props;2
    if (!onHighlight) {2
      return;2
    }2
    if (e.shiftKey === true && highlightedRows && highlightedRows.length > 0) {2
      const from = highlightedRows[highlightedRows.length - 1];2
      const to = newHighlightedRows[0];2
      const range = getRowsInRange(from, to, this.state.sortedRows);2
      newHighlightedRows = highlightedRows2
        .filter(key => range.indexOf(key) === -1)2
        .concat(range);2
    } else {2
      this.setState({dragStartingKey: newHighlightedRows[0]});2
    }2
2
    onHighlight(newHighlightedRows, e);2
  };2
2
  onDragSelect = (e: SyntheticMouseEvent<>, key: string, index: number) => {2
    const {dragStartingKey, sortedRows} = this.state;2
    const {onHighlight} = this.props;2
    if (dragStartingKey != null && onHighlight != null) {2
      const range = getRowsInRange(dragStartingKey, key, this.state.sortedRows);2
      if (this.tableBodyRef) {2
        const startIndex = sortedRows.findIndex(2
          row => row.key === dragStartingKey,2
        );2
        const nextIndex = startIndex < index ? index + 1 : index - 1;2
        // only scroll one row every 100ms to not scroll to the end of the table immediatelly2
        setTimeout(2
          () =>2
            this.tableBodyRef && this.tableBodyRef.scrollRowIntoView(nextIndex),2
          100,2
        );2
      }2
      onHighlight(range, e);2
    }2
  };2
2
  scrollToBottom() {2
    const {tableBodyRef} = this;2
    if (tableBodyRef) {2
      tableBodyRef.scrollToBottom();2
    }2
  }2
2
  tableBodyRef: ?TableBody;2
2
  setTableBodyRef = (ref: ?TableBody) => {2
    this.tableBodyRef = ref;2
  };2
2
  render() {2
    const {props, state} = this;2
2
    const tableHead =2
      props.hideHeader === true ? null : (2
        <TableHead2
          columnOrder={state.columnOrder}2
          onColumnOrder={props.onColumnOrder}2
          columnKeys={state.columnKeys}2
          columns={props.columns}2
          sortOrder={props.sortOrder}2
          onSort={props.onSort}2
          columnSizes={state.columnSizes}2
          onColumnResize={props.onColumnResize}2
        />2
      );2
2
    return (2
      <TableOuter2
        floating={props.floating}2
        autoHeight={props.autoHeight}2
        onKeyDown={this.onKeyDown}2
        tabIndex={0}>2
        <TableInner minWidth={props.minWidth}>2
          {tableHead}2
2
          <TableBody2
            ref={this.setTableBodyRef}2
            virtual={props.virtual}2
            filter={props.filter}2
            filterValue={props.filterValue}2
            autoHeight={props.autoHeight}2
            rowLineHeight={props.rowLineHeight}2
            multiline={props.multiline}2
            onHighlight={this.onHighlight}2
            highlightedRows={props.highlightedRows}2
            columnKeys={state.columnKeys}2
            rows={state.sortedRows}2
            columnSizes={state.columnSizes}2
            stickyBottom={props.stickyBottom}2
            isDragging={Boolean(state.dragStartingKey)}2
            zebra={props.zebra}2
            onDragSelect={this.onDragSelect}2
            onCopyRows={this.onCopyRows}2
            onCreatePaste={this.onCreatePaste}2
            onAddFilter={props.onAddFilter}2
          />2
        </TableInner>2
      </TableOuter>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableBodyRow,2
  TableColumnKeys,2
  TableColumnSizes,2
  TableHighlightedRows,2
  TableOnDragSelect,2
  TableOnHighlight,2
  TableRows,2
  TableOnAddFilter,2
} from './types.js';2
import {FixedList, DynamicList} from '../../../ui/virtualized/index.js';2
import {normaliseColumnWidth} from './utils.js';2
import {PureComponent} from 'react';2
2
import FilterRow from '../filter/FilterRow.js';2
import {DEFAULT_ROW_HEIGHT} from './types.js';2
import styled from '../../styled/index.js';2
import FlexColumn from '../FlexColumn.js';2
import {ContextMenu} from 'sonar';2
2
import FlexRow from '../FlexRow.js';2
import {colors} from '../colors.js';2
2
const TableBodyContainer = FlexColumn.extends(2
  {2
    backgroundColor: colors.white,2
    zIndex: 1,2
    flexGrow: props => (props.autoHeight ? 0 : 1),2
    flexShrink: props => (props.autoHeight ? 0 : 1),2
    flexBasis: props => (props.autoHeight ? 'content' : 0),2
    overflow: props => (props.autoHeight ? 'hidden' : 'auto'),2
    maxWidth: '100%',2
  },2
  {2
    ignoreAttributes: ['autoHeight'],2
  },2
);2
2
const TableBodyRowContainer = FlexRow.extends(2
  {2
    backgroundColor: props => {2
      if (props.highlighted) {2
        if (props.highlightedBackgroundColor) {2
          return props.highlightedBackgroundColor;2
        } else {2
          return colors.macOSTitleBarIconSelected;2
        }2
      } else {2
        if (props.backgroundColor) {2
          return props.backgroundColor;2
        } else if (props.even && props.zebra) {2
          return colors.light02;2
        } else {2
          return 'transparent';2
        }2
      }2
    },2
    boxShadow: props => {2
      if (props.backgroundColor || props.zebra === false) {2
        return 'inset 0 -1px #E9EBEE';2
      } else {2
        return 'none';2
      }2
    },2
    color: props =>2
      props.highlighted ? colors.white : props.color || 'inherit',2
    '& *': {2
      color: props => (props.highlighted ? `${colors.white} !important` : null),2
    },2
    '& img': {2
      backgroundColor: props =>2
        props.highlighted ? `${colors.white} !important` : 'none',2
    },2
    height: props => (props.multiline ? 'auto' : props.rowLineHeight),2
    lineHeight: props => `${String(props.rowLineHeight)}px`,2
    fontWeight: props => props.fontWeight || 'inherit',2
    overflow: 'hidden',2
    width: '100%',2
    userSelect: 'none',2
    flexShrink: 0,2
    '&:hover': {2
      backgroundColor: props =>2
        !props.highlighted && props.highlightOnHover ? colors.light02 : 'none',2
    },2
  },2
  {2
    ignoreAttributes: [2
      'highlightedBackgroundColor',2
      'highlightOnHover',2
      'backgroundColor',2
      'rowLineHeight',2
      'highlighted',2
      'multiline',2
      'hasHover',2
      'zebra',2
      'even',2
    ],2
  },2
);2
2
const TableBodyColumnContainer = styled.view(2
  {2
    display: 'flex',2
    flexShrink: props => (props.width === 'flex' ? 1 : 0),2
    overflow: 'hidden',2
    padding: '0 8px',2
    userSelect: 'none',2
    textOverflow: 'ellipsis',2
    verticalAlign: 'top',2
    whiteSpace: props => (props.multiline ? 'normal' : 'nowrap'),2
    wordWrap: props => (props.multiline ? 'break-word' : 'normal'),2
    width: props => (props.width === 'flex' ? '100%' : props.width),2
    maxWidth: '100%',2
  },2
  {2
    ignoreAttributes: ['multiline', 'width'],2
  },2
);2
2
type TableBodyRowElementProps = {2
  columnSizes: TableColumnSizes,2
  columnKeys: TableColumnKeys,2
  onHighlight: ?TableOnHighlight,2
  onMouseEnter?: (e: SyntheticMouseEvent<>) => void,2
  multiline: ?boolean,2
  rowLineHeight: number,2
  highlightedRows: ?TableHighlightedRows,2
  row: TableBodyRow,2
  columnNo: number,2
  style: ?Object,2
  onCopyRows: () => void,2
  onCreatePaste: () => void,2
  onAddFilter?: TableOnAddFilter,2
  zebra: ?boolean,2
};2
2
type TableBodyRowElementState = {2
  contextMenu: any,2
};2
2
class TableBodyRowElement extends PureComponent<2
  TableBodyRowElementProps,2
  TableBodyRowElementState,2
> {2
  static defaultProps = {2
    zebra: true,2
  };2
2
  onMouseDown = (e: SyntheticMouseEvent<>) => {2
    if (e.button !== 0) {2
      // Only highlight rows when using primary mouse button,2
      // otherwise do nothing, to not interfere context menus.2
      return;2
    }2
    if (e.shiftKey) {2
      // prevents text selection2
      e.preventDefault();2
    }2
2
    const {highlightedRows, onHighlight, row} = this.props;2
    if (!onHighlight) {2
      return;2
    }2
2
    let newHighlightedRows = highlightedRows ? highlightedRows.slice() : [];2
    const alreadyHighlighted = newHighlightedRows.includes(row.key);2
    if (2
      (e.metaKey && process.platform === 'darwin') ||2
      (e.ctrlKey && process.platform !== 'darwin')2
    ) {2
      if (alreadyHighlighted) {2
        newHighlightedRows.splice(newHighlightedRows.indexOf(row.key), 1);2
      } else {2
        newHighlightedRows.push(row.key);2
      }2
    } else {2
      newHighlightedRows = [row.key];2
    }2
    onHighlight(newHighlightedRows, e);2
  };2
2
  getContextMenu = () => {2
    const {highlightedRows, onCopyRows, onCreatePaste} = this.props;2
    return [2
      {2
        label:2
          highlightedRows && highlightedRows.length > 12
            ? `Copy ${highlightedRows.length} items`2
            : 'Copy all',2
        click: onCopyRows,2
      },2
      {2
        label:2
          highlightedRows && highlightedRows.length > 12
            ? `Create paste from selection`2
            : 'Create paste',2
        click: onCreatePaste,2
      },2
    ];2
  };2
2
  render() {2
    const {2
      columnNo,2
      highlightedRows,2
      rowLineHeight,2
      row,2
      style,2
      multiline,2
      columnKeys,2
      columnSizes,2
      onMouseEnter,2
      zebra,2
    } = this.props;2
2
    return (2
      <ContextMenu buildItems={this.getContextMenu}>2
        <TableBodyRowContainer2
          rowLineHeight={rowLineHeight}2
          highlightedBackgroundColor={row.highlightedBackgroundColor}2
          backgroundColor={row.backgroundColor}2
          highlighted={highlightedRows && highlightedRows.includes(row.key)}2
          onDoubleClick={row.onDoubleClick}2
          multiline={multiline}2
          even={columnNo % 2 === 0}2
          zebra={zebra}2
          onMouseDown={this.onMouseDown}2
          onMouseEnter={onMouseEnter}2
          style={style}2
          highlightOnHover={row.highlightOnHover}2
          data-key={row.key}2
          {...row.style}>2
          {columnKeys.map(key => {2
            const col = row.columns[key];2
            if (col == null) {2
              throw new Error(2
                `Trying to access column "${key}" which does not exist on row. Make sure buildRow is returning a valid row.`,2
              );2
            }2
            const isFilterable = col.isFilterable || false;2
            const value = col ? col.value : '';2
            const title = col ? col.title : '';2
            return (2
              <TableBodyColumnContainer2
                key={key}2
                title={title}2
                multiline={multiline}2
                width={normaliseColumnWidth(columnSizes[key])}>2
                {isFilterable && this.props.onAddFilter != null ? (2
                  <FilterRow addFilter={this.props.onAddFilter} filterKey={key}>2
                    {value}2
                  </FilterRow>2
                ) : (2
                  value2
                )}2
              </TableBodyColumnContainer>2
            );2
          })}2
        </TableBodyRowContainer>2
      </ContextMenu>2
    );2
  }2
}2
2
type TableBodyProps = {2
  virtual: ?boolean,2
  autoHeight: ?boolean,2
  multiline: ?boolean,2
  rowLineHeight: number,2
  stickyBottom: ?boolean,2
  zebra?: boolean,2
2
  onHighlight: ?TableOnHighlight,2
  highlightedRows: ?TableHighlightedRows,2
2
  columnKeys: TableColumnKeys,2
  columnSizes: TableColumnSizes,2
2
  rows: TableRows,2
2
  filterValue?: string,2
  filter?: (row: TableBodyRow) => boolean,2
2
  isDragging: boolean,2
  onDragSelect: TableOnDragSelect,2
  onCopyRows: () => void,2
  onCreatePaste: () => void,2
  onAddFilter?: TableOnAddFilter,2
};2
2
type TableBodyState = {2
  atScrollBottom: boolean,2
  pureBodyData: Array<any>,2
};2
2
export default class TableBody extends PureComponent<2
  TableBodyProps,2
  TableBodyState,2
> {2
  static defaultProps = {2
    rowLineHeight: DEFAULT_ROW_HEIGHT,2
  };2
2
  state = {2
    atScrollBottom: true,2
    pureBodyData: [2
      this.props.columnSizes,2
      this.props.rows,2
      this.props.highlightedRows,2
    ],2
  };2
2
  listRef: ?DynamicList;2
  scrollRef: ?any;2
  keepSelectedRowInView: ?[number, number];2
2
  buildElement = (2
    key: string,2
    row: TableBodyRow,2
    index: number,2
    style?: Object,2
  ) => {2
    let onMouseEnter;2
    if (this.props.isDragging) {2
      onMouseEnter = (e: SyntheticMouseEvent<>) =>2
        this.props.onDragSelect(e, key, index);2
    }2
    return (2
      <TableBodyRowElement2
        key={key}2
        columnNo={index}2
        rowLineHeight={this.props.rowLineHeight}2
        row={row}2
        style={style}2
        columnSizes={this.props.columnSizes}2
        multiline={this.props.multiline}2
        columnKeys={this.props.columnKeys}2
        highlightedRows={this.props.highlightedRows}2
        zebra={this.props.zebra}2
        onHighlight={this.props.onHighlight}2
        onMouseEnter={onMouseEnter}2
        onCopyRows={this.props.onCopyRows}2
        onCreatePaste={this.props.onCreatePaste}2
        onAddFilter={this.props.onAddFilter}2
      />2
    );2
  };2
2
  buildVirtualElement = ({index, style}: {index: number, style: Object}) => {2
    const row = this.props.rows[index];2
    return this.buildElement(row.key, row, index, style);2
  };2
2
  buildAutoElement = (row: TableBodyRow, index: number) => {2
    return this.buildElement(row.key, row, index);2
  };2
2
  componentDidMount() {2
    this.maybeScrollToBottom();2
  }2
2
  componentWillUpdate(nextProps: TableBodyProps) {2
    if (2
      nextProps.highlightedRows != null &&2
      nextProps.highlightedRows.length === 1 &&2
      nextProps.filter !== this.props.filter &&2
      nextProps.rows.length !== this.props.rows.length &&2
      this.listRef != null2
    ) {2
      // We want to keep the selected row in the view once the filter changes.2
      // Here we get the current position, in componentDidUpdate it is scrolled into view2
      const {highlightedRows} = nextProps;2
      const selectedIndex = nextProps.rows.findIndex(2
        row => row.key === highlightedRows[0],2
      );2
      if (2
        nextProps.rows[selectedIndex] != null &&2
        nextProps.rows[selectedIndex].key != null2
      ) {2
        const rowDOMNode = document.querySelector(2
          `[data-key="${nextProps.rows[selectedIndex].key}"]`,2
        );2
        let offset = 0;2
        if (2
          rowDOMNode != null &&2
          rowDOMNode.parentElement instanceof HTMLElement2
        ) {2
          offset = rowDOMNode.parentElement.offsetTop;2
        }2
        this.keepSelectedRowInView = [selectedIndex, offset];2
      }2
    } else {2
      this.keepSelectedRowInView = null;2
    }2
  }2
2
  componentDidUpdate(prevProps: TableBodyProps) {2
    if (this.listRef != null && this.keepSelectedRowInView != null) {2
      this.listRef.scrollToIndex(...this.keepSelectedRowInView);2
    } else {2
      this.maybeScrollToBottom();2
    }2
  }2
2
  maybeScrollToBottom = () => {2
    // we only care if we have the stickyBottom prop2
    if (this.props.stickyBottom !== true) {2
      return;2
    }2
2
    // we only want to scroll to the bottom if we're actually at the bottom2
    if (this.state.atScrollBottom === false) {2
      return;2
    }2
2
    this.scrollToBottom();2
  };2
2
  scrollToBottom() {2
    // only handle non-virtualised scrolling, virtualised scrolling is handled2
    // by the getScrollToIndex method2
    if (this.isVirtualisedDisabled()) {2
      const {scrollRef} = this;2
      if (scrollRef != null) {2
        scrollRef.scrollTop = scrollRef.scrollHeight;2
      }2
    } else {2
      const {listRef} = this;2
      if (listRef != null) {2
        listRef.scrollToIndex(this.props.rows.length - 1);2
      }2
    }2
  }2
2
  scrollRowIntoView(index: number) {2
    if (2
      this.isVirtualisedDisabled() &&2
      this.scrollRef &&2
      index < this.scrollRef.children.length2
    ) {2
      this.scrollRef.children[index].scrollIntoViewIfNeeded();2
    }2
  }2
2
  componentWillReceiveProps(nextProps: TableBodyProps) {2
    if (2
      nextProps.columnSizes !== this.props.columnSizes ||2
      nextProps.rows !== this.props.rows ||2
      nextProps.highlightedRows !== this.props.highlightedRows2
    ) {2
      this.setState({2
        pureBodyData: [2
          nextProps.columnSizes,2
          nextProps.rows,2
          nextProps.highlightedRows,2
        ],2
      });2
    }2
  }2
2
  setListRef = (ref: ?DynamicList) => {2
    this.listRef = ref;2
  };2
2
  setNonVirtualScrollRef = (ref: any) => {2
    this.scrollRef = ref;2
    this.scrollToBottom();2
  };2
2
  onScroll = ({2
    clientHeight,2
    scrollHeight,2
    scrollTop,2
  }: {2
    clientHeight: number,2
    scrollHeight: number,2
    scrollTop: number,2
  }) => {2
    // check if the user has scrolled within 20px of the bottom2
    const bottom = scrollTop + clientHeight;2
    const atScrollBottom = Math.abs(bottom - scrollHeight) < 20;2
2
    if (atScrollBottom !== this.state.atScrollBottom) {2
      this.setState({atScrollBottom});2
    }2
  };2
2
  isVirtualisedDisabled() {2
    return this.props.virtual === false || this.props.autoHeight === true;2
  }2
2
  keyMapper = (index: number): string => {2
    return this.props.rows[index].key;2
  };2
2
  getPrecalculatedDimensions = (index: number) => {2
    const row = this.props.rows[index];2
    if (row != null && row.height != null) {2
      return {2
        height: row.height,2
        width: '100%',2
      };2
    }2
  };2
2
  render() {2
    if (this.isVirtualisedDisabled()) {2
      return (2
        <TableBodyContainer2
          innerRef={this.setNonVirtualScrollRef}2
          onScroll={this.onScroll}2
          autoHeight={true}>2
          {this.props.rows.map(this.buildAutoElement)}2
        </TableBodyContainer>2
      );2
    }2
2
    let children;2
2
    if (this.props.multiline === true) {2
      // multiline has a virtual list with dynamic heights2
      children = (2
        <DynamicList2
          ref={this.setListRef}2
          pureData={this.state.pureBodyData}2
          keyMapper={this.keyMapper}2
          rowCount={this.props.rows.length}2
          rowRenderer={this.buildVirtualElement}2
          onScroll={this.onScroll}2
          getPrecalculatedDimensions={this.getPrecalculatedDimensions}2
          onMount={this.maybeScrollToBottom}2
        />2
      );2
    } else {2
      // virtual list with a fixed row height2
      children = (2
        <FixedList2
          pureData={this.state.pureBodyData}2
          keyMapper={this.keyMapper}2
          rowCount={this.props.rows.length}2
          rowHeight={this.props.rowLineHeight}2
          rowRenderer={this.buildVirtualElement}2
          onScroll={this.onScroll}2
          innerRef={this.setListRef}2
          onMount={this.maybeScrollToBottom}2
        />2
      );2
    }2
2
    return <TableBodyContainer>{children}</TableBodyContainer>;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {2
  TableColumnKeys,2
  TableColumnOrder,2
  TableColumnSizes,2
  TableColumns,2
  TableOnColumnResize,2
  TableOnSort,2
  TableRowSortOrder,2
} from './types.js';2
2
import {normaliseColumnWidth, isPercentage} from './utils.js';2
import {PureComponent} from 'react';2
import ContextMenu from '../ContextMenu.js';2
import Interactive from '../Interactive.js';2
import styled from '../../styled/index.js';2
import {colors} from '../colors.js';2
2
import FlexRow from '../FlexRow.js';2
2
const invariant = require('invariant');2
2
const TableHeaderArrow = styled.text({2
  float: 'right',2
});2
2
const TableHeaderColumnInteractive = Interactive.extends({2
  display: 'inline-block',2
  overflow: 'hidden',2
  textOverflow: 'ellipsis',2
  whiteSpace: 'nowrap',2
  width: '100%',2
});2
2
const TableHeaderColumnContainer = styled.view({2
  padding: '0 8px',2
});2
2
const TableHeadContainer = FlexRow.extends({2
  borderBottom: `1px solid ${colors.sectionHeaderBorder}`,2
  color: colors.light50,2
  flexShrink: 0,2
  left: 0,2
  overflow: 'hidden',2
  position: 'sticky',2
  right: 0,2
  textAlign: 'left',2
  top: 0,2
  zIndex: 2,2
});2
2
const TableHeadColumnContainer = styled.view(2
  {2
    position: 'relative',2
    backgroundColor: colors.white,2
    flexShrink: props => (props.width === 'flex' ? 1 : 0),2
    height: 23,2
    lineHeight: '23px',2
    fontSize: '0.85em',2
    fontWeight: 500,2
    width: props => (props.width === 'flex' ? '100%' : props.width),2
    '&::after': {2
      position: 'absolute',2
      content: '""',2
      right: 0,2
      top: 5,2
      height: 13,2
      width: 1,2
      background: colors.light15,2
    },2
    '&:last-child::after': {2
      display: 'none',2
    },2
  },2
  {2
    ignoreAttributes: ['width'],2
  },2
);2
2
const RIGHT_RESIZABLE = {right: true};2
2
function calculatePercentage(parentWidth: number, selfWidth: number): string {2
  return `${(100 / parentWidth) * selfWidth}%`;2
}2
2
class TableHeadColumn extends PureComponent<{2
  id: string,2
  width: string | number,2
  sortable: ?boolean,2
  isResizable: boolean,2
  leftHasResizer: boolean,2
  hasFlex: boolean,2
  sortOrder: ?TableRowSortOrder,2
  onSort: ?TableOnSort,2
  columnSizes: TableColumnSizes,2
  onColumnResize: ?TableOnColumnResize,2
  children?: React$Node,2
  title?: string,2
}> {2
  ref: HTMLElement;2
2
  onClick = () => {2
    const {id, onSort, sortOrder} = this.props;2
2
    const direction =2
      sortOrder && sortOrder.key === id && sortOrder.direction === 'down'2
        ? 'up'2
        : 'down';2
2
    if (onSort) {2
      onSort({2
        direction,2
        key: id,2
      });2
    }2
  };2
2
  onResize = (newWidth: number) => {2
    const {id, columnSizes, onColumnResize, width} = this.props;2
    if (!onColumnResize) {2
      return;2
    }2
2
    let normalizedWidth = newWidth;2
2
    // normalise number to a percentage if we were originally passed a percentage2
    if (isPercentage(width)) {2
      const {parentElement} = this.ref;2
      invariant(parentElement, 'expected there to be parentElement');2
2
      const parentWidth = parentElement.clientWidth;2
      const {childNodes} = parentElement;2
2
      const lastElem = childNodes[childNodes.length - 1];2
      const right =2
        lastElem instanceof HTMLElement2
          ? lastElem.offsetLeft + lastElem.clientWidth + 12
          : 0;2
2
      if (right < parentWidth) {2
        normalizedWidth = calculatePercentage(parentWidth, newWidth);2
      }2
    }2
2
    onColumnResize({2
      ...columnSizes,2
      [id]: normalizedWidth,2
    });2
  };2
2
  setRef = (ref: HTMLElement) => {2
    this.ref = ref;2
  };2
2
  render() {2
    const {isResizable, sortable, width, title} = this.props;2
    let {children} = this.props;2
    children = (2
      <TableHeaderColumnContainer>{children}</TableHeaderColumnContainer>2
    );2
2
    if (isResizable) {2
      children = (2
        <TableHeaderColumnInteractive2
          fill={true}2
          resizable={RIGHT_RESIZABLE}2
          onResize={this.onResize}>2
          {children}2
        </TableHeaderColumnInteractive>2
      );2
    }2
2
    return (2
      <TableHeadColumnContainer2
        width={width}2
        title={title}2
        onClick={sortable === true ? this.onClick : undefined}2
        innerRef={this.setRef}>2
        {children}2
      </TableHeadColumnContainer>2
    );2
  }2
}2
2
export default class TableHead extends PureComponent<{2
  columnOrder: TableColumnOrder,2
  onColumnOrder: ?(order: TableColumnOrder) => void,2
  columnKeys: TableColumnKeys,2
  columns: TableColumns,2
  sortOrder: ?TableRowSortOrder,2
  onSort: ?TableOnSort,2
  columnSizes: TableColumnSizes,2
  onColumnResize: ?TableOnColumnResize,2
}> {2
  buildContextMenu = () => {2
    return Object.keys(this.props.columns).map(key => {2
      const visible = this.props.columnKeys.includes(key);2
      return {2
        label: this.props.columns[key].value,2
        click: () => {2
          const {onColumnOrder, columnOrder} = this.props;2
          if (onColumnOrder) {2
            const newOrder = columnOrder.slice();2
            let hasVisibleItem = false;2
            for (let i = 0; i < newOrder.length; i++) {2
              const info = newOrder[i];2
              if (info.key === key) {2
                newOrder[i] = {key, visible: !visible};2
              }2
              hasVisibleItem = hasVisibleItem || newOrder[i].visible;2
            }2
2
            // Dont allow hiding all columns2
            if (hasVisibleItem) {2
              onColumnOrder(newOrder);2
            }2
          }2
        },2
        type: 'checkbox',2
        checked: visible,2
      };2
    });2
  };2
2
  render() {2
    const {2
      columnOrder,2
      columns,2
      columnSizes,2
      onColumnResize,2
      onSort,2
      sortOrder,2
    } = this.props;2
    const elems = [];2
2
    let hasFlex = false;2
    for (const column of columnOrder) {2
      if (column.visible && columnSizes[column.key] === 'flex') {2
        hasFlex = true;2
        break;2
      }2
    }2
2
    let lastResizable = true;2
2
    const colElems = {};2
    for (const column of columnOrder) {2
      if (!column.visible) {2
        continue;2
      }2
2
      const key = column.key;2
      const col = columns[key];2
2
      let arrow;2
      if (col.sortable === true && sortOrder && sortOrder.key === key) {2
        arrow = (2
          <TableHeaderArrow>2
            {sortOrder.direction === 'up' ? '▲' : '▼'}2
          </TableHeaderArrow>2
        );2
      }2
2
      const width = normaliseColumnWidth(columnSizes[key]);2
      const isResizable = col.resizable !== false;2
2
      const elem = (2
        <TableHeadColumn2
          key={key}2
          id={key}2
          hasFlex={hasFlex}2
          isResizable={isResizable}2
          leftHasResizer={lastResizable}2
          width={width}2
          sortable={col.sortable}2
          sortOrder={sortOrder}2
          onSort={onSort}2
          columnSizes={columnSizes}2
          onColumnResize={onColumnResize}2
          title={key}>2
          {col.value}2
          {arrow}2
        </TableHeadColumn>2
      );2
2
      elems.push(elem);2
2
      colElems[key] = elem;2
2
      lastResizable = isResizable;2
    }2
2
    return (2
      <ContextMenu buildItems={this.buildContextMenu}>2
        <TableHeadContainer>{elems}</TableHeadContainer>2
      </ContextMenu>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Filter} from '../filter/types.js';2
2
export const MINIMUM_COLUMN_WIDTH = 100;2
export const DEFAULT_COLUMN_WIDTH = 200;2
export const DEFAULT_ROW_HEIGHT = 23;2
2
type TableColumnOrderVal = {2
  key: string,2
  visible: boolean,2
};2
2
export type TableColumnRawOrder = Array<string | TableColumnOrderVal>;2
2
export type TableColumnOrder = Array<TableColumnOrderVal>;2
2
export type TableColumnSizes = {2
  [key: string]: string | number,2
};2
2
export type TableHighlightedRows = Array<string>;2
2
export type TableColumnKeys = Array<string>;2
2
export type TableOnColumnResize = (sizes: TableColumnSizes) => void;2
export type TableOnColumnOrder = (order: TableColumnOrder) => void;2
export type TableOnSort = (order: TableRowSortOrder) => void;2
export type TableOnHighlight = (2
  highlightedRows: TableHighlightedRows,2
  e: SyntheticUIEvent<>,2
) => void;2
2
export type TableHeaderColumn = {|2
  value: string,2
  sortable?: boolean,2
  resizable?: boolean,2
|};2
2
export type TableBodyRow = {|2
  key: string,2
  height?: ?number,2
  filterValue?: ?string,2
  backgroundColor?: ?string,2
  sortKey?: string | number,2
  style?: Object,2
  type?: ?string,2
  highlightedBackgroundColor?: ?string,2
  onDoubleClick?: (e: SyntheticMouseEvent<>) => void,2
  copyText?: string,2
  highlightOnHover?: boolean,2
  columns: {2
    [key: string]: TableBodyColumn,2
  },2
|};2
2
export type TableBodyColumn = {|2
  sortValue?: string | number,2
  isFilterable?: boolean,2
  value: any,2
  title?: string,2
|};2
2
export type TableColumns = {2
  [key: string]: TableHeaderColumn,2
};2
2
export type TableRows = Array<TableBodyRow>;2
2
export type TableRowSortOrder = {|2
  key: string,2
  direction: 'up' | 'down',2
|};2
2
export type TableOnDragSelect = (2
  e: SyntheticMouseEvent<>,2
  key: string,2
  index: number,2
) => void;2
2
export type TableOnAddFilter = (filter: Filter) => void;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export function normaliseColumnWidth(2
  width: void | string | number,2
): number | string {2
  if (width == null || width === 'flex') {2
    // default2
    return 'flex';2
  }2
2
  if (isPercentage(width)) {2
    // percentage eg. 50%2
    return width;2
  }2
2
  if (typeof width === 'number') {2
    // pixel width2
    return width;2
  }2
2
  throw new TypeError(`Unknown value ${width} for table column width`);2
}2
2
export function isPercentage(width: mixed): boolean {2
  return typeof width === 'string' && width[width.length - 1] === '%';2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Tracker, RulesToClass} from './index.js';2
import type {StyleSheet} from './sheet.js';2
2
const invariant = require('invariant');2
2
export class GarbageCollector {2
  constructor(sheet: StyleSheet, tracker: Tracker, rulesToClass: RulesToClass) {2
    this.sheet = sheet;2
    this.tracker = tracker;2
2
    // used to keep track of what classes are actively in use2
    this.usedClasses = new Map();2
2
    // classes to be removed, we put this in a queue and perform it in bulk rather than straight away2
    // since by the time the next tick happens this style could have been reinserted2
    this.classRemovalQueue = new Set();2
2
    this.rulesToClass = rulesToClass;2
  }2
2
  tracker: Tracker;2
  sheet: StyleSheet;2
  usedClasses: Map<string, number>;2
  garbageTimer: ?TimeoutID;2
  classRemovalQueue: Set<string>;2
  rulesToClass: RulesToClass;2
2
  hasQueuedCollection(): boolean {2
    return Boolean(this.garbageTimer);2
  }2
2
  getReferenceCount(key: string): number {2
    return this.usedClasses.get(key) || 0;2
  }2
2
  // component has been mounted so make sure it's being depended on2
  registerClassUse(name: string) {2
    const count = this.usedClasses.get(name) || 0;2
    this.usedClasses.set(name, count + 1);2
    if (this.classRemovalQueue.has(name)) {2
      this.classRemovalQueue.delete(name);2
2
      if (this.classRemovalQueue.size === 0) {2
        this.haltGarbage();2
      }2
    }2
  }2
2
  // component has been unmounted so remove it's dependencies2
  deregisterClassUse(name: string) {2
    let count = this.usedClasses.get(name);2
    if (count == null) {2
      return;2
    }2
2
    count--;2
    this.usedClasses.set(name, count);2
2
    if (count === 0) {2
      this.classRemovalQueue.add(name);2
      this.scheduleGarbage();2
    }2
  }2
2
  scheduleGarbage() {2
    if (this.garbageTimer != null) {2
      return;2
    }2
2
    this.garbageTimer = setTimeout(() => {2
      this.collectGarbage();2
    }, 2000);2
  }2
2
  haltGarbage() {2
    if (this.garbageTimer) {2
      clearTimeout(this.garbageTimer);2
      this.garbageTimer = null;2
    }2
  }2
2
  getCollectionQueue() {2
    return Array.from(this.classRemovalQueue);2
  }2
2
  collectGarbage() {2
    this.haltGarbage();2
    for (const name of this.classRemovalQueue) {2
      const trackerInfo = this.tracker.get(name);2
      invariant(trackerInfo != null, 'trying to remove unknown class');2
2
      const {rules} = trackerInfo;2
      this.rulesToClass.delete(rules);2
2
      this.sheet.delete(name);2
      this.tracker.delete(name);2
      this.usedClasses.delete(name);2
    }2
    this.classRemovalQueue.clear();2
  }2
2
  flush() {2
    this.haltGarbage();2
    this.classRemovalQueue.clear();2
    this.usedClasses.clear();2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export default function hash(str: string): string {2
  const m = 0x5bd1e995;2
  const r = 24;2
  let h = str.length;2
  let length = str.length;2
  let currentIndex = 0;2
2
  while (length >= 4) {2
    let k = UInt32(str, currentIndex);2
2
    k = Umul32(k, m);2
    k ^= k >>> r;2
    k = Umul32(k, m);2
2
    h = Umul32(h, m);2
    h ^= k;2
2
    currentIndex += 4;2
    length -= 4;2
  }2
2
  switch (length) {2
    case 3:2
      h ^= UInt16(str, currentIndex);2
      h ^= str.charCodeAt(currentIndex + 2) << 16;2
      h = Umul32(h, m);2
      break;2
2
    case 2:2
      h ^= UInt16(str, currentIndex);2
      h = Umul32(h, m);2
      break;2
2
    case 1:2
      h ^= str.charCodeAt(currentIndex);2
      h = Umul32(h, m);2
      break;2
  }2
2
  h ^= h >>> 13;2
  h = Umul32(h, m);2
  h ^= h >>> 15;2
2
  return (h >>> 0).toString(36);2
}2
2
function UInt32(str: string, pos: number): number {2
  return (2
    str.charCodeAt(pos++) +2
    (str.charCodeAt(pos++) << 8) +2
    (str.charCodeAt(pos++) << 16) +2
    (str.charCodeAt(pos) << 24)2
  );2
}2
2
function UInt16(str: string, pos: number): number {2
  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);2
}2
2
function Umul32(n: number, m: number): number {2
  n |= 0;2
  m |= 0;2
  const nlo = n & 0xffff;2
  const nhi = n >>> 16;2
  const res = (nlo * m + (((nhi * m) & 0xffff) << 16)) | 0;2
  return res;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {BaseRules, KeyframeRules, RawRules} from './rules.js';2
import {buildKeyframeRules, buildRules, normaliseRules} from './rules.js';2
import assignDeep from '../../utils/assignDeep.js';2
import * as performance from '../../utils/performance.js';2
import {GarbageCollector} from './gc.js';2
import {StyleSheet} from './sheet.js';2
import hash from './hash.js';2
2
const React = require('react');2
2
export type Tracker = Map<2
  string,2
  {2
    displayName: ?string,2
    namespace: string,2
    rules: BaseRules,2
    selector: string,2
    style: Object,2
  },2
>;2
2
export type RulesToClass = WeakMap<BaseRules, string>;2
2
// map of inserted classes and metadata about them2
export const tracker: Tracker = new Map();2
2
// map of rules to their class2
const rulesToClass: RulesToClass = new WeakMap();2
2
export const sheet = new StyleSheet(process.env.NODE_ENV === 'production');2
export const gc = new GarbageCollector(sheet, tracker, rulesToClass);2
2
function addRules(2
  displayName: string,2
  rules: BaseRules,2
  namespace,2
  props: Object,2
  context: Object,2
) {2
  // if these rules have been cached to a className then retrieve it2
  const cachedClass = rulesToClass.get(rules);2
  if (cachedClass != null) {2
    return cachedClass;2
  }2
2
  //2
  const declarations = [];2
  const style = buildRules(rules, props, context);2
2
  // generate css declarations based on the style object2
  for (const key in style) {2
    const val = style[key];2
    declarations.push(`  ${key}: ${val};`);2
  }2
  const css = declarations.join('\n');2
2
  // build the class name with the display name of the styled component and a unique id based on the css and namespace2
  const className = displayName + '__' + hash(namespace + css);2
2
  // this is the first time we've found this className2
  if (!tracker.has(className)) {2
    // build up the correct selector, explode on commas to allow multiple selectors2
    const selector = namespace2
      .split(', ')2
      .map(part => {2
        if (part[0] === '&') {2
          return '.' + className + part.slice(1);2
        } else {2
          return '.' + className + ' ' + part;2
        }2
      })2
      .join(', ');2
2
    // insert the new style text2
    tracker.set(className, {displayName, namespace, rules, selector, style});2
    sheet.insert(className, `${selector} {\n${css}\n}`);2
2
    // if there's no dynamic rules then cache this2
    if (hasDynamicRules(rules) === false) {2
      rulesToClass.set(rules, className);2
    }2
  }2
2
  return className;2
}2
2
// remove all styhles2
export function flush() {2
  gc.flush();2
  tracker.clear();2
  sheet.flush();2
}2
2
export type TagName = string | Function;2
2
type StyledComponentState = {|2
  extraClassNames: Array<string>,2
  classNames: Array<string>,2
  lastBuiltRules: ?Object,2
  lastBuiltRulesIsDynamic: boolean,2
|};2
2
export class StylableComponent<2
  Props = void,2
  State = void,2
> extends React.Component<Props, State> {2
  static extends(2
    rules: RawRules,2
    opts?: StyledComponentOpts,2
  ): StyledComponent<any> {2
    return createStyledComponent(this, rules, opts);2
  }2
}2
2
class StylablePureComponent<2
  Props = void,2
  State = void,2
> extends React.PureComponent<Props, State> {2
  static extends(2
    rules: RawRules,2
    opts?: StyledComponentOpts,2
  ): StyledComponent<any> {2
    return createStyledComponent(this, rules, opts);2
  }2
}2
2
class StyledComponentBase<Props> extends React.PureComponent<2
  Props,2
  StyledComponentState,2
> {2
  constructor(props: Props, context: Object): void {2
    super(props, context);2
    this.state = {2
      classNames: [],2
      extraClassNames: [],2
      lastBuiltRulesIsDynamic: false,2
      lastBuiltRules: null,2
    };2
  }2
2
  static defaultProps: ?$Shape<Props>;2
2
  static STYLED_CONFIG: {|2
    tagName: TagName,2
    ignoreAttributes: ?Array<string>,2
    builtRules: any,2
  |};2
2
  static extends(2
    rules: RawRules,2
    opts?: StyledComponentOpts,2
  ): StyledComponent<any> {2
    return createStyledComponent(this, rules, opts);2
  }2
2
  componentWillMount(): void {2
    this.generateClassnames(this.props, null);2
  }2
2
  componentWillReceiveProps(nextProps: Props): void {2
    this.generateClassnames(nextProps, this.props);2
  }2
2
  componentWillUnmount(): void {2
    for (const name of this.state.classNames) {2
      gc.deregisterClassUse(name);2
    }2
  }2
2
  generateClassnames(props: Props, prevProps: ?Props): void {2
    throw new Error('unimplemented');2
  }2
}2
2
function hasDynamicRules(rules: Object): boolean {2
  for (const key in rules) {2
    const val = rules[key];2
2
    if (typeof val === 'function') {2
      return true;2
    } else if (typeof val === 'object' && hasDynamicRules(val)) {2
      return true;2
    }2
  }2
  return false;2
}2
2
function hasEquivProps(props: Object, nextProps: Object): boolean {2
  // check if the props are equivalent2
  for (const key in props) {2
    // ignore `children` since we do that check later2
    if (key === 'children') {2
      continue;2
    }2
2
    // check strict equality of prop value2
    if (nextProps[key] !== props[key]) {2
      return false;2
    }2
  }2
2
  // check if nextProps has any values that props doesn't2
  for (const key in nextProps) {2
    if (!(key in props)) {2
      return false;2
    }2
  }2
2
  // check if the boolean equality of children is equivalent2
  if (Boolean(props.children) !== Boolean(nextProps.children)) {2
    return false;2
  }2
2
  return true;2
}2
2
export type StyledComponent<Props> = Class<StyledComponentBase<Props>>;2
2
type StyledComponentOpts = {2
  displayName?: string,2
  contextTypes?: Object,2
  ignoreAttributes?: Array<string>,2
};2
2
function createStyledComponent(2
  tagName: TagName,2
  rules: RawRules,2
  opts?: StyledComponentOpts = {},2
): StyledComponent<any> {2
  let {contextTypes = {}, ignoreAttributes} = opts;2
2
  // build up rules2
  let builtRules = normaliseRules(rules);2
2
  // if inheriting from another styled component then take all of it's properties2
  if (typeof tagName === 'function' && tagName.STYLED_CONFIG) {2
    // inherit context types2
    if (tagName.contextTypes) {2
      contextTypes = {...contextTypes, ...tagName.contextTypes};2
    }2
2
    const parentConfig = tagName.STYLED_CONFIG;2
2
    // inherit tagname2
    tagName = parentConfig.tagName;2
2
    // inherit ignoreAttributes2
    if (parentConfig.ignoreAttributes) {2
      if (ignoreAttributes) {2
        ignoreAttributes = ignoreAttributes.concat(2
          parentConfig.ignoreAttributes,2
        );2
      } else {2
        ignoreAttributes = parentConfig.ignoreAttributes;2
      }2
    }2
2
    // inherit rules2
    builtRules = assignDeep({}, parentConfig.builtRules, builtRules);2
  }2
2
  const displayName: string =2
    opts.displayName == null ? 'StyledComponent' : opts.displayName;2
  const isDOM = typeof tagName === 'string';2
2
  class Constructor<Props: Object> extends StyledComponentBase<Props> {2
    generateClassnames(props: Props, prevProps: ?Props) {2
      // if this is a secondary render then check if the props are essentially equivalent2
      // NOTE: hasEquivProps is not a standard shallow equality test2
      if (prevProps != null && hasEquivProps(props, prevProps)) {2
        return;2
      }2
2
      const debugId = performance.mark();2
      const extraClassNames = [];2
2
      let myBuiltRules = builtRules;2
2
      // if passed any classes from another styled component, ignore that class and merge in their2
      // resolved styles2
      if (props.className) {2
        const propClassNames = props.className.trim().split(/[\s]+/g);2
        for (const className of propClassNames) {2
          const classInfo = tracker.get(className);2
          if (classInfo) {2
            const {namespace, style} = classInfo;2
            myBuiltRules = assignDeep({}, myBuiltRules, {[namespace]: style});2
          } else {2
            extraClassNames.push(className);2
          }2
        }2
      }2
2
      // if we had the exact same rules as last time and they weren't dynamic then we can bail out here2
      if (2
        myBuiltRules !== this.state.lastBuiltRules ||2
        this.state.lastBuiltRulesIsDynamic !== false2
      ) {2
        const prevClasses = this.state.classNames;2
        const classNames = [];2
2
        // add rules2
        for (const namespace in myBuiltRules) {2
          const className = addRules(2
            displayName,2
            myBuiltRules[namespace],2
            namespace,2
            props,2
            this.context,2
          );2
          classNames.push(className);2
2
          // if this is the first mount render or we didn't previously have this class then add it as new2
          if (prevProps == null || !prevClasses.includes(className)) {2
            gc.registerClassUse(className);2
          }2
        }2
2
        // check what classNames have been removed if this is a secondary render2
        if (prevProps != null) {2
          for (const className of prevClasses) {2
            // if this previous class isn't in the current classes then deregister it2
            if (!classNames.includes(className)) {2
              gc.deregisterClassUse(className);2
            }2
          }2
        }2
2
        this.setState({2
          classNames,2
          lastBuiltRules: myBuiltRules,2
          lastBuiltRulesIsDynamic: hasDynamicRules(myBuiltRules),2
          extraClassNames,2
        });2
      }2
2
      performance.measure(2
        debugId,2
        `🚀 ${this.constructor.name} [style calculate]`,2
      );2
    }2
    render() {2
      const {children, innerRef, ...props} = this.props;2
2
      if (ignoreAttributes) {2
        for (const key of ignoreAttributes) {2
          delete props[key];2
        }2
      }2
      // build class names2
      const className = this.state.classNames2
        .concat(this.state.extraClassNames)2
        .join(' ');2
      if (props.is) {2
        props.class = className;2
      } else {2
        props.className = className;2
      }2
      //2
      if (innerRef) {2
        if (isDOM) {2
          // dom ref2
          props.ref = innerRef;2
        } else {2
          // probably another styled component so pass it down2
          props.innerRef = innerRef;2
        }2
      }2
      return React.createElement(tagName, props, children);2
    }2
  }2
  Constructor.STYLED_CONFIG = {2
    builtRules,2
    ignoreAttributes,2
    tagName,2
  };2
2
  Constructor.contextTypes = {2
    ...contextTypes,2
  };2
2
  Object.defineProperty(Constructor, 'name', {2
    value: displayName,2
  });2
2
  return Constructor;2
}2
export function buildKeyframes(spec: KeyframeRules) {2
  let css = [];2
2
  const builtRules = buildKeyframeRules(spec);2
  for (const key in builtRules) {2
    const declarations = [];2
    const rules = builtRules[key];2
2
    for (const key in rules) {2
      declarations.push(`    ${key}: ${String(rules[key])};`);2
    }2
    css.push(`  ${key} {`);2
    css = css.concat(declarations);2
    css.push('  }');2
  }2
  css = css.join('\n');2
  return css;2
}2
function createKeyframes(spec: KeyframeRules): string {2
  const body = buildKeyframes(spec);2
  const className = `animation-${hash(body)}`;2
2
  const css = `@keyframes ${className} {\n${body}\n}`;2
  sheet.insert(className, css);2
  return className;2
}2
type StyledComponentFactory = (2
  rules: RawRules,2
  opts?: StyledComponentOpts,2
) => StyledComponent<any>;2
2
function createStyledComponentFactory(tagName: string): StyledComponentFactory {2
  return (rules: RawRules, opts?: StyledComponentOpts) => {2
    return createStyledComponent(tagName, rules, opts);2
  };2
}2
export default {2
  image: createStyledComponentFactory('img'),2
  view: createStyledComponentFactory('div'),2
  text: createStyledComponentFactory('span'),2
  textInput: createStyledComponentFactory('input'),2
  customHTMLTag: createStyledComponent,2
  keyframes: createKeyframes,2
  StylableComponent,2
  StylablePureComponent,2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {CSSPropertySet, CSSPropertyValue} from './types.js';2
2
const dashify = require('dashify');2
2
export type NormalisedRules = {2
  [namespace: string]: BaseRules,2
};2
2
export type BaseRules = {2
  [key: string]: CSSPropertyValue<string | number>,2
};2
2
export type PlainRules = {2
  [key: string]: string,2
};2
2
export type NormalisedKeyframeRules = {2
  [key: string]: PlainRules,2
};2
2
export type KeyframeRules = {2
  [key: string]: CSSPropertySet,2
};2
2
export type RawRules = {2
  ...CSSPropertySet,2
  [key: string]: CSSPropertySet,2
};2
2
const unitlessNumberProperties = new Set([2
  'animation-iteration-count',2
  'border-image-outset',2
  'border-image-slice',2
  'border-image-width',2
  'column-count',2
  'flex',2
  'flex-grow',2
  'flex-positive',2
  'flex-shrink',2
  'flex-order',2
  'grid-row',2
  'grid-column',2
  'font-weight',2
  'line-clamp',2
  'line-height',2
  'opacity',2
  'order',2
  'orphans',2
  'tab-size',2
  'widows',2
  'z-index',2
  'zoom',2
  'fill-opacity',2
  'flood-opacity',2
  'stop-opacity',2
  'stroke-dasharray',2
  'stroke-dashoffset',2
  'stroke-miterlimit',2
  'stroke-opacity',2
  'stroke-width',2
]);2
2
// put top level styles into an '&' object2
function expandRules(rules: RawRules): NormalisedRules {2
  const expandedRules = {};2
  const rootRules = {};2
2
  for (const key in rules) {2
    const val = rules[key];2
2
    if (typeof val === 'object') {2
      expandedRules[key] = val;2
    } else {2
      rootRules[key] = val;2
    }2
  }2
2
  if (Object.keys(rootRules).length) {2
    expandedRules['&'] = rootRules;2
  }2
2
  return expandedRules;2
}2
2
function shouldAppendPixel(key: string, val: mixed): boolean {2
  return (2
    typeof val === 'number' && !unitlessNumberProperties.has(key) && !isNaN(val)2
  );2
}2
2
export function normaliseRules(rules: RawRules): NormalisedRules {2
  const expandedRules = expandRules(rules);2
2
  const builtRules = {};2
2
  for (const key in expandedRules) {2
    const rules = expandedRules[key];2
    const myRules = {};2
2
    for (const key in rules) {2
      const val = rules[key];2
2
      let dashedKey = dashify(key);2
      if (/[A-Z]/.test(key[0])) {2
        dashedKey = `-${dashedKey}`;2
      }2
2
      myRules[dashedKey] = val;2
    }2
2
    if (Object.keys(myRules).length) {2
      builtRules[key] = myRules;2
    }2
  }2
2
  return builtRules;2
}2
2
export function buildKeyframeRules(2
  rules: KeyframeRules,2
): NormalisedKeyframeRules {2
  const spec = {};2
2
  for (const selector in rules) {2
    const newRules = {};2
2
    const rules2 = rules[selector];2
    if (!rules2 || typeof rules2 !== 'object') {2
      throw new Error('Keyframe spec must only have objects');2
    }2
2
    for (const key in rules2) {2
      let val = rules2[key];2
2
      if (shouldAppendPixel(key, val)) {2
        val += 'px';2
      } else if (typeof val === 'number') {2
        val = String(val);2
      }2
2
      if (typeof val !== 'string') {2
        throw new Error('Keyframe objects must only have strings values');2
      }2
2
      newRules[key] = val;2
    }2
2
    spec[selector] = newRules;2
  }2
2
  return spec;2
}2
2
export function buildRules(2
  rules: BaseRules,2
  props: NormalisedRules,2
  context: Object,2
): PlainRules {2
  const style = {};2
  for (const key in rules) {2
    let val = rules[key];2
    if (typeof val === 'function') {2
      val = val(props, context);2
    }2
    if (val != null && shouldAppendPixel(key, val)) {2
      val += 'px';2
    }2
    if (val != null) {2
      style[key] = String(val);2
    }2
  }2
  return style;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const invariant = require('invariant');2
2
function makeStyleTag(): HTMLStyleElement {2
  const tag = document.createElement('style');2
  tag.type = 'text/css';2
  tag.appendChild(document.createTextNode(''));2
2
  const {head} = document;2
  invariant(head, 'expected head');2
  head.appendChild(tag);2
2
  return tag;2
}2
2
export class StyleSheet {2
  constructor(isSpeedy?: boolean) {2
    this.injected = false;2
    this.isSpeedy = Boolean(isSpeedy);2
2
    this.flush();2
    this.inject();2
  }2
2
  ruleIndexes: Array<string>;2
  injected: boolean;2
  isSpeedy: boolean;2
  tag: HTMLStyleElement;2
2
  getRuleCount(): number {2
    return this.ruleIndexes.length;2
  }2
2
  flush() {2
    this.ruleIndexes = [];2
    if (this.tag) {2
      this.tag.innerHTML = '';2
    }2
  }2
2
  inject() {2
    if (this.injected) {2
      throw new Error('already injected stylesheet!');2
    }2
2
    this.tag = makeStyleTag();2
    this.injected = true;2
  }2
2
  delete(key: string) {2
    const index = this.ruleIndexes.indexOf(key);2
    if (index < 0) {2
      // TODO maybe error2
      return;2
    }2
2
    this.ruleIndexes.splice(index, 1);2
2
    const tag = this.tag;2
    if (this.isSpeedy) {2
      const sheet = tag.sheet;2
      invariant(sheet, 'expected sheet');2
2
      // $FlowFixMe: sheet is actually CSSStylesheet2
      sheet.deleteRule(index);2
    } else {2
      tag.removeChild(tag.childNodes[index + 1]);2
    }2
  }2
2
  insert(key: string, rule: string) {2
    const tag = this.tag;2
2
    if (this.isSpeedy) {2
      const sheet = tag.sheet;2
      invariant(sheet, 'expected sheet');2
2
      // $FlowFixMe: sheet is actually CSSStylesheet2
      sheet.insertRule(rule, sheet.cssRules.length);2
    } else {2
      tag.appendChild(document.createTextNode(rule));2
    }2
2
    this.ruleIndexes.push(key);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type alignContent =2
  | 'flex-start'2
  | 'flex-end'2
  | 'center'2
  | 'space-between'2
  | 'space-around'2
  | 'stretch';2
export type alignItems =2
  | 'flex-start'2
  | 'flex-end'2
  | 'center'2
  | 'baseline'2
  | 'stretch';2
export type alignSelf =2
  | 'auto'2
  | 'flex-start'2
  | 'flex-end'2
  | 'center'2
  | 'baseline'2
  | 'stretch';2
export type all = 'initial' | 'inherit' | 'unset';2
export type animation = singleAnimation;2
export type animationDelay = number;2
export type animationDirection = singleAnimationDirection;2
export type animationDuration = string | number;2
export type animationFillMode = singleAnimationFillMode;2
export type animationIterationCount = singleAnimationIterationCount;2
export type animationName = singleAnimationName;2
export type animationPlayState = singleAnimationPlayState;2
export type animationTimingFunction = singleTimingFunction;2
export type appearance = 'auto' | 'none';2
export type azimuth = number | string | 'leftwards' | 'rightwards';2
export type backdropFilter = 'none' | string;2
export type backfaceVisibility = 'visible' | 'hidden';2
type backgroundSyntax = {|2
  attachment?: attachment,2
  color?: color,2
  image?: bgImage,2
  position?: string,2
  repeat?: repeatStyle,2
|};2
export type background = string | finalBgLayer | backgroundSyntax;2
export type backgroundAttachment = attachment;2
export type backgroundBlendMode = blendMode;2
export type backgroundClip = box;2
export type backgroundColor = color;2
export type backgroundImage = bgImage;2
export type backgroundOrigin = box;2
export type backgroundPosition = string;2
export type backgroundPositionX = string;2
export type backgroundPositionY = string;2
export type backgroundRepeat = repeatStyle;2
export type backgroundSize = bgSize;2
export type blockSize = width;2
type borderSyntax = {|2
  width?: borderWidth,2
  style?: brStyle,2
  color?: color,2
|};2
export type border = borderWidth | brStyle | color | borderSyntax;2
export type borderBlockEnd = borderWidth | borderStyle | color;2
export type borderBlockEndColor = color;2
export type borderBlockEndStyle = borderStyle;2
export type borderBlockEndWidth = borderWidth;2
export type borderBlockStart = borderWidth | borderStyle | color;2
export type borderBlockStartColor = color;2
export type borderBlockStartStyle = borderStyle;2
export type borderBlockStartWidth = borderWidth;2
export type borderBottomLeftRadius = lengthPercentage;2
export type borderBottomRightRadius = lengthPercentage;2
export type borderBottomStyle = brStyle;2
export type borderBottomWidth = borderWidth;2
export type borderCollapse = 'collapse' | 'separate';2
export type borderColor = color;2
export type borderImage =2
  | borderImageSource2
  | borderImageSlice2
  | string2
  | borderImageRepeat;2
export type borderImageOutset = string;2
export type borderImageRepeat = string;2
export type borderImageSlice = string | number | 'fill';2
export type borderImageSource = 'none' | string;2
export type borderImageWidth = string;2
export type borderInlineEnd = borderWidth | borderStyle | color;2
export type borderInlineEndColor = color;2
export type borderInlineEndStyle = borderStyle;2
export type borderInlineEndWidth = borderWidth;2
export type borderInlineStart = borderWidth | borderStyle | color;2
export type borderInlineStartColor = color;2
export type borderInlineStartStyle = borderStyle;2
export type borderInlineStartWidth = borderWidth;2
export type borderLeftColor = color;2
export type borderLeftStyle = brStyle;2
export type borderLeftWidth = borderWidth;2
export type borderRightColor = color;2
export type borderRightStyle = brStyle;2
export type borderRightWidth = borderWidth;2
export type borderRadius = lengthPercentage;2
export type borderSpacing = number;2
export type borderStyle = brStyle;2
export type borderTopLeftRadius = lengthPercentage;2
export type borderTopRightRadius = lengthPercentage;2
export type borderTopStyle = brStyle;2
export type borderTopWidth = borderWidth;2
export type boxAlign = 'start' | 'center' | 'end' | 'baseline' | 'stretch';2
export type boxDecorationBreak = 'slice' | 'clone';2
export type boxDirection = 'normal' | 'reverse' | 'inherit';2
export type boxFlex = number;2
export type boxFlexGroup = number;2
export type boxLines = 'single' | 'multiple';2
export type boxOrdinalGroup = number;2
export type boxOrient =2
  | 'horizontal'2
  | 'vertical'2
  | 'inline-axis'2
  | 'block-axis'2
  | 'inherit';2
export type boxPack = 'start' | 'center' | 'end' | 'justify';2
type boxShadowSyntax = {|2
  x?: number,2
  y?: number,2
  blur?: number,2
  spread?: number,2
  color?: string,2
  inset?: boolean,2
|};2
export type boxShadow =2
  | 'none'2
  | string2
  | boxShadowSyntax2
  | Array<string | boxShadowSyntax>;2
export type boxSizing = 'content-box' | 'border-box';2
export type boxSuppress = 'show' | 'discard' | 'hide';2
export type breakAfter =2
  | 'auto'2
  | 'avoid'2
  | 'avoid-page'2
  | 'page'2
  | 'left'2
  | 'right'2
  | 'recto'2
  | 'verso'2
  | 'avoid-column'2
  | 'column'2
  | 'avoid-region'2
  | 'region';2
export type breakBefore =2
  | 'auto'2
  | 'avoid'2
  | 'avoid-page'2
  | 'page'2
  | 'left'2
  | 'right'2
  | 'recto'2
  | 'verso'2
  | 'avoid-column'2
  | 'column'2
  | 'avoid-region'2
  | 'region';2
export type breakInside =2
  | 'auto'2
  | 'avoid'2
  | 'avoid-page'2
  | 'avoid-column'2
  | 'avoid-region';2
export type captionSide =2
  | 'top'2
  | 'bottom'2
  | 'block-start'2
  | 'block-end'2
  | 'inline-start'2
  | 'inline-end';2
export type clear =2
  | 'none'2
  | 'left'2
  | 'right'2
  | 'both'2
  | 'inline-start'2
  | 'inline-end';2
export type clip = string | 'auto';2
export type clipPath = string | 'none';2
export type columnCount = number | 'auto';2
export type columnFill = 'auto' | 'balance';2
export type columnGap = number | 'normal';2
export type columnRule = columnRuleWidth | columnRuleStyle | columnRuleColor;2
export type columnRuleColor = color;2
export type columnRuleStyle = brStyle;2
export type columnRuleWidth = borderWidth;2
export type columnSpan = 'none' | 'all';2
export type columnWidth = number | 'auto';2
export type columns = columnWidth | columnCount;2
export type contain = 'none' | 'strict' | 'content' | string;2
export type content = string;2
export type counterIncrement = string | 'none';2
export type counterReset = string | 'none';2
export type cursor =2
  | 'auto'2
  | 'default'2
  | 'none'2
  | 'context-menu'2
  | 'help'2
  | 'pointer'2
  | 'progress'2
  | 'wait'2
  | 'cell'2
  | 'crosshair'2
  | 'text'2
  | 'vertical-text'2
  | 'alias'2
  | 'copy'2
  | 'move'2
  | 'no-drop'2
  | 'not-allowed'2
  | 'e-resize'2
  | 'n-resize'2
  | 'ne-resize'2
  | 'nw-resize'2
  | 's-resize'2
  | 'se-resize'2
  | 'sw-resize'2
  | 'w-resize'2
  | 'ew-resize'2
  | 'ns-resize'2
  | 'nesw-resize'2
  | 'nwse-resize'2
  | 'col-resize'2
  | 'row-resize'2
  | 'all-scroll'2
  | 'zoom-in'2
  | 'zoom-out'2
  | 'grab'2
  | 'grabbing'2
  | '-webkit-grab'2
  | '-webkit-grabbing';2
export type direction = 'ltr' | 'rtl';2
export type display =2
  | 'none'2
  | 'inline'2
  | 'block'2
  | 'list-item'2
  | 'inline-list-item'2
  | 'inline-block'2
  | 'inline-table'2
  | 'table'2
  | 'table-cell'2
  | 'table-column'2
  | 'table-column-group'2
  | 'table-footer-group'2
  | 'table-header-group'2
  | 'table-row'2
  | 'table-row-group'2
  | 'flex'2
  | 'inline-flex'2
  | 'grid'2
  | 'inline-grid'2
  | 'run-in'2
  | 'ruby'2
  | 'ruby-base'2
  | 'ruby-text'2
  | 'ruby-base-container'2
  | 'ruby-text-container'2
  | 'contents';2
export type displayInside =2
  | 'auto'2
  | 'block'2
  | 'table'2
  | 'flex'2
  | 'grid'2
  | 'ruby';2
export type displayList = 'none' | 'list-item';2
export type displayOutside =2
  | 'block-level'2
  | 'inline-level'2
  | 'run-in'2
  | 'contents'2
  | 'none'2
  | 'table-row-group'2
  | 'table-header-group'2
  | 'table-footer-group'2
  | 'table-row'2
  | 'table-cell'2
  | 'table-column-group'2
  | 'table-column'2
  | 'table-caption'2
  | 'ruby-base'2
  | 'ruby-text'2
  | 'ruby-base-container'2
  | 'ruby-text-container';2
export type emptyCells = 'show' | 'hide';2
export type filter = 'none' | string;2
export type flex = 'none' | string | number;2
export type flexBasis = 'content' | number | string;2
export type flexDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse';2
export type flexFlow = flexDirection | flexWrap;2
export type flexGrow = number;2
export type flexShrink = number;2
export type flexWrap = 'nowrap' | 'wrap' | 'wrap-reverse';2
export type float = 'left' | 'right' | 'none' | 'inline-start' | 'inline-end';2
export type font =2
  | string2
  | 'caption'2
  | 'icon'2
  | 'menu'2
  | 'message-box'2
  | 'small-caption'2
  | 'status-bar';2
export type fontFamily = string;2
export type fontFeatureSettings = 'normal' | string;2
export type fontKerning = 'auto' | 'normal' | 'none';2
export type fontLanguageOverride = 'normal' | string;2
export type fontSize = absoluteSize | relativeSize | lengthPercentage;2
export type fontSizeAdjust = 'none' | number;2
export type fontStretch =2
  | 'normal'2
  | 'ultra-condensed'2
  | 'extra-condensed'2
  | 'condensed'2
  | 'semi-condensed'2
  | 'semi-expanded'2
  | 'expanded'2
  | 'extra-expanded'2
  | 'ultra-expanded';2
export type fontStyle = 'normal' | 'italic' | 'oblique';2
export type fontSynthesis = 'none' | string;2
export type fontVariant = 'normal' | 'none' | string;2
export type fontVariantAlternates = 'normal' | string;2
export type fontVariantCaps =2
  | 'normal'2
  | 'small-caps'2
  | 'all-small-caps'2
  | 'petite-caps'2
  | 'all-petite-caps'2
  | 'unicase'2
  | 'titling-caps';2
export type fontVariantEastAsian = 'normal' | string;2
export type fontVariantLigatures = 'normal' | 'none' | string;2
export type fontVariantNumeric = 'normal' | string;2
export type fontVariantPosition = 'normal' | 'sub' | 'super';2
export type fontWeight =2
  | 'inherit'2
  | 'normal'2
  | 'bold'2
  | 'bolder'2
  | 'lighter'2
  | 1002
  | 2002
  | 3002
  | 4002
  | 5002
  | 6002
  | 7002
  | 8002
  | 900;2
export type grid = gridTemplate | string;2
export type gridArea = gridLine | string;2
export type gridAutoColumns = trackSize;2
export type gridAutoFlow = string | 'dense';2
export type gridAutoRows = trackSize;2
export type gridColumn = gridLine | string;2
export type gridColumnEnd = gridLine;2
export type gridColumnGap = lengthPercentage;2
export type gridColumnStart = gridLine;2
export type gridGap = gridRowGap | gridColumnGap;2
export type gridRow = gridLine | string;2
export type gridRowEnd = gridLine;2
export type gridRowGap = lengthPercentage;2
export type gridRowStart = gridLine;2
export type gridTemplate = 'none' | 'subgrid' | string;2
export type gridTemplateAreas = 'none' | string;2
export type gridTemplateColumns = 'none' | 'subgrid' | string;2
export type gridTemplateRows = 'none' | 'subgrid' | string;2
export type hyphens = 'none' | 'manual' | 'auto';2
export type imageOrientation = 'from-image' | number | string;2
export type imageRendering =2
  | 'auto'2
  | 'crisp-edges'2
  | 'pixelated'2
  | 'optimizeSpeed'2
  | 'optimizeQuality'2
  | string;2
export type imageResolution = string | 'snap';2
export type imeMode = 'auto' | 'normal' | 'active' | 'inactive' | 'disabled';2
export type initialLetter = 'normal' | string;2
export type initialLetterAlign = string;2
export type inlineSize = width;2
export type isolation = 'auto' | 'isolate';2
export type justifyContent =2
  | 'flex-start'2
  | 'flex-end'2
  | 'center'2
  | 'space-between'2
  | 'space-around';2
export type letterSpacing = 'normal' | lengthPercentage;2
export type lineBreak = 'auto' | 'loose' | 'normal' | 'strict';2
export type lineHeight = 'normal' | number | string;2
export type listStyle = listStyleType | listStylePosition | listStyleImage;2
export type listStyleImage = string | 'none';2
export type listStylePosition = 'inside' | 'outside';2
export type listStyleType = string | 'none';2
type marginSyntax = {|2
  vertical?: number | string,2
  horizontal?: number | string,2
  top?: number | string,2
  left?: number | string,2
  right?: number | string,2
  bottom?: number | string,2
|};2
export type margin = number | string | marginSyntax;2
export type marginBlockEnd = marginLeft;2
export type marginBlockStart = marginLeft;2
export type marginBottom = number | string | 'auto';2
export type marginInlineEnd = marginLeft;2
export type marginInlineStart = marginLeft;2
export type marginLeft = number | string | 'auto';2
export type marginRight = number | string | 'auto';2
export type marginTop = number | string | 'auto';2
export type markerOffset = number | 'auto';2
export type mask = maskLayer;2
export type maskClip = string;2
export type maskComposite = compositeOperator;2
export type maskMode = maskingMode;2
export type maskOrigin = geometryBox;2
export type maskPosition = string;2
export type maskRepeat = repeatStyle;2
export type maskSize = bgSize;2
export type maskType = 'luminance' | 'alpha';2
export type maxBlockSize = maxWidth;2
export type maxHeight =2
  | number2
  | string2
  | 'none'2
  | 'max-content'2
  | 'min-content'2
  | 'fit-content'2
  | 'fill-available';2
export type maxInlineSize = maxWidth;2
export type maxWidth =2
  | number2
  | string2
  | 'none'2
  | 'max-content'2
  | 'min-content'2
  | 'fit-content'2
  | 'fill-available';2
export type minBlockSize = minWidth;2
export type minHeight =2
  | number2
  | string2
  | 'auto'2
  | 'max-content'2
  | 'min-content'2
  | 'fit-content'2
  | 'fill-available';2
export type minInlineSize = minWidth;2
export type minWidth =2
  | number2
  | string2
  | 'auto'2
  | 'max-content'2
  | 'min-content'2
  | 'fit-content'2
  | 'fill-available';2
export type mixBlendMode = blendMode;2
export type motion = motionPath | motionOffset | motionRotation;2
export type motionOffset = lengthPercentage;2
export type motionPath = string | geometryBox | 'none';2
export type motionRotation = string | number;2
export type objectFit = 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';2
export type objectPosition = string;2
export type offsetBlockEnd = string;2
export type offsetBlockStart = string;2
export type offsetInlineEnd = string;2
export type offsetInlineStart = string;2
export type opacity = number;2
export type order = number;2
export type orphans = number;2
type outlineSyntax = {|2
  width?: borderWidth,2
  style?: brStyle,2
  color?: color,2
|};2
export type outline = string | outlineSyntax;2
export type outlineColor = color | 'invert';2
export type outlineOffset = number;2
export type outlineStyle = 'auto' | brStyle;2
export type outlineWidth = borderWidth;2
export type overflow = 'visible' | 'hidden' | 'scroll' | 'auto';2
export type overflowClipBox = 'padding-box' | 'content-box';2
export type overflowWrap = 'normal' | 'break-word';2
export type overflowX = 'visible' | 'hidden' | 'scroll' | 'auto';2
export type overflowY = 'visible' | 'hidden' | 'scroll' | 'auto';2
type paddingSyntax = {|2
  vertical?: number | string,2
  horizontal?: number | string,2
  top?: number | string,2
  left?: number | string,2
  right?: number | string,2
  bottom?: number | string,2
|};2
export type padding = number | string | paddingSyntax;2
export type paddingBlockEnd = paddingLeft;2
export type paddingBlockStart = paddingLeft;2
export type paddingBottom = number | string;2
export type paddingInlineEnd = paddingLeft;2
export type paddingInlineStart = paddingLeft;2
export type paddingLeft = number | string;2
export type paddingRight = number | string;2
export type paddingTop = number | string;2
export type pageBreakAfter = 'auto' | 'always' | 'avoid' | 'left' | 'right';2
export type pageBreakBefore = 'auto' | 'always' | 'avoid' | 'left' | 'right';2
export type pageBreakInside = 'auto' | 'avoid';2
export type perspective = 'none' | number;2
export type perspectiveOrigin = string;2
export type pointerEvents =2
  | 'auto'2
  | 'none'2
  | 'visiblePainted'2
  | 'visibleFill'2
  | 'visibleStroke'2
  | 'visible'2
  | 'painted'2
  | 'fill'2
  | 'stroke'2
  | 'all'2
  | 'inherit';2
export type position = 'static' | 'relative' | 'absolute' | 'sticky' | 'fixed';2
export type quotes = string | 'none';2
export type resize = 'none' | 'both' | 'horizontal' | 'vertical';2
export type rubyAlign = 'start' | 'center' | 'space-between' | 'space-around';2
export type rubyMerge = 'separate' | 'collapse' | 'auto';2
export type rubyPosition = 'over' | 'under' | 'inter-character';2
export type scrollBehavior = 'auto' | 'smooth';2
export type scrollSnapCoordinate = 'none' | string;2
export type scrollSnapDestination = string;2
export type scrollSnapPointsX = 'none' | string;2
export type scrollSnapPointsY = 'none' | string;2
export type scrollSnapType = 'none' | 'mandatory' | 'proximity';2
export type scrollSnapTypeX = 'none' | 'mandatory' | 'proximity';2
export type scrollSnapTypeY = 'none' | 'mandatory' | 'proximity';2
export type shapeImageThreshold = number;2
export type shapeMargin = lengthPercentage;2
export type shapeOutside = 'none' | shapeBox | string;2
export type tabSize = number;2
export type tableLayout = 'auto' | 'fixed';2
export type textAlign =2
  | 'start'2
  | 'end'2
  | 'left'2
  | 'right'2
  | 'center'2
  | 'justify'2
  | 'match-parent';2
export type textAlignLast =2
  | 'auto'2
  | 'start'2
  | 'end'2
  | 'left'2
  | 'right'2
  | 'center'2
  | 'justify';2
export type textCombineUpright = 'none' | 'all' | string;2
export type textDecoration =2
  | textDecorationLine2
  | textDecorationStyle2
  | textDecorationColor;2
export type textDecorationColor = color;2
export type textDecorationLine = 'none' | string;2
export type textDecorationSkip = 'none' | string;2
export type textDecorationStyle =2
  | 'solid'2
  | 'double'2
  | 'dotted'2
  | 'dashed'2
  | 'wavy';2
export type textEmphasis = textEmphasisStyle | textEmphasisColor;2
export type textEmphasisColor = color;2
export type textEmphasisPosition = string;2
export type textEmphasisStyle = 'none' | string;2
export type textIndent = string | 'hanging' | 'each-line';2
export type textOrientation = 'mixed' | 'upright' | 'sideways';2
export type textOverflow = string;2
export type textRendering =2
  | 'auto'2
  | 'optimizeSpeed'2
  | 'optimizeLegibility'2
  | 'geometricPrecision';2
type textShadowSyntax = {|2
  x?: number,2
  y?: number,2
  blur?: number,2
  color?: string,2
|};2
export type textShadow = 'none' | string | textShadowSyntax;2
export type textSizeAdjust = 'none' | 'auto' | string;2
export type textTransform =2
  | 'none'2
  | 'capitalize'2
  | 'uppercase'2
  | 'lowercase'2
  | 'full-width';2
export type textUnderlinePosition = 'auto' | string;2
export type touchAction = 'auto' | 'none' | string | 'manipulation';2
export type transform = 'none' | string;2
export type transformBox = 'border-box' | 'fill-box' | 'view-box';2
export type transformOrigin = string | number;2
export type transformStyle = 'flat' | 'preserve-3d';2
type transitionSyntax = {|2
  property?: 'none' | singleTransitionProperty,2
  duration?: number,2
  timingFunction?: singleTransitionTimingFunction,2
  delay?: number,2
|};2
export type transition =2
  | singleTransition2
  | transitionSyntax2
  | Array<singleTransition | transitionSyntax>;2
export type transitionDelay = number;2
export type transitionDuration = number;2
export type transitionProperty = 'none' | singleTransitionProperty;2
export type transitionTimingFunction = singleTransitionTimingFunction;2
export type unicodeBidi =2
  | 'normal'2
  | 'embed'2
  | 'isolate'2
  | 'bidi-override'2
  | 'isolate-override'2
  | 'plaintext';2
export type userSelect = 'auto' | 'text' | 'none' | 'contain' | 'all';2
export type verticalAlign =2
  | 'baseline'2
  | 'sub'2
  | 'super'2
  | 'text-top'2
  | 'text-bottom'2
  | 'middle'2
  | 'top'2
  | 'bottom'2
  | string2
  | number;2
export type visibility = 'visible' | 'hidden' | 'collapse';2
export type whiteSpace = 'normal' | 'pre' | 'nowrap' | 'pre-wrap' | 'pre-line';2
export type widows = number;2
export type width =2
  | string2
  | 'available'2
  | 'min-content'2
  | 'max-content'2
  | 'fit-content'2
  | 'auto';2
export type willChange = 'auto' | animatableFeature;2
export type wordBreak =2
  | 'normal'2
  | 'break-all'2
  | 'keep-all'2
  | nonStandardWordBreak;2
export type wordSpacing = 'normal' | lengthPercentage;2
export type wordWrap = 'normal' | 'break-word';2
export type writingMode =2
  | 'horizontal-tb'2
  | 'vertical-rl'2
  | 'vertical-lr'2
  | 'sideways-rl'2
  | 'sideways-lr'2
  | svgWritingMode;2
export type zIndex = 'auto' | number;2
export type alignmentBaseline =2
  | 'auto'2
  | 'baseline'2
  | 'before-edge'2
  | 'text-before-edge'2
  | 'middle'2
  | 'central'2
  | 'after-edge'2
  | 'text-after-edge'2
  | 'ideographic'2
  | 'alphabetic'2
  | 'hanging'2
  | 'mathematical';2
export type baselineShift = 'baseline' | 'sub' | 'super' | svgLength;2
export type behavior = string;2
export type clipRule = 'nonzero' | 'evenodd';2
export type cue = cueBefore | cueAfter;2
export type cueAfter = string | number | 'none';2
export type cueBefore = string | number | 'none';2
export type dominantBaseline =2
  | 'auto'2
  | 'use-script'2
  | 'no-change'2
  | 'reset-size'2
  | 'ideographic'2
  | 'alphabetic'2
  | 'hanging'2
  | 'mathematical'2
  | 'central'2
  | 'middle'2
  | 'text-after-edge'2
  | 'text-before-edge';2
export type fill = paint;2
export type fillOpacity = number;2
export type fillRule = 'nonzero' | 'evenodd';2
export type glyphOrientationHorizontal = number;2
export type glyphOrientationVertical = number;2
export type kerning = 'auto' | svgLength;2
export type marker = 'none' | string;2
export type markerEnd = 'none' | string;2
export type markerMid = 'none' | string;2
export type markerStart = 'none' | string;2
export type pause = pauseBefore | pauseAfter;2
export type pauseAfter =2
  | number2
  | 'none'2
  | 'x-weak'2
  | 'weak'2
  | 'medium'2
  | 'strong'2
  | 'x-strong';2
export type pauseBefore =2
  | number2
  | 'none'2
  | 'x-weak'2
  | 'weak'2
  | 'medium'2
  | 'strong'2
  | 'x-strong';2
export type rest = restBefore | restAfter;2
export type restAfter =2
  | number2
  | 'none'2
  | 'x-weak'2
  | 'weak'2
  | 'medium'2
  | 'strong'2
  | 'x-strong';2
export type restBefore =2
  | number2
  | 'none'2
  | 'x-weak'2
  | 'weak'2
  | 'medium'2
  | 'strong'2
  | 'x-strong';2
export type shapeRendering =2
  | 'auto'2
  | 'optimizeSpeed'2
  | 'crispEdges'2
  | 'geometricPrecision';2
export type src = string;2
export type speak = 'auto' | 'none' | 'normal';2
export type speakAs = 'normal' | 'spell-out' | 'digits' | string;2
export type stroke = paint;2
export type strokeDasharray = 'none' | string;2
export type strokeDashoffset = svgLength;2
export type strokeLinecap = 'butt' | 'round' | 'square';2
export type strokeLinejoin = 'miter' | 'round' | 'bevel';2
export type strokeMiterlimit = number;2
export type strokeOpacity = number;2
export type strokeWidth = svgLength;2
export type textAnchor = 'start' | 'middle' | 'end';2
export type unicodeRange = string;2
export type voiceBalance =2
  | number2
  | 'left'2
  | 'center'2
  | 'right'2
  | 'leftwards'2
  | 'rightwards';2
export type voiceDuration = 'auto' | number;2
export type voiceFamily = string | 'preserve';2
export type voicePitch = number | 'absolute' | string;2
export type voiceRange = number | 'absolute' | string;2
export type voiceRate = string;2
export type voiceStress = 'normal' | 'strong' | 'moderate' | 'none' | 'reduced';2
export type voiceVolume = 'silent' | string;2
export type zoom = 'normal' | 'reset' | number | string;2
export type absoluteSize =2
  | 'xx-small'2
  | 'x-small'2
  | 'small'2
  | 'medium'2
  | 'large'2
  | 'x-large'2
  | 'xx-large';2
export type animatableFeature = 'scroll-position' | 'contents' | string;2
export type attachment = 'scroll' | 'fixed' | 'local';2
export type bgImage = 'none' | string;2
export type bgSize = string | 'cover' | 'contain';2
export type box = 'border-box' | 'padding-box' | 'content-box';2
export type brStyle =2
  | 'none'2
  | 'hidden'2
  | 'dotted'2
  | 'dashed'2
  | 'solid'2
  | 'double'2
  | 'groove'2
  | 'ridge'2
  | 'inset'2
  | 'outset';2
export type borderWidth = number | 'thin' | 'medium' | 'thick' | string;2
export type color = string;2
export type compositeStyle =2
  | 'clear'2
  | 'copy'2
  | 'source-over'2
  | 'source-in'2
  | 'source-out'2
  | 'source-atop'2
  | 'destination-over'2
  | 'destination-in'2
  | 'destination-out'2
  | 'destination-atop'2
  | 'xor';2
export type compositeOperator = 'add' | 'subtract' | 'intersect' | 'exclude';2
export type finalBgLayer =2
  | bgImage2
  | string2
  | repeatStyle2
  | attachment2
  | box2
  | backgroundColor;2
export type geometryBox = shapeBox | 'fill-box' | 'stroke-box' | 'view-box';2
export type gridLine = 'auto' | string;2
export type lengthPercentage = number | string;2
export type maskLayer =2
  | maskReference2
  | maskingMode2
  | string2
  | repeatStyle2
  | geometryBox2
  | compositeOperator;2
export type maskReference = 'none' | string;2
export type maskingMode = 'alpha' | 'luminance' | 'match-source';2
export type relativeSize = 'larger' | 'smaller';2
export type repeatStyle = 'repeat-x' | 'repeat-y' | string;2
export type shapeBox = box | 'margin-box';2
export type singleAnimation =2
  | number2
  | singleTimingFunction2
  | singleAnimationIterationCount2
  | singleAnimationDirection2
  | singleAnimationFillMode2
  | singleAnimationPlayState2
  | singleAnimationName;2
export type singleAnimationDirection =2
  | 'normal'2
  | 'reverse'2
  | 'alternate'2
  | 'alternate-reverse';2
export type singleAnimationFillMode =2
  | 'none'2
  | 'forwards'2
  | 'backwards'2
  | 'both';2
export type singleAnimationIterationCount = number;2
export type singleAnimationName = 'none' | string;2
export type singleAnimationPlayState = 'running' | 'paused';2
export type singleTimingFunction = singleTransitionTimingFunction;2
export type singleTransition = singleTransitionTimingFunction | string | number;2
export type singleTransitionTimingFunction =2
  | 'ease'2
  | 'linear'2
  | 'ease-in'2
  | 'ease-out'2
  | 'ease-in-out'2
  | 'step-start'2
  | 'step-end'2
  | string;2
export type singleTransitionProperty = 'all' | string;2
export type trackBreadth =2
  | lengthPercentage2
  | string2
  | 'min-content'2
  | 'max-content'2
  | 'auto';2
export type trackSize = trackBreadth | string;2
export type nonStandardWordBreak = 'break-word';2
export type blendMode =2
  | 'normal'2
  | 'multiply'2
  | 'screen'2
  | 'overlay'2
  | 'darken'2
  | 'lighten'2
  | 'color-dodge'2
  | 'color-burn'2
  | 'hard-light'2
  | 'soft-light'2
  | 'difference'2
  | 'exclusion'2
  | 'hue'2
  | 'saturation'2
  | 'color'2
  | 'luminosity';2
export type maskImage = maskReference;2
export type outlineRadius = borderRadius;2
export type paint = 'none' | 'currentColor' | color | string;2
export type svgLength = string | number;2
export type svgWritingMode = 'lr-tb' | 'rl-tb' | 'tb-rl' | 'lr' | 'rl' | 'tb';2
2
export type CSSPropertyValue<Value> =2
  | Value2
  | ((props: Object, context: Object) => ?Value);2
2
export type CSSPropertySet = {|2
  alignContent?: CSSPropertyValue<alignContent>,2
  alignItems?: CSSPropertyValue<alignItems>,2
  alignSelf?: CSSPropertyValue<alignSelf>,2
  all?: CSSPropertyValue<all>,2
  animation?: CSSPropertyValue<animation>,2
  animationDelay?: CSSPropertyValue<animationDelay>,2
  animationDirection?: CSSPropertyValue<animationDirection>,2
  animationDuration?: CSSPropertyValue<animationDuration>,2
  animationFillMode?: CSSPropertyValue<animationFillMode>,2
  animationIterationCount?: CSSPropertyValue<animationIterationCount>,2
  animationName?: CSSPropertyValue<animationName>,2
  animationPlayState?: CSSPropertyValue<animationPlayState>,2
  animationTimingFunction?: CSSPropertyValue<animationTimingFunction>,2
  appearance?: CSSPropertyValue<appearance>,2
  azimuth?: CSSPropertyValue<azimuth>,2
  backdropFilter?: CSSPropertyValue<backdropFilter>,2
  backfaceVisibility?: CSSPropertyValue<backfaceVisibility>,2
  background?: CSSPropertyValue<background>,2
  backgroundAttachment?: CSSPropertyValue<backgroundAttachment>,2
  backgroundBlendMode?: CSSPropertyValue<backgroundBlendMode>,2
  backgroundClip?: CSSPropertyValue<backgroundClip>,2
  backgroundColor?: CSSPropertyValue<backgroundColor>,2
  backgroundImage?: CSSPropertyValue<backgroundImage>,2
  backgroundOrigin?: CSSPropertyValue<backgroundOrigin>,2
  backgroundPosition?: CSSPropertyValue<backgroundPosition>,2
  backgroundPositionX?: CSSPropertyValue<backgroundPositionX>,2
  backgroundPositionY?: CSSPropertyValue<backgroundPositionY>,2
  backgroundRepeat?: CSSPropertyValue<backgroundRepeat>,2
  backgroundSize?: CSSPropertyValue<backgroundSize>,2
  blockSize?: CSSPropertyValue<blockSize>,2
  border?: CSSPropertyValue<border>,2
  borderBlockEnd?: CSSPropertyValue<borderBlockEnd>,2
  borderBlockEndColor?: CSSPropertyValue<borderBlockEndColor>,2
  borderBlockEndStyle?: CSSPropertyValue<borderBlockEndStyle>,2
  borderBlockEndWidth?: CSSPropertyValue<borderBlockEndWidth>,2
  borderBlockStart?: CSSPropertyValue<borderBlockStart>,2
  borderBlockStartColor?: CSSPropertyValue<borderBlockStartColor>,2
  borderBlockStartStyle?: CSSPropertyValue<borderBlockStartStyle>,2
  borderBlockStartWidth?: CSSPropertyValue<borderBlockStartWidth>,2
  borderBottom?: CSSPropertyValue<border>,2
  borderBottomColor?: CSSPropertyValue<color>,2
  borderBottomLeftRadius?: CSSPropertyValue<borderBottomLeftRadius>,2
  borderBottomRightRadius?: CSSPropertyValue<borderBottomRightRadius>,2
  borderBottomStyle?: CSSPropertyValue<borderBottomStyle>,2
  borderBottomWidth?: CSSPropertyValue<borderBottomWidth>,2
  borderCollapse?: CSSPropertyValue<borderCollapse>,2
  borderColor?: CSSPropertyValue<borderColor>,2
  borderImage?: CSSPropertyValue<borderImage>,2
  borderImageOutset?: CSSPropertyValue<borderImageOutset>,2
  borderImageRepeat?: CSSPropertyValue<borderImageRepeat>,2
  borderImageSlice?: CSSPropertyValue<borderImageSlice>,2
  borderImageSource?: CSSPropertyValue<borderImageSource>,2
  borderImageWidth?: CSSPropertyValue<borderImageWidth>,2
  borderInlineEnd?: CSSPropertyValue<borderInlineEnd>,2
  borderInlineEndColor?: CSSPropertyValue<borderInlineEndColor>,2
  borderInlineEndStyle?: CSSPropertyValue<borderInlineEndStyle>,2
  borderInlineEndWidth?: CSSPropertyValue<borderInlineEndWidth>,2
  borderInlineStart?: CSSPropertyValue<borderInlineStart>,2
  borderInlineStartColor?: CSSPropertyValue<borderInlineStartColor>,2
  borderInlineStartStyle?: CSSPropertyValue<borderInlineStartStyle>,2
  borderInlineStartWidth?: CSSPropertyValue<borderInlineStartWidth>,2
  borderLeft?: CSSPropertyValue<border>,2
  borderLeftColor?: CSSPropertyValue<borderLeftColor>,2
  borderLeftStyle?: CSSPropertyValue<borderLeftStyle>,2
  borderLeftWidth?: CSSPropertyValue<borderLeftWidth>,2
  borderRadius?: CSSPropertyValue<borderRadius>,2
  borderRight?: CSSPropertyValue<border>,2
  borderRightColor?: CSSPropertyValue<borderRightColor>,2
  borderRightStyle?: CSSPropertyValue<borderRightStyle>,2
  borderRightWidth?: CSSPropertyValue<borderRightWidth>,2
  borderSpacing?: CSSPropertyValue<borderSpacing>,2
  borderStyle?: CSSPropertyValue<borderStyle>,2
  borderTop?: CSSPropertyValue<border>,2
  borderTopColor?: CSSPropertyValue<color>,2
  borderTopLeftRadius?: CSSPropertyValue<borderTopLeftRadius>,2
  borderTopRightRadius?: CSSPropertyValue<borderTopRightRadius>,2
  borderTopStyle?: CSSPropertyValue<borderTopStyle>,2
  borderTopWidth?: CSSPropertyValue<borderTopWidth>,2
  borderWidth?: CSSPropertyValue<borderWidth>,2
  bottom?: CSSPropertyValue<number | string>,2
  boxAlign?: CSSPropertyValue<boxAlign>,2
  boxDecorationBreak?: CSSPropertyValue<boxDecorationBreak>,2
  boxDirection?: CSSPropertyValue<boxDirection>,2
  boxFlex?: CSSPropertyValue<boxFlex>,2
  boxFlexGroup?: CSSPropertyValue<boxFlexGroup>,2
  boxLines?: CSSPropertyValue<boxLines>,2
  boxOrdinalGroup?: CSSPropertyValue<boxOrdinalGroup>,2
  boxOrient?: CSSPropertyValue<boxOrient>,2
  boxPack?: CSSPropertyValue<boxPack>,2
  boxShadow?: CSSPropertyValue<boxShadow>,2
  boxSizing?: CSSPropertyValue<boxSizing>,2
  boxSuppress?: CSSPropertyValue<boxSuppress>,2
  breakAfter?: CSSPropertyValue<breakAfter>,2
  breakBefore?: CSSPropertyValue<breakBefore>,2
  breakInside?: CSSPropertyValue<breakInside>,2
  captionSide?: CSSPropertyValue<captionSide>,2
  clear?: CSSPropertyValue<clear>,2
  clip?: CSSPropertyValue<clip>,2
  clipPath?: CSSPropertyValue<clipPath>,2
  color?: CSSPropertyValue<color>,2
  columnCount?: CSSPropertyValue<columnCount>,2
  columnFill?: CSSPropertyValue<columnFill>,2
  columnGap?: CSSPropertyValue<columnGap>,2
  columnRule?: CSSPropertyValue<columnRule>,2
  columnRuleColor?: CSSPropertyValue<columnRuleColor>,2
  columnRuleStyle?: CSSPropertyValue<columnRuleStyle>,2
  columnRuleWidth?: CSSPropertyValue<columnRuleWidth>,2
  columnSpan?: CSSPropertyValue<columnSpan>,2
  columnWidth?: CSSPropertyValue<columnWidth>,2
  columns?: CSSPropertyValue<columns>,2
  contain?: CSSPropertyValue<contain>,2
  content?: CSSPropertyValue<content>,2
  counterIncrement?: CSSPropertyValue<counterIncrement>,2
  counterReset?: CSSPropertyValue<counterReset>,2
  cursor?: CSSPropertyValue<cursor>,2
  direction?: CSSPropertyValue<direction>,2
  display?: CSSPropertyValue<display>,2
  displayInside?: CSSPropertyValue<displayInside>,2
  displayList?: CSSPropertyValue<displayList>,2
  displayOutside?: CSSPropertyValue<displayOutside>,2
  emptyCells?: CSSPropertyValue<emptyCells>,2
  filter?: CSSPropertyValue<filter>,2
  flex?: CSSPropertyValue<flex>,2
  flexBasis?: CSSPropertyValue<flexBasis>,2
  flexDirection?: CSSPropertyValue<flexDirection>,2
  flexFlow?: CSSPropertyValue<flexFlow>,2
  flexGrow?: CSSPropertyValue<flexGrow>,2
  flexShrink?: CSSPropertyValue<flexShrink>,2
  flexWrap?: CSSPropertyValue<flexWrap>,2
  float?: CSSPropertyValue<float>,2
  font?: CSSPropertyValue<font>,2
  fontFamily?: CSSPropertyValue<fontFamily>,2
  fontFeatureSettings?: CSSPropertyValue<fontFeatureSettings>,2
  fontKerning?: CSSPropertyValue<fontKerning>,2
  fontLanguageOverride?: CSSPropertyValue<fontLanguageOverride>,2
  fontSize?: CSSPropertyValue<fontSize>,2
  fontSizeAdjust?: CSSPropertyValue<fontSizeAdjust>,2
  fontStretch?: CSSPropertyValue<fontStretch>,2
  fontStyle?: CSSPropertyValue<fontStyle>,2
  fontSynthesis?: CSSPropertyValue<fontSynthesis>,2
  fontVariant?: CSSPropertyValue<fontVariant>,2
  fontVariantAlternates?: CSSPropertyValue<fontVariantAlternates>,2
  fontVariantCaps?: CSSPropertyValue<fontVariantCaps>,2
  fontVariantEastAsian?: CSSPropertyValue<fontVariantEastAsian>,2
  fontVariantLigatures?: CSSPropertyValue<fontVariantLigatures>,2
  fontVariantNumeric?: CSSPropertyValue<fontVariantNumeric>,2
  fontVariantPosition?: CSSPropertyValue<fontVariantPosition>,2
  fontWeight?: CSSPropertyValue<fontWeight>,2
  grid?: CSSPropertyValue<grid>,2
  gridArea?: CSSPropertyValue<gridArea>,2
  gridAutoColumns?: CSSPropertyValue<gridAutoColumns>,2
  gridAutoFlow?: CSSPropertyValue<gridAutoFlow>,2
  gridAutoRows?: CSSPropertyValue<gridAutoRows>,2
  gridColumn?: CSSPropertyValue<gridColumn>,2
  gridColumnEnd?: CSSPropertyValue<gridColumnEnd>,2
  gridColumnGap?: CSSPropertyValue<gridColumnGap>,2
  gridColumnStart?: CSSPropertyValue<gridColumnStart>,2
  gridGap?: CSSPropertyValue<gridGap>,2
  gridRow?: CSSPropertyValue<gridRow>,2
  gridRowEnd?: CSSPropertyValue<gridRowEnd>,2
  gridRowGap?: CSSPropertyValue<gridRowGap>,2
  gridRowStart?: CSSPropertyValue<gridRowStart>,2
  gridTemplate?: CSSPropertyValue<gridTemplate>,2
  gridTemplateAreas?: CSSPropertyValue<gridTemplateAreas>,2
  gridTemplateColumns?: CSSPropertyValue<gridTemplateColumns>,2
  gridTemplateRows?: CSSPropertyValue<gridTemplateRows>,2
  height?: CSSPropertyValue<number | string>,2
  hyphens?: CSSPropertyValue<hyphens>,2
  imageOrientation?: CSSPropertyValue<imageOrientation>,2
  imageRendering?: CSSPropertyValue<imageRendering>,2
  imageResolution?: CSSPropertyValue<imageResolution>,2
  imeMode?: CSSPropertyValue<imeMode>,2
  initialLetter?: CSSPropertyValue<initialLetter>,2
  initialLetterAlign?: CSSPropertyValue<initialLetterAlign>,2
  inlineSize?: CSSPropertyValue<inlineSize>,2
  isolation?: CSSPropertyValue<isolation>,2
  justifyContent?: CSSPropertyValue<justifyContent>,2
  left?: CSSPropertyValue<number | string>,2
  letterSpacing?: CSSPropertyValue<letterSpacing>,2
  lineBreak?: CSSPropertyValue<lineBreak>,2
  lineHeight?: CSSPropertyValue<lineHeight>,2
  listStyle?: CSSPropertyValue<listStyle>,2
  listStyleImage?: CSSPropertyValue<listStyleImage>,2
  listStylePosition?: CSSPropertyValue<listStylePosition>,2
  listStyleType?: CSSPropertyValue<listStyleType>,2
  margin?: CSSPropertyValue<margin>,2
  marginBlockEnd?: CSSPropertyValue<marginBlockEnd>,2
  marginBlockStart?: CSSPropertyValue<marginBlockStart>,2
  marginBottom?: CSSPropertyValue<marginBottom>,2
  marginInlineEnd?: CSSPropertyValue<marginInlineEnd>,2
  marginInlineStart?: CSSPropertyValue<marginInlineStart>,2
  marginLeft?: CSSPropertyValue<marginLeft>,2
  marginRight?: CSSPropertyValue<marginRight>,2
  marginTop?: CSSPropertyValue<marginTop>,2
  markerOffset?: CSSPropertyValue<markerOffset>,2
  mask?: CSSPropertyValue<mask>,2
  maskClip?: CSSPropertyValue<maskClip>,2
  maskComposite?: CSSPropertyValue<maskComposite>,2
  maskImage?: CSSPropertyValue<maskImage>,2
  maskMode?: CSSPropertyValue<maskMode>,2
  maskOrigin?: CSSPropertyValue<maskOrigin>,2
  maskPosition?: CSSPropertyValue<maskPosition>,2
  maskRepeat?: CSSPropertyValue<maskRepeat>,2
  maskSize?: CSSPropertyValue<maskSize>,2
  maskType?: CSSPropertyValue<maskType>,2
  maxBlockSize?: CSSPropertyValue<maxBlockSize>,2
  maxHeight?: CSSPropertyValue<maxHeight>,2
  maxInlineSize?: CSSPropertyValue<maxInlineSize>,2
  maxWidth?: CSSPropertyValue<maxWidth>,2
  minBlockSize?: CSSPropertyValue<minBlockSize>,2
  minHeight?: CSSPropertyValue<minHeight>,2
  minInlineSize?: CSSPropertyValue<minInlineSize>,2
  minWidth?: CSSPropertyValue<minWidth>,2
  mixBlendMode?: CSSPropertyValue<mixBlendMode>,2
  motion?: CSSPropertyValue<motion>,2
  motionOffset?: CSSPropertyValue<motionOffset>,2
  motionPath?: CSSPropertyValue<motionPath>,2
  motionRotation?: CSSPropertyValue<motionRotation>,2
  objectFit?: CSSPropertyValue<objectFit>,2
  objectPosition?: CSSPropertyValue<objectPosition>,2
  offsetBlockEnd?: CSSPropertyValue<offsetBlockEnd>,2
  offsetBlockStart?: CSSPropertyValue<offsetBlockStart>,2
  offsetInlineEnd?: CSSPropertyValue<offsetInlineEnd>,2
  offsetInlineStart?: CSSPropertyValue<offsetInlineStart>,2
  opacity?: CSSPropertyValue<opacity>,2
  order?: CSSPropertyValue<order>,2
  orphans?: CSSPropertyValue<orphans>,2
  outline?: CSSPropertyValue<outline>,2
  outlineColor?: CSSPropertyValue<outlineColor>,2
  outlineOffset?: CSSPropertyValue<outlineOffset>,2
  outlineStyle?: CSSPropertyValue<outlineStyle>,2
  outlineWidth?: CSSPropertyValue<outlineWidth>,2
  overflow?: CSSPropertyValue<overflow>,2
  overflowClipBox?: CSSPropertyValue<overflowClipBox>,2
  overflowWrap?: CSSPropertyValue<overflowWrap>,2
  overflowX?: CSSPropertyValue<overflowX>,2
  overflowY?: CSSPropertyValue<overflowY>,2
  padding?: CSSPropertyValue<padding>,2
  paddingBlockEnd?: CSSPropertyValue<paddingBlockEnd>,2
  paddingBlockStart?: CSSPropertyValue<paddingBlockStart>,2
  paddingBottom?: CSSPropertyValue<paddingBottom>,2
  paddingInlineEnd?: CSSPropertyValue<paddingInlineEnd>,2
  paddingInlineStart?: CSSPropertyValue<paddingInlineStart>,2
  paddingLeft?: CSSPropertyValue<paddingLeft>,2
  paddingRight?: CSSPropertyValue<paddingRight>,2
  paddingTop?: CSSPropertyValue<paddingTop>,2
  paddingH?: CSSPropertyValue<number | string>,2
  paddingV?: CSSPropertyValue<number | string>,2
  marginH?: CSSPropertyValue<number | string>,2
  marginV?: CSSPropertyValue<number | string>,2
  pageBreakAfter?: CSSPropertyValue<pageBreakAfter>,2
  pageBreakBefore?: CSSPropertyValue<pageBreakBefore>,2
  pageBreakInside?: CSSPropertyValue<pageBreakInside>,2
  perspective?: CSSPropertyValue<perspective>,2
  perspectiveOrigin?: CSSPropertyValue<perspectiveOrigin>,2
  pointerEvents?: CSSPropertyValue<pointerEvents>,2
  position?: CSSPropertyValue<position>,2
  quotes?: CSSPropertyValue<quotes>,2
  resize?: CSSPropertyValue<resize>,2
  right?: CSSPropertyValue<number | string>,2
  rubyAlign?: CSSPropertyValue<rubyAlign>,2
  rubyMerge?: CSSPropertyValue<rubyMerge>,2
  rubyPosition?: CSSPropertyValue<rubyPosition>,2
  scrollBehavior?: CSSPropertyValue<scrollBehavior>,2
  scrollSnapCoordinate?: CSSPropertyValue<scrollSnapCoordinate>,2
  scrollSnapDestination?: CSSPropertyValue<scrollSnapDestination>,2
  scrollSnapPointsX?: CSSPropertyValue<scrollSnapPointsX>,2
  scrollSnapPointsY?: CSSPropertyValue<scrollSnapPointsY>,2
  scrollSnapType?: CSSPropertyValue<scrollSnapType>,2
  scrollSnapTypeX?: CSSPropertyValue<scrollSnapTypeX>,2
  scrollSnapTypeY?: CSSPropertyValue<scrollSnapTypeY>,2
  shapeImageThreshold?: CSSPropertyValue<shapeImageThreshold>,2
  shapeMargin?: CSSPropertyValue<shapeMargin>,2
  shapeOutside?: CSSPropertyValue<shapeOutside>,2
  tabSize?: CSSPropertyValue<tabSize>,2
  tableLayout?: CSSPropertyValue<tableLayout>,2
  textAlign?: CSSPropertyValue<textAlign>,2
  textAlignLast?: CSSPropertyValue<textAlignLast>,2
  textCombineUpright?: CSSPropertyValue<textCombineUpright>,2
  textDecoration?: CSSPropertyValue<textDecoration>,2
  textDecorationColor?: CSSPropertyValue<textDecorationColor>,2
  textDecorationLine?: CSSPropertyValue<textDecorationLine>,2
  textDecorationSkip?: CSSPropertyValue<textDecorationSkip>,2
  textDecorationStyle?: CSSPropertyValue<textDecorationStyle>,2
  textEmphasis?: CSSPropertyValue<textEmphasis>,2
  textEmphasisColor?: CSSPropertyValue<textEmphasisColor>,2
  textEmphasisPosition?: CSSPropertyValue<textEmphasisPosition>,2
  textEmphasisStyle?: CSSPropertyValue<textEmphasisStyle>,2
  textIndent?: CSSPropertyValue<textIndent>,2
  textOrientation?: CSSPropertyValue<textOrientation>,2
  textOverflow?: CSSPropertyValue<textOverflow>,2
  textRendering?: CSSPropertyValue<textRendering>,2
  textShadow?: CSSPropertyValue<textShadow>,2
  textSizeAdjust?: CSSPropertyValue<textSizeAdjust>,2
  textTransform?: CSSPropertyValue<textTransform>,2
  textUnderlinePosition?: CSSPropertyValue<textUnderlinePosition>,2
  top?: CSSPropertyValue<number | string>,2
  touchAction?: CSSPropertyValue<touchAction>,2
  transform?: CSSPropertyValue<transform>,2
  transformBox?: CSSPropertyValue<transformBox>,2
  transformOrigin?: CSSPropertyValue<transformOrigin>,2
  transformStyle?: CSSPropertyValue<transformStyle>,2
  transition?: CSSPropertyValue<transition>,2
  transitionDelay?: CSSPropertyValue<transitionDelay>,2
  transitionDuration?: CSSPropertyValue<transitionDuration>,2
  transitionProperty?: CSSPropertyValue<transitionProperty>,2
  transitionTimingFunction?: CSSPropertyValue<transitionTimingFunction>,2
  unicodeBidi?: CSSPropertyValue<unicodeBidi>,2
  userSelect?: CSSPropertyValue<userSelect>,2
  verticalAlign?: CSSPropertyValue<verticalAlign>,2
  visibility?: CSSPropertyValue<visibility>,2
  whiteSpace?: CSSPropertyValue<whiteSpace>,2
  widows?: CSSPropertyValue<widows>,2
  width?: CSSPropertyValue<number | string>,2
  willChange?: CSSPropertyValue<willChange>,2
  wordBreak?: CSSPropertyValue<wordBreak>,2
  wordSpacing?: CSSPropertyValue<wordSpacing>,2
  wordWrap?: CSSPropertyValue<wordWrap>,2
  writingMode?: CSSPropertyValue<writingMode>,2
  zIndex?: CSSPropertyValue<zIndex>,2
  alignmentBaseline?: CSSPropertyValue<alignmentBaseline>,2
  baselineShift?: CSSPropertyValue<baselineShift>,2
  behavior?: CSSPropertyValue<behavior>,2
  clipRule?: CSSPropertyValue<clipRule>,2
  cue?: CSSPropertyValue<cue>,2
  cueAfter?: CSSPropertyValue<cueAfter>,2
  cueBefore?: CSSPropertyValue<cueBefore>,2
  dominantBaseline?: CSSPropertyValue<dominantBaseline>,2
  fill?: CSSPropertyValue<fill>,2
  fillOpacity?: CSSPropertyValue<fillOpacity>,2
  fillRule?: CSSPropertyValue<fillRule>,2
  glyphOrientationHorizontal?: CSSPropertyValue<glyphOrientationHorizontal>,2
  glyphOrientationVertical?: CSSPropertyValue<glyphOrientationVertical>,2
  kerning?: CSSPropertyValue<kerning>,2
  marker?: CSSPropertyValue<marker>,2
  markerEnd?: CSSPropertyValue<markerEnd>,2
  markerMid?: CSSPropertyValue<markerMid>,2
  markerStart?: CSSPropertyValue<markerStart>,2
  pause?: CSSPropertyValue<pause>,2
  pauseAfter?: CSSPropertyValue<pauseAfter>,2
  pauseBefore?: CSSPropertyValue<pauseBefore>,2
  rest?: CSSPropertyValue<rest>,2
  restAfter?: CSSPropertyValue<restAfter>,2
  restBefore?: CSSPropertyValue<restBefore>,2
  shapeRendering?: CSSPropertyValue<shapeRendering>,2
  src?: CSSPropertyValue<src>,2
  speak?: CSSPropertyValue<speak>,2
  speakAs?: CSSPropertyValue<speakAs>,2
  stroke?: CSSPropertyValue<stroke>,2
  strokeDasharray?: CSSPropertyValue<strokeDasharray>,2
  strokeDashoffset?: CSSPropertyValue<strokeDashoffset>,2
  strokeLinecap?: CSSPropertyValue<strokeLinecap>,2
  strokeLinejoin?: CSSPropertyValue<strokeLinejoin>,2
  strokeMiterlimit?: CSSPropertyValue<strokeMiterlimit>,2
  strokeOpacity?: CSSPropertyValue<strokeOpacity>,2
  strokeWidth?: CSSPropertyValue<strokeWidth>,2
  textAnchor?: CSSPropertyValue<textAnchor>,2
  unicodeRange?: CSSPropertyValue<unicodeRange>,2
  voiceBalance?: CSSPropertyValue<voiceBalance>,2
  voiceDuration?: CSSPropertyValue<voiceDuration>,2
  voiceFamily?: CSSPropertyValue<voiceFamily>,2
  voicePitch?: CSSPropertyValue<voicePitch>,2
  voiceRange?: CSSPropertyValue<voiceRange>,2
  voiceRate?: CSSPropertyValue<voiceRate>,2
  voiceStress?: CSSPropertyValue<voiceStress>,2
  voiceVolume?: CSSPropertyValue<voiceVolume>,2
  zoom?: CSSPropertyValue<zoom>,2
|};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Tracker} from '../index.js';2
import {GarbageCollector} from '../gc.js';2
import {StyleSheet} from '../sheet.js';2
2
function createGC(): {|2
  gc: GarbageCollector,2
  tracker: Tracker,2
|} {2
  const sheet = new StyleSheet();2
  const tracker = new Map();2
  const rulesToClass = new WeakMap();2
2
  const gc = new GarbageCollector(sheet, tracker, rulesToClass);2
  return {gc, tracker};2
}2
2
test('register classes to be garbage collected when no references exist', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual([]);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual(['foo']);2
});2
2
test('cancel garbage collection for classes used before actual collection happens', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual([]);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual(['foo']);2
2
  gc.registerClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual([]);2
});2
2
test('garbage collector removes unreferenced classes', () => {2
  const {gc, tracker} = createGC();2
2
  tracker.set('foo', {2
    displayName: 'foo',2
    namespace: '',2
    selector: '',2
    style: {},2
    rules: {},2
  });2
2
  gc.registerClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual([]);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.getCollectionQueue()).toEqual(['foo']);2
  expect(gc.hasQueuedCollection()).toBe(true);2
  expect(tracker.has('foo')).toBe(true);2
2
  gc.collectGarbage();2
  expect(gc.hasQueuedCollection()).toBe(false);2
  expect(gc.getCollectionQueue()).toEqual([]);2
  expect(tracker.has('foo')).toBe(false);2
});2
2
test('properly tracks reference counts', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('foo');2
  gc.registerClassUse('foo');2
  gc.registerClassUse('bar');2
  expect(gc.getReferenceCount('foo')).toBe(2);2
  expect(gc.getReferenceCount('bar')).toBe(1);2
2
  gc.deregisterClassUse('bar');2
  expect(gc.getReferenceCount('bar')).toBe(0);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.getReferenceCount('foo')).toBe(1);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.getReferenceCount('foo')).toBe(0);2
});2
2
test("gracefully handle deregistering classes we don't have a count for", () => {2
  const {gc} = createGC();2
  gc.deregisterClassUse('not-tracking');2
});2
2
test('only halt garbage collection if there is nothing left in the queue', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('foo');2
  expect(gc.hasQueuedCollection()).toBe(false);2
2
  gc.deregisterClassUse('foo');2
  expect(gc.hasQueuedCollection()).toBe(true);2
2
  gc.registerClassUse('bar');2
  expect(gc.hasQueuedCollection()).toBe(true);2
2
  gc.deregisterClassUse('bar');2
  expect(gc.hasQueuedCollection()).toBe(true);2
2
  gc.registerClassUse('bar');2
  expect(gc.hasQueuedCollection()).toBe(true);2
2
  gc.registerClassUse('foo');2
  expect(gc.hasQueuedCollection()).toBe(false);2
});2
2
test('ensure garbage collection happens', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('foo');2
  gc.deregisterClassUse('foo');2
  expect(gc.hasQueuedCollection()).toBe(true);2
  expect(gc.getCollectionQueue()).toEqual(['foo']);2
2
  jest.runAllTimers();2
  expect(gc.hasQueuedCollection()).toBe(false);2
  expect(gc.getCollectionQueue()).toEqual([]);2
});2
2
test('flush', () => {2
  const {gc} = createGC();2
2
  gc.registerClassUse('bar');2
  gc.deregisterClassUse('bar');2
  expect(gc.getCollectionQueue()).toEqual(['bar']);2
  expect(gc.getReferenceCount('bar')).toBe(0);2
2
  gc.registerClassUse('foo');2
  expect(gc.getReferenceCount('foo')).toBe(1);2
2
  gc.flush();2
  expect(gc.getCollectionQueue()).toEqual([]);2
  expect(gc.getReferenceCount('foo')).toBe(0);2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import hash from '../hash.js';2
2
test('hash', () => {2
  expect(hash('f')).toBe('1xwd1rk');2
  expect(hash('foobar')).toBe('slolri');2
  expect(hash('foobar2')).toBe('34u6r4');2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import styled, {buildKeyframes, flush, gc, tracker} from '../index.js';2
2
const ReactTestRenderer = require('react-test-renderer');2
const invariant = require('invariant');2
const React = require('react'); // eslint-disable-line2
2
const BasicComponent = styled.view({2
  color: 'red',2
});2
2
const DynamicComponent = styled.view({2
  color: props => props.color,2
});2
2
test('can create a basic component without any errors', () => {2
  let component;2
2
  try {2
    component = ReactTestRenderer.create(<BasicComponent />);2
    component.toJSON();2
    component.unmount();2
    gc.flush();2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('can create a basic component and garbage collect', () => {2
  let component;2
2
  try {2
    component = ReactTestRenderer.create(<BasicComponent />);2
    const tree = component.toJSON();2
2
    expect(tree.type).toBe('div');2
2
    const className = tree.props.className;2
    expect(gc.hasQueuedCollection()).toBe(false);2
    expect(gc.getReferenceCount(className)).toBe(1);2
2
    component.unmount();2
    expect(gc.getReferenceCount(className)).toBe(0);2
    expect(gc.hasQueuedCollection()).toBe(true);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('remove outdated classes when updating component', () => {2
  let component;2
2
  try {2
    component = ReactTestRenderer.create(<DynamicComponent color="red" />);2
    const tree = component.toJSON();2
2
    const className = tree.props.className;2
    expect(gc.hasQueuedCollection()).toBe(false);2
    expect(gc.getReferenceCount(className)).toBe(1);2
2
    // updating with the same props should generate the same style and not trigger a collection2
    component.update(<DynamicComponent color="red" />);2
    expect(gc.hasQueuedCollection()).toBe(false);2
    expect(gc.getReferenceCount(className)).toBe(1);2
2
    // change style2
    component.update(<DynamicComponent color="blue" />);2
    expect(gc.hasQueuedCollection()).toBe(true);2
    expect(gc.getReferenceCount(className)).toBe(0);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('extra class names should be preserved', () => {2
  let component;2
2
  try {2
    component = ReactTestRenderer.create(<BasicComponent className="foo" />);2
    const tree = component.toJSON();2
    expect(tree.props.className.split(' ').includes('foo')).toBe(true);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('should inherit component when passed as first arg to styled', () => {2
  let component;2
2
  try {2
    const InheritComponent = BasicComponent.extends({2
      backgroundColor: 'black',2
    });2
2
    component = ReactTestRenderer.create(<InheritComponent />);2
    const tree = component.toJSON();2
2
    const rules = tracker.get(tree.props.className);2
    invariant(rules, 'expected rules');2
    expect(rules.style).toEqual({2
      'background-color': 'black',2
      color: 'red',2
    });2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test("when passed class name of another styled component it's rules should be inherited", () => {2
  let component;2
2
  try {2
    class BaseComponent extends styled.StylableComponent<{2
      className: string,2
    }> {2
      render() {2
        return <BasicComponent className={this.props.className} />;2
      }2
    }2
2
    const InheritComponent = BaseComponent.extends({2
      backgroundColor: 'black',2
    });2
2
    component = ReactTestRenderer.create(<InheritComponent />);2
    const tree = component.toJSON();2
2
    const rules = tracker.get(tree.props.className);2
    invariant(rules, 'expected rules');2
    expect(rules.style).toEqual({2
      'background-color': 'black',2
      color: 'red',2
    });2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('supports pseudo selectors', () => {2
  let component;2
2
  try {2
    const Component = styled.view({2
      '&:hover': {2
        color: 'red',2
      },2
    });2
2
    component = ReactTestRenderer.create(<Component />);2
    const tree = component.toJSON();2
2
    const rules = tracker.get(tree.props.className);2
    invariant(rules, 'expected rules');2
    expect(rules.style).toEqual({2
      color: 'red',2
    });2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('supports multiple pseudo selectors', () => {2
  let component;2
2
  try {2
    const Component = styled.view({2
      '&:active': {2
        color: 'blue',2
      },2
2
      '&:hover': {2
        color: 'red',2
      },2
    });2
2
    component = ReactTestRenderer.create(<Component />);2
    const tree = component.toJSON();2
2
    const classes = tree.props.className.split(' ');2
    expect(classes.length).toBe(2);2
2
    const hoverRules = tracker.get(classes[1]);2
    invariant(hoverRules, 'expected hoverRules');2
    expect(hoverRules.style).toEqual({2
      color: 'red',2
    });2
    expect(hoverRules.namespace).toBe('&:hover');2
    expect(hoverRules.selector.endsWith(':hover')).toBe(true);2
2
    const activeRules = tracker.get(classes[0]);2
    invariant(activeRules, 'expected activeRules');2
    expect(activeRules.style).toEqual({2
      color: 'blue',2
    });2
    expect(activeRules.namespace).toBe('&:active');2
    expect(activeRules.selector.endsWith(':active')).toBe(true);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('supports child selectors', () => {2
  let component;2
2
  try {2
    const Component = styled.view({2
      '> li': {2
        color: 'red',2
      },2
    });2
2
    component = ReactTestRenderer.create(<Component />);2
    const tree = component.toJSON();2
2
    const classes = tree.props.className.split(' ');2
    expect(classes.length).toBe(1);2
2
    const rules = tracker.get(classes[0]);2
    invariant(rules, 'expected rules');2
2
    expect(rules.style).toEqual({2
      color: 'red',2
    });2
    expect(rules.namespace).toBe('> li');2
    expect(rules.selector.endsWith(' > li')).toBe(true);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('flush', () => {2
  flush();2
});2
2
test('innerRef works on styled components', () => {2
  let component;2
2
  try {2
    const Component = styled.view({});2
2
    let called = false;2
    const innerRef = ref => {2
      called = true;2
    };2
    ReactTestRenderer.create(<Component innerRef={innerRef} />);2
    expect(called).toBe(true);2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
2
test('ignoreAttributes', () => {2
  let component;2
2
  try {2
    const Component = styled.view(2
      {2
        color: props => props.color,2
      },2
      {2
        ignoreAttributes: ['color'],2
      },2
    );2
2
    component = ReactTestRenderer.create(<Component color="red" />);2
    const tree = component.toJSON();2
2
    expect(tree.props.color).toBe(undefined);2
2
    const rules = tracker.get(tree.props.className);2
    invariant(rules, 'expected rules');2
    expect(rules.style).toEqual({2
      color: 'red',2
    });2
  } finally {2
    if (component) {2
      component.unmount();2
    }2
    gc.flush();2
  }2
});2
test('buildKeyframes', () => {2
  const css = buildKeyframes({2
    '0%': {2
      opacity: 0,2
    },2
2
    '50%': {2
      height: 50,2
      opacity: 0.8,2
    },2
2
    '100%': {2
      opacity: 1,2
    },2
  });2
2
  expect(css).toBe(2
    [2
      '  0% {',2
      '    opacity: 0;',2
      '  }',2
      '  50% {',2
      '    height: 50px;',2
      '    opacity: 0.8;',2
      '  }',2
      '  100% {',2
      '    opacity: 1;',2
      '  }',2
    ].join('\n'),2
  );2
});2
2
test('keyframes', () => {2
  const className = styled.keyframes({2
    '0%': {2
      opacity: 0,2
    },2
2
    '50%': {2
      opacity: 0.8,2
    },2
2
    '100%': {2
      opacity: 1,2
    },2
  });2
  expect(typeof className).toBe('string');2
});2
2
test('buildKeyframes only accepts string property values', () => {2
  expect(() => {2
    buildKeyframes({2
      // $FlowFixMe: ignore2
      '0%': {2
        fn: () => {},2
      },2
    });2
  }).toThrow('Keyframe objects must only have strings values');2
});2
2
test('buildKeyframes only accepts object specs', () => {2
  expect(() => {2
    buildKeyframes({2
      // $FlowFixMe: ignore2
      '0%': () => {2
        return '';2
      },2
    });2
  }).toThrow('Keyframe spec must only have objects');2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {buildRules, normaliseRules} from '../rules.js';2
2
describe('normaliseRules', () => {2
  test('ensure top level values are expanded', () => {2
    const normalisedRules = normaliseRules({height: '4px'});2
    expect(normalisedRules['&'].height).toBe('4px');2
  });2
2
  test('ensure keys are dashed', () => {2
    const normalisedRules = normaliseRules({2
      // $FlowFixMe: ignore2
      '&:hover': {2
        lineHeight: '4px',2
        WebkitAppRegion: 'drag',2
      },2
    });2
    const hoverRules = normalisedRules['&:hover'];2
    expect(Object.keys(hoverRules).length).toBe(2);2
    expect(hoverRules['line-height']).toBe('4px');2
    expect(hoverRules['-webkit-app-region']).toBe('drag');2
  });2
2
  test('exclude empty objects', () => {2
    const normalisedRules = normaliseRules({2
      '&:hover': {},2
    });2
2
    expect(normalisedRules['&:hover']).toBe(undefined);2
  });2
});2
2
describe('buildRules', () => {2
  test('ensure null values are left out', () => {2
    const builtRules = buildRules({height: (null: any)}, {}, {});2
    expect('height' in builtRules).toBe(false);2
2
    const builtRules2 = buildRules(2
      {2
        height() {2
          return (null: any);2
        },2
      },2
      {},2
      {},2
    );2
    expect('height' in builtRules2).toBe(false);2
  });2
2
  test('ensure numbers are appended with px', () => {2
    expect(buildRules({height: 40}, {}, {}).height).toBe('40px');2
  });2
2
  test("ensure unitless numbers aren't appended with px", () => {2
    expect(buildRules({'z-index': 4}, {}, {})['z-index']).toBe('4');2
  });2
2
  test('ensure functions are called with props', () => {2
    const thisProps = {};2
    expect(2
      buildRules(2
        {2
          border: props => (props === thisProps ? 'foo' : 'bar'),2
        },2
        thisProps,2
        {},2
      ).border,2
    ).toBe('foo');2
  });2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {StyleSheet} from '../sheet.js';2
2
describe('flush', () => {2
  test('should remove all rules', () => {2
    const sheet = new StyleSheet();2
    expect(sheet.getRuleCount()).toBe(0);2
2
    sheet.insert('foo', 'div {color: red;}');2
    expect(sheet.getRuleCount()).toBe(1);2
2
    sheet.flush();2
    expect(sheet.getRuleCount()).toBe(0);2
  });2
});2
2
describe('inject', () => {2
  test("throw's an error when already injected", () => {2
    const sheet = new StyleSheet();2
2
    expect(() => {2
      sheet.inject();2
      sheet.inject();2
    }).toThrow('already injected stylesheet!');2
  });2
});2
2
describe('insert', () => {2
  test('non-speedy', () => {2
    const sheet = new StyleSheet();2
2
    expect(sheet.getRuleCount()).toBe(0);2
    sheet.insert('foo', 'div {color: red;}');2
    expect(sheet.getRuleCount()).toBe(1);2
  });2
2
  test('speedy', () => {2
    const sheet = new StyleSheet(true);2
2
    expect(sheet.getRuleCount()).toBe(0);2
    sheet.insert('foo', 'div {color: red;}');2
    expect(sheet.getRuleCount()).toBe(1);2
  });2
});2
2
describe('delete', () => {2
  test('non-speedy', () => {2
    const sheet = new StyleSheet();2
2
    expect(sheet.getRuleCount()).toBe(0);2
    sheet.insert('foo', 'div {color: red;}');2
    expect(sheet.getRuleCount()).toBe(1);2
2
    sheet.delete('foo');2
    expect(sheet.getRuleCount()).toBe(0);2
  });2
2
  test('speedy', () => {2
    const sheet = new StyleSheet(true);2
2
    expect(sheet.getRuleCount()).toBe(0);2
    sheet.insert('foo', 'div {color: red;}');2
    expect(sheet.getRuleCount()).toBe(1);2
2
    sheet.delete('foo');2
    expect(sheet.getRuleCount()).toBe(0);2
  });2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {RowRenderer, OnScroll, KeyMapper} from './types.js';2
import {PureComponent, Component} from 'react';2
import {ResizeSensor} from '../index.js';2
import {findDOMNode} from 'react-dom';2
2
type RowMeasureProps = {2
  id: string,2
  onMount: (key: string, ref: ?Text | Element) => void,2
  children: React$Node,2
};2
2
class RowMeasure extends PureComponent<RowMeasureProps> {2
  componentDidMount() {2
    this.props.onMount(this.props.id, findDOMNode(this));2
  }2
2
  render() {2
    return this.props.children;2
  }2
}2
2
const CONTAINER_STYLE = {2
  position: 'relative',2
  overflow: 'auto',2
  width: '100%',2
  height: '100%',2
};2
2
type DynamicListProps = {2
  pureData: any,2
  onMount?: () => void,2
  getPrecalculatedDimensions: (2
    index: number,2
  ) => ?{2
    width: number | string,2
    height: number,2
  },2
  rowCount: number,2
  rowRenderer: RowRenderer,2
  keyMapper: KeyMapper,2
  onScroll?: OnScroll,2
  sideScrollable?: boolean,2
};2
2
type DynamicListState = {2
  mounted: boolean,2
  startIndex: number,2
  endIndex: number,2
  containerStyle: Object,2
  innerStyle: Object,2
  scrollHeight: number,2
  scrollTop: number,2
  height: number,2
  width: number,2
};2
2
export default class DynamicList extends Component<2
  DynamicListProps,2
  DynamicListState,2
> {2
  constructor(props: DynamicListProps, context: Object) {2
    super(props, context);2
2
    this.topPositionToIndex = new Map();2
    this.positions = new Map();2
    this.dimensions = new Map();2
    this.measureQueue = new Map();2
2
    this.state = {2
      mounted: false,2
      startIndex: -1,2
      endIndex: -1,2
      containerStyle: {},2
      innerStyle: {},2
      scrollHeight: 0,2
      scrollTop: 0,2
      height: 0,2
      width: 0,2
    };2
  }2
2
  containerRef: ?HTMLDivElement;2
2
  measureQueue: Map<string, React$Node>;2
2
  topPositionToIndex: Map<number, number>;2
  positions: Map<2
    number,2
    {2
      top: number,2
      style: Object,2
    },2
  >;2
2
  dimensions: Map<2
    string,2
    {2
      width: number | string,2
      height: number,2
    },2
  >;2
2
  scrollToIndex = (index: number, additionalOffset: number = 0) => {2
    const pos = this.positions.get(index);2
    const ref = this.getContainerRef();2
    if (pos != null && ref != null) {2
      ref.scrollTop = pos.top - additionalOffset;2
    }2
  };2
2
  setContainerRef = (ref: ?HTMLDivElement) => {2
    this.containerRef = ref;2
  };2
2
  getContainerRef(): ?HTMLDivElement {2
    return this.containerRef;2
  }2
2
  componentWillReceiveProps(nextProps: DynamicListProps) {2
    if (2
      nextProps.rowCount !== this.props.rowCount ||2
      nextProps.pureData !== this.props.pureData2
    ) {2
      this.queueMeasurements(nextProps);2
    }2
  }2
2
  componentDidMount() {2
    // perform initial measurements and container dimension calculation2
    this.recalculateContainerDimensions();2
    this.queueMeasurements(this.props);2
2
    // if onMount we didn't add any measurements then we've successfully calculated all row sizes2
    if (this.measureQueue.size === 0) {2
      this.onMount();2
    }2
  }2
2
  onMount() {2
    this.setState(state => {2
      if (state.mounted === false && this.props.onMount != null) {2
        this.props.onMount();2
      }2
      return {mounted: true};2
    });2
  }2
2
  // called when the window is resized, we recalculate the positions and visibility of rows2
  onResize = (e: UIEvent) => {2
    this.dimensions.clear();2
    this.queueMeasurements(this.props);2
    this.recalculateContainerDimensions();2
    this.recalculateVisibleRows(this.props);2
  };2
2
  queueMeasurements(props: DynamicListProps) {2
    // create measurements for new rows2
    for (let i = 0; i < props.rowCount; i++) {2
      const key = props.keyMapper(i);2
      if (this.dimensions.has(key)) {2
        continue;2
      }2
2
      const precalculated = props.getPrecalculatedDimensions(i);2
      if (precalculated) {2
        this.dimensions.set(key, precalculated);2
        continue;2
      }2
2
      this.measureQueue.set(2
        key,2
        props.rowRenderer({2
          index: i,2
          style: {2
            visibility: 'hidden',2
          },2
        }),2
      );2
    }2
2
    // recalculate the visibility and positions of all rows2
    this.recalculatePositions(props);2
    this.recalculateVisibleRows(props);2
  }2
2
  recalculateContainerDimensions = () => {2
    const container = this.getContainerRef();2
    if (container != null) {2
      this.setState({2
        scrollTop: container.scrollTop,2
        height: container.clientHeight,2
        width: container.clientWidth,2
      });2
    }2
  };2
2
  recalculateVisibleRows = (props: DynamicListProps) => {2
    this.setState(state => {2
      let startTop = 0;2
2
      // find the start index2
      let startIndex = 0;2
      let scrollTop = state.scrollTop;2
      do {2
        const index = this.topPositionToIndex.get(scrollTop);2
        if (index != null) {2
          const startPos = this.positions.get(index);2
          if (startPos != null) {2
            startTop = startPos.top;2
            startIndex = index;2
            break;2
          }2
        }2
2
        scrollTop--;2
      } while (scrollTop > 0);2
2
      // find the end index2
      let endIndex = startIndex;2
      let scrollBottom = state.scrollTop + state.height;2
      while (true) {2
        // if the scrollBottom is equal to the height of the scrollable area then2
        // we were unable to find the end index because we're at the bottom of the2
        // list2
        if (scrollBottom >= state.scrollHeight) {2
          endIndex = props.rowCount - 1;2
          break;2
        }2
2
        const index = this.topPositionToIndex.get(scrollBottom);2
        if (index != null) {2
          endIndex = index;2
          break;2
        }2
2
        scrollBottom++;2
      }2
2
      if (2
        startIndex === state.startIndex &&2
        endIndex === state.endIndex &&2
        startTop === state.containerStyle.top2
      ) {2
        // this is to ensure that we don't create a new containerStyle object and obey reference equality for purity checks2
        return {};2
      }2
2
      const sideScrollable = props.sideScrollable || false;2
2
      return {2
        startIndex,2
        endIndex,2
        containerStyle: sideScrollable2
          ? {2
              position: 'absolute',2
              top: startTop,2
              left: 0,2
              minWidth: '100%',2
            }2
          : {2
              position: 'absolute',2
              top: startTop,2
              right: 0,2
              left: 0,2
            },2
      };2
    });2
  };2
2
  onRowMeasured = (key: string, elem: ?Text | Element) => {2
    if (elem != null && elem instanceof HTMLElement) {2
      const dim = {2
        height: elem.clientHeight,2
        width: elem.clientWidth,2
      };2
      this.dimensions.set(key, dim);2
    }2
2
    this.measureQueue.delete(key);2
2
    if (this.measureQueue.size === 0) {2
      this.recalculatePositions(this.props);2
2
      if (this.state.mounted === false) {2
        // we triggered measurements on componentDidMount and they're now complete!2
        this.onMount();2
      }2
    }2
  };2
2
  handleScroll = () => {2
    // recalcualte visible rows2
    const ref = this.getContainerRef();2
    if (ref != null) {2
      this.setState({2
        scrollTop: ref.scrollTop,2
      });2
      this.recalculateVisibleRows(this.props);2
2
      this.props.onScroll &&2
        this.props.onScroll({2
          clientHeight: ref.clientHeight,2
          scrollHeight: ref.scrollHeight,2
          scrollTop: ref.scrollTop,2
        });2
    }2
  };2
2
  recalculatePositions(props: DynamicListProps) {2
    this.positions.clear();2
    this.topPositionToIndex.clear();2
2
    let top = 0;2
2
    for (let i = 0; i < props.rowCount; i++) {2
      const key = props.keyMapper(i);2
      const dim = this.dimensions.get(key);2
      if (dim == null) {2
        continue;2
      }2
2
      this.positions.set(i, {2
        top,2
        style: {2
          width: dim.width,2
          height: dim.height,2
        },2
      });2
2
      this.topPositionToIndex.set(top, i);2
2
      top += dim.height;2
    }2
2
    this.setState({2
      scrollHeight: top,2
      innerStyle: {2
        height: top,2
        overflow: 'visibile',2
        position: 'relative',2
      },2
    });2
  }2
2
  render() {2
    // add elements to be measured2
    const measureChildren = [];2
    for (const [key, value] of this.measureQueue) {2
      measureChildren.push(2
        <RowMeasure key={key} id={key} onMount={this.onRowMeasured}>2
          {value}2
        </RowMeasure>,2
      );2
    }2
2
    // add visible rows2
    const children = [];2
    for (let i = this.state.startIndex; i <= this.state.endIndex; i++) {2
      const pos = this.positions.get(i);2
      if (pos == null) {2
        continue;2
      }2
2
      children.push(2
        this.props.rowRenderer({2
          index: i,2
          style: pos.style,2
        }),2
      );2
    }2
2
    return (2
      <div2
        ref={this.setContainerRef}2
        onScroll={this.handleScroll}2
        style={CONTAINER_STYLE}>2
        <ResizeSensor onResize={this.onResize} />2
        <div style={this.state.innerStyle}>2
          <div style={this.state.containerStyle}>{children}</div>2
        </div>2
        {measureChildren}2
      </div>2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {RowRenderer, OnScroll, KeyMapper} from './types.js';2
import DynamicList from './DynamicList.js';2
import {PureComponent} from 'react';2
2
type FixedListProps = {2
  pureData: any,2
  rowCount: number,2
  rowHeight: number,2
  rowRenderer: RowRenderer,2
  onScroll?: OnScroll,2
  keyMapper: KeyMapper,2
  innerRef?: (ref: DynamicList) => void,2
  onMount?: () => void,2
  sideScrollable?: boolean,2
};2
2
export default class FixedList extends PureComponent<FixedListProps> {2
  getPrecalculatedDimensions = () => {2
    return {2
      height: this.props.rowHeight,2
      width: '100%',2
    };2
  };2
2
  render() {2
    return (2
      <DynamicList2
        ref={(this.props.innerRef: any)}2
        onMount={this.props.onMount}2
        pureData={this.props.pureData}2
        rowCount={this.props.rowCount}2
        rowRenderer={this.props.rowRenderer}2
        keyMapper={this.props.keyMapper}2
        onScroll={this.props.onScroll}2
        sideScrollable={this.props.sideScrollable}2
        getPrecalculatedDimensions={this.getPrecalculatedDimensions}2
      />2
    );2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export {default as FixedList} from './FixedList.js';2
export {default as DynamicList} from './DynamicList.js';2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type OnScroll = (params: {2
  scrollHeight: number,2
  scrollTop: number,2
  clientHeight: number,2
}) => void;2
2
export type KeyMapper = (index: number) => string;2
2
export type RowRenderer = (params: {2
  index: number,2
  style: Object,2
}) => React$Node;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
function isObject(val: mixed): boolean {2
  return (2
    Boolean(val) &&2
    typeof val === 'object' &&2
    Object.prototype.toString.call(val) === '[object Object]'2
  );2
}2
2
export default function assignDeep<T: Object>(2
  base: T,2
  ...reduces: Array<Object>2
): T {2
  base = Object.assign({}, base);2
2
  for (const reduce of reduces) {2
    for (const key in reduce) {2
      const baseVal = base[key];2
      const val = reduce[key];2
2
      if (isObject(val) && isObject(baseVal)) {2
        base[key] = assignDeep(baseVal, val);2
      } else if (typeof val === 'undefined') {2
        delete base[key];2
      } else {2
        base[key] = val;2
      }2
    }2
  }2
2
  return base;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import LogManager from '../fb-stubs/Logger';2
const fs = require('fs');2
const adb = require('adbkit-fb');2
import {2
  openssl,2
  isInstalled as opensslInstalled,2
} from './openssl-wrapper-with-promises';2
const path = require('path');2
2
// Desktop file paths2
const os = require('os');2
const caKey = getFilePath('ca.key');2
const caCert = getFilePath('ca.crt');2
const serverKey = getFilePath('server.key');2
const serverCsr = getFilePath('server.csr');2
const serverCert = getFilePath('server.crt');2
2
// Device file paths2
const csrFileName = 'app.csr';2
const deviceCAcertFile = 'sonarCA.crt';2
const deviceClientCertFile = 'device.crt';2
2
const caSubject = '/C=US/ST=CA/L=Menlo Park/O=Sonar/CN=SonarCA';2
const serverSubject = '/C=US/ST=CA/L=Menlo Park/O=Sonar/CN=localhost';2
const minCertExpiryWindowSeconds = 24 * 60 * 60;2
const appNotDebuggableRegex = /debuggable/;2
const allowedAppNameRegex = /^[a-zA-Z0-9.\-]+$/;2
const allowedAppDirectoryRegex = /^\/[ a-zA-Z0-9.\-\/]+$/;2
2
export type SecureServerConfig = {|2
  key: Buffer,2
  cert: Buffer,2
  ca: Buffer,2
  requestCert: boolean,2
  rejectUnauthorized: boolean,2
|};2
2
/*2
 * This class is responsible for generating and deploying server and client2
 * certificates to allow for secure communication between sonar and apps.2
 * It takes a Certificate Signing Request which was generated by the app,2
 * using the app's public/private keypair.2
 * With this CSR it uses the sonar CA to sign a client certificate which it2
 * deploys securely to the app.2
 * It also deploys the sonar CA cert to the app.2
 * The app can trust a server if and only if it has a certificate signed by the2
 * sonar CA.2
*/2
export default class CertificateProvider {2
  logger: LogManager;2
  adb: any;2
  certificateSetup: Promise<void>;2
  server: Server;2
2
  constructor(server: Server, logger: LogManager) {2
    this.logger = logger;2
    this.adb = adb.createClient();2
    this.certificateSetup = this.ensureServerCertExists();2
    this.server = server;2
  }2
2
  processCertificateSigningRequest(2
    csr: string,2
    os: string,2
    appDirectory: string,2
  ): Promise<void> {2
    this.ensureOpenSSLIsAvailable();2
    if (!appDirectory.match(allowedAppDirectoryRegex)) {2
      return Promise.reject(2
        new Error(2
          `Invalid appDirectory recieved from ${os} device: ${appDirectory}`,2
        ),2
      );2
    }2
    return this.certificateSetup2
      .then(_ => this.getCACertificate())2
      .then(caCert =>2
        this.deployFileToMobileApp(2
          appDirectory,2
          deviceCAcertFile,2
          caCert,2
          csr,2
          os,2
        ),2
      )2
      .then(_ => this.generateClientCertificate(csr))2
      .then(clientCert =>2
        this.deployFileToMobileApp(2
          appDirectory,2
          deviceClientCertFile,2
          clientCert,2
          csr,2
          os,2
        ),2
      );2
  }2
2
  ensureOpenSSLIsAvailable(): void {2
    if (!opensslInstalled()) {2
      const e = Error(2
        "It looks like you don't have OpenSSL installed. Please install it to continue.",2
      );2
      this.server.emit('error', e);2
    }2
  }2
2
  getCACertificate(): Promise<string> {2
    return new Promise((resolve, reject) => {2
      fs.readFile(caCert, (err, data) => {2
        if (err) {2
          reject(err);2
        } else {2
          resolve(data.toString());2
        }2
      });2
    });2
  }2
2
  generateClientCertificate(csr: string): Promise<string> {2
    this.logger.warn('Creating new client cert', 'CertificateProvider');2
    const csrFile = this.writeToTempFile(csr);2
    // Create a certificate for the client, using the details in the CSR.2
    return openssl('x509', {2
      req: true,2
      in: csrFile,2
      CA: caCert,2
      CAkey: caKey,2
      CAcreateserial: true,2
    }).then(cert => {2
      fs.unlinkSync(csrFile);2
      return cert;2
    });2
  }2
2
  deployFileToMobileApp(2
    destination: string,2
    filename: string,2
    contents: string,2
    csr: string,2
    os: string,2
  ) {2
    if (os === 'Android') {2
      this.extractAppNameFromCSR(csr).then(app => {2
        const client = adb.createClient();2
        client.listDevices().then((devices: Array<{id: string}>) => {2
          devices.forEach(d =>2
            // To find out which device requested the cert, search them2
            // all for a matching csr file.2
            // It's not important to keep these secret from other apps.2
            // Just need to make sure each app can find it's own one.2
            this.androidDeviceHasMatchingCSR(destination, d.id, app, csr)2
              .catch(e =>2
                this.logger.error(2
                  `Unable to check for matching CSR in ${d.id}:${app}`,2
                  'CertificateProvider',2
                ),2
              )2
              .then(isMatch => {2
                if (isMatch) {2
                  this.pushFileToAndroidDevice(2
                    d.id,2
                    app,2
                    destination + filename,2
                    contents,2
                  );2
                }2
              }),2
          );2
        });2
      });2
    }2
    if (os === 'iOS') {2
      fs.writeFileSync(destination + filename, contents);2
    }2
  }2
2
  androidDeviceHasMatchingCSR(2
    directory: string,2
    deviceId: string,2
    processName: string,2
    csr: string,2
  ): Promise<boolean> {2
    return this.executeCommandOnAndroid(2
      deviceId,2
      processName,2
      `cat ${directory + csrFileName}`,2
    ).then(deviceCsr => {2
      return (2
        deviceCsr2
          .toString()2
          .replace(/\r/g, '')2
          .trim() === csr.replace(/\r/g, '').trim()2
      );2
    });2
  }2
2
  pushFileToAndroidDevice(2
    deviceId: string,2
    app: string,2
    filename: string,2
    contents: string,2
  ): Promise<void> {2
    this.logger.warn(2
      `Deploying sonar certificate to ${deviceId}:${app}`,2
      'CertificateProvider',2
    );2
    return this.executeCommandOnAndroid(2
      deviceId,2
      app,2
      `echo "${contents}" > ${filename} && chmod 600 ${filename}`,2
    ).then(output => undefined);2
  }2
2
  executeCommandOnAndroid(2
    deviceId: string,2
    user: string,2
    command: string,2
  ): Promise<string> {2
    if (!user.match(allowedAppNameRegex)) {2
      return Promise.reject(new Error(`Disallowed run-as user: ${user}`));2
    }2
    if (command.match(/[']/)) {2
      return Promise.reject(2
        new Error(`Disallowed escaping command: ${command}`),2
      );2
    }2
    return this.adb2
      .shell(deviceId, `echo '${command}' | run-as '${user}'`)2
      .then(adb.util.readAll)2
      .then(buffer => buffer.toString())2
      .then(output => {2
        const matches = output.match(appNotDebuggableRegex);2
        if (matches) {2
          const e = new Error(2
            `Android app ${user} is not debuggable. To use it with sonar, add android:debuggable="true" to the application section of AndroidManifest.xml`,2
          );2
          this.server.emit('error', e);2
          throw e;2
        }2
        return output;2
      });2
  }2
2
  extractAppNameFromCSR(csr: string): Promise<string> {2
    const csrFile = this.writeToTempFile(csr);2
    return openssl('req', {in: csrFile, noout: true, subject: true})2
      .then(subject => {2
        fs.unlink(csrFile);2
        return subject;2
      })2
      .then(subject => {2
        return subject2
          .split('/')2
          .filter(part => {2
            return part.startsWith('CN=');2
          })2
          .map(part => {2
            return part.split('=')[1].trim();2
          })[0];2
      })2
      .then(appName => {2
        if (!appName.match(allowedAppNameRegex)) {2
          throw new Error(2
            `Disallowed app name in CSR: ${appName}. Only alphanumeric characters and '.' allowed.`,2
          );2
        }2
        return appName;2
      });2
  }2
2
  loadSecureServerConfig(): Promise<SecureServerConfig> {2
    return this.certificateSetup.then(() => {2
      return {2
        key: fs.readFileSync(serverKey),2
        cert: fs.readFileSync(serverCert),2
        ca: fs.readFileSync(caCert),2
        requestCert: true,2
        rejectUnauthorized: true, // can be false if necessary as we don't strictly need to verify the client2
      };2
    });2
  }2
2
  ensureCertificateAuthorityExists(): Promise<void> {2
    if (!fs.existsSync(caKey)) {2
      return this.generateCertificateAuthority();2
    }2
    return this.checkCertIsValid(caCert).catch(e =>2
      this.generateCertificateAuthority(),2
    );2
  }2
2
  checkCertIsValid(filename: string): Promise<void> {2
    if (!fs.existsSync(filename)) {2
      return Promise.reject();2
    }2
    return openssl('x509', {2
      checkend: minCertExpiryWindowSeconds,2
      in: filename,2
    })2
      .then(output => undefined)2
      .catch(e => {2
        this.logger.warn(2
          `Certificate will expire soon: ${filename}`,2
          'CertificateProvider',2
        );2
        throw e;2
      });2
  }2
2
  verifyServerCertWasIssuedByCA() {2
    const options = {CAfile: caCert};2
    options[serverCert] = false;2
    return openssl('verify', options).then(output => {2
      const verified = output.match(/[^:]+: OK/);2
      if (!verified) {2
        // This should never happen, but if it does, we need to notice so we can2
        // generate a valid one, or no clients will trust our server.2
        throw new Error('Current server cert was not issued by current CA');2
      }2
    });2
  }2
2
  generateCertificateAuthority(): Promise<void> {2
    if (!fs.existsSync(getFilePath(''))) {2
      fs.mkdirSync(getFilePath(''));2
    }2
    this.logger.info('Generating new CA', 'CertificateProvider');2
    return openssl('genrsa', {out: caKey, '2048': false})2
      .then(_ =>2
        openssl('req', {2
          new: true,2
          x509: true,2
          subj: caSubject,2
          key: caKey,2
          out: caCert,2
        }),2
      )2
      .then(_ => undefined);2
  }2
2
  ensureServerCertExists(): Promise<void> {2
    if (2
      !(2
        fs.existsSync(serverKey) &&2
        fs.existsSync(serverCert) &&2
        fs.existsSync(caCert)2
      )2
    ) {2
      return this.generateServerCertificate();2
    }2
2
    return this.checkCertIsValid(serverCert)2
      .then(_ => this.verifyServerCertWasIssuedByCA())2
      .catch(e => this.generateServerCertificate());2
  }2
2
  generateServerCertificate(): Promise<void> {2
    return this.ensureCertificateAuthorityExists()2
      .then(_ => {2
        this.logger.warn('Creating new server cert', 'CertificateProvider');2
      })2
      .then(_ => openssl('genrsa', {out: serverKey, '2048': false}))2
      .then(_ =>2
        openssl('req', {2
          new: true,2
          key: serverKey,2
          out: serverCsr,2
          subj: serverSubject,2
        }),2
      )2
      .then(_ =>2
        openssl('x509', {2
          req: true,2
          in: serverCsr,2
          CA: caCert,2
          CAkey: caKey,2
          CAcreateserial: true,2
          out: serverCert,2
        }),2
      )2
      .then(_ => undefined);2
  }2
2
  writeToTempFile(content: string): string {2
    const fileName = getFilePath(`deviceCSR-${Math.random() * 1000000}`);2
    fs.writeFileSync(fileName, content);2
    return fileName;2
  }2
}2
2
function getFilePath(fileName: string): string {2
  return path.resolve(os.homedir(), '.sonar', 'certs', fileName);2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import child_process from 'child_process';2
import {clipboard, shell} from 'electron';2
2
type PasteResponse =2
  | {2
      id: number,2
      objectName: string,2
      phid: string,2
      authorPHID: string,2
      filePHID: string,2
      title: string,2
      dateCreated: number,2
      language: string,2
      uri: string,2
      parentPHID: ?number,2
      content: string,2
    }2
  | {2
      type: 'error',2
      message: string,2
    };2
2
export default function createPaste(input: string): Promise<?string> {2
  return new Promise((resolve, reject) => {2
    const arc = '/opt/facebook/bin/arc';2
    const child = child_process.spawn(arc, [2
      '--conduit-uri=https://phabricator.intern.facebook.com/api/',2
      'paste',2
      '--json',2
    ]);2
2
    child.stdin.write(input);2
    child.stdin.end();2
    let response = '';2
    child.stdout.on('data', (data: Buffer) => {2
      response += data.toString();2
    });2
    child.stdout.on('end', (data: Buffer) => {2
      const result: PasteResponse = JSON.parse(response || 'null');2
2
      if (!result) {2
        new window.Notification('Failed to create paste', {2
          body: `Does ${arc} exist and is executable?`,2
        });2
      } else if (result.type === 'error') {2
        new window.Notification('Failed to create paste', {2
          body: result.message != null ? result.message : '',2
        });2
        reject(result);2
      } else {2
        clipboard.writeText(result.uri);2
        const notification = new window.Notification(2
          `Paste ${result.objectName} created`,2
          {2
            body: 'URL copied to clipboard',2
          },2
        );2
        notification.onclick = () => shell.openExternal(result.uri);2
        resolve(result.uri);2
      }2
    });2
  });2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import electron from 'electron';2
2
const DP_ARG = '--dynamicPlugins=';2
/* Sometimes remote objects are missing intermittently. To reduce the chance of2
 * this being a problem while in use. Only read it once at startup.2
 * https://github.com/electron/electron/issues/8205 */2
const _argv = electron.remote.process.argv;2
const _loadsDynamicPlugins =2
  _argv.findIndex(arg => arg.startsWith(DP_ARG)) > -1;2
const _isProduction = !/node_modules[\\/]electron[\\/]/.test(2
  electron.remote.process.execPath,2
);2
2
export function isProduction(): boolean {2
  return _isProduction;2
}2
2
export function loadsDynamicPlugins(): boolean {2
  return _loadsDynamicPlugins;2
}2
2
export function toggleDynamicPluginLoading() {2
  const args = _argv.filter(arg => !arg.startsWith(DP_ARG));2
  if (!loadsDynamicPlugins()) {2
    args.push(DP_ARG + '~/fbsource/xplat/sonar/src/plugins');2
  }2
  const {app} = electron.remote;2
  app.relaunch({args: args.slice(1).concat(['--relaunch'])});2
  app.exit(0);2
}2
2
export function dynamicPluginPath(): ?string {2
  const index = _argv.findIndex(arg => arg.startsWith(DP_ARG));2
2
  if (index > -1) {2
    return _argv[index].replace(DP_ARG, '');2
  } else {2
    null;2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export type Rect = {2
  top: number,2
  left: number,2
  height: number,2
  width: number,2
};2
2
export function isOverlappedRect(a: Rect, b: Rect): boolean {2
  const aRight = a.left + a.width;2
  const bRight = b.left + b.width;2
  const aBottom = a.top + a.height;2
  const bBottom = b.top + b.height;2
  return (2
    a.left < bRight && b.left < aRight && a.top < bBottom && b.top < aBottom2
  );2
}2
2
export function getDistanceRect(a: Rect, b: Rect): number {2
  const mostLeft = a.left < b.left ? a : b;2
  const mostRight = b.left < a.left ? a : b;2
2
  let xDifference =2
    mostLeft.left === mostRight.left2
      ? 02
      : mostRight.left - (mostLeft.left + mostLeft.width);2
  xDifference = Math.max(0, xDifference);2
2
  const upper = a.top < b.top ? a : b;2
  const lower = b.top < a.top ? a : b;2
2
  let yDifference =2
    upper.top === lower.top ? 0 : lower.top - (upper.top + upper.height);2
  yDifference = Math.max(0, yDifference);2
2
  return Math.min(xDifference, yDifference);2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
// list of icons that are prefetched in the service worker when launching the app2
export const precachedIcons = [2
  {2
    name: 'arrow-right',2
    size: 12,2
  },2
  {2
    name: 'caution-octagon',2
  },2
  {2
    name: 'caution-triangle',2
  },2
  {2
    name: 'info-circle',2
  },2
  {2
    name: 'magic-wand',2
    size: 20,2
  },2
  {2
    name: 'magnifying-glass',2
  },2
  {2
    name: 'minus-circle',2
    size: 12,2
  },2
  {2
    name: 'mobile',2
    size: 12,2
  },2
  {2
    name: 'bug',2
    size: 12,2
  },2
  {2
    name: 'posts',2
    size: 20,2
  },2
  {2
    name: 'rocket',2
    size: 20,2
  },2
  {2
    name: 'tools',2
    size: 20,2
  },2
  {2
    name: 'triangle-down',2
    size: 12,2
  },2
  {2
    name: 'triangle-right',2
    size: 12,2
  },2
  {2
    name: 'chevron-right',2
    size: 8,2
  },2
  {2
    name: 'chevron-down',2
    size: 8,2
  },2
].map(icon => getIconUrl(icon.name, icon.size || undefined));2
2
export function getIconUrl(2
  name: string,2
  size?: number = 16,2
  variant?: 'filled' | 'outline' = 'filled',2
): string {2
  if (name.indexOf('/') > -1) {2
    return name;2
  }2
2
  const AVAILABLE_SIZES = [8, 10, 12, 16, 18, 20, 24, 32];2
  const SCALE = [1, 1.5, 2, 3, 4];2
2
  let requestedSize: number = size;2
  if (!AVAILABLE_SIZES.includes(size)) {2
    // find the next largest size2
    const possibleSize: ?number = AVAILABLE_SIZES.find(size => {2
      return size > requestedSize;2
    });2
2
    // set to largest size if the real size is larger than what we have2
    if (possibleSize == null) {2
      requestedSize = Math.max(...AVAILABLE_SIZES);2
    } else {2
      requestedSize = possibleSize;2
    }2
  }2
2
  let requestedScale: number = window.devicePixelRatio;2
  if (!SCALE.includes(requestedScale)) {2
    // find the next largest size2
    const possibleScale: ?number = SCALE.find(scale => {2
      return scale > requestedScale;2
    });2
2
    // set to largest size if the real size is larger than what we have2
    if (possibleScale == null) {2
      requestedScale = Math.max(...SCALE);2
    } else {2
      requestedScale = possibleScale;2
    }2
  }2
2
  return `https://external.xx.fbcdn.net/assets/?name=${name}&variant=filled&size=${requestedSize}&set=facebook_icons&density=${requestedScale}x${2
    variant == 'outline' ? '&variant=outline' : ''2
  }`;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export {default as textContent} from './textContent.js';2
export {default as createPaste} from './createPaste.js';2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const os = require('os');2
2
export type Info = {2
  arch: string,2
  platform: string,2
  unixname: string,2
  versions: {2
    [key: string]: ?string,2
  },2
};2
2
/**2
 * This method builds up some metadata about the users environment that we send2
 * on bug reports, analytic events, errors etc.2
 */2
export function getInfo(): Info {2
  return {2
    arch: process.arch,2
    platform: process.platform,2
    unixname: os.userInfo().username,2
    versions: {2
      electron: process.versions['atom-shell'],2
      node: process.versions.node,2
    },2
  };2
}2
2
export function stringifyInfo(): string {2
  const info = getInfo();2
2
  const lines = [2
    `Platform: ${info.platform} ${info.arch}`,2
    `Unixname: ${info.unixname}`,2
    `Versions:`,2
  ];2
2
  for (const key in info.versions) {2
    lines.push(`  ${key}: ${String(info.versions[key])}`);2
  }2
2
  return lines.join('\n');2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import Logger from '../fb-stubs/Logger.js';2
2
export function reportInteraction(2
  componentType: string,2
  componentIdentifier: string,2
) {2
  const tracker = new InteractionTracker(componentType, componentIdentifier);2
  return tracker.interaction.bind(tracker);2
}2
2
class InteractionTracker {2
  static logger = new Logger();2
  static numberOfInteractions = 0;2
2
  type: string;2
  id: string;2
  interaction: (name: string, data: any) => void;2
2
  constructor(componentType: string, componentIdentifier: string) {2
    this.type = componentType;2
    this.id = componentIdentifier;2
  }2
2
  interaction = (name: string, data: any) => {2
    InteractionTracker.logger.track('usage', 'interaction', {2
      interaction: InteractionTracker.numberOfInteractions++,2
      type: this.type,2
      id: this.id,2
      name,2
      data,2
    });2
  };2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
export default class LowPassFilter {2
  constructor(smoothing?: number = 0.9) {2
    this.smoothing = smoothing;2
    this.buffer = [];2
    this.bufferMaxSize = 5;2
  }2
2
  bufferMaxSize: number;2
  smoothing: number;2
  buffer: Array<number>;2
2
  hasFullBuffer(): boolean {2
    return this.buffer.length === this.bufferMaxSize;2
  }2
2
  push(value: number): number {2
    let removed: number = 0;2
2
    if (this.hasFullBuffer()) {2
      removed = this.buffer.shift();2
    }2
2
    this.buffer.push(value);2
2
    return removed;2
  }2
2
  next(nextValue: number): number {2
    // push new value to the end, and remove oldest one2
    const removed = this.push(nextValue);2
2
    // smooth value using all values from buffer2
    const result = this.buffer.reduce(this._nextReduce, removed);2
2
    // replace smoothed value2
    this.buffer[this.buffer.length - 1] = result;2
2
    return result;2
  }2
2
  _nextReduce = (last: number, current: number): number => {2
    return this.smoothing * current + (1 - this.smoothing) * last;2
  };2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
class ListElement<K, V> {2
  constructor(cache: LRUCache<K, V>, key: K, value: V) {2
    this.cache = cache;2
    this.before = undefined;2
    this.next = undefined;2
    this.set(key, value);2
  }2
2
  creationTime: number;2
  cache: LRUCache<K, V>;2
  before: ?ListElement<K, V>;2
  next: ?ListElement<K, V>;2
  key: K;2
  value: V;2
2
  set(key: K, value: V) {2
    this.key = key;2
    this.value = value;2
    this.creationTime = Date.now();2
  }2
2
  hit() {2
    this.detach();2
    this.attach();2
  }2
2
  attach() {2
    this.before = undefined;2
    this.next = this.cache.head;2
    this.cache.head = this;2
2
    const {next} = this;2
    if (next) {2
      next.before = this;2
    } else {2
      this.cache.tail = this;2
    }2
2
    this.cache.size++;2
  }2
2
  detach() {2
    const {before, next} = this;2
2
    if (before) {2
      before.next = next;2
    } else {2
      this.cache.head = next;2
    }2
2
    if (next) {2
      next.before = before;2
    } else {2
      this.cache.tail = before;2
    }2
2
    this.cache.size--;2
  }2
}2
2
type LRUCacheOptions = {|2
  maxSize: number,2
  maxAge?: number,2
|};2
2
export default class LRUCache<K, V> {2
  constructor(options: LRUCacheOptions) {2
    this.maxSize = options.maxSize;2
    this.maxAge = options.maxAge;2
    this.clear();2
  }2
2
  maxSize: number;2
  maxAge: ?number;2
  size: number;2
  data: Map<K, ListElement<K, V>>;2
  tail: ?ListElement<K, V>;2
  head: ?ListElement<K, V>;2
2
  clear() {2
    this.size = 0;2
    this.data = new Map();2
    this.tail = undefined;2
    this.head = undefined;2
  }2
2
  has(key: K): boolean {2
    return this.data.has(key);2
  }2
2
  get(key: K, hit?: boolean = true): ?V {2
    const cacheVal = this.data.get(key);2
    if (!cacheVal) {2
      return;2
    }2
2
    const {maxAge} = this;2
    if (maxAge != null) {2
      const timeNow = Date.now();2
      const timeSinceCreation = timeNow - cacheVal.creationTime;2
      if (timeSinceCreation > maxAge) {2
        this.delete(key);2
        return;2
      }2
    }2
2
    if (hit) {2
      cacheVal.hit();2
    }2
2
    return cacheVal.value;2
  }2
2
  pop(): ?ListElement<K, V> {2
    const {tail} = this;2
    if (!tail) {2
      return;2
    }2
2
    this.delete(tail.key);2
2
    tail.next = undefined;2
    tail.before = undefined;2
2
    return tail;2
  }2
2
  set(key: K, val: V, hit?: boolean = true) {2
    const actual = this.data.get(key);2
2
    if (actual) {2
      actual.value = val;2
      if (hit) {2
        actual.hit();2
      }2
    } else {2
      let cacheVal: ?ListElement<K, V>;2
2
      if (this.size >= this.maxSize) {2
        cacheVal = this.pop();2
2
        if (cacheVal) {2
          cacheVal.set(key, val);2
        }2
      }2
2
      if (!cacheVal) {2
        cacheVal = new ListElement(this, key, val);2
      }2
2
      this.data.set(key, cacheVal);2
      cacheVal.attach();2
    }2
  }2
2
  delete(key: K) {2
    const val = this.data.get(key);2
    if (!val) {2
      return;2
    }2
2
    val.detach();2
    this.data.delete(key);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import {exec as opensslWithCallback} from 'openssl-wrapper';2
const child_process = require('child_process');2
2
export function openssl(action: string, options: {}): Promise<string> {2
  return new Promise((resolve, reject) => {2
    opensslWithCallback(action, options, (err, buffer) => {2
      if (err) {2
        reject(err);2
      }2
      resolve(buffer.toString());2
    });2
  });2
}2
2
export function isInstalled(): boolean {2
  return !child_process.spawnSync('openssl', ['version']).error;2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
let debugId = 0;2
2
export function mark(): string {2
  const id = String(debugId++);2
  if (typeof performance === 'object') {2
    performance.mark(id);2
  }2
  return id;2
}2
2
export function measure(id: string, name: string) {2
  if (typeof performance === 'object') {2
    performance.measure(name, id);2
    performance.clearMeasures(id);2
    performance.clearMarks(id);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Rect} from './geometry.js';2
2
export const SNAP_SIZE = 16;2
2
export function snapGrid(val: number): number {2
  return val - (val % SNAP_SIZE);2
}2
2
export function getPossibleSnappedPosition(2
  windows: Array<Rect>,2
  {2
    getGap,2
    getNew,2
  }: {2
    getNew: (win: Rect) => number,2
    getGap: (win: Rect) => number,2
  },2
): ?number {2
  for (const win of windows) {2
    const gap = Math.abs(getGap(win));2
    if (gap >= 0 && gap < SNAP_SIZE) {2
      return getNew(win);2
    }2
  }2
}2
2
export function getDistanceTo(props: Rect, win: Rect): number {2
  const x1 = win.left;2
  const y1 = win.top;2
  const x1b = win.left + win.width;2
  const y1b = win.top + win.height;2
2
  const x2 = props.left;2
  const y2 = props.top;2
  const x2b = props.left + props.width;2
  const y2b = props.top + props.height;2
2
  const left = x2b < x1;2
  const right = x1b < x2;2
  const bottom = y2b < y1;2
  const top = y1b < y2;2
2
  if (top && left) {2
    return distance(x1, y1b, x2b, y2);2
  } else if (left && bottom) {2
    return distance(x1, y1, x2b, y2b);2
  } else if (bottom && right) {2
    return distance(x1b, y1, x2, y2b);2
  } else if (right && top) {2
    return distance(x1b, y1b, x2, y2);2
  } else if (left) {2
    return x1 - x2b;2
  } else if (right) {2
    return x2 - x1b;2
  } else if (bottom) {2
    return y1 - y2b;2
  } else if (top) {2
    return y2 - y1b;2
  } else {2
    return 0;2
  }2
}2
2
export function distance(2
  x1: number,2
  y1: number,2
  x2: number,2
  y2: number,2
): number {2
  return Math.abs(x1 - x2) + Math.abs(y1 - y2);2
}2
2
export function maybeSnapLeft(2
  props: Rect,2
  windows: Array<Rect>,2
  left: number,2
): number {2
  // snap right side to left2
  // ┌─┬─┐2
  // │A│B│2
  // └─┴─┘2
  const snapRight = getPossibleSnappedPosition(windows, {2
    debug: true,2
    getGap: win => win.left - (props.width + left),2
    getNew: win => win.left - props.width,2
  });2
  if (snapRight != null) {2
    return snapRight;2
  }2
2
  // snap left side to right2
  // ┌─┬─┐2
  // │B│A│2
  // └─┴─┘2
  const snapLeft = getPossibleSnappedPosition(windows, {2
    getGap: win => left - (win.left + win.width),2
    getNew: win => win.left + win.width,2
  });2
  if (snapLeft != null) {2
    return snapLeft;2
  }2
2
  return snapGrid(left);2
}2
2
export function maybeSnapTop(2
  props: Rect,2
  windows: Array<Rect>,2
  top: number,2
): number {2
  // snap bottom to bottom2
  // ┌─┐2
  // │A├─┐2
  // │ │B│2
  // └─┴─┘2
  const snapBottom2 = getPossibleSnappedPosition(windows, {2
    getGap: win => top - win.top - win.height,2
    getNew: win => win.top + win.height,2
  });2
  if (snapBottom2 != null) {2
    return snapBottom2;2
  }2
2
  // snap top to bottom2
  // ┌─┐2
  // │B│2
  // ├─┤2
  // │A│2
  // └─┘2
  const snapBottom = getPossibleSnappedPosition(windows, {2
    getGap: win => top - win.top - win.height,2
    getNew: win => win.top + win.height,2
  });2
  if (snapBottom != null) {2
    return snapBottom;2
  }2
2
  // snap top to top2
  // ┌─┬─┐2
  // │A│B│2
  // │ ├─┘2
  // └─┘2
  const snapTop = getPossibleSnappedPosition(windows, {2
    getGap: win => top - win.top,2
    getNew: win => win.top,2
  });2
  if (snapTop != null) {2
    return snapTop;2
  }2
2
  return snapGrid(top);2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
import type {Node} from 'react';2
2
function isReactElement(object: any) {2
  return (2
    typeof object === 'object' &&2
    object !== null &&2
    object.$$typeof === Symbol.for('react.element')2
  );2
}2
2
/**2
 * Recursively walks through all children of a React element and returns2
 * the string representation of the leafs concatenated.2
 */2
export default (node: Node): string => {2
  let res = '';2
  const traverse = (node: Node) => {2
    if (typeof node === 'string' || typeof node === 'number') {2
      // this is a leaf, add it to the result string2
      res += node;2
    } else if (Array.isArray(node)) {2
      // traverse all array members and recursively stringify them2
      node.forEach(traverse);2
    } else if (isReactElement(node)) {2
      // node is a react element access its children an recursively stringify them2
      // $FlowFixMe2
      const {children} = node.props;2
      if (Array.isArray(children)) {2
        children.forEach(traverse);2
      } else {2
        traverse(children);2
      }2
    }2
  };2
2
  traverse(node);2
2
  return res;2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const path = require('path');2
const fs = require('fs');2
const metro = require('metro');2
const yargs = require('yargs');2
const HOME_DIR = require('os').homedir();2
2
module.exports = (reloadCallback, pluginPaths, pluginCache) => {2
  const plugins = pluginEntryPoints(pluginPaths);2
  if (!fs.existsSync(pluginCache)) {2
    fs.mkdirSync(pluginCache);2
  }2
  if (yargs.argv.dynamicPlugins) {2
    // watch for changes on plugins if we are loading plugins dynamically2
    watchChanges(plugins, reloadCallback, pluginCache);2
  }2
  return Promise.all(2
    Object.values(plugins).map(plugin =>2
      compilePlugin(plugin, false, pluginCache),2
    ),2
  )2
    .then(dynamicPlugins => {2
      // eslint-disable-next-line no-console2
      console.log('✅  Compiled all plugins.');2
      return dynamicPlugins;2
    })2
    .catch(console.error);2
};2
2
function watchChanges(plugins, reloadCallback, pluginCache) {2
  // eslint-disable-next-line no-console2
  console.log('🕵️‍  Watching for plugin changes');2
2
  Object.values(plugins).map(plugin =>2
    fs.watch(plugin.rootDir, (eventType, filename) => {2
      // eslint-disable-next-line no-console2
      console.log(`🕵️‍  Detected changes in ${plugin.name}`);2
      compilePlugin(plugin, true, pluginCache).then(reloadCallback);2
    }),2
  );2
}2
function hash(string) {2
  let hash = 0;2
  if (string.length === 0) {2
    return hash;2
  }2
  let chr;2
  for (let i = 0; i < string.length; i++) {2
    chr = string.charCodeAt(i);2
    hash = (hash << 5) - hash + chr;2
    hash |= 0;2
  }2
  return hash;2
}2
const fileToIdMap = new Map();2
const createModuleIdFactory = () => filePath => {2
  if (filePath === '__prelude__') {2
    return 0;2
  }2
  let id = fileToIdMap.get(filePath);2
  if (typeof id !== 'number') {2
    id = hash(filePath);2
    fileToIdMap.set(filePath, id);2
  }2
  return id;2
};2
function pluginEntryPoints(additionalPaths = []) {2
  const defaultPluginPath = path.join(HOME_DIR, '.sonar', 'node_modules');2
  const entryPoints = entryPointForPluginFolder(defaultPluginPath);2
  if (typeof additionalPaths === 'string') {2
    additionalPaths = [additionalPaths];2
  }2
  additionalPaths.forEach(additionalPath => {2
    const additionalPlugins = entryPointForPluginFolder(additionalPath);2
    Object.keys(additionalPlugins).forEach(key => {2
      entryPoints[key] = additionalPlugins[key];2
    });2
  });2
  return entryPoints;2
}2
function entryPointForPluginFolder(pluginPath) {2
  pluginPath = pluginPath.replace('~', HOME_DIR);2
  if (!fs.existsSync(pluginPath)) {2
    return {};2
  }2
  return fs2
    .readdirSync(pluginPath)2
    .filter(name =>2
      /*name.startsWith('sonar-plugin') && */ fs2
        .lstatSync(path.join(pluginPath, name))2
        .isDirectory(),2
    )2
    .filter(Boolean)2
    .map(name => {2
      let packageJSON;2
      try {2
        packageJSON = fs2
          .readFileSync(path.join(pluginPath, name, 'package.json'))2
          .toString();2
      } catch (e) {}2
      if (packageJSON) {2
        try {2
          const pkg = JSON.parse(packageJSON);2
          return {2
            packageJSON: pkg,2
            name: pkg.name,2
            entry: path.join(pluginPath, name, pkg.main || 'index.js'),2
            rootDir: path.join(pluginPath, name),2
          };2
        } catch (e) {2
          console.error(2
            `Could not load plugin "${pluginPath}", because package.json is invalid.`,2
          );2
          console.error(e);2
          return null;2
        }2
      }2
    })2
    .filter(Boolean)2
    .reduce((acc, cv) => {2
      acc[cv.name] = cv;2
      return acc;2
    }, {});2
}2
function changeExport(path) {2
  let file = fs.readFileSync(path);2
  file = file2
    .toString()2
    .replace(2
      /\nrequire\((-?[0-9]+)\);\n*$/,2
      (_, moduleID) =>2
        `\nmodule.exports = global.require(${moduleID}).default;`,2
    );2
  fs.writeFileSync(path, file);2
}2
function compilePlugin(2
  {rootDir, name, entry, packageJSON},2
  force,2
  pluginCache,2
) {2
  return new Promise((resolve, reject) => {2
    const fileName = `${name}@${packageJSON.version || '0.0.0'}.js`;2
    const out = path.join(pluginCache, fileName);2
    const result = Object.assign({}, packageJSON, {rootDir, name, entry, out});2
    // check if plugin needs to be compiled2
    if (2
      !force &&2
      fs.existsSync(out) &&2
      fs.lstatSync(rootDir).atime < fs.lstatSync(out).ctime2
    ) {2
      // eslint-disable-next-line no-console2
      console.log(`🥫  Using cached version of ${name}...`);2
      resolve(result);2
    } else {2
      console.log(`⚙️  Compiling ${name}...`); // eslint-disable-line no-console2
      metro2
        .runBuild({2
          config: {2
            getProjectRoots: () => [rootDir, path.join(__dirname, '..')],2
            getTransformModulePath: () =>2
              path.join(__dirname, 'transforms', 'index.js'),2
            // a custom hash function is required, because by default metro starts2
            // numbering the modules by 1. This means all plugins would start at2
            // ID 1, which causes a clash. This is why we have a custom IDFactory.2
            createModuleIdFactory,2
          },2
          dev: false,2
          entry,2
          out,2
        })2
        .then(() => {2
          changeExport(out);2
          resolve(result);2
        })2
        .catch(console.error);2
    }2
  });2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
const {app, BrowserWindow} = require('electron');2
const path = require('path');2
const url = require('url');2
const fs = require('fs');2
const yargs = require('yargs');2
const compilePlugins = require('./compilePlugins.js');2
2
// ensure .sonar folder and config exist2
const sonarDir = path.join(require('os').homedir(), '.sonar');2
if (!fs.existsSync(sonarDir)) {2
  fs.mkdirSync(sonarDir);2
}2
2
const configPath = path.join(sonarDir, 'config.json');2
let config = {pluginPaths: [], disabledPlugins: [], lastWindowPosition: {}};2
2
try {2
  config = {2
    ...config,2
    ...JSON.parse(fs.readFileSync(configPath)),2
  };2
} catch (e) {2
  fs.writeFileSync(configPath, JSON.stringify(config));2
}2
2
const pluginPaths = config.pluginPaths.concat(2
  (yargs.argv.dynamicPlugins || '').split(',').filter(Boolean),2
);2
2
process.env.CONFIG = JSON.stringify({2
  ...config,2
  pluginPaths,2
});2
2
// possible reference to main app window2
let win;2
let appReady = false;2
let pluginsCompiled = false;2
2
// tracking2
setInterval(() => {2
  if (win && win.isFocused()) {2
    win.webContents.send('trackUsage');2
  }2
}, 60 * 1000);2
2
compilePlugins(2
  () => {2
    if (win) {2
      win.reload();2
    }2
  },2
  pluginPaths,2
  path.join(require('os').homedir(), '.sonar', 'plugins'),2
).then(dynamicPlugins => {2
  process.env.PLUGINS = JSON.stringify(dynamicPlugins);2
  pluginsCompiled = true;2
  tryCreateWindow();2
});2
2
// check if we already have an instance of this app open2
const isSecondInstance = app.makeSingleInstance(2
  (commandLine, workingDirectory) => {2
    // someone tried to run a second instance, we should focus our window2
    if (win) {2
      if (win.isMinimized()) {2
        win.restore();2
      }2
2
      win.focus();2
    }2
  },2
);2
2
// if this is a second instance then quit the app to prevent collisions2
if (isSecondInstance) {2
  app.quit();2
}2
2
// quit app once all windows are closed2
app.on('window-all-closed', () => {2
  appReady = false;2
  app.quit();2
});2
2
app.on('ready', function() {2
  appReady = true;2
  app.commandLine.appendSwitch('scroll-bounce');2
  tryCreateWindow();2
  // if in development install the react devtools extension2
  if (process.env.NODE_ENV === 'development') {2
    const {2
      default: installExtension,2
      REACT_DEVELOPER_TOOLS,2
      REDUX_DEVTOOLS,2
    } = require('electron-devtools-installer');2
    installExtension(REACT_DEVELOPER_TOOLS.id);2
    installExtension(REDUX_DEVTOOLS.id);2
  }2
});2
function tryCreateWindow() {2
  if (appReady && pluginsCompiled) {2
    win = new BrowserWindow({2
      show: false,2
      title: 'Sonar',2
      width: config.lastWindowPosition.width || 1400,2
      height: config.lastWindowPosition.height || 1000,2
      minWidth: 800,2
      minHeight: 600,2
      center: true,2
      fullscreenable: false,2
      backgroundThrottling: false,2
      titleBarStyle: 'hiddenInset',2
      webPreferences: {2
        webSecurity: false,2
        scrollBounce: true,2
        experimentalFeatures: true,2
      },2
    });2
    win.once('ready-to-show', () => win.show());2
    win.once('close', ({sender}) => {2
      const [x, y] = sender.getPosition();2
      const [width, height] = sender.getSize();2
      // save window position and size2
      fs.writeFileSync(2
        configPath,2
        JSON.stringify({2
          ...config,2
          lastWindowPosition: {2
            x,2
            y,2
            width,2
            height,2
          },2
        }),2
      );2
    });2
    if (config.lastWindowPosition.x && config.lastWindowPosition.y) {2
      win.setPosition(config.lastWindowPosition.x, config.lastWindowPosition.y);2
    }2
    const entryUrl =2
      process.env.ELECTRON_URL ||2
      url.format({2
        pathname: path.join(__dirname, 'index.html'),2
        protocol: 'file:',2
        slashes: true,2
      });2
    win.loadURL(entryUrl);2
  }2
}2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const CACHE_NAME = 'v1';2
2
self.addEventListener('message', e => {2
  if (e.data.precachedIcons) {2
    caches.open(CACHE_NAME).then(cache => cache.addAll(e.data.precachedIcons));2
  }2
});2
2
self.addEventListener('fetch', function(event) {2
  if (event.request.url.startsWith('https://external.xx.fbcdn.net/assets/')) {2
    event.respondWith(2
      // Cache falling back to the network2
      caches.match(event.request).then(cacheResponse => {2
        return (2
          cacheResponse ||2
          fetch(event.request).then(response => {2
            const clone = response.clone();2
            // write to cache2
            caches2
              .open(CACHE_NAME)2
              .then(cache => cache.put(event.request, clone));2
            return response;2
          })2
        );2
      }),2
    );2
  }2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
function isDynamicRequire(node) {2
  return (2
    node.type === 'CallExpression' &&2
    node.callee.type === 'Identifier' &&2
    node.callee.name === 'require' &&2
    (node.arguments.length !== 1 || node.arguments[0].type !== 'StringLiteral')2
  );2
}2
2
module.exports = function(babel) {2
  const t = babel.types;2
2
  return {2
    name: 'replace-dynamic-requires',2
    visitor: {2
      CallExpression(path) {2
        if (!isDynamicRequire(path.node)) {2
          return;2
        }2
2
        path.replaceWith(t.identifier('triggerDynamicRequireError'));2
      },2
    },2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const BUILTINS = [2
  'electron',2
  'buffer',2
  'child_process',2
  'crypto',2
  'dgram',2
  'dns',2
  'fs',2
  'http',2
  'https',2
  'net',2
  'os',2
  'readline',2
  'stream',2
  'string_decoder',2
  'tls',2
  'tty',2
  'zlib',2
  'constants',2
  'events',2
  'url',2
  'assert',2
  'util',2
  'path',2
  'punycode',2
  'querystring',2
  'cluster',2
  'console',2
  'module',2
  'process',2
  'vm',2
  'domain',2
  'v8',2
  'repl',2
  'timers',2
];2
2
const IGNORED_MODULES = [2
  'bufferutil',2
  'utf-8-validate',2
  'spawn-sync',2
  './src/logcat',2
  './src/monkey',2
  './src/adb',2
];2
2
function isRequire(node) {2
  return (2
    node.type === 'CallExpression' &&2
    node.callee.type === 'Identifier' &&2
    node.callee.name === 'require' &&2
    node.arguments.length === 1 &&2
    node.arguments[0].type === 'StringLiteral'2
  );2
}2
2
module.exports = function(babel) {2
  const t = babel.types;2
2
  return {2
    name: 'infinity-import-react',2
    visitor: {2
      CallExpression(path) {2
        if (!isRequire(path.node)) {2
          return;2
        }2
2
        const source = path.node.arguments[0].value;2
2
        if (BUILTINS.includes(source)) {2
          path.node.callee.name = 'electronRequire';2
        }2
2
        if (IGNORED_MODULES.includes(source)) {2
          path.replaceWith(t.identifier('triggerReferenceError'));2
        }2
      },2
    },2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const fs = require('fs');2
const path = require('path');2
const replaceFBStubs = fs.existsSync(2
  path.join(__dirname, '..', '..', 'src', 'fb'),2
);2
2
const requireFromFolder = (folder, path) =>2
  new RegExp(folder + '/[A-Za-z0-9.-_]+(.js)?$', 'g').test(path);2
2
module.exports = function(babel) {2
  return {2
    name: 'replace-dynamic-requires',2
    visitor: {2
      CallExpression(path) {2
        if (2
          replaceFBStubs &&2
          path.node.type === 'CallExpression' &&2
          path.node.callee.type === 'Identifier' &&2
          path.node.callee.name === 'require' &&2
          path.node.arguments.length > 02
        ) {2
          if (requireFromFolder('fb', path.node.arguments[0].value)) {2
            throw new Error(2
              'Do not requrie directly from fb/, but rather from fb-stubs/ to not break flow-typing and make sure stubs are uptodate.',2
            );2
          } else if (2
            requireFromFolder('fb-stubs', path.node.arguments[0].value)2
          ) {2
            path.node.arguments[0].value = path.node.arguments[0].value.replace(2
              '/fb-stubs/',2
              '/fb/',2
            );2
          }2
        }2
      },2
    },2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
module.exports = function(babel) {2
  const t = babel.types;2
2
  return {2
    name: 'infinity-import-react',2
    visitor: {2
      Program: {2
        exit(path, state) {2
          if (state.get('NEEDS_REACT')) {2
            path.unshiftContainer('body', [2
              t.variableDeclaration('var', [2
                t.variableDeclarator(2
                  t.identifier('React'),2
                  t.callExpression(t.identifier('require'), [2
                    t.stringLiteral('react'),2
                  ]),2
                ),2
              ]),2
            ]);2
          }2
        },2
      },2
2
      ReferencedIdentifier(path, state) {2
        // mark react as needing to be imported2
        if (path.node.name === 'React' && !path.scope.getBinding('React')) {2
          state.set('NEEDS_REACT', true);2
        }2
2
        // replace Buffer with require('buffer')2
        if (path.node.name === 'Buffer' && !path.scope.getBinding('Buffer')) {2
          path.replaceWith(2
            t.memberExpression(2
              t.callExpression(t.identifier('require'), [2
                t.stringLiteral('buffer'),2
              ]),2
              t.identifier('Buffer'),2
            ),2
          );2
        }2
      },2
    },2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const generate = require('@babel/generator').default;2
const babylon = require('babylon');2
const babel = require('@babel/core');2
const metro = require('metro');2
2
exports.transform = function({filename, options, src}) {2
  const presets = [require('../node_modules/babel-preset-react')];2
  const isSonarPlugin = !__dirname.startsWith(options.projectRoot);2
2
  let ast = babylon.parse(src, {2
    filename,2
    plugins: ['jsx', 'flow', 'classProperties', 'objectRestSpread'],2
    sourceType: 'module',2
  });2
2
  // run babel2
  const plugins = [2
    require('../node_modules/babel-plugin-transform-object-rest-spread'),2
    require('../node_modules/babel-plugin-transform-class-properties'),2
    require('../node_modules/babel-plugin-transform-flow-strip-types'),2
    require('./electron-requires.js'),2
    require('./fb-stubs.js'),2
    require('./dynamic-requires.js'),2
  ];2
  if (isSonarPlugin) {2
    plugins.push(require('./sonar-requires.js'));2
  } else {2
    plugins.push(require('./import-react.js'));2
  }2
  plugins.unshift(require('babel-plugin-transform-es2015-modules-commonjs'));2
2
  ast = babel.transformFromAst(ast, src, {2
    babelrc: !filename.includes('node_modules'),2
    code: false,2
    comments: false,2
    compact: false,2
    filename,2
    plugins,2
    presets,2
    sourceMaps: true,2
  }).ast;2
  const result = generate(2
    ast,2
    {2
      filename,2
      sourceFileName: filename,2
      sourceMaps: true,2
    },2
    src,2
  );2
  return {2
    ast,2
    code: result.code,2
    filename,2
    map: result.rawMappings.map(metro.sourceMaps.compactMapping),2
  };2
};2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
// do not apply this transform for these paths2
const EXCLUDE_PATHS = [2
  '/node_modules/react-devtools-core/',2
  'relay-devtools/DevtoolsUI',2
];2
2
function isExcludedPath(path) {2
  for (const epath of EXCLUDE_PATHS) {2
    if (path.indexOf(epath) > -1) {2
      return true;2
    }2
  }2
  return false;2
} // $FlowFixMe2
module.exports = ({types: t}) => ({2
  visitor: {2
    // $FlowFixMe2
    CallExpression(path, state) {2
      if (isExcludedPath(state.file.opts.filename)) {2
        return;2
      }2
      const node = path.node;2
      const args = node.arguments || [];2
      if (2
        node.callee.name === 'require' &&2
        args.length === 1 &&2
        t.isStringLiteral(args[0]) &&2
        args[0].value === 'sonar'2
      ) {2
        path.replaceWith(t.identifier('window.Sonar'));2
      } else if (2
        node.callee.name === 'require' &&2
        args.length > 0 &&2
        t.isStringLiteral(args[0]) &&2
        args[0].value === 'react'2
      ) {2
        path.replaceWith(t.identifier('window.React'));2
      } else if (2
        node.callee.name === 'require' &&2
        args.length > 0 &&2
        t.isStringLiteral(args[0]) &&2
        args[0].value === 'react-dom'2
      ) {2
        path.replaceWith(t.identifier('window.ReactDOM'));2
      }2
    },2
    Identifier(path, state) {2
      if (2
        path.node.name === 'React' &&2
        path.parentPath.node.id !== path.node &&2
        !isExcludedPath(state.file.opts.filename)2
      ) {2
        path.replaceWith(t.identifier('window.React'));2
      }2
    },2
  },2
});2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
const repoUrl = 'https://github.com/facebook/sonar';2
2
const siteConfig = {2
  title: 'Sonar' /* title for your website */,2
  tagline: 'Extensible mobile app debugging',2
  url: 'https://fbsonar.com/' /* your website url */,2
  baseUrl: '/' /* base url for your project */,2
  projectName: 'sonar',2
  headerLinks: [2
    {doc: 'getting-started', label: 'Getting Started'},2
    {doc: 'understand', label: 'Docs'},2
    {href: repoUrl, label: 'GitHub'},2
  ],2
  /* path to images for header/footer */2
  headerIcon: 'img/icon.png',2
  footerIcon: 'img/mascot.png',2
  favicon: 'img/icon.png',2
  /* colors for website */2
  colors: {2
    primaryColor: '#121020',2
    secondaryColor: '#121020',2
    accentColor: '#785BA3',2
    actionColor: '#008cf2',2
  },2
  copyright: 'Copyright © ' + new Date().getFullYear() + ' Facebook',2
  highlight: {2
    theme: 'default',2
  },2
  repoUrl,2
  scripts: ['https://buttons.github.io/buttons.js'],2
  stylesheets: [],2
};2
2
module.exports = siteConfig;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const React = require('react');2
2
class Footer extends React.Component {2
  docUrl(doc, language) {2
    const baseUrl = this.props.config.baseUrl;2
    return baseUrl + 'docs/' + (language ? language + '/' : '') + doc;2
  }2
2
  pageUrl(doc, language) {2
    const baseUrl = this.props.config.baseUrl;2
    return baseUrl + (language ? language + '/' : '') + doc;2
  }2
2
  render() {2
    return (2
      <footer className="nav-footer" id="footer">2
        <section className="sitemap">2
          <a href={this.props.config.baseUrl} className="nav-home">2
            {this.props.config.footerIcon && (2
              <img2
                src={this.props.config.baseUrl + this.props.config.footerIcon}2
                alt="Sonar mascot"2
                title="I'm a whale not a dolphin!"2
                width="66"2
                height="58"2
              />2
            )}2
          </a>2
          <div>2
            <h5>Docs</h5>2
            <a href="/docs/getting-started.html">Getting Started</a>2
            <a href="/docs/understand.html">Understanding Sonar</a>2
            <a href="/docs/js-setup.html">Creating Plugins</a>2
          </div>2
          <div>2
            <h5>Plugins</h5>2
            <a href="/docs/logs-plugin.html">Log Viewer</a>2
            <a href="/docs/layout-plugin.html">Layout Inspector</a>2
            <a href="/docs/network-plugin.html">Network Inspector</a>2
          </div>2
          <div>2
            <h5>More</h5>2
            <a href="https://twitter.com/fb_sonar">Twitter</a>2
            <a href={this.props.config.repoUrl}>GitHub</a>2
            <a2
              className="github-button"2
              href={this.props.config.repoUrl}2
              data-icon="octicon-star"2
              data-count-href="/facebook/sonar/stargazers"2
              data-show-count={true}2
              data-count-aria-label="# stargazers on GitHub"2
              aria-label="Star this project on GitHub">2
              Star2
            </a>2
          </div>2
        </section>2
2
        <a2
          href="https://code.facebook.com/projects/"2
          target="_blank"2
          className="fbOpenSource">2
          <img2
            src={this.props.config.baseUrl + 'img/oss_logo.png'}2
            alt="Facebook Open Source"2
            width="170"2
            height="45"2
          />2
        </a>2
        <section className="copyright">{this.props.config.copyright}</section>2
      </footer>2
    );2
  }2
}2
2
module.exports = Footer;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const React = require('react');2
2
class Docs extends React.Component {2
  render() {2
    return (2
      <script2
        dangerouslySetInnerHTML={{2
          __html: "window.location.href = '/docs/getting-started.html'",2
        }}2
      />2
    );2
  }2
}2
2
module.exports = Docs;2
/**2
 * Copyright 2018-present Facebook.2
 * This source code is licensed under the MIT license found in the2
 * LICENSE file in the root directory of this source tree.2
 * @format2
 */2
2
const React = require('react');2
2
class Index extends React.Component {2
  render() {2
    return (2
      <div>2
        <div className="splash">2
          <div className="content">2
            <h1>Extensible mobile app&nbsp;debugger</h1>2
            <h2>2
              Sonar is a platform for debugging mobile apps on iOS and Android.2
              Visualize, inspect, and control your apps from a simple desktop2
              interface. Use Sonar as is or extend it using the plugin API.2
            </h2>2
            <div className="row">2
              <a2
                className="btn primary"2
                href="https://www.facebook.com/sonar/public/mac">2
                Download2
              </a>2
              <a className="btn" href="/docs/understand.html">2
                Learn more2
              </a>2
            </div>2
            <img2
              src="/img/splash.png"2
              srcSet="/img/splash.png 1x, /img/splash@2x.png 2x"2
              className="splashScreen"2
            />2
            <div className="shadow" />2
          </div>2
        </div>2
        <div className="content row">2
          <div className="col">2
            <img2
              src="/img/inspector.png"2
              srcSet="/img/inspector.png 1x, /img/inspector@2x.png 2x"2
            />2
          </div>2
          <div className="col">2
            <h4>Tools</h4>2
            <h3>Mobile development</h3>2
            <p>2
              Sonar aims to be your number one companion for mobile app2
              development on iOS and Android. Therefore, we provide a bunch of2
              useful tools including a log viewer, interactive layout inspector,2
              and network inspector.2
            </p>2
            <a className="learnmore" href="/docs/getting-started.html">2
              Learn more2
            </a>2
          </div>2
        </div>2
        <div className="content row">2
          <div className="col">2
            <h4>Plugins</h4>2
            <h3>Extending Sonar</h3>2
            <p>2
              Sonar is built as a platform. In addition to using the tools2
              already included, you can create your own plugins to visualize and2
              debug data from your mobile apps. Sonar takes care of sending data2
              back and forth, calling functions, and listening for events on the2
              mobile app.2
            </p>2
            <a className="learnmore" href="/docs/understand.html">2
              Learn more2
            </a>2
          </div>2
          <div className="col center">2
            <img2
              src="/img/SonarKit.png"2
              srcSet="/img/SonarKit.png 1x, /img/SonarKit@2x.png 2x"2
            />2
          </div>2
        </div>2
        <div className="content row">2
          <div className="col">2
            <img2
              src="/img/plugins.png"2
              srcSet="/img/plugins.png 1x, /img/plugins@2x.png 2x"2
            />2
          </div>2
          <div className="col">2
            <h4>Open Source</h4>2
            <h3>Contributing to Sonar</h3>2
            <p>2
              Both Sonar's desktop app and native mobile SDKs are open-source2
              and MIT licensed. This enables you to see and understand how we2
              are building plugins, and of course join the community and help2
              improve Sonar. We are excited to see what you will build on this2
              platform.2
            </p>2
            <a className="learnmore" href="/docs/js-setup.html">2
              Learn more2
            </a>2
          </div>2
        </div>2
      </div>2
    );2
  }2
}2
2
module.exports = Index;2
/*2
 *  Copyright (c) 2004-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#ifndef CertificateUtils_hpp2
#define CertificateUtils_hpp2
2
#include <openssl/pem.h>2
#include <openssl/rsa.h>2
#include <stdio.h>2
2
bool generateCertSigningRequest(2
    const char* appId,2
    const char* csrFile,2
    const char* privateKeyFile);2
2
#endif /* CertificateUtils_hpp */2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarConnectionImpl.h>2
#include <Sonar/SonarInitConfig.h>2
#include <Sonar/SonarPlugin.h>2
#include <Sonar/SonarWebSocket.h>2
#include <map>2
#include <mutex>2
2
namespace facebook {2
namespace sonar {2
2
class SonarClient : public SonarWebSocket::Callbacks {2
 public:2
  /**2
   Call before accessing instance with SonarClient::instance(). This will set up2
   all the state needed to establish a Sonar connection.2
   */2
  static void init(SonarInitConfig config);2
2
  /**2
   Standard accessor for the shared SonarClient instance. This returns a2
   singleton instance to a shared SonarClient. First call to this function will2
   create the shared SonarClient. Must call SonarClient::initDeviceData() before2
   first call to SonarClient::instance().2
   */2
  static SonarClient* instance();2
2
  /**2
   Only public for testing2
   */2
  SonarClient(std::unique_ptr<SonarWebSocket> socket)2
      : socket_(std::move(socket)) {2
    socket_->setCallbacks(this);2
  }2
2
  void start() {2
    socket_->start();2
  }2
2
  void stop() {2
    socket_->stop();2
  }2
2
  void onConnected() override;2
2
  void onDisconnected() override;2
2
  void onMessageReceived(const folly::dynamic& message) override;2
2
  void addPlugin(std::shared_ptr<SonarPlugin> plugin);2
2
  void removePlugin(std::shared_ptr<SonarPlugin> plugin);2
2
  void refreshPlugins();2
2
  std::shared_ptr<SonarPlugin> getPlugin(const std::string& identifier);2
2
  template <typename P>2
  std::shared_ptr<P> getPlugin(const std::string& identifier) {2
    return std::static_pointer_cast<P>(getPlugin(identifier));2
  }2
2
  bool hasPlugin(const std::string& identifier);2
2
 private:2
  static SonarClient* instance_;2
  bool connected_ = false;2
  std::unique_ptr<SonarWebSocket> socket_;2
  std::map<std::string, std::shared_ptr<SonarPlugin>> plugins_;2
  std::map<std::string, std::shared_ptr<SonarConnectionImpl>> connections_;2
  std::mutex mutex_;2
2
  void performAndReportError(const std::function<void()>& func);2
  void disconnect(std::shared_ptr<SonarPlugin> plugin);2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarResponder.h>2
#include <folly/json.h>2
#include <functional>2
#include <string>2
2
namespace facebook {2
namespace sonar {2
2
/**2
Represents a connection between the Desktop and mobile plugins2
with corresponding identifiers.2
*/2
class SonarConnection {2
 public:2
  using SonarReceiver = std::function<2
      void(const folly::dynamic&, std::unique_ptr<SonarResponder>)>;2
2
  virtual ~SonarConnection() {}2
2
  /**2
  Invoke a method on the Sonar desktop plugin with with a matching identifier.2
  */2
  virtual void send(2
      const std::string& method,2
      const folly::dynamic& params) = 0;2
2
  /**2
  Report an error to the Sonar desktop app2
  */2
  virtual void error(2
      const std::string& message,2
      const std::string& stacktrace) = 0;2
2
  /**2
  Register a receiver to be notified of incoming calls of the given2
  method from the Sonar desktop plugin with a matching identifier.2
  */2
  virtual void receive(2
      const std::string& method,2
      const SonarReceiver& receiver) = 0;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarConnection.h>2
#include <Sonar/SonarWebSocket.h>2
#include <map>2
#include <string>2
2
namespace facebook {2
namespace sonar {2
2
class SonarConnectionImpl : public SonarConnection {2
 public:2
  SonarConnectionImpl(SonarWebSocket* socket, const std::string& name)2
      : socket_(socket), name_(name) {}2
2
  void call(2
      const std::string& method,2
      const folly::dynamic& params,2
      std::unique_ptr<SonarResponder> responder) {2
    if (receivers_.find(method) == receivers_.end()) {2
      throw std::out_of_range("receiver " + method + " not found.");2
    }2
    receivers_.at(method)(params, std::move(responder));2
  }2
2
  void send(const std::string& method, const folly::dynamic& params) override {2
    folly::dynamic message = folly::dynamic::object("method", "execute")(2
        "params",2
        folly::dynamic::object("api", name_)("method", method)(2
            "params", params));2
    socket_->sendMessage(message);2
  }2
2
  void error(const std::string& message, const std::string& stacktrace)2
      override {2
    socket_->sendMessage(folly::dynamic::object(2
        "error",2
        folly::dynamic::object("message", message)("stacktrace", stacktrace)));2
  }2
2
  void receive(const std::string& method, const SonarReceiver& receiver)2
      override {2
    receivers_[method] = receiver;2
  }2
2
 private:2
  SonarWebSocket* socket_;2
  std::string name_;2
  std::map<std::string, SonarReceiver> receivers_;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <folly/io/async/EventBase.h>2
#include <map>2
2
namespace facebook {2
namespace sonar {2
2
struct DeviceData {2
  std::string host;2
  std::string os;2
  std::string device;2
  std::string deviceId;2
  std::string app;2
  std::string appId;2
  std::string privateAppDirectory;2
};2
2
struct SonarInitConfig {2
  /**2
  Map of client specific configuration data such as app name, device name, etc.2
  */2
  DeviceData deviceData;2
2
  /**2
  EventBase on which client callbacks should be called.2
  */2
  folly::EventBase* worker;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
#pragma once2
2
#include <Sonar/SonarConnection.h>2
#include <string>2
2
namespace facebook {2
namespace sonar {2
2
class SonarPlugin {2
 public:2
  virtual ~SonarPlugin() {}2
2
  /**2
  The plugin's identifier. This should map to a javascript plugin2
  with the same identifier to ensure messages are sent correctly.2
  */2
  virtual std::string identifier() const = 0;2
2
  /**2
  Called when a connection has been established between this plugin2
  and the corresponding plugin on the Sonar desktop app. The provided2
  connection can be used to register method receivers as well as send2
  messages back to the desktop app.2
  */2
  virtual void didConnect(std::shared_ptr<SonarConnection> conn) = 0;2
2
  /**2
  Called when a plugin has been disconnected and the SonarConnection2
  provided in didConnect is no longer valid to use.2
  */2
  virtual void didDisconnect() = 0;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <folly/json.h>2
2
namespace facebook {2
namespace sonar {2
2
/**2
 * SonarResponder is used to asynchronously respond to messages2
 * received from the Sonar desktop app.2
 */2
class SonarResponder {2
 public:2
  virtual ~SonarResponder(){};2
2
  /**2
   * Deliver a successful response to the Sonar desktop app.2
   */2
  virtual void success(const folly::dynamic& response) const = 0;2
2
  /**2
   * Inform the Sonar desktop app of an error in handling the request.2
   */2
  virtual void error(const folly::dynamic& response) const = 0;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarResponder.h>2
#include <Sonar/SonarWebSocket.h>2
#include <folly/json.h>2
2
namespace facebook {2
namespace sonar {2
2
class SonarResponderImpl : public SonarResponder {2
 public:2
  SonarResponderImpl(SonarWebSocket* socket, int64_t responseID)2
      : socket_(socket), responseID_(responseID) {}2
2
  void success(const folly::dynamic& response) const override {2
    const folly::dynamic message =2
        folly::dynamic::object("id", responseID_)("success", response);2
    socket_->sendMessage(message);2
  }2
2
  void error(const folly::dynamic& response) const override {2
    const folly::dynamic message =2
        folly::dynamic::object("id", responseID_)("error", response);2
    socket_->sendMessage(message);2
  }2
2
 private:2
  SonarWebSocket* socket_;2
  int64_t responseID_;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <folly/json.h>2
2
namespace facebook {2
namespace sonar {2
2
class SonarWebSocket {2
 public:2
  class Callbacks;2
2
 public:2
  virtual ~SonarWebSocket(){};2
2
  /**2
   Establishes a connection to the ws server.2
   */2
  virtual void start() = 0;2
2
  /**2
   Closes an open connection to the ws server.2
   */2
  virtual void stop() = 0;2
2
  /**2
   True if there's an open connection.2
   This method may block if the connection is busy.2
   */2
  virtual bool isOpen() const = 0;2
2
  /**2
   Send message to the ws server.2
   */2
  virtual void sendMessage(const folly::dynamic& message) = 0;2
2
  /**2
   Handler for connection and message receipt from the ws server.2
   The callbacks should be set before a connection is established.2
   */2
  virtual void setCallbacks(Callbacks* callbacks) = 0;2
};2
2
class SonarWebSocket::Callbacks {2
 public:2
  virtual ~Callbacks(){};2
2
  virtual void onConnected() = 0;2
2
  virtual void onDisconnected() = 0;2
2
  virtual void onMessageReceived(const folly::dynamic& message) = 0;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarInitConfig.h>2
#include <Sonar/SonarWebSocket.h>2
#include <folly/Executor.h>2
#include <folly/io/async/EventBase.h>2
#include <rsocket/RSocket.h>2
#include <mutex>2
2
namespace facebook {2
namespace sonar {2
2
class ConnectionEvents;2
class Responder;2
2
class SonarWebSocketImpl : public SonarWebSocket {2
  friend ConnectionEvents;2
  friend Responder;2
2
 public:2
  SonarWebSocketImpl(SonarInitConfig config);2
2
  ~SonarWebSocketImpl();2
2
  void start() override;2
2
  void stop() override;2
2
  bool isOpen() const override;2
2
  void setCallbacks(Callbacks* callbacks) override;2
2
  void sendMessage(const folly::dynamic& message) override;2
2
  void reconnect();2
2
 private:2
  bool isOpen_ = false;2
  Callbacks* callbacks_;2
  DeviceData deviceData_;2
2
  folly::EventBase* worker_;2
  std::unique_ptr<rsocket::RSocketClient> client_;2
  bool connectionIsTrusted_;2
  int failedConnectionAttempts_ = 0;2
2
  void startSync();2
  void doCertificateExchange();2
  void connectSecurely();2
  std::string loadCSRFromFile();2
  std::string loadStringFromFile(std::string fileName);2
  std::string absoluteFilePath(const char* relativeFilePath);2
  bool isCertificateExchangeNeeded();2
  void requestSignedCertFromSonar();2
  bool ensureSonarDirExists();2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarConnection.h>2
#include <map>2
#include <string>2
2
namespace facebook {2
namespace sonar {2
2
class SonarConnectionMock : public SonarConnection {2
 public:2
  void send(const std::string& method, const folly::dynamic& params) override {2
    sent_[method] = params;2
  }2
2
  void receive(const std::string& method, const SonarReceiver& receiver)2
      override {2
    receivers_[method] = receiver;2
  }2
2
  std::map<std::string, folly::dynamic> sent_;2
  std::map<std::string, SonarReceiver> receivers_;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarPlugin.h>2
2
namespace facebook {2
namespace sonar {2
namespace test {2
2
class SonarPluginMock : public SonarPlugin {2
  using ConnectionCallback =2
      std::function<void(std::shared_ptr<SonarConnection>)>;2
  using DisconnectionCallback = std::function<void()>;2
2
 public:2
  SonarPluginMock(const std::string& identifier) : identifier_(identifier) {}2
2
  SonarPluginMock(2
      const std::string& identifier,2
      const ConnectionCallback& connectionCallback)2
      : identifier_(identifier), connectionCallback_(connectionCallback) {}2
2
  SonarPluginMock(2
      const std::string& identifier,2
      const ConnectionCallback& connectionCallback,2
      const DisconnectionCallback& disconnectionCallback)2
      : identifier_(identifier),2
        connectionCallback_(connectionCallback),2
        disconnectionCallback_(disconnectionCallback) {}2
2
  std::string identifier() const override {2
    return identifier_;2
  }2
2
  void didConnect(std::shared_ptr<SonarConnection> conn) override {2
    if (connectionCallback_) {2
      connectionCallback_(conn);2
    }2
  }2
2
  void didDisconnect() override {2
    if (disconnectionCallback_) {2
      disconnectionCallback_();2
    }2
  }2
2
 private:2
  std::string identifier_;2
  ConnectionCallback connectionCallback_;2
  DisconnectionCallback disconnectionCallback_;2
};2
2
} // namespace test2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarResponder.h>2
#include <folly/json.h>2
#include <vector>2
2
namespace facebook {2
namespace sonar {2
2
class SonarResponderMock : public SonarResponder {2
 public:2
  SonarResponderMock(2
      std::vector<folly::dynamic>* successes = nullptr,2
      std::vector<folly::dynamic>* errors = nullptr)2
      : successes_(successes), errors_(errors) {}2
2
  void success(const folly::dynamic& response) const override {2
    if (successes_) {2
      successes_->push_back(response);2
    }2
  }2
2
  void error(const folly::dynamic& response) const override {2
    if (errors_) {2
      errors_->push_back(response);2
    }2
  }2
2
 private:2
  std::vector<folly::dynamic>* successes_;2
  std::vector<folly::dynamic>* errors_;2
};2
2
} // namespace sonar2
} // namespace facebook2
/*2
 *  Copyright (c) 2018-present, Facebook, Inc.2
 *2
 *  This source code is licensed under the MIT license found in the LICENSE2
 *  file in the root directory of this source tree.2
 *2
 */2
2
#pragma once2
2
#include <Sonar/SonarWebSocket.h>2
2
namespace facebook {2
namespace sonar {2
namespace test {2
2
class SonarWebSocketMock : public SonarWebSocket {2
 public:2
  SonarWebSocketMock() : callbacks(nullptr) {}2
2
  void start() override {2
    open = true;2
    if (callbacks) {2
      callbacks->onConnected();2
    }2
  }2
2
  void stop() override {2
    open = false;2
    if (callbacks) {2
      callbacks->onDisconnected();2
    }2
  }2
2
  bool isOpen() const override {2
    return open;2
  }2
2
  void sendMessage(const folly::dynamic& message) override {2
    messages.push_back(message);2
  }2
2
  void setCallbacks(Callbacks* aCallbacks) override {2
    callbacks = aCallbacks;2
  }2
2
 public:2
  bool open = false;2
  Callbacks* callbacks;2
  std::vector<folly::dynamic> messages;2
};2
2
} // namespace test2
} // namespace sonar2
} // namespace facebook2
